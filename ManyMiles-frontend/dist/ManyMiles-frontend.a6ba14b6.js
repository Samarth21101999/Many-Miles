// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (
  modules,
  entry,
  mainEntry,
  parcelRequireName,
  distDir,
  publicUrl,
  devServer
) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var importMap = previousRequire.i || {};
  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        globalObject
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.require = nodeRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.distDir = distDir;
  newRequire.publicUrl = publicUrl;
  newRequire.devServer = devServer;
  newRequire.i = importMap;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  // Only insert newRequire.load when it is actually used.
  // The code in this file is linted against ES5, so dynamic import is not allowed.
  // INSERT_LOAD_HERE

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });
    }
  }
})({"hmd57":[function(require,module,exports,__globalThis) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SERVER_PORT = 1234;
var HMR_SECURE = false;
var HMR_ENV_HASH = "439701173a9199ea";
var HMR_USE_SSE = false;
module.bundle.HMR_BUNDLE_ID = "aa256db9a6ba14b6";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_SERVER_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var HMR_USE_SSE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , disposedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ , bundleNotFound = false;
function getHostname() {
    return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);
}
// eslint-disable-next-line no-redeclare
let WebSocket = globalThis.WebSocket;
if (!WebSocket && typeof module.bundle.root === 'function') try {
    // eslint-disable-next-line no-global-assign
    WebSocket = module.bundle.root('ws');
} catch  {
// ignore.
}
var hostname = getHostname();
var port = getPort();
var protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && ![
    'localhost',
    '127.0.0.1',
    '0.0.0.0'
].includes(hostname) ? 'wss' : 'ws';
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if (!parent || !parent.isParcelRequire) {
    // Web extension context
    var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes('test.js');
    }
    var ws;
    if (HMR_USE_SSE) ws = new EventSource('/__parcel_hmr');
    else try {
        // If we're running in the dev server's node runner, listen for messages on the parent port.
        let { workerData, parentPort } = module.bundle.root('node:worker_threads') /*: any*/ ;
        if (workerData !== null && workerData !== void 0 && workerData.__parcel) {
            parentPort.on('message', async (message)=>{
                try {
                    await handleMessage(message);
                    parentPort.postMessage('updated');
                } catch  {
                    parentPort.postMessage('restart');
                }
            });
            // After the bundle has finished running, notify the dev server that the HMR update is complete.
            queueMicrotask(()=>parentPort.postMessage('ready'));
        }
    } catch  {
        if (typeof WebSocket !== 'undefined') try {
            ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');
        } catch (err) {
            if (err.message) console.error(err.message);
        }
    }
    if (ws) {
        // $FlowFixMe
        ws.onmessage = async function(event /*: {data: string, ...} */ ) {
            var data /*: HMRMessage */  = JSON.parse(event.data);
            await handleMessage(data);
        };
        if (ws instanceof WebSocket) {
            ws.onerror = function(e) {
                if (e.message) console.error(e.message);
            };
            ws.onclose = function() {
                console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
            };
        }
    }
}
async function handleMessage(data /*: HMRMessage */ ) {
    checkedAssets = {} /*: {|[string]: boolean|} */ ;
    disposedAssets = {} /*: {|[string]: boolean|} */ ;
    assetsToAccept = [];
    assetsToDispose = [];
    bundleNotFound = false;
    if (data.type === 'reload') fullReload();
    else if (data.type === 'update') {
        // Remove error overlay if there is one
        if (typeof document !== 'undefined') removeErrorOverlay();
        let assets = data.assets;
        // Handle HMR Update
        let handled = assets.every((asset)=>{
            return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
        });
        // Dispatch a custom event in case a bundle was not found. This might mean
        // an asset on the server changed and we should reload the page. This event
        // gives the client an opportunity to refresh without losing state
        // (e.g. via React Server Components). If e.preventDefault() is not called,
        // we will trigger a full page reload.
        if (handled && bundleNotFound && assets.some((a)=>a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {
            cancelable: true
        }));
        if (handled) {
            console.clear();
            // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
            if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') window.dispatchEvent(new CustomEvent('parcelhmraccept'));
            await hmrApplyUpdates(assets);
            hmrDisposeQueue();
            // Run accept callbacks. This will also re-execute other disposed assets in topological order.
            let processedAssets = {};
            for(let i = 0; i < assetsToAccept.length; i++){
                let id = assetsToAccept[i][1];
                if (!processedAssets[id]) {
                    hmrAccept(assetsToAccept[i][0], id);
                    processedAssets[id] = true;
                }
            }
        } else fullReload();
    }
    if (data.type === 'error') {
        // Log parcel errors to console
        for (let ansiDiagnostic of data.diagnostics.ansi){
            let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
            console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
        }
        if (typeof document !== 'undefined') {
            // Render the fancy html overlay
            removeErrorOverlay();
            var overlay = createErrorOverlay(data.diagnostics.html);
            // $FlowFixMe
            document.body.appendChild(overlay);
        }
    }
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, '') : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + '</div>').join('')}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ''}
      </div>
    `;
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if (typeof location !== 'undefined' && 'reload' in location) location.reload();
    else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
    else try {
        let { workerData, parentPort } = module.bundle.root('node:worker_threads') /*: any*/ ;
        if (workerData !== null && workerData !== void 0 && workerData.__parcel) parentPort.postMessage('restart');
    } catch (err) {
        console.error("[parcel] \u26A0\uFE0F An HMR update was not accepted. Please restart the process.");
    }
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute('href');
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', // $FlowFixMe
    href.split('?')[0] + '?' + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout || typeof document === 'undefined') return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === 'js') {
        if (typeof document !== 'undefined') {
            let script = document.createElement('script');
            script.src = asset.url + '?t=' + Date.now();
            if (asset.outputFormat === 'esmodule') script.type = 'module';
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === 'function') {
            // Worker scripts
            if (asset.outputFormat === 'esmodule') return import(asset.url + '?t=' + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + '?t=' + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') reloadCSS();
    else if (asset.type === 'js') {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        }
        // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.
        // This is required in case modules are duplicated. We need to ensure all instances have the updated code.
        if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    checkedAssets = {};
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else if (a !== null) {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) {
            bundleNotFound = true;
            return true;
        }
        return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return null;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    if (!cached) return true;
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
    return false;
}
function hmrDisposeQueue() {
    // Dispose all old assets.
    for(let i = 0; i < assetsToDispose.length; i++){
        let id = assetsToDispose[i][1];
        if (!disposedAssets[id]) {
            hmrDispose(assetsToDispose[i][0], id);
            disposedAssets[id] = true;
        }
    }
    assetsToDispose = [];
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
        let assetsToAlsoAccept = [];
        cached.hot._acceptCallbacks.forEach(function(cb) {
            let additionalAssets = cb(function() {
                return getParents(module.bundle.root, id);
            });
            if (Array.isArray(additionalAssets) && additionalAssets.length) assetsToAlsoAccept.push(...additionalAssets);
        });
        if (assetsToAlsoAccept.length) {
            let handled = assetsToAlsoAccept.every(function(a) {
                return hmrAcceptCheck(a[0], a[1]);
            });
            if (!handled) return fullReload();
            hmrDisposeQueue();
        }
    }
}

},{}],"ebz6s":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$c2c5 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$c2c5.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$c2c5.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _client = require("react-dom/client");
var _styleCss = require("./style.css");
var _app = require("./App");
var _appDefault = parcelHelpers.interopDefault(_app);
var _reactCookie = require("react-cookie");
(0, _client.createRoot)(document.getElementById('root')).render(/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _react.StrictMode), {
    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactCookie.CookiesProvider), {
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _appDefault.default), {}, void 0, false, {
            fileName: "src/Main.js",
            lineNumber: 10,
            columnNumber: 5
        }, undefined)
    }, void 0, false, {
        fileName: "src/Main.js",
        lineNumber: 9,
        columnNumber: 5
    }, undefined)
}, void 0, false, {
    fileName: "src/Main.js",
    lineNumber: 8,
    columnNumber: 5
}, undefined));

  $parcel$ReactRefreshHelpers$c2c5.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-dom/client":"hrvwu","./style.css":"bhJkM","./App":"hh6uc","react-cookie":"59JzK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"dVPUn":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ee51401569654d91");

},{"ee51401569654d91":"gnlQf"}],"gnlQf":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE$2 ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function disabledLog() {}
    function disableLogs() {
        if (0 === disabledDepth) {
            prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd;
            var props = {
                configurable: !0,
                enumerable: !0,
                value: disabledLog,
                writable: !0
            };
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (0 === disabledDepth) {
            var props = {
                configurable: !0,
                enumerable: !0,
                writable: !0
            };
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        }
        0 > disabledDepth && console.error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    function describeBuiltInComponentFrame(name) {
        if (void 0 === prefix) try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
            suffix = -1 < x.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
        return "\n" + prefix + name + suffix;
    }
    function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (void 0 !== frame) return frame;
        reentry = !0;
        frame = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher = null;
        previousDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = null;
        disableLogs();
        try {
            var RunInRootFrame = {
                DetermineComponentFrameRoot: function() {
                    try {
                        if (construct) {
                            var Fake = function() {
                                throw Error();
                            };
                            Object.defineProperty(Fake.prototype, "props", {
                                set: function() {
                                    throw Error();
                                }
                            });
                            if ("object" === typeof Reflect && Reflect.construct) {
                                try {
                                    Reflect.construct(Fake, []);
                                } catch (x) {
                                    var control = x;
                                }
                                Reflect.construct(fn, [], Fake);
                            } else {
                                try {
                                    Fake.call();
                                } catch (x$0) {
                                    control = x$0;
                                }
                                fn.call(Fake.prototype);
                            }
                        } else {
                            try {
                                throw Error();
                            } catch (x$1) {
                                control = x$1;
                            }
                            (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {});
                        }
                    } catch (sample) {
                        if (sample && control && "string" === typeof sample.stack) return [
                            sample.stack,
                            control.stack
                        ];
                    }
                    return [
                        null,
                        null
                    ];
                }
            };
            RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, "name");
            namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, "name", {
                value: "DetermineComponentFrameRoot"
            });
            var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
            if (sampleStack && controlStack) {
                var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
                for(_RunInRootFrame$Deter = namePropDescriptor = 0; namePropDescriptor < sampleLines.length && !sampleLines[namePropDescriptor].includes("DetermineComponentFrameRoot");)namePropDescriptor++;
                for(; _RunInRootFrame$Deter < controlLines.length && !controlLines[_RunInRootFrame$Deter].includes("DetermineComponentFrameRoot");)_RunInRootFrame$Deter++;
                if (namePropDescriptor === sampleLines.length || _RunInRootFrame$Deter === controlLines.length) for(namePropDescriptor = sampleLines.length - 1, _RunInRootFrame$Deter = controlLines.length - 1; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter && sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter];)_RunInRootFrame$Deter--;
                for(; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter; namePropDescriptor--, _RunInRootFrame$Deter--)if (sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                    if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {
                        do if (namePropDescriptor--, _RunInRootFrame$Deter--, 0 > _RunInRootFrame$Deter || sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                            var _frame = "\n" + sampleLines[namePropDescriptor].replace(" at new ", " at ");
                            fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName));
                            "function" === typeof fn && componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                        while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);
                    }
                    break;
                }
            }
        } finally{
            reentry = !1, ReactSharedInternals.H = previousDispatcher, reenableLogs(), Error.prepareStackTrace = frame;
        }
        sampleLines = (sampleLines = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(sampleLines) : "";
        "function" === typeof fn && componentFrameCache.set(fn, sampleLines);
        return sampleLines;
    }
    function describeUnknownElementTypeFrameInDEV(type) {
        if (null == type) return "";
        if ("function" === typeof type) {
            var prototype = type.prototype;
            return describeNativeComponentFrame(type, !(!prototype || !prototype.isReactComponent));
        }
        if ("string" === typeof type) return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if ("object" === typeof type) switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return type = describeNativeComponentFrame(type.render, !1), type;
            case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type);
            case REACT_LAZY_TYPE:
                prototype = type._payload;
                type = type._init;
                try {
                    return describeUnknownElementTypeFrameInDEV(type(prototype));
                } catch (x) {}
        }
        return "";
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, self, source, owner, props) {
        self = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self) {
        if ("string" === typeof type || "function" === typeof type || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_OFFSCREEN_TYPE || "object" === typeof type && null !== type && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_CLIENT_REFERENCE$1 || void 0 !== type.getModuleId)) {
            var children = config.children;
            if (void 0 !== children) {
                if (isStaticChildren) {
                    if (isArrayImpl(children)) {
                        for(isStaticChildren = 0; isStaticChildren < children.length; isStaticChildren++)validateChildKeys(children[isStaticChildren], type);
                        Object.freeze && Object.freeze(children);
                    } else console.error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                } else validateChildKeys(children, type);
            }
        } else {
            children = "";
            if (void 0 === type || "object" === typeof type && null !== type && 0 === Object.keys(type).length) children += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            null === type ? isStaticChildren = "null" : isArrayImpl(type) ? isStaticChildren = "array" : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE ? (isStaticChildren = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", children = " Did you accidentally export a JSX literal instead of a component?") : isStaticChildren = typeof type;
            console.error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", isStaticChildren, children);
        }
        if (hasOwnProperty.call(config, "key")) {
            children = getComponentNameFromType(type);
            var keys = Object.keys(config).filter(function(k) {
                return "key" !== k;
            });
            isStaticChildren = 0 < keys.length ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
            didWarnAboutKeySpread[children + isStaticChildren] || (keys = 0 < keys.length ? "{" + keys.join(": ..., ") + ": ...}" : "{}", console.error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', isStaticChildren, children, keys, children), didWarnAboutKeySpread[children + isStaticChildren] = !0);
        }
        children = null;
        void 0 !== maybeKey && (checkKeyStringCoercion(maybeKey), children = "" + maybeKey);
        hasValidKey(config) && (checkKeyStringCoercion(config.key), children = "" + config.key);
        if ("key" in config) {
            maybeKey = {};
            for(var propName in config)"key" !== propName && (maybeKey[propName] = config[propName]);
        } else maybeKey = config;
        children && defineKeyPropWarningGetter(maybeKey, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        return ReactElement(type, children, self, source, getOwner(), maybeKey);
    }
    function validateChildKeys(node, parentType) {
        if ("object" === typeof node && node && node.$$typeof !== REACT_CLIENT_REFERENCE) {
            if (isArrayImpl(node)) for(var i = 0; i < node.length; i++){
                var child = node[i];
                isValidElement(child) && validateExplicitKey(child, parentType);
            }
            else if (isValidElement(node)) node._store && (node._store.validated = 1);
            else if (null === node || "object" !== typeof node ? i = null : (i = MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL] || node["@@iterator"], i = "function" === typeof i ? i : null), "function" === typeof i && i !== node.entries && (i = i.call(node), i !== node)) for(; !(node = i.next()).done;)isValidElement(node.value) && validateExplicitKey(node.value, parentType);
        }
    }
    function isValidElement(object) {
        return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function validateExplicitKey(element, parentType) {
        if (element._store && !element._store.validated && null == element.key && (element._store.validated = 1, parentType = getCurrentComponentErrorInfo(parentType), !ownerHasKeyUseWarning[parentType])) {
            ownerHasKeyUseWarning[parentType] = !0;
            var childOwner = "";
            element && null != element._owner && element._owner !== getOwner() && (childOwner = null, "number" === typeof element._owner.tag ? childOwner = getComponentNameFromType(element._owner.type) : "string" === typeof element._owner.name && (childOwner = element._owner.name), childOwner = " It was passed a child from " + childOwner + ".");
            var prevGetCurrentStack = ReactSharedInternals.getCurrentStack;
            ReactSharedInternals.getCurrentStack = function() {
                var stack = describeUnknownElementTypeFrameInDEV(element.type);
                prevGetCurrentStack && (stack += prevGetCurrentStack() || "");
                return stack;
            };
            console.error('Each child in a list should have a unique "key" prop.%s%s See https://react.dev/link/warning-keys for more information.', parentType, childOwner);
            ReactSharedInternals.getCurrentStack = prevGetCurrentStack;
        }
    }
    function getCurrentComponentErrorInfo(parentType) {
        var info = "", owner = getOwner();
        owner && (owner = getComponentNameFromType(owner.type)) && (info = "\n\nCheck the render method of `" + owner + "`.");
        info || (parentType = getComponentNameFromType(parentType)) && (info = "\n\nCheck the top-level render call using <" + parentType + ">.");
        return info;
    }
    var React = require("58362d9d82be395f"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, REACT_CLIENT_REFERENCE$2 = Symbol.for("react.client.reference"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, hasOwnProperty = Object.prototype.hasOwnProperty, assign = Object.assign, REACT_CLIENT_REFERENCE$1 = Symbol.for("react.client.reference"), isArrayImpl = Array.isArray, disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
    disabledLog.__reactDisabledLog = !0;
    var prefix, suffix, reentry = !1;
    var componentFrameCache = new ("function" === typeof WeakMap ? WeakMap : Map)();
    var REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), specialPropKeyWarningShown;
    var didWarnAboutElementRef = {};
    var didWarnAboutKeySpread = {}, ownerHasKeyUseWarning = {};
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = function(type, config, maybeKey, isStaticChildren, source, self) {
        return jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self);
    };
})();

},{"58362d9d82be395f":"jMk1U"}],"jMk1U":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("a569817e6ea559f6");

},{"a569817e6ea559f6":"ghslp"}],"ghslp":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function defineDeprecationWarning(methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
            get: function() {
                console.warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
            }
        });
    }
    function getIteratorFn(maybeIterable) {
        if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
        maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
        return "function" === typeof maybeIterable ? maybeIterable : null;
    }
    function warnNoop(publicInstance, callerName) {
        publicInstance = (publicInstance = publicInstance.constructor) && (publicInstance.displayName || publicInstance.name) || "ReactClass";
        var warningKey = publicInstance + "." + callerName;
        didWarnStateUpdateForUnmountedComponent[warningKey] || (console.error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, publicInstance), didWarnStateUpdateForUnmountedComponent[warningKey] = !0);
    }
    function Component(props, context, updater) {
        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    function ComponentDummy() {}
    function PureComponent(props, context, updater) {
        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE$2 ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function isValidElementType(type) {
        return "string" === typeof type || "function" === typeof type || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_OFFSCREEN_TYPE || "object" === typeof type && null !== type && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_CLIENT_REFERENCE$1 || void 0 !== type.getModuleId) ? !0 : !1;
    }
    function disabledLog() {}
    function disableLogs() {
        if (0 === disabledDepth) {
            prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd;
            var props = {
                configurable: !0,
                enumerable: !0,
                value: disabledLog,
                writable: !0
            };
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (0 === disabledDepth) {
            var props = {
                configurable: !0,
                enumerable: !0,
                writable: !0
            };
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        }
        0 > disabledDepth && console.error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    function describeBuiltInComponentFrame(name) {
        if (void 0 === prefix) try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
            suffix = -1 < x.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
        return "\n" + prefix + name + suffix;
    }
    function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (void 0 !== frame) return frame;
        reentry = !0;
        frame = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher = null;
        previousDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = null;
        disableLogs();
        try {
            var RunInRootFrame = {
                DetermineComponentFrameRoot: function() {
                    try {
                        if (construct) {
                            var Fake = function() {
                                throw Error();
                            };
                            Object.defineProperty(Fake.prototype, "props", {
                                set: function() {
                                    throw Error();
                                }
                            });
                            if ("object" === typeof Reflect && Reflect.construct) {
                                try {
                                    Reflect.construct(Fake, []);
                                } catch (x) {
                                    var control = x;
                                }
                                Reflect.construct(fn, [], Fake);
                            } else {
                                try {
                                    Fake.call();
                                } catch (x$0) {
                                    control = x$0;
                                }
                                fn.call(Fake.prototype);
                            }
                        } else {
                            try {
                                throw Error();
                            } catch (x$1) {
                                control = x$1;
                            }
                            (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {});
                        }
                    } catch (sample) {
                        if (sample && control && "string" === typeof sample.stack) return [
                            sample.stack,
                            control.stack
                        ];
                    }
                    return [
                        null,
                        null
                    ];
                }
            };
            RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, "name");
            namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, "name", {
                value: "DetermineComponentFrameRoot"
            });
            var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
            if (sampleStack && controlStack) {
                var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
                for(_RunInRootFrame$Deter = namePropDescriptor = 0; namePropDescriptor < sampleLines.length && !sampleLines[namePropDescriptor].includes("DetermineComponentFrameRoot");)namePropDescriptor++;
                for(; _RunInRootFrame$Deter < controlLines.length && !controlLines[_RunInRootFrame$Deter].includes("DetermineComponentFrameRoot");)_RunInRootFrame$Deter++;
                if (namePropDescriptor === sampleLines.length || _RunInRootFrame$Deter === controlLines.length) for(namePropDescriptor = sampleLines.length - 1, _RunInRootFrame$Deter = controlLines.length - 1; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter && sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter];)_RunInRootFrame$Deter--;
                for(; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter; namePropDescriptor--, _RunInRootFrame$Deter--)if (sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                    if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {
                        do if (namePropDescriptor--, _RunInRootFrame$Deter--, 0 > _RunInRootFrame$Deter || sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                            var _frame = "\n" + sampleLines[namePropDescriptor].replace(" at new ", " at ");
                            fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName));
                            "function" === typeof fn && componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                        while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);
                    }
                    break;
                }
            }
        } finally{
            reentry = !1, ReactSharedInternals.H = previousDispatcher, reenableLogs(), Error.prepareStackTrace = frame;
        }
        sampleLines = (sampleLines = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(sampleLines) : "";
        "function" === typeof fn && componentFrameCache.set(fn, sampleLines);
        return sampleLines;
    }
    function describeUnknownElementTypeFrameInDEV(type) {
        if (null == type) return "";
        if ("function" === typeof type) {
            var prototype = type.prototype;
            return describeNativeComponentFrame(type, !(!prototype || !prototype.isReactComponent));
        }
        if ("string" === typeof type) return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if ("object" === typeof type) switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return type = describeNativeComponentFrame(type.render, !1), type;
            case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type);
            case REACT_LAZY_TYPE:
                prototype = type._payload;
                type = type._init;
                try {
                    return describeUnknownElementTypeFrameInDEV(type(prototype));
                } catch (x) {}
        }
        return "";
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, self, source, owner, props) {
        self = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function cloneAndReplaceKey(oldElement, newKey) {
        newKey = ReactElement(oldElement.type, newKey, void 0, void 0, oldElement._owner, oldElement.props);
        newKey._store.validated = oldElement._store.validated;
        return newKey;
    }
    function validateChildKeys(node, parentType) {
        if ("object" === typeof node && node && node.$$typeof !== REACT_CLIENT_REFERENCE) {
            if (isArrayImpl(node)) for(var i = 0; i < node.length; i++){
                var child = node[i];
                isValidElement(child) && validateExplicitKey(child, parentType);
            }
            else if (isValidElement(node)) node._store && (node._store.validated = 1);
            else if (i = getIteratorFn(node), "function" === typeof i && i !== node.entries && (i = i.call(node), i !== node)) for(; !(node = i.next()).done;)isValidElement(node.value) && validateExplicitKey(node.value, parentType);
        }
    }
    function isValidElement(object) {
        return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function validateExplicitKey(element, parentType) {
        if (element._store && !element._store.validated && null == element.key && (element._store.validated = 1, parentType = getCurrentComponentErrorInfo(parentType), !ownerHasKeyUseWarning[parentType])) {
            ownerHasKeyUseWarning[parentType] = !0;
            var childOwner = "";
            element && null != element._owner && element._owner !== getOwner() && (childOwner = null, "number" === typeof element._owner.tag ? childOwner = getComponentNameFromType(element._owner.type) : "string" === typeof element._owner.name && (childOwner = element._owner.name), childOwner = " It was passed a child from " + childOwner + ".");
            var prevGetCurrentStack = ReactSharedInternals.getCurrentStack;
            ReactSharedInternals.getCurrentStack = function() {
                var stack = describeUnknownElementTypeFrameInDEV(element.type);
                prevGetCurrentStack && (stack += prevGetCurrentStack() || "");
                return stack;
            };
            console.error('Each child in a list should have a unique "key" prop.%s%s See https://react.dev/link/warning-keys for more information.', parentType, childOwner);
            ReactSharedInternals.getCurrentStack = prevGetCurrentStack;
        }
    }
    function getCurrentComponentErrorInfo(parentType) {
        var info = "", owner = getOwner();
        owner && (owner = getComponentNameFromType(owner.type)) && (info = "\n\nCheck the render method of `" + owner + "`.");
        info || (parentType = getComponentNameFromType(parentType)) && (info = "\n\nCheck the top-level render call using <" + parentType + ">.");
        return info;
    }
    function escape(key) {
        var escaperLookup = {
            "=": "=0",
            ":": "=2"
        };
        return "$" + key.replace(/[=:]/g, function(match) {
            return escaperLookup[match];
        });
    }
    function getElementKey(element, index) {
        return "object" === typeof element && null !== element && null != element.key ? (checkKeyStringCoercion(element.key), escape("" + element.key)) : index.toString(36);
    }
    function noop$1() {}
    function resolveThenable(thenable) {
        switch(thenable.status){
            case "fulfilled":
                return thenable.value;
            case "rejected":
                throw thenable.reason;
            default:
                switch("string" === typeof thenable.status ? thenable.then(noop$1, noop$1) : (thenable.status = "pending", thenable.then(function(fulfilledValue) {
                    "pending" === thenable.status && (thenable.status = "fulfilled", thenable.value = fulfilledValue);
                }, function(error) {
                    "pending" === thenable.status && (thenable.status = "rejected", thenable.reason = error);
                })), thenable.status){
                    case "fulfilled":
                        return thenable.value;
                    case "rejected":
                        throw thenable.reason;
                }
        }
        throw thenable;
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        if ("undefined" === type || "boolean" === type) children = null;
        var invokeCallback = !1;
        if (null === children) invokeCallback = !0;
        else switch(type){
            case "bigint":
            case "string":
            case "number":
                invokeCallback = !0;
                break;
            case "object":
                switch(children.$$typeof){
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                        invokeCallback = !0;
                        break;
                    case REACT_LAZY_TYPE:
                        return invokeCallback = children._init, mapIntoArray(invokeCallback(children._payload), array, escapedPrefix, nameSoFar, callback);
                }
        }
        if (invokeCallback) {
            invokeCallback = children;
            callback = callback(invokeCallback);
            var childKey = "" === nameSoFar ? "." + getElementKey(invokeCallback, 0) : nameSoFar;
            isArrayImpl(callback) ? (escapedPrefix = "", null != childKey && (escapedPrefix = childKey.replace(userProvidedKeyEscapeRegex, "$&/") + "/"), mapIntoArray(callback, array, escapedPrefix, "", function(c) {
                return c;
            })) : null != callback && (isValidElement(callback) && (null != callback.key && (invokeCallback && invokeCallback.key === callback.key || checkKeyStringCoercion(callback.key)), escapedPrefix = cloneAndReplaceKey(callback, escapedPrefix + (null == callback.key || invokeCallback && invokeCallback.key === callback.key ? "" : ("" + callback.key).replace(userProvidedKeyEscapeRegex, "$&/") + "/") + childKey), "" !== nameSoFar && null != invokeCallback && isValidElement(invokeCallback) && null == invokeCallback.key && invokeCallback._store && !invokeCallback._store.validated && (escapedPrefix._store.validated = 2), callback = escapedPrefix), array.push(callback));
            return 1;
        }
        invokeCallback = 0;
        childKey = "" === nameSoFar ? "." : nameSoFar + ":";
        if (isArrayImpl(children)) for(var i = 0; i < children.length; i++)nameSoFar = children[i], type = childKey + getElementKey(nameSoFar, i), invokeCallback += mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);
        else if (i = getIteratorFn(children), "function" === typeof i) for(i === children.entries && (didWarnAboutMaps || console.warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0), children = i.call(children), i = 0; !(nameSoFar = children.next()).done;)nameSoFar = nameSoFar.value, type = childKey + getElementKey(nameSoFar, i++), invokeCallback += mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);
        else if ("object" === type) {
            if ("function" === typeof children.then) return mapIntoArray(resolveThenable(children), array, escapedPrefix, nameSoFar, callback);
            array = String(children);
            throw Error("Objects are not valid as a React child (found: " + ("[object Object]" === array ? "object with keys {" + Object.keys(children).join(", ") + "}" : array) + "). If you meant to render a collection of children, use an array instead.");
        }
        return invokeCallback;
    }
    function mapChildren(children, func, context) {
        if (null == children) return children;
        var result = [], count = 0;
        mapIntoArray(children, result, "", "", function(child) {
            return func.call(context, child, count++);
        });
        return result;
    }
    function lazyInitializer(payload) {
        if (-1 === payload._status) {
            var ctor = payload._result;
            ctor = ctor();
            ctor.then(function(moduleObject) {
                if (0 === payload._status || -1 === payload._status) payload._status = 1, payload._result = moduleObject;
            }, function(error) {
                if (0 === payload._status || -1 === payload._status) payload._status = 2, payload._result = error;
            });
            -1 === payload._status && (payload._status = 0, payload._result = ctor);
        }
        if (1 === payload._status) return ctor = payload._result, void 0 === ctor && console.error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", ctor), "default" in ctor || console.error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", ctor), ctor.default;
        throw payload._result;
    }
    function resolveDispatcher() {
        var dispatcher = ReactSharedInternals.H;
        null === dispatcher && console.error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
        return dispatcher;
    }
    function noop() {}
    function enqueueTask(task) {
        if (null === enqueueTaskImpl) try {
            var requireString = ("require" + Math.random()).slice(0, 7);
            enqueueTaskImpl = (module && module[requireString]).call(module, "timers").setImmediate;
        } catch (_err) {
            enqueueTaskImpl = function(callback) {
                !1 === didWarnAboutMessageChannel && (didWarnAboutMessageChannel = !0, "undefined" === typeof MessageChannel && console.error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(void 0);
            };
        }
        return enqueueTaskImpl(task);
    }
    function aggregateErrors(errors) {
        return 1 < errors.length && "function" === typeof AggregateError ? new AggregateError(errors) : errors[0];
    }
    function popActScope(prevActQueue, prevActScopeDepth) {
        prevActScopeDepth !== actScopeDepth - 1 && console.error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
        actScopeDepth = prevActScopeDepth;
    }
    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
        var queue = ReactSharedInternals.actQueue;
        if (null !== queue) {
            if (0 !== queue.length) try {
                flushActQueue(queue);
                enqueueTask(function() {
                    return recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                });
                return;
            } catch (error) {
                ReactSharedInternals.thrownErrors.push(error);
            }
            else ReactSharedInternals.actQueue = null;
        }
        0 < ReactSharedInternals.thrownErrors.length ? (queue = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, reject(queue)) : resolve(returnValue);
    }
    function flushActQueue(queue) {
        if (!isFlushing) {
            isFlushing = !0;
            var i = 0;
            try {
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do {
                        ReactSharedInternals.didUsePromise = !1;
                        var continuation = callback(!1);
                        if (null !== continuation) {
                            if (ReactSharedInternals.didUsePromise) {
                                queue[i] = callback;
                                queue.splice(0, i);
                                return;
                            }
                            callback = continuation;
                        } else break;
                    }while (1);
                }
                queue.length = 0;
            } catch (error) {
                queue.splice(0, i + 1), ReactSharedInternals.thrownErrors.push(error);
            } finally{
                isFlushing = !1;
            }
        }
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, didWarnStateUpdateForUnmountedComponent = {}, ReactNoopUpdateQueue = {
        isMounted: function() {
            return !1;
        },
        enqueueForceUpdate: function(publicInstance) {
            warnNoop(publicInstance, "forceUpdate");
        },
        enqueueReplaceState: function(publicInstance) {
            warnNoop(publicInstance, "replaceState");
        },
        enqueueSetState: function(publicInstance) {
            warnNoop(publicInstance, "setState");
        }
    }, assign = Object.assign, emptyObject = {};
    Object.freeze(emptyObject);
    Component.prototype.isReactComponent = {};
    Component.prototype.setState = function(partialState, callback) {
        if ("object" !== typeof partialState && "function" !== typeof partialState && null != partialState) throw Error("takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, "setState");
    };
    Component.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
    };
    var deprecatedAPIs = {
        isMounted: [
            "isMounted",
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
        ],
        replaceState: [
            "replaceState",
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
        ]
    }, fnName;
    for(fnName in deprecatedAPIs)deprecatedAPIs.hasOwnProperty(fnName) && defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    ComponentDummy.prototype = Component.prototype;
    deprecatedAPIs = PureComponent.prototype = new ComponentDummy();
    deprecatedAPIs.constructor = PureComponent;
    assign(deprecatedAPIs, Component.prototype);
    deprecatedAPIs.isPureReactComponent = !0;
    var isArrayImpl = Array.isArray, REACT_CLIENT_REFERENCE$2 = Symbol.for("react.client.reference"), ReactSharedInternals = {
        H: null,
        A: null,
        T: null,
        S: null,
        actQueue: null,
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1,
        didUsePromise: !1,
        thrownErrors: [],
        getCurrentStack: null
    }, hasOwnProperty = Object.prototype.hasOwnProperty, REACT_CLIENT_REFERENCE$1 = Symbol.for("react.client.reference"), disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
    disabledLog.__reactDisabledLog = !0;
    var prefix, suffix, reentry = !1;
    var componentFrameCache = new ("function" === typeof WeakMap ? WeakMap : Map)();
    var REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), specialPropKeyWarningShown, didWarnAboutOldJSXRuntime;
    var didWarnAboutElementRef = {};
    var ownerHasKeyUseWarning = {}, didWarnAboutMaps = !1, userProvidedKeyEscapeRegex = /\/+/g, reportGlobalError = "function" === typeof reportError ? reportError : function(error) {
        if ("object" === typeof window && "function" === typeof window.ErrorEvent) {
            var event = new window.ErrorEvent("error", {
                bubbles: !0,
                cancelable: !0,
                message: "object" === typeof error && null !== error && "string" === typeof error.message ? String(error.message) : String(error),
                error: error
            });
            if (!window.dispatchEvent(event)) return;
        }
        console.error(error);
    }, didWarnAboutMessageChannel = !1, enqueueTaskImpl = null, actScopeDepth = 0, didWarnNoAwaitAct = !1, isFlushing = !1, queueSeveralMicrotasks = "function" === typeof queueMicrotask ? function(callback) {
        queueMicrotask(function() {
            return queueMicrotask(callback);
        });
    } : enqueueTask;
    exports.Children = {
        map: mapChildren,
        forEach: function(children, forEachFunc, forEachContext) {
            mapChildren(children, function() {
                forEachFunc.apply(this, arguments);
            }, forEachContext);
        },
        count: function(children) {
            var n = 0;
            mapChildren(children, function() {
                n++;
            });
            return n;
        },
        toArray: function(children) {
            return mapChildren(children, function(child) {
                return child;
            }) || [];
        },
        only: function(children) {
            if (!isValidElement(children)) throw Error("React.Children.only expected to receive a single React element child.");
            return children;
        }
    };
    exports.Component = Component;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.PureComponent = PureComponent;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = ReactSharedInternals;
    exports.act = function(callback) {
        var prevActQueue = ReactSharedInternals.actQueue, prevActScopeDepth = actScopeDepth;
        actScopeDepth++;
        var queue = ReactSharedInternals.actQueue = null !== prevActQueue ? prevActQueue : [], didAwaitActCall = !1;
        try {
            var result = callback();
        } catch (error) {
            ReactSharedInternals.thrownErrors.push(error);
        }
        if (0 < ReactSharedInternals.thrownErrors.length) throw popActScope(prevActQueue, prevActScopeDepth), callback = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, callback;
        if (null !== result && "object" === typeof result && "function" === typeof result.then) {
            var thenable = result;
            queueSeveralMicrotasks(function() {
                didAwaitActCall || didWarnNoAwaitAct || (didWarnNoAwaitAct = !0, console.error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            });
            return {
                then: function(resolve, reject) {
                    didAwaitActCall = !0;
                    thenable.then(function(returnValue) {
                        popActScope(prevActQueue, prevActScopeDepth);
                        if (0 === prevActScopeDepth) {
                            try {
                                flushActQueue(queue), enqueueTask(function() {
                                    return recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                                });
                            } catch (error$2) {
                                ReactSharedInternals.thrownErrors.push(error$2);
                            }
                            if (0 < ReactSharedInternals.thrownErrors.length) {
                                var _thrownError = aggregateErrors(ReactSharedInternals.thrownErrors);
                                ReactSharedInternals.thrownErrors.length = 0;
                                reject(_thrownError);
                            }
                        } else resolve(returnValue);
                    }, function(error) {
                        popActScope(prevActQueue, prevActScopeDepth);
                        0 < ReactSharedInternals.thrownErrors.length ? (error = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, reject(error)) : reject(error);
                    });
                }
            };
        }
        var returnValue$jscomp$0 = result;
        popActScope(prevActQueue, prevActScopeDepth);
        0 === prevActScopeDepth && (flushActQueue(queue), 0 !== queue.length && queueSeveralMicrotasks(function() {
            didAwaitActCall || didWarnNoAwaitAct || (didWarnNoAwaitAct = !0, console.error("A component suspended inside an `act` scope, but the `act` call was not awaited. When testing React components that depend on asynchronous data, you must await the result:\n\nawait act(() => ...)"));
        }), ReactSharedInternals.actQueue = null);
        if (0 < ReactSharedInternals.thrownErrors.length) throw callback = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, callback;
        return {
            then: function(resolve, reject) {
                didAwaitActCall = !0;
                0 === prevActScopeDepth ? (ReactSharedInternals.actQueue = queue, enqueueTask(function() {
                    return recursivelyFlushAsyncActWork(returnValue$jscomp$0, resolve, reject);
                })) : resolve(returnValue$jscomp$0);
            }
        };
    };
    exports.cache = function(fn) {
        return function() {
            return fn.apply(null, arguments);
        };
    };
    exports.cloneElement = function(element, config, children) {
        if (null === element || void 0 === element) throw Error("The argument must be a React element, but you passed " + element + ".");
        var props = assign({}, element.props), key = element.key, owner = element._owner;
        if (null != config) {
            var JSCompiler_inline_result;
            a: {
                if (hasOwnProperty.call(config, "ref") && (JSCompiler_inline_result = Object.getOwnPropertyDescriptor(config, "ref").get) && JSCompiler_inline_result.isReactWarning) {
                    JSCompiler_inline_result = !1;
                    break a;
                }
                JSCompiler_inline_result = void 0 !== config.ref;
            }
            JSCompiler_inline_result && (owner = getOwner());
            hasValidKey(config) && (checkKeyStringCoercion(config.key), key = "" + config.key);
            for(propName in config)!hasOwnProperty.call(config, propName) || "key" === propName || "__self" === propName || "__source" === propName || "ref" === propName && void 0 === config.ref || (props[propName] = config[propName]);
        }
        var propName = arguments.length - 2;
        if (1 === propName) props.children = children;
        else if (1 < propName) {
            JSCompiler_inline_result = Array(propName);
            for(var i = 0; i < propName; i++)JSCompiler_inline_result[i] = arguments[i + 2];
            props.children = JSCompiler_inline_result;
        }
        props = ReactElement(element.type, key, void 0, void 0, owner, props);
        for(key = 2; key < arguments.length; key++)validateChildKeys(arguments[key], props.type);
        return props;
    };
    exports.createContext = function(defaultValue) {
        defaultValue = {
            $$typeof: REACT_CONTEXT_TYPE,
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            _threadCount: 0,
            Provider: null,
            Consumer: null
        };
        defaultValue.Provider = defaultValue;
        defaultValue.Consumer = {
            $$typeof: REACT_CONSUMER_TYPE,
            _context: defaultValue
        };
        defaultValue._currentRenderer = null;
        defaultValue._currentRenderer2 = null;
        return defaultValue;
    };
    exports.createElement = function(type, config, children) {
        if (isValidElementType(type)) for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], type);
        else {
            i = "";
            if (void 0 === type || "object" === typeof type && null !== type && 0 === Object.keys(type).length) i += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            if (null === type) var typeString = "null";
            else isArrayImpl(type) ? typeString = "array" : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE ? (typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", i = " Did you accidentally export a JSX literal instead of a component?") : typeString = typeof type;
            console.error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, i);
        }
        var propName;
        i = {};
        typeString = null;
        if (null != config) for(propName in didWarnAboutOldJSXRuntime || !("__self" in config) || "key" in config || (didWarnAboutOldJSXRuntime = !0, console.warn("Your app (or one of its dependencies) is using an outdated JSX transform. Update to the modern JSX transform for faster performance: https://react.dev/link/new-jsx-transform")), hasValidKey(config) && (checkKeyStringCoercion(config.key), typeString = "" + config.key), config)hasOwnProperty.call(config, propName) && "key" !== propName && "__self" !== propName && "__source" !== propName && (i[propName] = config[propName]);
        var childrenLength = arguments.length - 2;
        if (1 === childrenLength) i.children = children;
        else if (1 < childrenLength) {
            for(var childArray = Array(childrenLength), _i = 0; _i < childrenLength; _i++)childArray[_i] = arguments[_i + 2];
            Object.freeze && Object.freeze(childArray);
            i.children = childArray;
        }
        if (type && type.defaultProps) for(propName in childrenLength = type.defaultProps, childrenLength)void 0 === i[propName] && (i[propName] = childrenLength[propName]);
        typeString && defineKeyPropWarningGetter(i, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        return ReactElement(type, typeString, void 0, void 0, getOwner(), i);
    };
    exports.createRef = function() {
        var refObject = {
            current: null
        };
        Object.seal(refObject);
        return refObject;
    };
    exports.forwardRef = function(render) {
        null != render && render.$$typeof === REACT_MEMO_TYPE ? console.error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : "function" !== typeof render ? console.error("forwardRef requires a render function but was given %s.", null === render ? "null" : typeof render) : 0 !== render.length && 2 !== render.length && console.error("forwardRef render functions accept exactly two parameters: props and ref. %s", 1 === render.length ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
        null != render && null != render.defaultProps && console.error("forwardRef render functions do not support defaultProps. Did you accidentally pass a React component?");
        var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
        }, ownName;
        Object.defineProperty(elementType, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name;
                render.name || render.displayName || (Object.defineProperty(render, "name", {
                    value: name
                }), render.displayName = name);
            }
        });
        return elementType;
    };
    exports.isValidElement = isValidElement;
    exports.lazy = function(ctor) {
        return {
            $$typeof: REACT_LAZY_TYPE,
            _payload: {
                _status: -1,
                _result: ctor
            },
            _init: lazyInitializer
        };
    };
    exports.memo = function(type, compare) {
        isValidElementType(type) || console.error("memo: The first argument must be a component. Instead received: %s", null === type ? "null" : typeof type);
        compare = {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: void 0 === compare ? null : compare
        };
        var ownName;
        Object.defineProperty(compare, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name;
                type.name || type.displayName || (Object.defineProperty(type, "name", {
                    value: name
                }), type.displayName = name);
            }
        });
        return compare;
    };
    exports.startTransition = function(scope) {
        var prevTransition = ReactSharedInternals.T, currentTransition = {};
        ReactSharedInternals.T = currentTransition;
        currentTransition._updatedFibers = new Set();
        try {
            var returnValue = scope(), onStartTransitionFinish = ReactSharedInternals.S;
            null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
            "object" === typeof returnValue && null !== returnValue && "function" === typeof returnValue.then && returnValue.then(noop, reportGlobalError);
        } catch (error) {
            reportGlobalError(error);
        } finally{
            null === prevTransition && currentTransition._updatedFibers && (scope = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < scope && console.warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.")), ReactSharedInternals.T = prevTransition;
        }
    };
    exports.unstable_useCacheRefresh = function() {
        return resolveDispatcher().useCacheRefresh();
    };
    exports.use = function(usable) {
        return resolveDispatcher().use(usable);
    };
    exports.useActionState = function(action, initialState, permalink) {
        return resolveDispatcher().useActionState(action, initialState, permalink);
    };
    exports.useCallback = function(callback, deps) {
        return resolveDispatcher().useCallback(callback, deps);
    };
    exports.useContext = function(Context) {
        var dispatcher = resolveDispatcher();
        Context.$$typeof === REACT_CONSUMER_TYPE && console.error("Calling useContext(Context.Consumer) is not supported and will cause bugs. Did you mean to call useContext(Context) instead?");
        return dispatcher.useContext(Context);
    };
    exports.useDebugValue = function(value, formatterFn) {
        return resolveDispatcher().useDebugValue(value, formatterFn);
    };
    exports.useDeferredValue = function(value, initialValue) {
        return resolveDispatcher().useDeferredValue(value, initialValue);
    };
    exports.useEffect = function(create, deps) {
        return resolveDispatcher().useEffect(create, deps);
    };
    exports.useId = function() {
        return resolveDispatcher().useId();
    };
    exports.useImperativeHandle = function(ref, create, deps) {
        return resolveDispatcher().useImperativeHandle(ref, create, deps);
    };
    exports.useInsertionEffect = function(create, deps) {
        return resolveDispatcher().useInsertionEffect(create, deps);
    };
    exports.useLayoutEffect = function(create, deps) {
        return resolveDispatcher().useLayoutEffect(create, deps);
    };
    exports.useMemo = function(create, deps) {
        return resolveDispatcher().useMemo(create, deps);
    };
    exports.useOptimistic = function(passthrough, reducer) {
        return resolveDispatcher().useOptimistic(passthrough, reducer);
    };
    exports.useReducer = function(reducer, initialArg, init) {
        return resolveDispatcher().useReducer(reducer, initialArg, init);
    };
    exports.useRef = function(initialValue) {
        return resolveDispatcher().useRef(initialValue);
    };
    exports.useState = function(initialState) {
        return resolveDispatcher().useState(initialState);
    };
    exports.useSyncExternalStore = function(subscribe, getSnapshot, getServerSnapshot) {
        return resolveDispatcher().useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    };
    exports.useTransition = function() {
        return resolveDispatcher().useTransition();
    };
    exports.version = "19.0.0";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{}],"hrvwu":[function(require,module,exports,__globalThis) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require("2b53550ce04dc092");

},{"2b53550ce04dc092":"lu7uO"}],"lu7uO":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-dom-client.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/ "use strict";
(function() {
    function findHook(fiber, id) {
        for(fiber = fiber.memoizedState; null !== fiber && 0 < id;)fiber = fiber.next, id--;
        return fiber;
    }
    function copyWithSetImpl(obj, path, index, value) {
        if (index >= path.length) return value;
        var key = path[index], updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
    }
    function copyWithRename(obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) console.warn("copyWithRename() expects paths of the same length");
        else {
            for(var i = 0; i < newPath.length - 1; i++)if (oldPath[i] !== newPath[i]) {
                console.warn("copyWithRename() expects paths to be the same except for the deepest key");
                return;
            }
            return copyWithRenameImpl(obj, oldPath, newPath, 0);
        }
    }
    function copyWithRenameImpl(obj, oldPath, newPath, index) {
        var oldKey = oldPath[index], updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
        index + 1 === oldPath.length ? (updated[newPath[index]] = updated[oldKey], isArrayImpl(updated) ? updated.splice(oldKey, 1) : delete updated[oldKey]) : updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);
        return updated;
    }
    function copyWithDeleteImpl(obj, path, index) {
        var key = path[index], updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === path.length) return isArrayImpl(updated) ? updated.splice(key, 1) : delete updated[key], updated;
        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
    }
    function shouldSuspendImpl() {
        return !1;
    }
    function shouldErrorImpl() {
        return null;
    }
    function createFiber(tag, pendingProps, key, mode) {
        return new FiberNode(tag, pendingProps, key, mode);
    }
    function warnInvalidHookAccess() {
        console.error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://react.dev/link/rules-of-hooks");
    }
    function warnInvalidContextAccess() {
        console.error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    }
    function noop$2() {}
    function warnForMissingKey() {}
    function setToSortedString(set) {
        var array = [];
        set.forEach(function(value) {
            array.push(value);
        });
        return array.sort().join(", ");
    }
    function scheduleRoot(root, element) {
        root.context === emptyContextObject && (updateContainerSync(element, root, null, null), flushSyncWork$1());
    }
    function scheduleRefresh(root, update) {
        if (null !== resolveFamily) {
            var staleFamilies = update.staleFamilies;
            update = update.updatedFamilies;
            flushPassiveEffects();
            scheduleFibersWithFamiliesRecursively(root.current, update, staleFamilies);
            flushSyncWork$1();
        }
    }
    function setRefreshHandler(handler) {
        resolveFamily = handler;
    }
    function isValidContainer(node) {
        return !(!node || 1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType);
    }
    function getIteratorFn(maybeIterable) {
        if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
        maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
        return "function" === typeof maybeIterable ? maybeIterable : null;
    }
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function getComponentNameFromOwner(owner) {
        return "number" === typeof owner.tag ? getComponentNameFromFiber(owner) : "string" === typeof owner.name ? owner.name : null;
    }
    function getComponentNameFromFiber(fiber) {
        var type = fiber.type;
        switch(fiber.tag){
            case 24:
                return "Cache";
            case 9:
                return (type._context.displayName || "Context") + ".Consumer";
            case 10:
                return (type.displayName || "Context") + ".Provider";
            case 18:
                return "DehydratedFragment";
            case 11:
                return fiber = type.render, fiber = fiber.displayName || fiber.name || "", type.displayName || ("" !== fiber ? "ForwardRef(" + fiber + ")" : "ForwardRef");
            case 7:
                return "Fragment";
            case 26:
            case 27:
            case 5:
                return type;
            case 4:
                return "Portal";
            case 3:
                return "Root";
            case 6:
                return "Text";
            case 16:
                return getComponentNameFromType(type);
            case 8:
                return type === REACT_STRICT_MODE_TYPE ? "StrictMode" : "Mode";
            case 22:
                return "Offscreen";
            case 12:
                return "Profiler";
            case 21:
                return "Scope";
            case 13:
                return "Suspense";
            case 19:
                return "SuspenseList";
            case 25:
                return "TracingMarker";
            case 1:
            case 0:
            case 14:
            case 15:
                if ("function" === typeof type) return type.displayName || type.name || null;
                if ("string" === typeof type) return type;
                break;
            case 29:
                type = fiber._debugInfo;
                if (null != type) {
                    for(var i = type.length - 1; 0 <= i; i--)if ("string" === typeof type[i].name) return type[i].name;
                }
                if (null !== fiber.return) return getComponentNameFromFiber(fiber.return);
        }
        return null;
    }
    function disabledLog() {}
    function disableLogs() {
        if (0 === disabledDepth) {
            prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd;
            var props = {
                configurable: !0,
                enumerable: !0,
                value: disabledLog,
                writable: !0
            };
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (0 === disabledDepth) {
            var props = {
                configurable: !0,
                enumerable: !0,
                writable: !0
            };
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        }
        0 > disabledDepth && console.error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    function describeBuiltInComponentFrame(name) {
        if (void 0 === prefix) try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
            suffix = -1 < x.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
        return "\n" + prefix + name + suffix;
    }
    function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (void 0 !== frame) return frame;
        reentry = !0;
        frame = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher = null;
        previousDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = null;
        disableLogs();
        try {
            var RunInRootFrame = {
                DetermineComponentFrameRoot: function() {
                    try {
                        if (construct) {
                            var Fake = function() {
                                throw Error();
                            };
                            Object.defineProperty(Fake.prototype, "props", {
                                set: function() {
                                    throw Error();
                                }
                            });
                            if ("object" === typeof Reflect && Reflect.construct) {
                                try {
                                    Reflect.construct(Fake, []);
                                } catch (x) {
                                    var control = x;
                                }
                                Reflect.construct(fn, [], Fake);
                            } else {
                                try {
                                    Fake.call();
                                } catch (x$0) {
                                    control = x$0;
                                }
                                fn.call(Fake.prototype);
                            }
                        } else {
                            try {
                                throw Error();
                            } catch (x$1) {
                                control = x$1;
                            }
                            (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {});
                        }
                    } catch (sample) {
                        if (sample && control && "string" === typeof sample.stack) return [
                            sample.stack,
                            control.stack
                        ];
                    }
                    return [
                        null,
                        null
                    ];
                }
            };
            RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, "name");
            namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, "name", {
                value: "DetermineComponentFrameRoot"
            });
            var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
            if (sampleStack && controlStack) {
                var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
                for(_RunInRootFrame$Deter = namePropDescriptor = 0; namePropDescriptor < sampleLines.length && !sampleLines[namePropDescriptor].includes("DetermineComponentFrameRoot");)namePropDescriptor++;
                for(; _RunInRootFrame$Deter < controlLines.length && !controlLines[_RunInRootFrame$Deter].includes("DetermineComponentFrameRoot");)_RunInRootFrame$Deter++;
                if (namePropDescriptor === sampleLines.length || _RunInRootFrame$Deter === controlLines.length) for(namePropDescriptor = sampleLines.length - 1, _RunInRootFrame$Deter = controlLines.length - 1; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter && sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter];)_RunInRootFrame$Deter--;
                for(; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter; namePropDescriptor--, _RunInRootFrame$Deter--)if (sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                    if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {
                        do if (namePropDescriptor--, _RunInRootFrame$Deter--, 0 > _RunInRootFrame$Deter || sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                            var _frame = "\n" + sampleLines[namePropDescriptor].replace(" at new ", " at ");
                            fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName));
                            "function" === typeof fn && componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                        while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);
                    }
                    break;
                }
            }
        } finally{
            reentry = !1, ReactSharedInternals.H = previousDispatcher, reenableLogs(), Error.prepareStackTrace = frame;
        }
        sampleLines = (sampleLines = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(sampleLines) : "";
        "function" === typeof fn && componentFrameCache.set(fn, sampleLines);
        return sampleLines;
    }
    function describeFiber(fiber) {
        switch(fiber.tag){
            case 26:
            case 27:
            case 5:
                return describeBuiltInComponentFrame(fiber.type);
            case 16:
                return describeBuiltInComponentFrame("Lazy");
            case 13:
                return describeBuiltInComponentFrame("Suspense");
            case 19:
                return describeBuiltInComponentFrame("SuspenseList");
            case 0:
            case 15:
                return fiber = describeNativeComponentFrame(fiber.type, !1), fiber;
            case 11:
                return fiber = describeNativeComponentFrame(fiber.type.render, !1), fiber;
            case 1:
                return fiber = describeNativeComponentFrame(fiber.type, !0), fiber;
            default:
                return "";
        }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
        try {
            var info = "";
            do {
                info += describeFiber(workInProgress);
                var debugInfo = workInProgress._debugInfo;
                if (debugInfo) for(var i = debugInfo.length - 1; 0 <= i; i--){
                    var entry = debugInfo[i];
                    if ("string" === typeof entry.name) {
                        var JSCompiler_temp_const = info, env = entry.env;
                        var JSCompiler_inline_result = describeBuiltInComponentFrame(entry.name + (env ? " [" + env + "]" : ""));
                        info = JSCompiler_temp_const + JSCompiler_inline_result;
                    }
                }
                workInProgress = workInProgress.return;
            }while (workInProgress);
            return info;
        } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
        }
    }
    function getCurrentFiberOwnerNameInDevOrNull() {
        if (null === current) return null;
        var owner = current._debugOwner;
        return null != owner ? getComponentNameFromOwner(owner) : null;
    }
    function getCurrentFiberStackInDev() {
        return null === current ? "" : getStackByFiberInDevAndProd(current);
    }
    function runWithFiberInDEV(fiber, callback, arg0, arg1, arg2, arg3, arg4) {
        var previousFiber = current;
        ReactSharedInternals.getCurrentStack = null === fiber ? null : getCurrentFiberStackInDev;
        isRendering = !1;
        current = fiber;
        try {
            return callback(arg0, arg1, arg2, arg3, arg4);
        } finally{
            current = previousFiber;
        }
        throw Error("runWithFiberInDEV should never be called in production. This is a bug in React.");
    }
    function getNearestMountedFiber(fiber) {
        var node = fiber, nearestMounted = fiber;
        if (fiber.alternate) for(; node.return;)node = node.return;
        else {
            fiber = node;
            do node = fiber, 0 !== (node.flags & 4098) && (nearestMounted = node.return), fiber = node.return;
            while (fiber);
        }
        return 3 === node.tag ? nearestMounted : null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
        if (13 === fiber.tag) {
            var suspenseState = fiber.memoizedState;
            null === suspenseState && (fiber = fiber.alternate, null !== fiber && (suspenseState = fiber.memoizedState));
            if (null !== suspenseState) return suspenseState.dehydrated;
        }
        return null;
    }
    function assertIsMounted(fiber) {
        if (getNearestMountedFiber(fiber) !== fiber) throw Error("Unable to find node on an unmounted component.");
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            alternate = getNearestMountedFiber(fiber);
            if (null === alternate) throw Error("Unable to find node on an unmounted component.");
            return alternate !== fiber ? null : fiber;
        }
        for(var a = fiber, b = alternate;;){
            var parentA = a.return;
            if (null === parentA) break;
            var parentB = parentA.alternate;
            if (null === parentB) {
                b = parentA.return;
                if (null !== b) {
                    a = b;
                    continue;
                }
                break;
            }
            if (parentA.child === parentB.child) {
                for(parentB = parentA.child; parentB;){
                    if (parentB === a) return assertIsMounted(parentA), fiber;
                    if (parentB === b) return assertIsMounted(parentA), alternate;
                    parentB = parentB.sibling;
                }
                throw Error("Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) a = parentA, b = parentB;
            else {
                for(var didFindChild = !1, _child = parentA.child; _child;){
                    if (_child === a) {
                        didFindChild = !0;
                        a = parentA;
                        b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = !0;
                        b = parentA;
                        a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    for(_child = parentB.child; _child;){
                        if (_child === a) {
                            didFindChild = !0;
                            a = parentB;
                            b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = !0;
                            b = parentB;
                            a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    if (!didFindChild) throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
            }
            if (a.alternate !== b) throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (3 !== a.tag) throw Error("Unable to find node on an unmounted component.");
        return a.stateNode.current === a ? fiber : alternate;
    }
    function findCurrentHostFiberImpl(node) {
        var tag = node.tag;
        if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;
        for(node = node.child; null !== node;){
            tag = findCurrentHostFiberImpl(node);
            if (null !== tag) return tag;
            node = node.sibling;
        }
        return null;
    }
    function createCursor(defaultValue) {
        return {
            current: defaultValue
        };
    }
    function pop(cursor, fiber) {
        0 > index$jscomp$0 ? console.error("Unexpected pop.") : (fiber !== fiberStack[index$jscomp$0] && console.error("Unexpected Fiber popped."), cursor.current = valueStack[index$jscomp$0], valueStack[index$jscomp$0] = null, fiberStack[index$jscomp$0] = null, index$jscomp$0--);
    }
    function push(cursor, value, fiber) {
        index$jscomp$0++;
        valueStack[index$jscomp$0] = cursor.current;
        fiberStack[index$jscomp$0] = fiber;
        cursor.current = value;
    }
    function requiredContext(c) {
        null === c && console.error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c;
    }
    function pushHostContainer(fiber, nextRootInstance) {
        push(rootInstanceStackCursor, nextRootInstance, fiber);
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor, null, fiber);
        var nextRootContext = nextRootInstance.nodeType;
        switch(nextRootContext){
            case 9:
            case 11:
                nextRootContext = 9 === nextRootContext ? "#document" : "#fragment";
                nextRootInstance = (nextRootInstance = nextRootInstance.documentElement) ? (nextRootInstance = nextRootInstance.namespaceURI) ? getOwnHostContext(nextRootInstance) : HostContextNamespaceNone : HostContextNamespaceNone;
                break;
            default:
                if (nextRootInstance = 8 === nextRootContext ? nextRootInstance.parentNode : nextRootInstance, nextRootContext = nextRootInstance.tagName, nextRootInstance = nextRootInstance.namespaceURI) nextRootInstance = getOwnHostContext(nextRootInstance), nextRootInstance = getChildHostContextProd(nextRootInstance, nextRootContext);
                else switch(nextRootContext){
                    case "svg":
                        nextRootInstance = HostContextNamespaceSvg;
                        break;
                    case "math":
                        nextRootInstance = HostContextNamespaceMath;
                        break;
                    default:
                        nextRootInstance = HostContextNamespaceNone;
                }
        }
        nextRootContext = nextRootContext.toLowerCase();
        nextRootContext = updatedAncestorInfoDev(null, nextRootContext);
        nextRootContext = {
            context: nextRootInstance,
            ancestorInfo: nextRootContext
        };
        pop(contextStackCursor, fiber);
        push(contextStackCursor, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop(contextStackCursor, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        return requiredContext(contextStackCursor.current);
    }
    function pushHostContext(fiber) {
        null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber, fiber);
        var context = requiredContext(contextStackCursor.current);
        var type = fiber.type;
        var nextContext = getChildHostContextProd(context.context, type);
        type = updatedAncestorInfoDev(context.ancestorInfo, type);
        nextContext = {
            context: nextContext,
            ancestorInfo: type
        };
        context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor, nextContext, fiber));
    }
    function popHostContext(fiber) {
        contextFiberStackCursor.current === fiber && (pop(contextStackCursor, fiber), pop(contextFiberStackCursor, fiber));
        hostTransitionProviderCursor.current === fiber && (pop(hostTransitionProviderCursor, fiber), HostTransitionContext._currentValue = NotPendingTransition);
    }
    function typeName(value) {
        return "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
    }
    function willCoercionThrow(value) {
        try {
            return testStringCoercion(value), !1;
        } catch (e) {
            return !0;
        }
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value)) return console.error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before using it here.", attributeName, typeName(value)), testStringCoercion(value);
    }
    function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value)) return console.error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before using it here.", propName, typeName(value)), testStringCoercion(value);
    }
    function checkFormFieldValueStringCoercion(value) {
        if (willCoercionThrow(value)) return console.error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before using it here.", typeName(value)), testStringCoercion(value);
    }
    function injectInternals(internals) {
        if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled) return !0;
        if (!hook.supportsFiber) return console.error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://react.dev/link/react-devtools"), !0;
        try {
            rendererID = hook.inject(internals), injectedHook = hook;
        } catch (err) {
            console.error("React instrumentation encountered an error: %s.", err);
        }
        return hook.checkDCE ? !0 : !1;
    }
    function onCommitRoot$1(root, eventPriority) {
        if (injectedHook && "function" === typeof injectedHook.onCommitFiberRoot) try {
            var didError = 128 === (root.current.flags & 128);
            switch(eventPriority){
                case DiscreteEventPriority:
                    var schedulerPriority = ImmediatePriority;
                    break;
                case ContinuousEventPriority:
                    schedulerPriority = UserBlockingPriority;
                    break;
                case DefaultEventPriority:
                    schedulerPriority = NormalPriority$1;
                    break;
                case IdleEventPriority:
                    schedulerPriority = IdlePriority;
                    break;
                default:
                    schedulerPriority = NormalPriority$1;
            }
            injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
    }
    function setIsStrictModeForDevtools(newIsStrictMode) {
        "function" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);
        if (injectedHook && "function" === typeof injectedHook.setStrictMode) try {
            injectedHook.setStrictMode(rendererID, newIsStrictMode);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
    }
    function injectProfilingHooks(profilingHooks) {
        injectedProfilingHooks = profilingHooks;
    }
    function markCommitStopped() {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markCommitStopped && injectedProfilingHooks.markCommitStopped();
    }
    function markComponentRenderStarted(fiber) {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentRenderStarted && injectedProfilingHooks.markComponentRenderStarted(fiber);
    }
    function markComponentRenderStopped() {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentRenderStopped && injectedProfilingHooks.markComponentRenderStopped();
    }
    function markRenderStarted(lanes) {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderStarted && injectedProfilingHooks.markRenderStarted(lanes);
    }
    function markRenderStopped() {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderStopped && injectedProfilingHooks.markRenderStopped();
    }
    function markStateUpdateScheduled(fiber, lane) {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markStateUpdateScheduled && injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
    }
    function clz32Fallback(x) {
        x >>>= 0;
        return 0 === x ? 32 : 31 - (log(x) / LN2 | 0) | 0;
    }
    function getLabelForLane(lane) {
        if (lane & 1) return "SyncHydrationLane";
        if (lane & 2) return "Sync";
        if (lane & 4) return "InputContinuousHydration";
        if (lane & 8) return "InputContinuous";
        if (lane & 16) return "DefaultHydration";
        if (lane & 32) return "Default";
        if (lane & 64) return "TransitionHydration";
        if (lane & 4194176) return "Transition";
        if (lane & 62914560) return "Retry";
        if (lane & 67108864) return "SelectiveHydration";
        if (lane & 134217728) return "IdleHydration";
        if (lane & 268435456) return "Idle";
        if (lane & 536870912) return "Offscreen";
        if (lane & 1073741824) return "Deferred";
    }
    function getHighestPriorityLanes(lanes) {
        var pendingSyncLanes = lanes & 42;
        if (0 !== pendingSyncLanes) return pendingSyncLanes;
        switch(lanes & -lanes){
            case 1:
                return 1;
            case 2:
                return 2;
            case 4:
                return 4;
            case 8:
                return 8;
            case 16:
                return 16;
            case 32:
                return 32;
            case 64:
                return 64;
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
                return lanes & 4194176;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                return lanes & 62914560;
            case 67108864:
                return 67108864;
            case 134217728:
                return 134217728;
            case 268435456:
                return 268435456;
            case 536870912:
                return 536870912;
            case 1073741824:
                return 0;
            default:
                return console.error("Should have found matching lanes. This is a bug in React."), lanes;
        }
    }
    function getNextLanes(root, wipLanes) {
        var pendingLanes = root.pendingLanes;
        if (0 === pendingLanes) return 0;
        var nextLanes = 0, suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes, warmLanes = root.warmLanes;
        root = 0 !== root.finishedLanes;
        var nonIdlePendingLanes = pendingLanes & 134217727;
        0 !== nonIdlePendingLanes ? (pendingLanes = nonIdlePendingLanes & ~suspendedLanes, 0 !== pendingLanes ? nextLanes = getHighestPriorityLanes(pendingLanes) : (pingedLanes &= nonIdlePendingLanes, 0 !== pingedLanes ? nextLanes = getHighestPriorityLanes(pingedLanes) : root || (warmLanes = nonIdlePendingLanes & ~warmLanes, 0 !== warmLanes && (nextLanes = getHighestPriorityLanes(warmLanes))))) : (nonIdlePendingLanes = pendingLanes & ~suspendedLanes, 0 !== nonIdlePendingLanes ? nextLanes = getHighestPriorityLanes(nonIdlePendingLanes) : 0 !== pingedLanes ? nextLanes = getHighestPriorityLanes(pingedLanes) : root || (warmLanes = pendingLanes & ~warmLanes, 0 !== warmLanes && (nextLanes = getHighestPriorityLanes(warmLanes))));
        return 0 === nextLanes ? 0 : 0 !== wipLanes && wipLanes !== nextLanes && 0 === (wipLanes & suspendedLanes) && (suspendedLanes = nextLanes & -nextLanes, warmLanes = wipLanes & -wipLanes, suspendedLanes >= warmLanes || 32 === suspendedLanes && 0 !== (warmLanes & 4194176)) ? wipLanes : nextLanes;
    }
    function checkIfRootIsPrerendering(root, renderLanes) {
        return 0 === (root.pendingLanes & ~(root.suspendedLanes & ~root.pingedLanes) & renderLanes);
    }
    function computeExpirationTime(lane, currentTime) {
        switch(lane){
            case 1:
            case 2:
            case 4:
            case 8:
                return currentTime + 250;
            case 16:
            case 32:
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
                return currentTime + 5e3;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                return -1;
            case 67108864:
            case 134217728:
            case 268435456:
            case 536870912:
            case 1073741824:
                return -1;
            default:
                return console.error("Should have found matching lanes. This is a bug in React."), -1;
        }
    }
    function claimNextTransitionLane() {
        var lane = nextTransitionLane;
        nextTransitionLane <<= 1;
        0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);
        return lane;
    }
    function claimNextRetryLane() {
        var lane = nextRetryLane;
        nextRetryLane <<= 1;
        0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);
        return lane;
    }
    function createLaneMap(initial) {
        for(var laneMap = [], i = 0; 31 > i; i++)laneMap.push(initial);
        return laneMap;
    }
    function markRootUpdated$1(root, updateLane) {
        root.pendingLanes |= updateLane;
        268435456 !== updateLane && (root.suspendedLanes = 0, root.pingedLanes = 0, root.warmLanes = 0);
    }
    function markRootFinished(root, finishedLanes, remainingLanes, spawnedLane, updatedLanes, suspendedRetryLanes) {
        var previouslyPendingLanes = root.pendingLanes;
        root.pendingLanes = remainingLanes;
        root.suspendedLanes = 0;
        root.pingedLanes = 0;
        root.warmLanes = 0;
        root.expiredLanes &= remainingLanes;
        root.entangledLanes &= remainingLanes;
        root.errorRecoveryDisabledLanes &= remainingLanes;
        root.shellSuspendCounter = 0;
        var entanglements = root.entanglements, expirationTimes = root.expirationTimes, hiddenUpdates = root.hiddenUpdates;
        for(remainingLanes = previouslyPendingLanes & ~remainingLanes; 0 < remainingLanes;){
            var index = 31 - clz32(remainingLanes), lane = 1 << index;
            entanglements[index] = 0;
            expirationTimes[index] = -1;
            var hiddenUpdatesForLane = hiddenUpdates[index];
            if (null !== hiddenUpdatesForLane) for(hiddenUpdates[index] = null, index = 0; index < hiddenUpdatesForLane.length; index++){
                var update = hiddenUpdatesForLane[index];
                null !== update && (update.lane &= -536870913);
            }
            remainingLanes &= ~lane;
        }
        0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);
        0 !== suspendedRetryLanes && 0 === updatedLanes && 0 !== root.tag && (root.suspendedLanes |= suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));
    }
    function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
        root.pendingLanes |= spawnedLane;
        root.suspendedLanes &= ~spawnedLane;
        var spawnedLaneIndex = 31 - clz32(spawnedLane);
        root.entangledLanes |= spawnedLane;
        root.entanglements[spawnedLaneIndex] = root.entanglements[spawnedLaneIndex] | 1073741824 | entangledLanes & 4194218;
    }
    function markRootEntangled(root, entangledLanes) {
        var rootEntangledLanes = root.entangledLanes |= entangledLanes;
        for(root = root.entanglements; rootEntangledLanes;){
            var index = 31 - clz32(rootEntangledLanes), lane = 1 << index;
            lane & entangledLanes | root[index] & entangledLanes && (root[index] |= entangledLanes);
            rootEntangledLanes &= ~lane;
        }
    }
    function addFiberToLanesMap(root, fiber, lanes) {
        if (isDevToolsPresent) for(root = root.pendingUpdatersLaneMap; 0 < lanes;){
            var index = 31 - clz32(lanes), lane = 1 << index;
            root[index].add(fiber);
            lanes &= ~lane;
        }
    }
    function movePendingFibersToMemoized(root, lanes) {
        if (isDevToolsPresent) for(var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap, memoizedUpdaters = root.memoizedUpdaters; 0 < lanes;){
            var index = 31 - clz32(lanes);
            root = 1 << index;
            index = pendingUpdatersLaneMap[index];
            0 < index.size && (index.forEach(function(fiber) {
                var alternate = fiber.alternate;
                null !== alternate && memoizedUpdaters.has(alternate) || memoizedUpdaters.add(fiber);
            }), index.clear());
            lanes &= ~root;
        }
    }
    function lanesToEventPriority(lanes) {
        lanes &= -lanes;
        return 0 !== DiscreteEventPriority && DiscreteEventPriority < lanes ? 0 !== ContinuousEventPriority && ContinuousEventPriority < lanes ? 0 !== (lanes & 134217727) ? DefaultEventPriority : IdleEventPriority : ContinuousEventPriority : DiscreteEventPriority;
    }
    function resolveUpdatePriority() {
        var updatePriority = ReactDOMSharedInternals.p;
        if (0 !== updatePriority) return updatePriority;
        updatePriority = window.event;
        return void 0 === updatePriority ? DefaultEventPriority : getEventPriority(updatePriority.type);
    }
    function runWithPriority(priority, fn) {
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            return ReactDOMSharedInternals.p = priority, fn();
        } finally{
            ReactDOMSharedInternals.p = previousPriority;
        }
    }
    function detachDeletedInstance(node) {
        delete node[internalInstanceKey];
        delete node[internalPropsKey];
        delete node[internalEventHandlersKey];
        delete node[internalEventHandlerListenersKey];
        delete node[internalEventHandlesSetKey];
    }
    function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst) return targetInst;
        for(var parentNode = targetNode.parentNode; parentNode;){
            if (targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey]) {
                parentNode = targetInst.alternate;
                if (null !== targetInst.child || null !== parentNode && null !== parentNode.child) for(targetNode = getParentSuspenseInstance(targetNode); null !== targetNode;){
                    if (parentNode = targetNode[internalInstanceKey]) return parentNode;
                    targetNode = getParentSuspenseInstance(targetNode);
                }
                return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
        }
        return null;
    }
    function getInstanceFromNode(node) {
        if (node = node[internalInstanceKey] || node[internalContainerInstanceKey]) {
            var tag = node.tag;
            if (5 === tag || 6 === tag || 13 === tag || 26 === tag || 27 === tag || 3 === tag) return node;
        }
        return null;
    }
    function getNodeFromInstance(inst) {
        var tag = inst.tag;
        if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;
        throw Error("getNodeFromInstance: Invalid argument.");
    }
    function getResourcesFromRoot(root) {
        var resources = root[internalRootNodeResourcesKey];
        resources || (resources = root[internalRootNodeResourcesKey] = {
            hoistableStyles: new Map(),
            hoistableScripts: new Map()
        });
        return resources;
    }
    function markNodeAsHoistable(node) {
        node[internalHoistableMarker] = !0;
    }
    function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies);
        registerDirectEvent(registrationName + "Capture", dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
        registrationNameDependencies[registrationName] && console.error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
        registrationNameDependencies[registrationName] = dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;
        "onDoubleClick" === registrationName && (possibleRegistrationNames.ondblclick = registrationName);
        for(registrationName = 0; registrationName < dependencies.length; registrationName++)allNativeEvents.add(dependencies[registrationName]);
    }
    function checkControlledValueProps(tagName, props) {
        hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || null == props.value || ("select" === tagName ? console.error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set `onChange`.") : console.error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."));
        props.onChange || props.readOnly || props.disabled || null == props.checked || console.error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function isAttributeNameSafe(attributeName) {
        if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) return !0;
        if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) return validatedAttributeNameCache[attributeName] = !0;
        illegalAttributeNameCache[attributeName] = !0;
        console.error("Invalid attribute name: `%s`", attributeName);
        return !1;
    }
    function getValueForAttributeOnCustomComponent(node, name, expected) {
        if (isAttributeNameSafe(name)) {
            if (!node.hasAttribute(name)) {
                switch(typeof expected){
                    case "symbol":
                    case "object":
                        return expected;
                    case "function":
                        return expected;
                    case "boolean":
                        if (!1 === expected) return expected;
                }
                return void 0 === expected ? void 0 : null;
            }
            node = node.getAttribute(name);
            if ("" === node && !0 === expected) return !0;
            checkAttributeStringCoercion(expected, name);
            return node === "" + expected ? expected : node;
        }
    }
    function setValueForAttribute(node, name, value) {
        if (isAttributeNameSafe(name)) {
            if (null === value) node.removeAttribute(name);
            else {
                switch(typeof value){
                    case "undefined":
                    case "function":
                    case "symbol":
                        node.removeAttribute(name);
                        return;
                    case "boolean":
                        var prefix = name.toLowerCase().slice(0, 5);
                        if ("data-" !== prefix && "aria-" !== prefix) {
                            node.removeAttribute(name);
                            return;
                        }
                }
                checkAttributeStringCoercion(value, name);
                node.setAttribute(name, "" + value);
            }
        }
    }
    function setValueForKnownAttribute(node, name, value) {
        if (null === value) node.removeAttribute(name);
        else {
            switch(typeof value){
                case "undefined":
                case "function":
                case "symbol":
                case "boolean":
                    node.removeAttribute(name);
                    return;
            }
            checkAttributeStringCoercion(value, name);
            node.setAttribute(name, "" + value);
        }
    }
    function setValueForNamespacedAttribute(node, namespace, name, value) {
        if (null === value) node.removeAttribute(name);
        else {
            switch(typeof value){
                case "undefined":
                case "function":
                case "symbol":
                case "boolean":
                    node.removeAttribute(name);
                    return;
            }
            checkAttributeStringCoercion(value, name);
            node.setAttributeNS(namespace, name, "" + value);
        }
    }
    function getToStringValue(value) {
        switch(typeof value){
            case "bigint":
            case "boolean":
            case "number":
            case "string":
            case "undefined":
                return value;
            case "object":
                return checkFormFieldValueStringCoercion(value), value;
            default:
                return "";
        }
    }
    function isCheckable(elem) {
        var type = elem.type;
        return (elem = elem.nodeName) && "input" === elem.toLowerCase() && ("checkbox" === type || "radio" === type);
    }
    function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? "checked" : "value", descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        checkFormFieldValueStringCoercion(node[valueField]);
        var currentValue = "" + node[valueField];
        if (!node.hasOwnProperty(valueField) && "undefined" !== typeof descriptor && "function" === typeof descriptor.get && "function" === typeof descriptor.set) {
            var get = descriptor.get, set = descriptor.set;
            Object.defineProperty(node, valueField, {
                configurable: !0,
                get: function() {
                    return get.call(this);
                },
                set: function(value) {
                    checkFormFieldValueStringCoercion(value);
                    currentValue = "" + value;
                    set.call(this, value);
                }
            });
            Object.defineProperty(node, valueField, {
                enumerable: descriptor.enumerable
            });
            return {
                getValue: function() {
                    return currentValue;
                },
                setValue: function(value) {
                    checkFormFieldValueStringCoercion(value);
                    currentValue = "" + value;
                },
                stopTracking: function() {
                    node._valueTracker = null;
                    delete node[valueField];
                }
            };
        }
    }
    function track(node) {
        node._valueTracker || (node._valueTracker = trackValueOnNode(node));
    }
    function updateValueIfChanged(node) {
        if (!node) return !1;
        var tracker = node._valueTracker;
        if (!tracker) return !0;
        var lastValue = tracker.getValue();
        var value = "";
        node && (value = isCheckable(node) ? node.checked ? "true" : "false" : node.value);
        node = value;
        return node !== lastValue ? (tracker.setValue(node), !0) : !1;
    }
    function getActiveElement(doc) {
        doc = doc || ("undefined" !== typeof document ? document : void 0);
        if ("undefined" === typeof doc) return null;
        try {
            return doc.activeElement || doc.body;
        } catch (e) {
            return doc.body;
        }
    }
    function escapeSelectorAttributeValueInsideDoubleQuotes(value) {
        return value.replace(escapeSelectorAttributeValueInsideDoubleQuotesRegex, function(ch) {
            return "\\" + ch.charCodeAt(0).toString(16) + " ";
        });
    }
    function validateInputProps(element, props) {
        void 0 === props.checked || void 0 === props.defaultChecked || didWarnCheckedDefaultChecked || (console.error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type), didWarnCheckedDefaultChecked = !0);
        void 0 === props.value || void 0 === props.defaultValue || didWarnValueDefaultValue$1 || (console.error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type), didWarnValueDefaultValue$1 = !0);
    }
    function updateInput(element, value, defaultValue, lastDefaultValue, checked, defaultChecked, type, name) {
        element.name = "";
        null != type && "function" !== typeof type && "symbol" !== typeof type && "boolean" !== typeof type ? (checkAttributeStringCoercion(type, "type"), element.type = type) : element.removeAttribute("type");
        if (null != value) {
            if ("number" === type) {
                if (0 === value && "" === element.value || element.value != value) element.value = "" + getToStringValue(value);
            } else element.value !== "" + getToStringValue(value) && (element.value = "" + getToStringValue(value));
        } else "submit" !== type && "reset" !== type || element.removeAttribute("value");
        null != value ? setDefaultValue(element, type, getToStringValue(value)) : null != defaultValue ? setDefaultValue(element, type, getToStringValue(defaultValue)) : null != lastDefaultValue && element.removeAttribute("value");
        null == checked && null != defaultChecked && (element.defaultChecked = !!defaultChecked);
        null != checked && (element.checked = checked && "function" !== typeof checked && "symbol" !== typeof checked);
        null != name && "function" !== typeof name && "symbol" !== typeof name && "boolean" !== typeof name ? (checkAttributeStringCoercion(name, "name"), element.name = "" + getToStringValue(name)) : element.removeAttribute("name");
    }
    function initInput(element, value, defaultValue, checked, defaultChecked, type, name, isHydrating) {
        null != type && "function" !== typeof type && "symbol" !== typeof type && "boolean" !== typeof type && (checkAttributeStringCoercion(type, "type"), element.type = type);
        if (null != value || null != defaultValue) {
            if (!("submit" !== type && "reset" !== type || void 0 !== value && null !== value)) return;
            defaultValue = null != defaultValue ? "" + getToStringValue(defaultValue) : "";
            value = null != value ? "" + getToStringValue(value) : defaultValue;
            isHydrating || value === element.value || (element.value = value);
            element.defaultValue = value;
        }
        checked = null != checked ? checked : defaultChecked;
        checked = "function" !== typeof checked && "symbol" !== typeof checked && !!checked;
        element.checked = isHydrating ? element.checked : !!checked;
        element.defaultChecked = !!checked;
        null != name && "function" !== typeof name && "symbol" !== typeof name && "boolean" !== typeof name && (checkAttributeStringCoercion(name, "name"), element.name = name);
    }
    function setDefaultValue(node, type, value) {
        "number" === type && getActiveElement(node.ownerDocument) === node || node.defaultValue === "" + value || (node.defaultValue = "" + value);
    }
    function validateOptionProps(element, props) {
        null == props.value && ("object" === typeof props.children && null !== props.children ? React.Children.forEach(props.children, function(child) {
            null == child || "string" === typeof child || "number" === typeof child || "bigint" === typeof child || didWarnInvalidChild || (didWarnInvalidChild = !0, console.error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>."));
        }) : null == props.dangerouslySetInnerHTML || didWarnInvalidInnerHTML || (didWarnInvalidInnerHTML = !0, console.error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")));
        null == props.selected || didWarnSelectedSetOnOption || (console.error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), didWarnSelectedSetOnOption = !0);
    }
    function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        return ownerName ? "\n\nCheck the render method of `" + ownerName + "`." : "";
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
        node = node.options;
        if (multiple) {
            multiple = {};
            for(var i = 0; i < propValue.length; i++)multiple["$" + propValue[i]] = !0;
            for(propValue = 0; propValue < node.length; propValue++)i = multiple.hasOwnProperty("$" + node[propValue].value), node[propValue].selected !== i && (node[propValue].selected = i), i && setDefaultSelected && (node[propValue].defaultSelected = !0);
        } else {
            propValue = "" + getToStringValue(propValue);
            multiple = null;
            for(i = 0; i < node.length; i++){
                if (node[i].value === propValue) {
                    node[i].selected = !0;
                    setDefaultSelected && (node[i].defaultSelected = !0);
                    return;
                }
                null !== multiple || node[i].disabled || (multiple = node[i]);
            }
            null !== multiple && (multiple.selected = !0);
        }
    }
    function validateSelectProps(element, props) {
        for(element = 0; element < valuePropNames.length; element++){
            var propName = valuePropNames[element];
            if (null != props[propName]) {
                var propNameIsArray = isArrayImpl(props[propName]);
                props.multiple && !propNameIsArray ? console.error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum()) : !props.multiple && propNameIsArray && console.error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
            }
        }
        void 0 === props.value || void 0 === props.defaultValue || didWarnValueDefaultValue || (console.error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://react.dev/link/controlled-components"), didWarnValueDefaultValue = !0);
    }
    function validateTextareaProps(element, props) {
        void 0 === props.value || void 0 === props.defaultValue || didWarnValDefaultVal || (console.error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://react.dev/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component"), didWarnValDefaultVal = !0);
        null != props.children && null == props.value && console.error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
    }
    function updateTextarea(element, value, defaultValue) {
        if (null != value && (value = "" + getToStringValue(value), value !== element.value && (element.value = value), null == defaultValue)) {
            element.defaultValue !== value && (element.defaultValue = value);
            return;
        }
        element.defaultValue = null != defaultValue ? "" + getToStringValue(defaultValue) : "";
    }
    function initTextarea(element, value, defaultValue, children) {
        if (null == value) {
            if (null != children) {
                if (null != defaultValue) throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                if (isArrayImpl(children)) {
                    if (1 < children.length) throw Error("<textarea> can only have at most one child.");
                    children = children[0];
                }
                defaultValue = children;
            }
            null == defaultValue && (defaultValue = "");
            value = defaultValue;
        }
        defaultValue = getToStringValue(value);
        element.defaultValue = defaultValue;
        children = element.textContent;
        children === defaultValue && "" !== children && null !== children && (element.value = children);
    }
    function findNotableNode(node, indent) {
        return void 0 === node.serverProps && 0 === node.serverTail.length && 1 === node.children.length && 3 < node.distanceFromLeaf && node.distanceFromLeaf > 15 - indent ? findNotableNode(node.children[0], indent) : node;
    }
    function indentation(indent) {
        return "  " + "  ".repeat(indent);
    }
    function added(indent) {
        return "+ " + "  ".repeat(indent);
    }
    function removed(indent) {
        return "- " + "  ".repeat(indent);
    }
    function describeFiberType(fiber) {
        switch(fiber.tag){
            case 26:
            case 27:
            case 5:
                return fiber.type;
            case 16:
                return "Lazy";
            case 13:
                return "Suspense";
            case 19:
                return "SuspenseList";
            case 0:
            case 15:
                return fiber = fiber.type, fiber.displayName || fiber.name || null;
            case 11:
                return fiber = fiber.type.render, fiber.displayName || fiber.name || null;
            case 1:
                return fiber = fiber.type, fiber.displayName || fiber.name || null;
            default:
                return null;
        }
    }
    function describeTextNode(content, maxLength) {
        return needsEscaping.test(content) ? (content = JSON.stringify(content), content.length > maxLength - 2 ? 8 > maxLength ? '{"..."}' : "{" + content.slice(0, maxLength - 7) + '..."}' : "{" + content + "}") : content.length > maxLength ? 5 > maxLength ? '{"..."}' : content.slice(0, maxLength - 3) + "..." : content;
    }
    function describeTextDiff(clientText, serverProps, indent) {
        var maxLength = 120 - 2 * indent;
        if (null === serverProps) return added(indent) + describeTextNode(clientText, maxLength) + "\n";
        if ("string" === typeof serverProps) {
            for(var firstDiff = 0; firstDiff < serverProps.length && firstDiff < clientText.length && serverProps.charCodeAt(firstDiff) === clientText.charCodeAt(firstDiff); firstDiff++);
            firstDiff > maxLength - 8 && 10 < firstDiff && (clientText = "..." + clientText.slice(firstDiff - 8), serverProps = "..." + serverProps.slice(firstDiff - 8));
            return added(indent) + describeTextNode(clientText, maxLength) + "\n" + removed(indent) + describeTextNode(serverProps, maxLength) + "\n";
        }
        return indentation(indent) + describeTextNode(clientText, maxLength) + "\n";
    }
    function objectName(object) {
        return Object.prototype.toString.call(object).replace(/^\[object (.*)\]$/, function(m, p0) {
            return p0;
        });
    }
    function describeValue(value, maxLength) {
        switch(typeof value){
            case "string":
                return value = JSON.stringify(value), value.length > maxLength ? 5 > maxLength ? '"..."' : value.slice(0, maxLength - 4) + '..."' : value;
            case "object":
                if (null === value) return "null";
                if (isArrayImpl(value)) return "[...]";
                if (value.$$typeof === REACT_ELEMENT_TYPE) return (maxLength = getComponentNameFromType(value.type)) ? "<" + maxLength + ">" : "<...>";
                var name = objectName(value);
                if ("Object" === name) {
                    name = "";
                    maxLength -= 2;
                    for(var propName in value)if (value.hasOwnProperty(propName)) {
                        var jsonPropName = JSON.stringify(propName);
                        jsonPropName !== '"' + propName + '"' && (propName = jsonPropName);
                        maxLength -= propName.length - 2;
                        jsonPropName = describeValue(value[propName], 15 > maxLength ? maxLength : 15);
                        maxLength -= jsonPropName.length;
                        if (0 > maxLength) {
                            name += "" === name ? "..." : ", ...";
                            break;
                        }
                        name += ("" === name ? "" : ",") + propName + ":" + jsonPropName;
                    }
                    return "{" + name + "}";
                }
                return name;
            case "function":
                return (maxLength = value.displayName || value.name) ? "function " + maxLength : "function";
            default:
                return String(value);
        }
    }
    function describePropValue(value, maxLength) {
        return "string" !== typeof value || needsEscaping.test(value) ? "{" + describeValue(value, maxLength - 2) + "}" : value.length > maxLength - 2 ? 5 > maxLength ? '"..."' : '"' + value.slice(0, maxLength - 5) + '..."' : '"' + value + '"';
    }
    function describeExpandedElement(type, props, rowPrefix) {
        var remainingRowLength = 120 - rowPrefix.length - type.length, properties = [], propName;
        for(propName in props)if (props.hasOwnProperty(propName) && "children" !== propName) {
            var propValue = describePropValue(props[propName], 120 - rowPrefix.length - propName.length - 1);
            remainingRowLength -= propName.length + propValue.length + 2;
            properties.push(propName + "=" + propValue);
        }
        return 0 === properties.length ? rowPrefix + "<" + type + ">\n" : 0 < remainingRowLength ? rowPrefix + "<" + type + " " + properties.join(" ") + ">\n" : rowPrefix + "<" + type + "\n" + rowPrefix + "  " + properties.join("\n" + rowPrefix + "  ") + "\n" + rowPrefix + ">\n";
    }
    function describePropertiesDiff(clientObject, serverObject, indent) {
        var properties = "", remainingServerProperties = assign({}, serverObject), propName;
        for(propName in clientObject)if (clientObject.hasOwnProperty(propName)) {
            delete remainingServerProperties[propName];
            var maxLength = 120 - 2 * indent - propName.length - 2, clientPropValue = describeValue(clientObject[propName], maxLength);
            serverObject.hasOwnProperty(propName) ? (maxLength = describeValue(serverObject[propName], maxLength), properties += added(indent) + propName + ": " + clientPropValue + "\n", properties += removed(indent) + propName + ": " + maxLength + "\n") : properties += added(indent) + propName + ": " + clientPropValue + "\n";
        }
        for(var _propName in remainingServerProperties)remainingServerProperties.hasOwnProperty(_propName) && (clientObject = describeValue(remainingServerProperties[_propName], 120 - 2 * indent - _propName.length - 2), properties += removed(indent) + _propName + ": " + clientObject + "\n");
        return properties;
    }
    function describeElementDiff(type, clientProps, serverProps, indent) {
        var content = "", serverPropNames = new Map();
        for(propName$jscomp$0 in serverProps)serverProps.hasOwnProperty(propName$jscomp$0) && serverPropNames.set(propName$jscomp$0.toLowerCase(), propName$jscomp$0);
        if (1 === serverPropNames.size && serverPropNames.has("children")) content += describeExpandedElement(type, clientProps, indentation(indent));
        else {
            for(var _propName2 in clientProps)if (clientProps.hasOwnProperty(_propName2) && "children" !== _propName2) {
                var maxLength$jscomp$0 = 120 - 2 * (indent + 1) - _propName2.length - 1, serverPropName = serverPropNames.get(_propName2.toLowerCase());
                if (void 0 !== serverPropName) {
                    serverPropNames.delete(_propName2.toLowerCase());
                    var propName$jscomp$0 = clientProps[_propName2];
                    serverPropName = serverProps[serverPropName];
                    var clientPropValue = describePropValue(propName$jscomp$0, maxLength$jscomp$0);
                    maxLength$jscomp$0 = describePropValue(serverPropName, maxLength$jscomp$0);
                    "object" === typeof propName$jscomp$0 && null !== propName$jscomp$0 && "object" === typeof serverPropName && null !== serverPropName && "Object" === objectName(propName$jscomp$0) && "Object" === objectName(serverPropName) && (2 < Object.keys(propName$jscomp$0).length || 2 < Object.keys(serverPropName).length || -1 < clientPropValue.indexOf("...") || -1 < maxLength$jscomp$0.indexOf("...")) ? content += indentation(indent + 1) + _propName2 + "={{\n" + describePropertiesDiff(propName$jscomp$0, serverPropName, indent + 2) + indentation(indent + 1) + "}}\n" : (content += added(indent + 1) + _propName2 + "=" + clientPropValue + "\n", content += removed(indent + 1) + _propName2 + "=" + maxLength$jscomp$0 + "\n");
                } else content += indentation(indent + 1) + _propName2 + "=" + describePropValue(clientProps[_propName2], maxLength$jscomp$0) + "\n";
            }
            serverPropNames.forEach(function(propName) {
                if ("children" !== propName) {
                    var maxLength = 120 - 2 * (indent + 1) - propName.length - 1;
                    content += removed(indent + 1) + propName + "=" + describePropValue(serverProps[propName], maxLength) + "\n";
                }
            });
            content = "" === content ? indentation(indent) + "<" + type + ">\n" : indentation(indent) + "<" + type + "\n" + content + indentation(indent) + ">\n";
        }
        type = serverProps.children;
        clientProps = clientProps.children;
        if ("string" === typeof type || "number" === typeof type || "bigint" === typeof type) {
            serverPropNames = "";
            if ("string" === typeof clientProps || "number" === typeof clientProps || "bigint" === typeof clientProps) serverPropNames = "" + clientProps;
            content += describeTextDiff(serverPropNames, "" + type, indent + 1);
        } else if ("string" === typeof clientProps || "number" === typeof clientProps || "bigint" === typeof clientProps) content = null == type ? content + describeTextDiff("" + clientProps, null, indent + 1) : content + describeTextDiff("" + clientProps, void 0, indent + 1);
        return content;
    }
    function describeSiblingFiber(fiber, indent) {
        var type = describeFiberType(fiber);
        if (null === type) {
            type = "";
            for(fiber = fiber.child; fiber;)type += describeSiblingFiber(fiber, indent), fiber = fiber.sibling;
            return type;
        }
        return indentation(indent) + "<" + type + ">\n";
    }
    function describeNode(node, indent) {
        var skipToNode = findNotableNode(node, indent);
        if (skipToNode !== node && (1 !== node.children.length || node.children[0] !== skipToNode)) return indentation(indent) + "...\n" + describeNode(skipToNode, indent + 1);
        skipToNode = "";
        var debugInfo = node.fiber._debugInfo;
        if (debugInfo) for(var i = 0; i < debugInfo.length; i++){
            var serverComponentName = debugInfo[i].name;
            "string" === typeof serverComponentName && (skipToNode += indentation(indent) + "<" + serverComponentName + ">\n", indent++);
        }
        debugInfo = "";
        i = node.fiber.pendingProps;
        if (6 === node.fiber.tag) debugInfo = describeTextDiff(i, node.serverProps, indent), indent++;
        else if (serverComponentName = describeFiberType(node.fiber), null !== serverComponentName) {
            if (void 0 === node.serverProps) {
                debugInfo = indent;
                var maxLength = 120 - 2 * debugInfo - serverComponentName.length - 2, content = "";
                for(propName in i)if (i.hasOwnProperty(propName) && "children" !== propName) {
                    var propValue = describePropValue(i[propName], 15);
                    maxLength -= propName.length + propValue.length + 2;
                    if (0 > maxLength) {
                        content += " ...";
                        break;
                    }
                    content += " " + propName + "=" + propValue;
                }
                debugInfo = indentation(debugInfo) + "<" + serverComponentName + content + ">\n";
                indent++;
            } else null === node.serverProps ? (debugInfo = describeExpandedElement(serverComponentName, i, added(indent)), indent++) : "string" === typeof node.serverProps ? console.error("Should not have matched a non HostText fiber to a Text node. This is a bug in React.") : (debugInfo = describeElementDiff(serverComponentName, i, node.serverProps, indent), indent++);
        }
        var propName = "";
        i = node.fiber.child;
        for(serverComponentName = 0; i && serverComponentName < node.children.length;)maxLength = node.children[serverComponentName], maxLength.fiber === i ? (propName += describeNode(maxLength, indent), serverComponentName++) : propName += describeSiblingFiber(i, indent), i = i.sibling;
        i && 0 < node.children.length && (propName += indentation(indent) + "...\n");
        i = node.serverTail;
        null === node.serverProps && indent--;
        for(node = 0; node < i.length; node++)serverComponentName = i[node], propName = "string" === typeof serverComponentName ? propName + (removed(indent) + describeTextNode(serverComponentName, 120 - 2 * indent) + "\n") : propName + describeExpandedElement(serverComponentName.type, serverComponentName.props, removed(indent));
        return skipToNode + debugInfo + propName;
    }
    function describeDiff(rootNode) {
        try {
            return "\n\n" + describeNode(rootNode, 0);
        } catch (x) {
            return "";
        }
    }
    function describeAncestors(ancestor, child, props) {
        for(var fiber = child, node = null, distanceFromLeaf = 0; fiber;)fiber === ancestor && (distanceFromLeaf = 0), node = {
            fiber: fiber,
            children: null !== node ? [
                node
            ] : [],
            serverProps: fiber === child ? props : fiber === ancestor ? null : void 0,
            serverTail: [],
            distanceFromLeaf: distanceFromLeaf
        }, distanceFromLeaf++, fiber = fiber.return;
        return null !== node ? describeDiff(node).replaceAll(/^[+-]/gm, ">") : "";
    }
    function updatedAncestorInfoDev(oldInfo, tag) {
        oldInfo = assign({}, oldInfo || emptyAncestorInfoDev);
        var info = {
            tag: tag
        };
        -1 !== inScopeTags.indexOf(tag) && (oldInfo.aTagInScope = null, oldInfo.buttonTagInScope = null, oldInfo.nobrTagInScope = null);
        -1 !== buttonScopeTags.indexOf(tag) && (oldInfo.pTagInButtonScope = null);
        -1 !== specialTags.indexOf(tag) && "address" !== tag && "div" !== tag && "p" !== tag && (oldInfo.listItemTagAutoclosing = null, oldInfo.dlItemTagAutoclosing = null);
        oldInfo.current = info;
        "form" === tag && (oldInfo.formTag = info);
        "a" === tag && (oldInfo.aTagInScope = info);
        "button" === tag && (oldInfo.buttonTagInScope = info);
        "nobr" === tag && (oldInfo.nobrTagInScope = info);
        "p" === tag && (oldInfo.pTagInButtonScope = info);
        "li" === tag && (oldInfo.listItemTagAutoclosing = info);
        if ("dd" === tag || "dt" === tag) oldInfo.dlItemTagAutoclosing = info;
        "#document" === tag || "html" === tag ? oldInfo.containerTagInScope = null : oldInfo.containerTagInScope || (oldInfo.containerTagInScope = info);
        return oldInfo;
    }
    function isTagValidWithParent(tag, parentTag) {
        switch(parentTag){
            case "select":
                return "hr" === tag || "option" === tag || "optgroup" === tag || "#text" === tag;
            case "optgroup":
                return "option" === tag || "#text" === tag;
            case "option":
                return "#text" === tag;
            case "tr":
                return "th" === tag || "td" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "tbody":
            case "thead":
            case "tfoot":
                return "tr" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "colgroup":
                return "col" === tag || "template" === tag;
            case "table":
                return "caption" === tag || "colgroup" === tag || "tbody" === tag || "tfoot" === tag || "thead" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "head":
                return "base" === tag || "basefont" === tag || "bgsound" === tag || "link" === tag || "meta" === tag || "title" === tag || "noscript" === tag || "noframes" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "html":
                return "head" === tag || "body" === tag || "frameset" === tag;
            case "frameset":
                return "frame" === tag;
            case "#document":
                return "html" === tag;
        }
        switch(tag){
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return "h1" !== parentTag && "h2" !== parentTag && "h3" !== parentTag && "h4" !== parentTag && "h5" !== parentTag && "h6" !== parentTag;
            case "rp":
            case "rt":
                return -1 === impliedEndTags.indexOf(parentTag);
            case "body":
            case "caption":
            case "col":
            case "colgroup":
            case "frameset":
            case "frame":
            case "head":
            case "html":
            case "tbody":
            case "td":
            case "tfoot":
            case "th":
            case "thead":
            case "tr":
                return null == parentTag;
        }
        return !0;
    }
    function findInvalidAncestorForTag(tag, ancestorInfo) {
        switch(tag){
            case "address":
            case "article":
            case "aside":
            case "blockquote":
            case "center":
            case "details":
            case "dialog":
            case "dir":
            case "div":
            case "dl":
            case "fieldset":
            case "figcaption":
            case "figure":
            case "footer":
            case "header":
            case "hgroup":
            case "main":
            case "menu":
            case "nav":
            case "ol":
            case "p":
            case "section":
            case "summary":
            case "ul":
            case "pre":
            case "listing":
            case "table":
            case "hr":
            case "xmp":
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return ancestorInfo.pTagInButtonScope;
            case "form":
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case "li":
                return ancestorInfo.listItemTagAutoclosing;
            case "dd":
            case "dt":
                return ancestorInfo.dlItemTagAutoclosing;
            case "button":
                return ancestorInfo.buttonTagInScope;
            case "a":
                return ancestorInfo.aTagInScope;
            case "nobr":
                return ancestorInfo.nobrTagInScope;
        }
        return null;
    }
    function findAncestor(parent, tagName) {
        for(; parent;){
            switch(parent.tag){
                case 5:
                case 26:
                case 27:
                    if (parent.type === tagName) return parent;
            }
            parent = parent.return;
        }
        return null;
    }
    function validateDOMNesting(childTag, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfoDev;
        var parentInfo = ancestorInfo.current;
        ancestorInfo = (parentInfo = isTagValidWithParent(childTag, parentInfo && parentInfo.tag) ? null : parentInfo) ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        ancestorInfo = parentInfo || ancestorInfo;
        if (!ancestorInfo) return !0;
        ancestorInfo = ancestorInfo.tag;
        var warnKey = String(!!parentInfo) + "|" + childTag + "|" + ancestorInfo;
        if (didWarn[warnKey]) return !1;
        didWarn[warnKey] = !0;
        var ancestor = (warnKey = current) ? findAncestor(warnKey.return, ancestorInfo) : null;
        warnKey = null !== warnKey && null !== ancestor ? describeAncestors(ancestor, warnKey, null) : "";
        ancestor = "<" + childTag + ">";
        parentInfo ? (parentInfo = "", "table" === ancestorInfo && "tr" === childTag && (parentInfo += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), console.error("In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s", ancestor, ancestorInfo, parentInfo, warnKey)) : console.error("In HTML, %s cannot be a descendant of <%s>.\nThis will cause a hydration error.%s", ancestor, ancestorInfo, warnKey);
        return !1;
    }
    function validateTextNesting(childText, parentTag) {
        if (isTagValidWithParent("#text", parentTag)) return !0;
        var warnKey = "#text|" + parentTag;
        if (didWarn[warnKey]) return !1;
        didWarn[warnKey] = !0;
        var ancestor = (warnKey = current) ? findAncestor(warnKey, parentTag) : null;
        warnKey = null !== warnKey && null !== ancestor ? describeAncestors(ancestor, warnKey, 6 !== warnKey.tag ? {
            children: null
        } : null) : "";
        /\S/.test(childText) ? console.error("In HTML, text nodes cannot be a child of <%s>.\nThis will cause a hydration error.%s", parentTag, warnKey) : console.error("In HTML, whitespace text nodes cannot be a child of <%s>. Make sure you don't have any extra whitespace between tags on each line of your source code.\nThis will cause a hydration error.%s", parentTag, warnKey);
        return !1;
    }
    function setTextContent(node, text) {
        if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && 3 === firstChild.nodeType) {
                firstChild.nodeValue = text;
                return;
            }
        }
        node.textContent = text;
    }
    function camelize(string) {
        return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
        });
    }
    function setValueForStyle(style, styleName, value) {
        var isCustomProperty = 0 === styleName.indexOf("--");
        isCustomProperty || (-1 < styleName.indexOf("-") ? warnedStyleNames.hasOwnProperty(styleName) && warnedStyleNames[styleName] || (warnedStyleNames[styleName] = !0, console.error("Unsupported style property %s. Did you mean %s?", styleName, camelize(styleName.replace(msPattern, "ms-")))) : badVendoredStyleNamePattern.test(styleName) ? warnedStyleNames.hasOwnProperty(styleName) && warnedStyleNames[styleName] || (warnedStyleNames[styleName] = !0, console.error("Unsupported vendor-prefixed style property %s. Did you mean %s?", styleName, styleName.charAt(0).toUpperCase() + styleName.slice(1))) : !badStyleValueWithSemicolonPattern.test(value) || warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value] || (warnedStyleValues[value] = !0, console.error('Style property values shouldn\'t contain a semicolon. Try "%s: %s" instead.', styleName, value.replace(badStyleValueWithSemicolonPattern, ""))), "number" === typeof value && (isNaN(value) ? warnedForNaNValue || (warnedForNaNValue = !0, console.error("`NaN` is an invalid value for the `%s` css style property.", styleName)) : isFinite(value) || warnedForInfinityValue || (warnedForInfinityValue = !0, console.error("`Infinity` is an invalid value for the `%s` css style property.", styleName))));
        null == value || "boolean" === typeof value || "" === value ? isCustomProperty ? style.setProperty(styleName, "") : "float" === styleName ? style.cssFloat = "" : style[styleName] = "" : isCustomProperty ? style.setProperty(styleName, value) : "number" !== typeof value || 0 === value || unitlessNumbers.has(styleName) ? "float" === styleName ? style.cssFloat = value : (checkCSSPropertyStringCoercion(value, styleName), style[styleName] = ("" + value).trim()) : style[styleName] = value + "px";
    }
    function setValueForStyles(node, styles, prevStyles) {
        if (null != styles && "object" !== typeof styles) throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        styles && Object.freeze(styles);
        node = node.style;
        if (null != prevStyles) {
            if (styles) {
                var expandedUpdates = {};
                if (prevStyles) {
                    for(var key in prevStyles)if (prevStyles.hasOwnProperty(key) && !styles.hasOwnProperty(key)) for(var longhands = shorthandToLonghand[key] || [
                        key
                    ], i = 0; i < longhands.length; i++)expandedUpdates[longhands[i]] = key;
                }
                for(var _key in styles)if (styles.hasOwnProperty(_key) && (!prevStyles || prevStyles[_key] !== styles[_key])) for(key = shorthandToLonghand[_key] || [
                    _key
                ], longhands = 0; longhands < key.length; longhands++)expandedUpdates[key[longhands]] = _key;
                _key = {};
                for(var key$jscomp$0 in styles)for(key = shorthandToLonghand[key$jscomp$0] || [
                    key$jscomp$0
                ], longhands = 0; longhands < key.length; longhands++)_key[key[longhands]] = key$jscomp$0;
                key$jscomp$0 = {};
                for(var _key2 in expandedUpdates)if (key = expandedUpdates[_key2], (longhands = _key[_key2]) && key !== longhands && (i = key + "," + longhands, !key$jscomp$0[i])) {
                    key$jscomp$0[i] = !0;
                    i = console;
                    var value = styles[key];
                    i.error.call(i, "%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", null == value || "boolean" === typeof value || "" === value ? "Removing" : "Updating", key, longhands);
                }
            }
            for(var styleName in prevStyles)!prevStyles.hasOwnProperty(styleName) || null != styles && styles.hasOwnProperty(styleName) || (0 === styleName.indexOf("--") ? node.setProperty(styleName, "") : "float" === styleName ? node.cssFloat = "" : node[styleName] = "");
            for(var _styleName in styles)_key2 = styles[_styleName], styles.hasOwnProperty(_styleName) && prevStyles[_styleName] !== _key2 && setValueForStyle(node, _styleName, _key2);
        } else for(expandedUpdates in styles)styles.hasOwnProperty(expandedUpdates) && setValueForStyle(node, expandedUpdates, styles[expandedUpdates]);
    }
    function isCustomElement(tagName) {
        if (-1 === tagName.indexOf("-")) return !1;
        switch(tagName){
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
                return !1;
            default:
                return !0;
        }
    }
    function getAttributeAlias(name) {
        return aliases.get(name) || name;
    }
    function validateProperty$1(tagName, name) {
        if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) return !0;
        if (rARIACamel$1.test(name)) {
            tagName = "aria-" + name.slice(4).toLowerCase();
            tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;
            if (null == tagName) return console.error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name), warnedProperties$1[name] = !0;
            if (name !== tagName) return console.error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, tagName), warnedProperties$1[name] = !0;
        }
        if (rARIA$1.test(name)) {
            tagName = name.toLowerCase();
            tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;
            if (null == tagName) return warnedProperties$1[name] = !0, !1;
            name !== tagName && (console.error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, tagName), warnedProperties$1[name] = !0);
        }
        return !0;
    }
    function validateProperties$2(type, props) {
        var invalidProps = [], key;
        for(key in props)validateProperty$1(type, key) || invalidProps.push(key);
        props = invalidProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        1 === invalidProps.length ? console.error("Invalid aria prop %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props", props, type) : 1 < invalidProps.length && console.error("Invalid aria props %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props", props, type);
    }
    function validateProperty(tagName, name, value, eventRegistry) {
        if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) return !0;
        var lowerCasedName = name.toLowerCase();
        if ("onfocusin" === lowerCasedName || "onfocusout" === lowerCasedName) return console.error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), warnedProperties[name] = !0;
        if ("function" === typeof value && ("form" === tagName && "action" === name || "input" === tagName && "formAction" === name || "button" === tagName && "formAction" === name)) return !0;
        if (null != eventRegistry) {
            tagName = eventRegistry.possibleRegistrationNames;
            if (eventRegistry.registrationNameDependencies.hasOwnProperty(name)) return !0;
            eventRegistry = tagName.hasOwnProperty(lowerCasedName) ? tagName[lowerCasedName] : null;
            if (null != eventRegistry) return console.error("Invalid event handler property `%s`. Did you mean `%s`?", name, eventRegistry), warnedProperties[name] = !0;
            if (EVENT_NAME_REGEX.test(name)) return console.error("Unknown event handler property `%s`. It will be ignored.", name), warnedProperties[name] = !0;
        } else if (EVENT_NAME_REGEX.test(name)) return INVALID_EVENT_NAME_REGEX.test(name) && console.error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name), warnedProperties[name] = !0;
        if (rARIA.test(name) || rARIACamel.test(name)) return !0;
        if ("innerhtml" === lowerCasedName) return console.error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), warnedProperties[name] = !0;
        if ("aria" === lowerCasedName) return console.error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), warnedProperties[name] = !0;
        if ("is" === lowerCasedName && null !== value && void 0 !== value && "string" !== typeof value) return console.error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value), warnedProperties[name] = !0;
        if ("number" === typeof value && isNaN(value)) return console.error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name), warnedProperties[name] = !0;
        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            if (lowerCasedName = possibleStandardNames[lowerCasedName], lowerCasedName !== name) return console.error("Invalid DOM property `%s`. Did you mean `%s`?", name, lowerCasedName), warnedProperties[name] = !0;
        } else if (name !== lowerCasedName) return console.error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName), warnedProperties[name] = !0;
        switch(name){
            case "dangerouslySetInnerHTML":
            case "children":
            case "style":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "ref":
                return !0;
            case "innerText":
            case "textContent":
                return !0;
        }
        switch(typeof value){
            case "boolean":
                switch(name){
                    case "autoFocus":
                    case "checked":
                    case "multiple":
                    case "muted":
                    case "selected":
                    case "contentEditable":
                    case "spellCheck":
                    case "draggable":
                    case "value":
                    case "autoReverse":
                    case "externalResourcesRequired":
                    case "focusable":
                    case "preserveAlpha":
                    case "allowFullScreen":
                    case "async":
                    case "autoPlay":
                    case "controls":
                    case "default":
                    case "defer":
                    case "disabled":
                    case "disablePictureInPicture":
                    case "disableRemotePlayback":
                    case "formNoValidate":
                    case "hidden":
                    case "loop":
                    case "noModule":
                    case "noValidate":
                    case "open":
                    case "playsInline":
                    case "readOnly":
                    case "required":
                    case "reversed":
                    case "scoped":
                    case "seamless":
                    case "itemScope":
                    case "capture":
                    case "download":
                    case "inert":
                        return !0;
                    default:
                        lowerCasedName = name.toLowerCase().slice(0, 5);
                        if ("data-" === lowerCasedName || "aria-" === lowerCasedName) return !0;
                        value ? console.error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name) : console.error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
                        return warnedProperties[name] = !0;
                }
            case "function":
            case "symbol":
                return warnedProperties[name] = !0, !1;
            case "string":
                if ("false" === value || "true" === value) {
                    switch(name){
                        case "checked":
                        case "selected":
                        case "multiple":
                        case "muted":
                        case "allowFullScreen":
                        case "async":
                        case "autoPlay":
                        case "controls":
                        case "default":
                        case "defer":
                        case "disabled":
                        case "disablePictureInPicture":
                        case "disableRemotePlayback":
                        case "formNoValidate":
                        case "hidden":
                        case "loop":
                        case "noModule":
                        case "noValidate":
                        case "open":
                        case "playsInline":
                        case "readOnly":
                        case "required":
                        case "reversed":
                        case "scoped":
                        case "seamless":
                        case "itemScope":
                        case "inert":
                            break;
                        default:
                            return !0;
                    }
                    console.error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, "false" === value ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
                    warnedProperties[name] = !0;
                }
        }
        return !0;
    }
    function warnUnknownProperties(type, props, eventRegistry) {
        var unknownProps = [], key;
        for(key in props)validateProperty(type, key, props[key], eventRegistry) || unknownProps.push(key);
        props = unknownProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        1 === unknownProps.length ? console.error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://react.dev/link/attribute-behavior ", props, type) : 1 < unknownProps.length && console.error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://react.dev/link/attribute-behavior ", props, type);
    }
    function sanitizeURL(url) {
        return isJavaScriptProtocol.test("" + url) ? "javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')" : url;
    }
    function getEventTarget(nativeEvent) {
        nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;
        nativeEvent.correspondingUseElement && (nativeEvent = nativeEvent.correspondingUseElement);
        return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;
    }
    function restoreStateOfTarget(target) {
        var internalInstance = getInstanceFromNode(target);
        if (internalInstance && (target = internalInstance.stateNode)) {
            var props = target[internalPropsKey] || null;
            a: switch(target = internalInstance.stateNode, internalInstance.type){
                case "input":
                    updateInput(target, props.value, props.defaultValue, props.defaultValue, props.checked, props.defaultChecked, props.type, props.name);
                    internalInstance = props.name;
                    if ("radio" === props.type && null != internalInstance) {
                        for(props = target; props.parentNode;)props = props.parentNode;
                        checkAttributeStringCoercion(internalInstance, "name");
                        props = props.querySelectorAll('input[name="' + escapeSelectorAttributeValueInsideDoubleQuotes("" + internalInstance) + '"][type="radio"]');
                        for(internalInstance = 0; internalInstance < props.length; internalInstance++){
                            var otherNode = props[internalInstance];
                            if (otherNode !== target && otherNode.form === target.form) {
                                var otherProps = otherNode[internalPropsKey] || null;
                                if (!otherProps) throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                                updateInput(otherNode, otherProps.value, otherProps.defaultValue, otherProps.defaultValue, otherProps.checked, otherProps.defaultChecked, otherProps.type, otherProps.name);
                            }
                        }
                        for(internalInstance = 0; internalInstance < props.length; internalInstance++)otherNode = props[internalInstance], otherNode.form === target.form && updateValueIfChanged(otherNode);
                    }
                    break a;
                case "textarea":
                    updateTextarea(target, props.value, props.defaultValue);
                    break a;
                case "select":
                    internalInstance = props.value, null != internalInstance && updateOptions(target, !!props.multiple, internalInstance, !1);
            }
        }
    }
    function batchedUpdates$1(fn, a, b) {
        if (isInsideEventHandler) return fn(a, b);
        isInsideEventHandler = !0;
        try {
            var JSCompiler_inline_result = fn(a);
            return JSCompiler_inline_result;
        } finally{
            if (isInsideEventHandler = !1, null !== restoreTarget || null !== restoreQueue) {
                if (flushSyncWork$1(), restoreTarget && (a = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(a), fn)) for(a = 0; a < fn.length; a++)restoreStateOfTarget(fn[a]);
            }
        }
    }
    function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (null === stateNode) return null;
        var props = stateNode[internalPropsKey] || null;
        if (null === props) return null;
        stateNode = props[registrationName];
        a: switch(registrationName){
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
                (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
                inst = !props;
                break a;
            default:
                inst = !1;
        }
        if (inst) return null;
        if (stateNode && "function" !== typeof stateNode) throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof stateNode + "` type.");
        return stateNode;
    }
    function getData() {
        if (fallbackText) return fallbackText;
        var start, startValue = startText, startLength = startValue.length, end, endValue = "value" in root ? root.value : root.textContent, endLength = endValue.length;
        for(start = 0; start < startLength && startValue[start] === endValue[start]; start++);
        var minEnd = startLength - start;
        for(end = 1; end <= minEnd && startValue[startLength - end] === endValue[endLength - end]; end++);
        return fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0);
    }
    function getEventCharCode(nativeEvent) {
        var keyCode = nativeEvent.keyCode;
        "charCode" in nativeEvent ? (nativeEvent = nativeEvent.charCode, 0 === nativeEvent && 13 === keyCode && (nativeEvent = 13)) : nativeEvent = keyCode;
        10 === nativeEvent && (nativeEvent = 13);
        return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;
    }
    function functionThatReturnsTrue() {
        return !0;
    }
    function functionThatReturnsFalse() {
        return !1;
    }
    function createSyntheticEvent(Interface) {
        function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for(var propName in Interface)Interface.hasOwnProperty(propName) && (reactName = Interface[propName], this[propName] = reactName ? reactName(nativeEvent) : nativeEvent[propName]);
            this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
        }
        assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
                this.defaultPrevented = !0;
                var event = this.nativeEvent;
                event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = functionThatReturnsTrue);
            },
            stopPropagation: function() {
                var event = this.nativeEvent;
                event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = functionThatReturnsTrue);
            },
            persist: function() {},
            isPersistent: functionThatReturnsTrue
        });
        return SyntheticBaseEvent;
    }
    function modifierStateGetter(keyArg) {
        var nativeEvent = this.nativeEvent;
        return nativeEvent.getModifierState ? nativeEvent.getModifierState(keyArg) : (keyArg = modifierKeyToProp[keyArg]) ? !!nativeEvent[keyArg] : !1;
    }
    function getEventModifierState() {
        return modifierStateGetter;
    }
    function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch(domEventName){
            case "keyup":
                return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);
            case "keydown":
                return nativeEvent.keyCode !== START_KEYCODE;
            case "keypress":
            case "mousedown":
            case "focusout":
                return !0;
            default:
                return !1;
        }
    }
    function getDataFromCustomEvent(nativeEvent) {
        nativeEvent = nativeEvent.detail;
        return "object" === typeof nativeEvent && "data" in nativeEvent ? nativeEvent.data : null;
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch(domEventName){
            case "compositionend":
                return getDataFromCustomEvent(nativeEvent);
            case "keypress":
                if (nativeEvent.which !== SPACEBAR_CODE) return null;
                hasSpaceKeypress = !0;
                return SPACEBAR_CHAR;
            case "textInput":
                return domEventName = nativeEvent.data, domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName;
            default:
                return null;
        }
    }
    function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        if (isComposing) return "compositionend" === domEventName || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent) ? (domEventName = getData(), fallbackText = startText = root = null, isComposing = !1, domEventName) : null;
        switch(domEventName){
            case "paste":
                return null;
            case "keypress":
                if (!(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) || nativeEvent.ctrlKey && nativeEvent.altKey) {
                    if (nativeEvent.char && 1 < nativeEvent.char.length) return nativeEvent.char;
                    if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
                }
                return null;
            case "compositionend":
                return useFallbackCompositionData && "ko" !== nativeEvent.locale ? null : nativeEvent.data;
            default:
                return null;
        }
    }
    function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return "input" === nodeName ? !!supportedInputTypes[elem.type] : "textarea" === nodeName ? !0 : !1;
    }
    function isEventSupported(eventNameSuffix) {
        if (!canUseDOM) return !1;
        eventNameSuffix = "on" + eventNameSuffix;
        var isSupported = eventNameSuffix in document;
        isSupported || (isSupported = document.createElement("div"), isSupported.setAttribute(eventNameSuffix, "return;"), isSupported = "function" === typeof isSupported[eventNameSuffix]);
        return isSupported;
    }
    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [
            target
        ] : restoreTarget = target;
        inst = accumulateTwoPhaseListeners(inst, "onChange");
        0 < inst.length && (nativeEvent = new SyntheticEvent("onChange", "change", null, nativeEvent, target), dispatchQueue.push({
            event: nativeEvent,
            listeners: inst
        }));
    }
    function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
        if ("change" === domEventName) return targetInst;
    }
    function stopWatchingForValueChange() {
        activeElement$1 && (activeElement$1.detachEvent("onpropertychange", handlePropertyChange), activeElementInst$1 = activeElement$1 = null);
    }
    function handlePropertyChange(nativeEvent) {
        if ("value" === nativeEvent.propertyName && getInstIfValueChanged(activeElementInst$1)) {
            var dispatchQueue = [];
            createAndAccumulateChangeEvent(dispatchQueue, activeElementInst$1, nativeEvent, getEventTarget(nativeEvent));
            batchedUpdates$1(runEventInBatch, dispatchQueue);
        }
    }
    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        "focusin" === domEventName ? (stopWatchingForValueChange(), activeElement$1 = target, activeElementInst$1 = targetInst, activeElement$1.attachEvent("onpropertychange", handlePropertyChange)) : "focusout" === domEventName && stopWatchingForValueChange();
    }
    function getTargetInstForInputEventPolyfill(domEventName) {
        if ("selectionchange" === domEventName || "keyup" === domEventName || "keydown" === domEventName) return getInstIfValueChanged(activeElementInst$1);
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
        if ("click" === domEventName) return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if ("input" === domEventName || "change" === domEventName) return getInstIfValueChanged(targetInst);
    }
    function is(x, y) {
        return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
    }
    function shallowEqual(objA, objB) {
        if (objectIs(objA, objB)) return !0;
        if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return !1;
        var keysA = Object.keys(objA), keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return !1;
        for(keysB = 0; keysB < keysA.length; keysB++){
            var currentKey = keysA[keysB];
            if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) return !1;
        }
        return !0;
    }
    function getLeafNode(node) {
        for(; node && node.firstChild;)node = node.firstChild;
        return node;
    }
    function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        root = 0;
        for(var nodeEnd; node;){
            if (3 === node.nodeType) {
                nodeEnd = root + node.textContent.length;
                if (root <= offset && nodeEnd >= offset) return {
                    node: node,
                    offset: offset - root
                };
                root = nodeEnd;
            }
            a: {
                for(; node;){
                    if (node.nextSibling) {
                        node = node.nextSibling;
                        break a;
                    }
                    node = node.parentNode;
                }
                node = void 0;
            }
            node = getLeafNode(node);
        }
    }
    function containsNode(outerNode, innerNode) {
        return outerNode && innerNode ? outerNode === innerNode ? !0 : outerNode && 3 === outerNode.nodeType ? !1 : innerNode && 3 === innerNode.nodeType ? containsNode(outerNode, innerNode.parentNode) : "contains" in outerNode ? outerNode.contains(innerNode) : outerNode.compareDocumentPosition ? !!(outerNode.compareDocumentPosition(innerNode) & 16) : !1 : !1;
    }
    function getActiveElementDeep(containerInfo) {
        containerInfo = null != containerInfo && null != containerInfo.ownerDocument && null != containerInfo.ownerDocument.defaultView ? containerInfo.ownerDocument.defaultView : window;
        for(var element = getActiveElement(containerInfo.document); element instanceof containerInfo.HTMLIFrameElement;){
            try {
                var JSCompiler_inline_result = "string" === typeof element.contentWindow.location.href;
            } catch (err) {
                JSCompiler_inline_result = !1;
            }
            if (JSCompiler_inline_result) containerInfo = element.contentWindow;
            else break;
            element = getActiveElement(containerInfo.document);
        }
        return element;
    }
    function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && ("input" === nodeName && ("text" === elem.type || "search" === elem.type || "tel" === elem.type || "url" === elem.type || "password" === elem.type) || "textarea" === nodeName || "true" === elem.contentEditable);
    }
    function restoreSelection(priorSelectionInformation, containerInfo) {
        var curFocusedElem = getActiveElementDeep(containerInfo);
        containerInfo = priorSelectionInformation.focusedElem;
        var priorSelectionRange = priorSelectionInformation.selectionRange;
        if (curFocusedElem !== containerInfo && containerInfo && containerInfo.ownerDocument && containsNode(containerInfo.ownerDocument.documentElement, containerInfo)) {
            if (null !== priorSelectionRange && hasSelectionCapabilities(containerInfo)) {
                if (priorSelectionInformation = priorSelectionRange.start, curFocusedElem = priorSelectionRange.end, void 0 === curFocusedElem && (curFocusedElem = priorSelectionInformation), "selectionStart" in containerInfo) containerInfo.selectionStart = priorSelectionInformation, containerInfo.selectionEnd = Math.min(curFocusedElem, containerInfo.value.length);
                else if (curFocusedElem = (priorSelectionInformation = containerInfo.ownerDocument || document) && priorSelectionInformation.defaultView || window, curFocusedElem.getSelection) {
                    curFocusedElem = curFocusedElem.getSelection();
                    var length = containerInfo.textContent.length, start = Math.min(priorSelectionRange.start, length);
                    priorSelectionRange = void 0 === priorSelectionRange.end ? start : Math.min(priorSelectionRange.end, length);
                    !curFocusedElem.extend && start > priorSelectionRange && (length = priorSelectionRange, priorSelectionRange = start, start = length);
                    length = getNodeForCharacterOffset(containerInfo, start);
                    var endMarker = getNodeForCharacterOffset(containerInfo, priorSelectionRange);
                    length && endMarker && (1 !== curFocusedElem.rangeCount || curFocusedElem.anchorNode !== length.node || curFocusedElem.anchorOffset !== length.offset || curFocusedElem.focusNode !== endMarker.node || curFocusedElem.focusOffset !== endMarker.offset) && (priorSelectionInformation = priorSelectionInformation.createRange(), priorSelectionInformation.setStart(length.node, length.offset), curFocusedElem.removeAllRanges(), start > priorSelectionRange ? (curFocusedElem.addRange(priorSelectionInformation), curFocusedElem.extend(endMarker.node, endMarker.offset)) : (priorSelectionInformation.setEnd(endMarker.node, endMarker.offset), curFocusedElem.addRange(priorSelectionInformation)));
                }
            }
            priorSelectionInformation = [];
            for(curFocusedElem = containerInfo; curFocusedElem = curFocusedElem.parentNode;)1 === curFocusedElem.nodeType && priorSelectionInformation.push({
                element: curFocusedElem,
                left: curFocusedElem.scrollLeft,
                top: curFocusedElem.scrollTop
            });
            "function" === typeof containerInfo.focus && containerInfo.focus();
            for(containerInfo = 0; containerInfo < priorSelectionInformation.length; containerInfo++)curFocusedElem = priorSelectionInformation[containerInfo], curFocusedElem.element.scrollLeft = curFocusedElem.left, curFocusedElem.element.scrollTop = curFocusedElem.top;
        }
    }
    function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : 9 === nativeEventTarget.nodeType ? nativeEventTarget : nativeEventTarget.ownerDocument;
        mouseDown || null == activeElement || activeElement !== getActiveElement(doc) || (doc = activeElement, "selectionStart" in doc && hasSelectionCapabilities(doc) ? doc = {
            start: doc.selectionStart,
            end: doc.selectionEnd
        } : (doc = (doc.ownerDocument && doc.ownerDocument.defaultView || window).getSelection(), doc = {
            anchorNode: doc.anchorNode,
            anchorOffset: doc.anchorOffset,
            focusNode: doc.focusNode,
            focusOffset: doc.focusOffset
        }), lastSelection && shallowEqual(lastSelection, doc) || (lastSelection = doc, doc = accumulateTwoPhaseListeners(activeElementInst, "onSelect"), 0 < doc.length && (nativeEvent = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget), dispatchQueue.push({
            event: nativeEvent,
            listeners: doc
        }), nativeEvent.target = activeElement)));
    }
    function makePrefixMap(styleProp, eventName) {
        var prefixes = {};
        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes["Webkit" + styleProp] = "webkit" + eventName;
        prefixes["Moz" + styleProp] = "moz" + eventName;
        return prefixes;
    }
    function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
        if (!vendorPrefixes[eventName]) return eventName;
        var prefixMap = vendorPrefixes[eventName], styleProp;
        for(styleProp in prefixMap)if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) return prefixedEventNames[eventName] = prefixMap[styleProp];
        return eventName;
    }
    function registerSimpleEvent(domEventName, reactName) {
        topLevelEventsToReactNames.set(domEventName, reactName);
        registerTwoPhaseEvent(reactName, [
            domEventName
        ]);
    }
    function finishQueueingConcurrentUpdates() {
        for(var endIndex = concurrentQueuesIndex, i = concurrentlyUpdatedLanes = concurrentQueuesIndex = 0; i < endIndex;){
            var fiber = concurrentQueues[i];
            concurrentQueues[i++] = null;
            var queue = concurrentQueues[i];
            concurrentQueues[i++] = null;
            var update = concurrentQueues[i];
            concurrentQueues[i++] = null;
            var lane = concurrentQueues[i];
            concurrentQueues[i++] = null;
            if (null !== queue && null !== update) {
                var pending = queue.pending;
                null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
                queue.pending = update;
            }
            0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);
        }
    }
    function enqueueUpdate$1(fiber, queue, update, lane) {
        concurrentQueues[concurrentQueuesIndex++] = fiber;
        concurrentQueues[concurrentQueuesIndex++] = queue;
        concurrentQueues[concurrentQueuesIndex++] = update;
        concurrentQueues[concurrentQueuesIndex++] = lane;
        concurrentlyUpdatedLanes |= lane;
        fiber.lanes |= lane;
        fiber = fiber.alternate;
        null !== fiber && (fiber.lanes |= lane);
    }
    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
        enqueueUpdate$1(fiber, queue, update, lane);
        return getRootForUpdatedFiber(fiber);
    }
    function enqueueConcurrentRenderForLane(fiber, lane) {
        enqueueUpdate$1(fiber, null, null, lane);
        return getRootForUpdatedFiber(fiber);
    }
    function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
        sourceFiber.lanes |= lane;
        var alternate = sourceFiber.alternate;
        null !== alternate && (alternate.lanes |= lane);
        for(var isHidden = !1, parent = sourceFiber.return; null !== parent;)parent.childLanes |= lane, alternate = parent.alternate, null !== alternate && (alternate.childLanes |= lane), 22 === parent.tag && (sourceFiber = parent.stateNode, null === sourceFiber || sourceFiber._visibility & OffscreenVisible || (isHidden = !0)), sourceFiber = parent, parent = parent.return;
        isHidden && null !== update && 3 === sourceFiber.tag && (parent = sourceFiber.stateNode, isHidden = 31 - clz32(lane), parent = parent.hiddenUpdates, sourceFiber = parent[isHidden], null === sourceFiber ? parent[isHidden] = [
            update
        ] : sourceFiber.push(update), update.lane = lane | 536870912);
    }
    function getRootForUpdatedFiber(sourceFiber) {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) throw nestedPassiveUpdateCount = nestedUpdateCount = 0, rootWithPassiveNestedUpdates = rootWithNestedUpdates = null, Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT && (nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null, console.error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
        null === sourceFiber.alternate && 0 !== (sourceFiber.flags & 4098) && warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        for(var node = sourceFiber, parent = node.return; null !== parent;)null === node.alternate && 0 !== (node.flags & 4098) && warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber), node = parent, parent = node.return;
        return 3 === node.tag ? node.stateNode : null;
    }
    function resolveFunctionForHotReloading(type) {
        if (null === resolveFamily) return type;
        var family = resolveFamily(type);
        return void 0 === family ? type : family.current;
    }
    function resolveForwardRefForHotReloading(type) {
        if (null === resolveFamily) return type;
        var family = resolveFamily(type);
        return void 0 === family ? null !== type && void 0 !== type && "function" === typeof type.render && (family = resolveFunctionForHotReloading(type.render), type.render !== family) ? (family = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: family
        }, void 0 !== type.displayName && (family.displayName = type.displayName), family) : type : family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
        if (null === resolveFamily) return !1;
        var prevType = fiber.elementType;
        element = element.type;
        var needsCompareFamilies = !1, $$typeofNextType = "object" === typeof element && null !== element ? element.$$typeof : null;
        switch(fiber.tag){
            case 1:
                "function" === typeof element && (needsCompareFamilies = !0);
                break;
            case 0:
                "function" === typeof element ? needsCompareFamilies = !0 : $$typeofNextType === REACT_LAZY_TYPE && (needsCompareFamilies = !0);
                break;
            case 11:
                $$typeofNextType === REACT_FORWARD_REF_TYPE ? needsCompareFamilies = !0 : $$typeofNextType === REACT_LAZY_TYPE && (needsCompareFamilies = !0);
                break;
            case 14:
            case 15:
                $$typeofNextType === REACT_MEMO_TYPE ? needsCompareFamilies = !0 : $$typeofNextType === REACT_LAZY_TYPE && (needsCompareFamilies = !0);
                break;
            default:
                return !1;
        }
        return needsCompareFamilies && (fiber = resolveFamily(prevType), void 0 !== fiber && fiber === resolveFamily(element)) ? !0 : !1;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
        null !== resolveFamily && "function" === typeof WeakSet && (null === failedBoundaries && (failedBoundaries = new WeakSet()), failedBoundaries.add(fiber));
    }
    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type, candidateType = null;
        switch(tag){
            case 0:
            case 15:
            case 1:
                candidateType = type;
                break;
            case 11:
                candidateType = type.render;
        }
        if (null === resolveFamily) throw Error("Expected resolveFamily to be set during hot reload.");
        var needsRender = !1;
        type = !1;
        null !== candidateType && (candidateType = resolveFamily(candidateType), void 0 !== candidateType && (staleFamilies.has(candidateType) ? type = !0 : updatedFamilies.has(candidateType) && (1 === tag ? type = !0 : needsRender = !0)));
        null !== failedBoundaries && (failedBoundaries.has(fiber) || null !== alternate && failedBoundaries.has(alternate)) && (type = !0);
        type && (fiber._debugNeedsRemount = !0);
        if (type || needsRender) alternate = enqueueConcurrentRenderForLane(fiber, 2), null !== alternate && scheduleUpdateOnFiber(alternate, fiber, 2);
        null === child || type || scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        null !== sibling && scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
    function pushNestedEffectDurations() {
        var prevEffectDuration = profilerEffectDuration;
        profilerEffectDuration = 0;
        return prevEffectDuration;
    }
    function popNestedEffectDurations(prevEffectDuration) {
        var elapsedTime = profilerEffectDuration;
        profilerEffectDuration = prevEffectDuration;
        return elapsedTime;
    }
    function bubbleNestedEffectDurations(prevEffectDuration) {
        var elapsedTime = profilerEffectDuration;
        profilerEffectDuration += prevEffectDuration;
        return elapsedTime;
    }
    function startProfilerTimer(fiber) {
        profilerStartTime = now();
        0 > fiber.actualStartTime && (fiber.actualStartTime = profilerStartTime);
    }
    function stopProfilerTimerIfRunningAndRecordDuration(fiber) {
        if (0 <= profilerStartTime) {
            var elapsedTime = now() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            fiber.selfBaseDuration = elapsedTime;
            profilerStartTime = -1;
        }
    }
    function stopProfilerTimerIfRunningAndRecordIncompleteDuration(fiber) {
        if (0 <= profilerStartTime) {
            var elapsedTime = now() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            profilerStartTime = -1;
        }
    }
    function recordEffectDuration() {
        if (0 <= profilerStartTime) {
            var elapsedTime = now() - profilerStartTime;
            profilerStartTime = -1;
            profilerEffectDuration += elapsedTime;
        }
    }
    function startEffectTimer() {
        profilerStartTime = now();
    }
    function transferActualDuration(fiber) {
        for(var child = fiber.child; child;)fiber.actualDuration += child.actualDuration, child = child.sibling;
    }
    function createCapturedValueAtFiber(value, source) {
        if ("object" === typeof value && null !== value) {
            var existing = CapturedStacks.get(value);
            if (void 0 !== existing) return existing;
            source = {
                value: value,
                source: source,
                stack: getStackByFiberInDevAndProd(source)
            };
            CapturedStacks.set(value, source);
            return source;
        }
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source)
        };
    }
    function pushTreeFork(workInProgress, totalChildren) {
        warnIfNotHydrating();
        forkStack[forkStackIndex++] = treeForkCount;
        forkStack[forkStackIndex++] = treeForkProvider;
        treeForkProvider = workInProgress;
        treeForkCount = totalChildren;
    }
    function pushTreeId(workInProgress, totalChildren, index) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextProvider = workInProgress;
        var baseIdWithLeadingBit = treeContextId;
        workInProgress = treeContextOverflow;
        var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;
        baseIdWithLeadingBit &= ~(1 << baseLength);
        index += 1;
        var length = 32 - clz32(totalChildren) + baseLength;
        if (30 < length) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            length = (baseIdWithLeadingBit & (1 << numberOfOverflowBits) - 1).toString(32);
            baseIdWithLeadingBit >>= numberOfOverflowBits;
            baseLength -= numberOfOverflowBits;
            treeContextId = 1 << 32 - clz32(totalChildren) + baseLength | index << baseLength | baseIdWithLeadingBit;
            treeContextOverflow = length + workInProgress;
        } else treeContextId = 1 << length | index << baseLength | baseIdWithLeadingBit, treeContextOverflow = workInProgress;
    }
    function pushMaterializedTreeId(workInProgress) {
        warnIfNotHydrating();
        null !== workInProgress.return && (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));
    }
    function popTreeContext(workInProgress) {
        for(; workInProgress === treeForkProvider;)treeForkProvider = forkStack[--forkStackIndex], forkStack[forkStackIndex] = null, treeForkCount = forkStack[--forkStackIndex], forkStack[forkStackIndex] = null;
        for(; workInProgress === treeContextProvider;)treeContextProvider = idStack[--idStackIndex], idStack[idStackIndex] = null, treeContextOverflow = idStack[--idStackIndex], idStack[idStackIndex] = null, treeContextId = idStack[--idStackIndex], idStack[idStackIndex] = null;
    }
    function warnIfNotHydrating() {
        isHydrating || console.error("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    function buildHydrationDiffNode(fiber, distanceFromLeaf) {
        if (null === fiber.return) {
            if (null === hydrationDiffRootDEV) hydrationDiffRootDEV = {
                fiber: fiber,
                children: [],
                serverProps: void 0,
                serverTail: [],
                distanceFromLeaf: distanceFromLeaf
            };
            else {
                if (hydrationDiffRootDEV.fiber !== fiber) throw Error("Saw multiple hydration diff roots in a pass. This is a bug in React.");
                hydrationDiffRootDEV.distanceFromLeaf > distanceFromLeaf && (hydrationDiffRootDEV.distanceFromLeaf = distanceFromLeaf);
            }
            return hydrationDiffRootDEV;
        }
        var siblings = buildHydrationDiffNode(fiber.return, distanceFromLeaf + 1).children;
        if (0 < siblings.length && siblings[siblings.length - 1].fiber === fiber) return siblings = siblings[siblings.length - 1], siblings.distanceFromLeaf > distanceFromLeaf && (siblings.distanceFromLeaf = distanceFromLeaf), siblings;
        distanceFromLeaf = {
            fiber: fiber,
            children: [],
            serverProps: void 0,
            serverTail: [],
            distanceFromLeaf: distanceFromLeaf
        };
        siblings.push(distanceFromLeaf);
        return distanceFromLeaf;
    }
    function warnNonHydratedInstance(fiber, rejectedCandidate) {
        didSuspendOrErrorDEV || (fiber = buildHydrationDiffNode(fiber, 0), fiber.serverProps = null, null !== rejectedCandidate && (rejectedCandidate = describeHydratableInstanceForDevWarnings(rejectedCandidate), fiber.serverTail.push(rejectedCandidate)));
    }
    function throwOnHydrationMismatch(fiber) {
        var diff = "", diffRoot = hydrationDiffRootDEV;
        null !== diffRoot && (hydrationDiffRootDEV = null, diff = describeDiff(diffRoot));
        queueHydrationError(createCapturedValueAtFiber(Error("Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\nhttps://react.dev/link/hydration-mismatch" + diff), fiber));
        throw HydrationMismatchException;
    }
    function prepareToHydrateHostInstance(fiber) {
        var didHydrate = fiber.stateNode;
        var type = fiber.type, props = fiber.memoizedProps;
        didHydrate[internalInstanceKey] = fiber;
        didHydrate[internalPropsKey] = props;
        validatePropertiesInDevelopment(type, props);
        switch(type){
            case "dialog":
                listenToNonDelegatedEvent("cancel", didHydrate);
                listenToNonDelegatedEvent("close", didHydrate);
                break;
            case "iframe":
            case "object":
            case "embed":
                listenToNonDelegatedEvent("load", didHydrate);
                break;
            case "video":
            case "audio":
                for(type = 0; type < mediaEventTypes.length; type++)listenToNonDelegatedEvent(mediaEventTypes[type], didHydrate);
                break;
            case "source":
                listenToNonDelegatedEvent("error", didHydrate);
                break;
            case "img":
            case "image":
            case "link":
                listenToNonDelegatedEvent("error", didHydrate);
                listenToNonDelegatedEvent("load", didHydrate);
                break;
            case "details":
                listenToNonDelegatedEvent("toggle", didHydrate);
                break;
            case "input":
                checkControlledValueProps("input", props);
                listenToNonDelegatedEvent("invalid", didHydrate);
                validateInputProps(didHydrate, props);
                initInput(didHydrate, props.value, props.defaultValue, props.checked, props.defaultChecked, props.type, props.name, !0);
                track(didHydrate);
                break;
            case "option":
                validateOptionProps(didHydrate, props);
                break;
            case "select":
                checkControlledValueProps("select", props);
                listenToNonDelegatedEvent("invalid", didHydrate);
                validateSelectProps(didHydrate, props);
                break;
            case "textarea":
                checkControlledValueProps("textarea", props), listenToNonDelegatedEvent("invalid", didHydrate), validateTextareaProps(didHydrate, props), initTextarea(didHydrate, props.value, props.defaultValue, props.children), track(didHydrate);
        }
        type = props.children;
        "string" !== typeof type && "number" !== typeof type && "bigint" !== typeof type || didHydrate.textContent === "" + type || !0 === props.suppressHydrationWarning || checkForUnmatchedText(didHydrate.textContent, type) ? (null != props.popover && (listenToNonDelegatedEvent("beforetoggle", didHydrate), listenToNonDelegatedEvent("toggle", didHydrate)), null != props.onScroll && listenToNonDelegatedEvent("scroll", didHydrate), null != props.onScrollEnd && listenToNonDelegatedEvent("scrollend", didHydrate), null != props.onClick && (didHydrate.onclick = noop$1), didHydrate = !0) : didHydrate = !1;
        didHydrate || throwOnHydrationMismatch(fiber);
    }
    function popToNextHostParent(fiber) {
        for(hydrationParentFiber = fiber.return; hydrationParentFiber;)switch(hydrationParentFiber.tag){
            case 3:
            case 27:
                rootOrSingletonContext = !0;
                return;
            case 5:
            case 13:
                rootOrSingletonContext = !1;
                return;
            default:
                hydrationParentFiber = hydrationParentFiber.return;
        }
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) return !1;
        if (!isHydrating) return popToNextHostParent(fiber), isHydrating = !0, !1;
        var shouldClear = !1, JSCompiler_temp;
        if (JSCompiler_temp = 3 !== fiber.tag && 27 !== fiber.tag) {
            if (JSCompiler_temp = 5 === fiber.tag) JSCompiler_temp = fiber.type, JSCompiler_temp = !("form" !== JSCompiler_temp && "button" !== JSCompiler_temp) || shouldSetTextContent(fiber.type, fiber.memoizedProps);
            JSCompiler_temp = !JSCompiler_temp;
        }
        JSCompiler_temp && (shouldClear = !0);
        if (shouldClear && nextHydratableInstance) {
            for(shouldClear = nextHydratableInstance; shouldClear;){
                JSCompiler_temp = buildHydrationDiffNode(fiber, 0);
                var description = describeHydratableInstanceForDevWarnings(shouldClear);
                JSCompiler_temp.serverTail.push(description);
                shouldClear = "Suspense" === description.type ? getNextHydratableInstanceAfterSuspenseInstance(shouldClear) : getNextHydratable(shouldClear.nextSibling);
            }
            throwOnHydrationMismatch(fiber);
        }
        popToNextHostParent(fiber);
        if (13 === fiber.tag) {
            fiber = fiber.memoizedState;
            fiber = null !== fiber ? fiber.dehydrated : null;
            if (!fiber) throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
            nextHydratableInstance = getNextHydratableInstanceAfterSuspenseInstance(fiber);
        } else nextHydratableInstance = hydrationParentFiber ? getNextHydratable(fiber.stateNode.nextSibling) : null;
        return !0;
    }
    function resetHydrationState() {
        nextHydratableInstance = hydrationParentFiber = null;
        didSuspendOrErrorDEV = isHydrating = !1;
    }
    function queueHydrationError(error) {
        null === hydrationErrors ? hydrationErrors = [
            error
        ] : hydrationErrors.push(error);
    }
    function emitPendingHydrationWarnings() {
        var diffRoot = hydrationDiffRootDEV;
        null !== diffRoot && (hydrationDiffRootDEV = null, diffRoot = describeDiff(diffRoot), console.error("A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s", "https://react.dev/link/hydration-mismatch", diffRoot));
    }
    function createThenableState() {
        return {
            didWarnAboutUncachedPromise: !1,
            thenables: []
        };
    }
    function isThenableResolved(thenable) {
        thenable = thenable.status;
        return "fulfilled" === thenable || "rejected" === thenable;
    }
    function noop$3() {}
    function trackUsedThenable(thenableState, thenable, index) {
        null !== ReactSharedInternals.actQueue && (ReactSharedInternals.didUsePromise = !0);
        var trackedThenables = thenableState.thenables;
        index = trackedThenables[index];
        void 0 === index ? trackedThenables.push(thenable) : index !== thenable && (thenableState.didWarnAboutUncachedPromise || (thenableState.didWarnAboutUncachedPromise = !0, console.error("A component was suspended by an uncached promise. Creating promises inside a Client Component or hook is not yet supported, except via a Suspense-compatible library or framework.")), thenable.then(noop$3, noop$3), thenable = index);
        switch(thenable.status){
            case "fulfilled":
                return thenable.value;
            case "rejected":
                throw thenableState = thenable.reason, checkIfUseWrappedInAsyncCatch(thenableState), thenableState;
            default:
                if ("string" === typeof thenable.status) thenable.then(noop$3, noop$3);
                else {
                    thenableState = workInProgressRoot;
                    if (null !== thenableState && 100 < thenableState.shellSuspendCounter) throw Error("async/await is not yet supported in Client Components, only Server Components. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.");
                    thenableState = thenable;
                    thenableState.status = "pending";
                    thenableState.then(function(fulfilledValue) {
                        if ("pending" === thenable.status) {
                            var fulfilledThenable = thenable;
                            fulfilledThenable.status = "fulfilled";
                            fulfilledThenable.value = fulfilledValue;
                        }
                    }, function(error) {
                        if ("pending" === thenable.status) {
                            var rejectedThenable = thenable;
                            rejectedThenable.status = "rejected";
                            rejectedThenable.reason = error;
                        }
                    });
                }
                switch(thenable.status){
                    case "fulfilled":
                        return thenable.value;
                    case "rejected":
                        throw thenableState = thenable.reason, checkIfUseWrappedInAsyncCatch(thenableState), thenableState;
                }
                suspendedThenable = thenable;
                needsToResetSuspendedThenableDEV = !0;
                throw SuspenseException;
        }
    }
    function getSuspendedThenable() {
        if (null === suspendedThenable) throw Error("Expected a suspended thenable. This is a bug in React. Please file an issue.");
        var thenable = suspendedThenable;
        suspendedThenable = null;
        needsToResetSuspendedThenableDEV = !1;
        return thenable;
    }
    function checkIfUseWrappedInAsyncCatch(rejectedReason) {
        if (rejectedReason === SuspenseException) throw Error("Hooks are not supported inside an async component. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.");
    }
    function pushDebugInfo(debugInfo) {
        var previousDebugInfo = currentDebugInfo;
        null != debugInfo && (currentDebugInfo = null === previousDebugInfo ? debugInfo : previousDebugInfo.concat(debugInfo));
        return previousDebugInfo;
    }
    function validateFragmentProps(element, fiber, returnFiber) {
        for(var keys = Object.keys(element.props), i = 0; i < keys.length; i++){
            var key = keys[i];
            if ("children" !== key && "key" !== key) {
                null === fiber && (fiber = createFiberFromElement(element, returnFiber.mode, 0), fiber._debugInfo = currentDebugInfo, fiber.return = returnFiber);
                runWithFiberInDEV(fiber, function(erroredKey) {
                    console.error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", erroredKey);
                }, key);
                break;
            }
        }
    }
    function unwrapThenable(thenable) {
        var index = thenableIndexCounter$1;
        thenableIndexCounter$1 += 1;
        null === thenableState$1 && (thenableState$1 = createThenableState());
        return trackUsedThenable(thenableState$1, thenable, index);
    }
    function coerceRef(workInProgress, element) {
        element = element.props.ref;
        workInProgress.ref = void 0 !== element ? element : null;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE) throw Error('A React Element from an older version of React was rendered. This is not supported. It can happen if:\n- Multiple copies of the "react" package is used.\n- A library pre-bundled an old copy of "react" or "react/jsx-runtime".\n- A compiler tries to "inline" JSX instead of using the runtime.');
        returnFiber = Object.prototype.toString.call(newChild);
        throw Error("Objects are not valid as a React child (found: " + ("[object Object]" === returnFiber ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : returnFiber) + "). If you meant to render a collection of children, use an array instead.");
    }
    function warnOnFunctionType(returnFiber, invalidChild) {
        var parentName = getComponentNameFromFiber(returnFiber) || "Component";
        ownerHasFunctionTypeWarning[parentName] || (ownerHasFunctionTypeWarning[parentName] = !0, invalidChild = invalidChild.displayName || invalidChild.name || "Component", 3 === returnFiber.tag ? console.error("Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\n  root.render(%s)", invalidChild, invalidChild, invalidChild) : console.error("Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\n  <%s>{%s}</%s>", invalidChild, invalidChild, parentName, invalidChild, parentName));
    }
    function warnOnSymbolType(returnFiber, invalidChild) {
        var parentName = getComponentNameFromFiber(returnFiber) || "Component";
        ownerHasSymbolTypeWarning[parentName] || (ownerHasSymbolTypeWarning[parentName] = !0, invalidChild = String(invalidChild), 3 === returnFiber.tag ? console.error("Symbols are not valid as a React child.\n  root.render(%s)", invalidChild) : console.error("Symbols are not valid as a React child.\n  <%s>%s</%s>", parentName, invalidChild, parentName));
    }
    function createChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (shouldTrackSideEffects) {
                var deletions = returnFiber.deletions;
                null === deletions ? (returnFiber.deletions = [
                    childToDelete
                ], returnFiber.flags |= 16) : deletions.push(childToDelete);
            }
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) return null;
            for(; null !== currentFirstChild;)deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
            return null;
        }
        function mapRemainingChildren(currentFirstChild) {
            for(var existingChildren = new Map(); null !== currentFirstChild;)null !== currentFirstChild.key ? existingChildren.set(currentFirstChild.key, currentFirstChild) : existingChildren.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
            return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
            fiber = createWorkInProgress(fiber, pendingProps);
            fiber.index = 0;
            fiber.sibling = null;
            return fiber;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) return newFiber.flags |= 1048576, lastPlacedIndex;
            newIndex = newFiber.alternate;
            if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.flags |= 33554434, lastPlacedIndex) : newIndex;
            newFiber.flags |= 33554434;
            return lastPlacedIndex;
        }
        function placeSingleChild(newFiber) {
            shouldTrackSideEffects && null === newFiber.alternate && (newFiber.flags |= 33554434);
            return newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, lanes) {
            if (null === current || 6 !== current.tag) return current = createFiberFromText(textContent, returnFiber.mode, lanes), current.return = returnFiber, current._debugOwner = returnFiber, current._debugInfo = currentDebugInfo, current;
            current = useFiber(current, textContent);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function updateElement(returnFiber, current, element, lanes) {
            var elementType = element.type;
            if (elementType === REACT_FRAGMENT_TYPE) return current = updateFragment(returnFiber, current, element.props.children, lanes, element.key), validateFragmentProps(element, current, returnFiber), current;
            if (null !== current && (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || "object" === typeof elementType && null !== elementType && elementType.$$typeof === REACT_LAZY_TYPE && callLazyInitInDEV(elementType) === current.type)) return current = useFiber(current, element.props), coerceRef(current, element), current.return = returnFiber, current._debugOwner = element._owner, current._debugInfo = currentDebugInfo, current;
            current = createFiberFromElement(element, returnFiber.mode, lanes);
            coerceRef(current, element);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function updatePortal(returnFiber, current, portal, lanes) {
            if (null === current || 4 !== current.tag || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) return current = createFiberFromPortal(portal, returnFiber.mode, lanes), current.return = returnFiber, current._debugInfo = currentDebugInfo, current;
            current = useFiber(current, portal.children || []);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function updateFragment(returnFiber, current, fragment, lanes, key) {
            if (null === current || 7 !== current.tag) return current = createFiberFromFragment(fragment, returnFiber.mode, lanes, key), current.return = returnFiber, current._debugOwner = returnFiber, current._debugInfo = currentDebugInfo, current;
            current = useFiber(current, fragment);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function createChild(returnFiber, newChild, lanes) {
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, lanes), newChild.return = returnFiber, newChild._debugOwner = returnFiber, newChild._debugInfo = currentDebugInfo, newChild;
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return lanes = createFiberFromElement(newChild, returnFiber.mode, lanes), coerceRef(lanes, newChild), lanes.return = returnFiber, returnFiber = pushDebugInfo(newChild._debugInfo), lanes._debugInfo = currentDebugInfo, currentDebugInfo = returnFiber, lanes;
                    case REACT_PORTAL_TYPE:
                        return newChild = createFiberFromPortal(newChild, returnFiber.mode, lanes), newChild.return = returnFiber, newChild._debugInfo = currentDebugInfo, newChild;
                    case REACT_LAZY_TYPE:
                        var _prevDebugInfo = pushDebugInfo(newChild._debugInfo);
                        newChild = callLazyInitInDEV(newChild);
                        returnFiber = createChild(returnFiber, newChild, lanes);
                        currentDebugInfo = _prevDebugInfo;
                        return returnFiber;
                }
                if (isArrayImpl(newChild) || getIteratorFn(newChild)) return lanes = createFiberFromFragment(newChild, returnFiber.mode, lanes, null), lanes.return = returnFiber, lanes._debugOwner = returnFiber, returnFiber = pushDebugInfo(newChild._debugInfo), lanes._debugInfo = currentDebugInfo, currentDebugInfo = returnFiber, lanes;
                if ("function" === typeof newChild.then) return _prevDebugInfo = pushDebugInfo(newChild._debugInfo), returnFiber = createChild(returnFiber, unwrapThenable(newChild), lanes), currentDebugInfo = _prevDebugInfo, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return createChild(returnFiber, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            var key = null !== oldFiber ? oldFiber.key : null;
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return newChild.key === key ? (key = pushDebugInfo(newChild._debugInfo), returnFiber = updateElement(returnFiber, oldFiber, newChild, lanes), currentDebugInfo = key, returnFiber) : null;
                    case REACT_PORTAL_TYPE:
                        return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, lanes) : null;
                    case REACT_LAZY_TYPE:
                        return key = pushDebugInfo(newChild._debugInfo), newChild = callLazyInitInDEV(newChild), returnFiber = updateSlot(returnFiber, oldFiber, newChild, lanes), currentDebugInfo = key, returnFiber;
                }
                if (isArrayImpl(newChild) || getIteratorFn(newChild)) {
                    if (null !== key) return null;
                    key = pushDebugInfo(newChild._debugInfo);
                    returnFiber = updateFragment(returnFiber, oldFiber, newChild, lanes, null);
                    currentDebugInfo = key;
                    return returnFiber;
                }
                if ("function" === typeof newChild.then) return key = pushDebugInfo(newChild._debugInfo), returnFiber = updateSlot(returnFiber, oldFiber, unwrapThenable(newChild), lanes), currentDebugInfo = key, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return updateSlot(returnFiber, oldFiber, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, lanes);
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return newIdx = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, existingChildren = pushDebugInfo(newChild._debugInfo), returnFiber = updateElement(returnFiber, newIdx, newChild, lanes), currentDebugInfo = existingChildren, returnFiber;
                    case REACT_PORTAL_TYPE:
                        return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, lanes);
                    case REACT_LAZY_TYPE:
                        var _prevDebugInfo7 = pushDebugInfo(newChild._debugInfo);
                        newChild = callLazyInitInDEV(newChild);
                        returnFiber = updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes);
                        currentDebugInfo = _prevDebugInfo7;
                        return returnFiber;
                }
                if (isArrayImpl(newChild) || getIteratorFn(newChild)) return newIdx = existingChildren.get(newIdx) || null, existingChildren = pushDebugInfo(newChild._debugInfo), returnFiber = updateFragment(returnFiber, newIdx, newChild, lanes, null), currentDebugInfo = existingChildren, returnFiber;
                if ("function" === typeof newChild.then) return _prevDebugInfo7 = pushDebugInfo(newChild._debugInfo), returnFiber = updateFromMap(existingChildren, returnFiber, newIdx, unwrapThenable(newChild), lanes), currentDebugInfo = _prevDebugInfo7, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return updateFromMap(existingChildren, returnFiber, newIdx, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return null;
        }
        function warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys) {
            if ("object" !== typeof child || null === child) return knownKeys;
            switch(child.$$typeof){
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                    warnForMissingKey(returnFiber, workInProgress, child);
                    var key = child.key;
                    if ("string" !== typeof key) break;
                    if (null === knownKeys) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    runWithFiberInDEV(workInProgress, function() {
                        console.error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                    });
                    break;
                case REACT_LAZY_TYPE:
                    child = callLazyInitInDEV(child), warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys);
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            for(var knownKeys = null, resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++){
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }
                knownKeys = warnOnInvalidKey(returnFiber, newFiber, newChildren[newIdx], knownKeys);
                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
                currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
                null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), isHydrating && pushTreeFork(returnFiber, newIdx), resultingFirstChild;
            if (null === oldFiber) {
                for(; newIdx < newChildren.length; newIdx++)oldFiber = createChild(returnFiber, newChildren[newIdx], lanes), null !== oldFiber && (knownKeys = warnOnInvalidKey(returnFiber, oldFiber, newChildren[newIdx], knownKeys), currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
                isHydrating && pushTreeFork(returnFiber, newIdx);
                return resultingFirstChild;
            }
            for(oldFiber = mapRemainingChildren(oldFiber); newIdx < newChildren.length; newIdx++)nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], lanes), null !== nextOldFiber && (knownKeys = warnOnInvalidKey(returnFiber, nextOldFiber, newChildren[newIdx], knownKeys), shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
            shouldTrackSideEffects && oldFiber.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            isHydrating && pushTreeFork(returnFiber, newIdx);
            return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildren, lanes) {
            if (null == newChildren) throw Error("An iterable object provided no iterator.");
            for(var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, knownKeys = null, step = newChildren.next(); null !== oldFiber && !step.done; newIdx++, step = newChildren.next()){
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }
                knownKeys = warnOnInvalidKey(returnFiber, newFiber, step.value, knownKeys);
                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
                currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
                null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), isHydrating && pushTreeFork(returnFiber, newIdx), resultingFirstChild;
            if (null === oldFiber) {
                for(; !step.done; newIdx++, step = newChildren.next())oldFiber = createChild(returnFiber, step.value, lanes), null !== oldFiber && (knownKeys = warnOnInvalidKey(returnFiber, oldFiber, step.value, knownKeys), currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
                isHydrating && pushTreeFork(returnFiber, newIdx);
                return resultingFirstChild;
            }
            for(oldFiber = mapRemainingChildren(oldFiber); !step.done; newIdx++, step = newChildren.next())nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes), null !== nextOldFiber && (knownKeys = warnOnInvalidKey(returnFiber, nextOldFiber, step.value, knownKeys), shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
            shouldTrackSideEffects && oldFiber.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            isHydrating && pushTreeFork(returnFiber, newIdx);
            return resultingFirstChild;
        }
        function reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes) {
            "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key && (validateFragmentProps(newChild, null, returnFiber), newChild = newChild.props.children);
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var prevDebugInfo = pushDebugInfo(newChild._debugInfo);
                        a: {
                            for(var key = newChild.key; null !== currentFirstChild;){
                                if (currentFirstChild.key === key) {
                                    key = newChild.type;
                                    if (key === REACT_FRAGMENT_TYPE) {
                                        if (7 === currentFirstChild.tag) {
                                            deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                            lanes = useFiber(currentFirstChild, newChild.props.children);
                                            lanes.return = returnFiber;
                                            lanes._debugOwner = newChild._owner;
                                            lanes._debugInfo = currentDebugInfo;
                                            validateFragmentProps(newChild, lanes, returnFiber);
                                            returnFiber = lanes;
                                            break a;
                                        }
                                    } else if (currentFirstChild.elementType === key || isCompatibleFamilyForHotReloading(currentFirstChild, newChild) || "object" === typeof key && null !== key && key.$$typeof === REACT_LAZY_TYPE && callLazyInitInDEV(key) === currentFirstChild.type) {
                                        deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                        lanes = useFiber(currentFirstChild, newChild.props);
                                        coerceRef(lanes, newChild);
                                        lanes.return = returnFiber;
                                        lanes._debugOwner = newChild._owner;
                                        lanes._debugInfo = currentDebugInfo;
                                        returnFiber = lanes;
                                        break a;
                                    }
                                    deleteRemainingChildren(returnFiber, currentFirstChild);
                                    break;
                                } else deleteChild(returnFiber, currentFirstChild);
                                currentFirstChild = currentFirstChild.sibling;
                            }
                            newChild.type === REACT_FRAGMENT_TYPE ? (lanes = createFiberFromFragment(newChild.props.children, returnFiber.mode, lanes, newChild.key), lanes.return = returnFiber, lanes._debugOwner = returnFiber, lanes._debugInfo = currentDebugInfo, validateFragmentProps(newChild, lanes, returnFiber), returnFiber = lanes) : (lanes = createFiberFromElement(newChild, returnFiber.mode, lanes), coerceRef(lanes, newChild), lanes.return = returnFiber, lanes._debugInfo = currentDebugInfo, returnFiber = lanes);
                        }
                        returnFiber = placeSingleChild(returnFiber);
                        currentDebugInfo = prevDebugInfo;
                        return returnFiber;
                    case REACT_PORTAL_TYPE:
                        a: {
                            prevDebugInfo = newChild;
                            for(newChild = prevDebugInfo.key; null !== currentFirstChild;){
                                if (currentFirstChild.key === newChild) {
                                    if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === prevDebugInfo.containerInfo && currentFirstChild.stateNode.implementation === prevDebugInfo.implementation) {
                                        deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                        lanes = useFiber(currentFirstChild, prevDebugInfo.children || []);
                                        lanes.return = returnFiber;
                                        returnFiber = lanes;
                                        break a;
                                    } else {
                                        deleteRemainingChildren(returnFiber, currentFirstChild);
                                        break;
                                    }
                                } else deleteChild(returnFiber, currentFirstChild);
                                currentFirstChild = currentFirstChild.sibling;
                            }
                            lanes = createFiberFromPortal(prevDebugInfo, returnFiber.mode, lanes);
                            lanes.return = returnFiber;
                            returnFiber = lanes;
                        }
                        return placeSingleChild(returnFiber);
                    case REACT_LAZY_TYPE:
                        return prevDebugInfo = pushDebugInfo(newChild._debugInfo), newChild = callLazyInitInDEV(newChild), returnFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes), currentDebugInfo = prevDebugInfo, returnFiber;
                }
                if (isArrayImpl(newChild)) return prevDebugInfo = pushDebugInfo(newChild._debugInfo), returnFiber = reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes), currentDebugInfo = prevDebugInfo, returnFiber;
                if (getIteratorFn(newChild)) {
                    prevDebugInfo = pushDebugInfo(newChild._debugInfo);
                    key = getIteratorFn(newChild);
                    if ("function" !== typeof key) throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
                    var newChildren = key.call(newChild);
                    if (newChildren === newChild) {
                        if (0 !== returnFiber.tag || "[object GeneratorFunction]" !== Object.prototype.toString.call(returnFiber.type) || "[object Generator]" !== Object.prototype.toString.call(newChildren)) didWarnAboutGenerators || console.error("Using Iterators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. You can also use an Iterable that can iterate multiple times over the same items."), didWarnAboutGenerators = !0;
                    } else newChild.entries !== key || didWarnAboutMaps || (console.error("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0);
                    returnFiber = reconcileChildrenIterator(returnFiber, currentFirstChild, newChildren, lanes);
                    currentDebugInfo = prevDebugInfo;
                    return returnFiber;
                }
                if ("function" === typeof newChild.then) return prevDebugInfo = pushDebugInfo(newChild._debugInfo), returnFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, unwrapThenable(newChild), lanes), currentDebugInfo = prevDebugInfo, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return reconcileChildFibersImpl(returnFiber, currentFirstChild, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return prevDebugInfo = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), lanes = useFiber(currentFirstChild, prevDebugInfo), lanes.return = returnFiber, returnFiber = lanes) : (deleteRemainingChildren(returnFiber, currentFirstChild), lanes = createFiberFromText(prevDebugInfo, returnFiber.mode, lanes), lanes.return = returnFiber, lanes._debugOwner = returnFiber, lanes._debugInfo = currentDebugInfo, returnFiber = lanes), placeSingleChild(returnFiber);
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return function(returnFiber, currentFirstChild, newChild, lanes) {
            var prevDebugInfo = currentDebugInfo;
            currentDebugInfo = null;
            try {
                thenableIndexCounter$1 = 0;
                var firstChildFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes);
                thenableState$1 = null;
                return firstChildFiber;
            } catch (x) {
                if (x === SuspenseException) throw x;
                var fiber = createFiber(29, x, null, returnFiber.mode);
                fiber.lanes = lanes;
                fiber.return = returnFiber;
                var debugInfo = fiber._debugInfo = currentDebugInfo;
                fiber._debugOwner = returnFiber._debugOwner;
                if (null != debugInfo) {
                    for(var i = debugInfo.length - 1; 0 <= i; i--)if ("string" === typeof debugInfo[i].stack) {
                        fiber._debugOwner = debugInfo[i];
                        break;
                    }
                }
                return fiber;
            } finally{
                currentDebugInfo = prevDebugInfo;
            }
        };
    }
    function pushHiddenContext(fiber, context) {
        var prevEntangledRenderLanes = entangledRenderLanes;
        push(prevEntangledRenderLanesCursor, prevEntangledRenderLanes, fiber);
        push(currentTreeHiddenStackCursor, context, fiber);
        entangledRenderLanes = prevEntangledRenderLanes | context.baseLanes;
    }
    function reuseHiddenContextOnStack(fiber) {
        push(prevEntangledRenderLanesCursor, entangledRenderLanes, fiber);
        push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current, fiber);
    }
    function popHiddenContext(fiber) {
        entangledRenderLanes = prevEntangledRenderLanesCursor.current;
        pop(currentTreeHiddenStackCursor, fiber);
        pop(prevEntangledRenderLanesCursor, fiber);
    }
    function pushPrimaryTreeSuspenseHandler(handler) {
        var current = handler.alternate;
        push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, handler);
        push(suspenseHandlerStackCursor, handler, handler);
        null === shellBoundary && (null === current || null !== currentTreeHiddenStackCursor.current ? shellBoundary = handler : null !== current.memoizedState && (shellBoundary = handler));
    }
    function pushOffscreenSuspenseHandler(fiber) {
        if (22 === fiber.tag) {
            if (push(suspenseStackCursor, suspenseStackCursor.current, fiber), push(suspenseHandlerStackCursor, fiber, fiber), null === shellBoundary) {
                var current = fiber.alternate;
                null !== current && null !== current.memoizedState && (shellBoundary = fiber);
            }
        } else reuseSuspenseHandlerOnStack(fiber);
    }
    function reuseSuspenseHandlerOnStack(fiber) {
        push(suspenseStackCursor, suspenseStackCursor.current, fiber);
        push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current, fiber);
    }
    function popSuspenseHandler(fiber) {
        pop(suspenseHandlerStackCursor, fiber);
        shellBoundary === fiber && (shellBoundary = null);
        pop(suspenseStackCursor, fiber);
    }
    function findFirstSuspended(row) {
        for(var node = row; null !== node;){
            if (13 === node.tag) {
                var state = node.memoizedState;
                if (null !== state && (state = state.dehydrated, null === state || state.data === SUSPENSE_PENDING_START_DATA || state.data === SUSPENSE_FALLBACK_START_DATA)) return node;
            } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {
                if (0 !== (node.flags & 128)) return node;
            } else if (null !== node.child) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === row) break;
            for(; null === node.sibling;){
                if (null === node.return || node.return === row) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return null;
    }
    function createCache() {
        return {
            controller: new AbortControllerLocal(),
            data: new Map(),
            refCount: 0
        };
    }
    function retainCache(cache) {
        cache.controller.signal.aborted && console.warn("A cache instance was retained after it was already freed. This likely indicates a bug in React.");
        cache.refCount++;
    }
    function releaseCache(cache) {
        cache.refCount--;
        0 > cache.refCount && console.warn("A cache instance was released after it was already freed. This likely indicates a bug in React.");
        0 === cache.refCount && scheduleCallback$2(NormalPriority, function() {
            cache.controller.abort();
        });
    }
    function entangleAsyncAction(transition, thenable) {
        if (null === currentEntangledListeners) {
            var entangledListeners = currentEntangledListeners = [];
            currentEntangledPendingCount = 0;
            currentEntangledLane = requestTransitionLane();
            currentEntangledActionThenable = {
                status: "pending",
                value: void 0,
                then: function(resolve) {
                    entangledListeners.push(resolve);
                }
            };
        }
        currentEntangledPendingCount++;
        thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);
        return thenable;
    }
    function pingEngtangledActionScope() {
        if (0 === --currentEntangledPendingCount && null !== currentEntangledListeners) {
            null !== currentEntangledActionThenable && (currentEntangledActionThenable.status = "fulfilled");
            var listeners = currentEntangledListeners;
            currentEntangledListeners = null;
            currentEntangledLane = 0;
            currentEntangledActionThenable = null;
            for(var i = 0; i < listeners.length; i++)(0, listeners[i])();
        }
    }
    function chainThenableValue(thenable, result) {
        var listeners = [], thenableWithOverride = {
            status: "pending",
            value: null,
            reason: null,
            then: function(resolve) {
                listeners.push(resolve);
            }
        };
        thenable.then(function() {
            thenableWithOverride.status = "fulfilled";
            thenableWithOverride.value = result;
            for(var i = 0; i < listeners.length; i++)(0, listeners[i])(result);
        }, function(error) {
            thenableWithOverride.status = "rejected";
            thenableWithOverride.reason = error;
            for(error = 0; error < listeners.length; error++)(0, listeners[error])(void 0);
        });
        return thenableWithOverride;
    }
    function peekCacheFromPool() {
        var cacheResumedFromPreviousRender = resumedCache.current;
        return null !== cacheResumedFromPreviousRender ? cacheResumedFromPreviousRender : workInProgressRoot.pooledCache;
    }
    function pushTransition(offscreenWorkInProgress, prevCachePool) {
        null === prevCachePool ? push(resumedCache, resumedCache.current, offscreenWorkInProgress) : push(resumedCache, prevCachePool.pool, offscreenWorkInProgress);
    }
    function getSuspendedCache() {
        var cacheFromPool = peekCacheFromPool();
        return null === cacheFromPool ? null : {
            parent: CacheContext._currentValue,
            pool: cacheFromPool
        };
    }
    function mountHookTypesDev() {
        var hookName = currentHookNameInDev;
        null === hookTypesDev ? hookTypesDev = [
            hookName
        ] : hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (null !== hookTypesDev && (hookTypesUpdateIndexDev++, hookTypesDev[hookTypesUpdateIndexDev] !== hookName)) {
            var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
            if (!didWarnAboutMismatchedHooksForComponent.has(componentName) && (didWarnAboutMismatchedHooksForComponent.add(componentName), null !== hookTypesDev)) {
                for(var table = "", i = 0; i <= hookTypesUpdateIndexDev; i++){
                    var oldHookName = hookTypesDev[i], newHookName = i === hookTypesUpdateIndexDev ? hookName : oldHookName;
                    for(oldHookName = i + 1 + ". " + oldHookName; 30 > oldHookName.length;)oldHookName += " ";
                    oldHookName += newHookName + "\n";
                    table += oldHookName;
                }
                console.error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
            }
        }
    }
    function checkDepsAreArrayDev(deps) {
        void 0 === deps || null === deps || isArrayImpl(deps) || console.error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
    }
    function warnOnUseFormStateInDev() {
        var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
        didWarnAboutUseFormState.has(componentName) || (didWarnAboutUseFormState.add(componentName), console.error("ReactDOM.useFormState has been renamed to React.useActionState. Please update %s to use React.useActionState.", componentName));
    }
    function throwInvalidHookError() {
        throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies) return !1;
        if (null === prevDeps) return console.error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev), !1;
        nextDeps.length !== prevDeps.length && console.error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
        for(var i = 0; i < prevDeps.length && i < nextDeps.length; i++)if (!objectIs(nextDeps[i], prevDeps[i])) return !1;
        return !0;
    }
    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
        renderLanes = nextRenderLanes;
        currentlyRenderingFiber$1 = workInProgress;
        hookTypesDev = null !== current ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1;
        ignorePreviousDependencies = null !== current && current.type !== workInProgress.type;
        if ("[object AsyncFunction]" === Object.prototype.toString.call(Component) || "[object AsyncGeneratorFunction]" === Object.prototype.toString.call(Component)) nextRenderLanes = getComponentNameFromFiber(currentlyRenderingFiber$1), didWarnAboutAsyncClientComponent.has(nextRenderLanes) || (didWarnAboutAsyncClientComponent.add(nextRenderLanes), console.error("async/await is not yet supported in Client Components, only Server Components. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server."));
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.lanes = 0;
        ReactSharedInternals.H = null !== current && null !== current.memoizedState ? HooksDispatcherOnUpdateInDEV : null !== hookTypesDev ? HooksDispatcherOnMountWithHookTypesInDEV : HooksDispatcherOnMountInDEV;
        shouldDoubleInvokeUserFnsInHooksDEV = nextRenderLanes = (workInProgress.mode & StrictLegacyMode) !== NoMode;
        var children = callComponentInDEV(Component, props, secondArg);
        shouldDoubleInvokeUserFnsInHooksDEV = !1;
        didScheduleRenderPhaseUpdateDuringThisPass && (children = renderWithHooksAgain(workInProgress, Component, props, secondArg));
        if (nextRenderLanes) {
            setIsStrictModeForDevtools(!0);
            try {
                children = renderWithHooksAgain(workInProgress, Component, props, secondArg);
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        finishRenderingHooks(current, workInProgress);
        return children;
    }
    function finishRenderingHooks(current, workInProgress) {
        workInProgress._debugHookTypes = hookTypesDev;
        null === workInProgress.dependencies ? null !== thenableState && (workInProgress.dependencies = {
            lanes: 0,
            firstContext: null,
            _debugThenableState: thenableState
        }) : workInProgress.dependencies._debugThenableState = thenableState;
        ReactSharedInternals.H = ContextOnlyDispatcher;
        var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;
        renderLanes = 0;
        hookTypesDev = currentHookNameInDev = workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;
        hookTypesUpdateIndexDev = -1;
        null !== current && (current.flags & 31457280) !== (workInProgress.flags & 31457280) && console.error("Internal React error: Expected static flag was missing. Please notify the React team.");
        didScheduleRenderPhaseUpdate = !1;
        thenableIndexCounter = 0;
        thenableState = null;
        if (didRenderTooFewHooks) throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        null === current || didReceiveUpdate || (current = current.dependencies, null !== current && checkIfContextChanged(current) && (didReceiveUpdate = !0));
        needsToResetSuspendedThenableDEV ? (needsToResetSuspendedThenableDEV = !1, current = !0) : current = !1;
        current && (workInProgress = getComponentNameFromFiber(workInProgress) || "Unknown", didWarnAboutUseWrappedInTryCatch.has(workInProgress) || didWarnAboutAsyncClientComponent.has(workInProgress) || (didWarnAboutUseWrappedInTryCatch.add(workInProgress), console.error("`use` was called from inside a try/catch block. This is not allowed and can lead to unexpected behavior. To handle errors triggered by `use`, wrap your component in a error boundary.")));
    }
    function renderWithHooksAgain(workInProgress, Component, props, secondArg) {
        currentlyRenderingFiber$1 = workInProgress;
        var numberOfReRenders = 0;
        do {
            didScheduleRenderPhaseUpdateDuringThisPass && (thenableState = null);
            thenableIndexCounter = 0;
            didScheduleRenderPhaseUpdateDuringThisPass = !1;
            if (numberOfReRenders >= RE_RENDER_LIMIT) throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
            numberOfReRenders += 1;
            ignorePreviousDependencies = !1;
            workInProgressHook = currentHook = null;
            if (null != workInProgress.updateQueue) {
                var children = workInProgress.updateQueue;
                children.lastEffect = null;
                children.events = null;
                children.stores = null;
                null != children.memoCache && (children.memoCache.index = 0);
            }
            hookTypesUpdateIndexDev = -1;
            ReactSharedInternals.H = HooksDispatcherOnRerenderInDEV;
            children = callComponentInDEV(Component, props, secondArg);
        }while (didScheduleRenderPhaseUpdateDuringThisPass);
        return children;
    }
    function TransitionAwareHostComponent() {
        var dispatcher = ReactSharedInternals.H, maybeThenable = dispatcher.useState()[0];
        maybeThenable = "function" === typeof maybeThenable.then ? useThenable(maybeThenable) : maybeThenable;
        dispatcher = dispatcher.useState()[0];
        (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher && (currentlyRenderingFiber$1.flags |= 1024);
        return maybeThenable;
    }
    function checkDidRenderIdHook() {
        var didRenderIdHook = 0 !== localIdCounter;
        localIdCounter = 0;
        return didRenderIdHook;
    }
    function bailoutHooks(current, workInProgress, lanes) {
        workInProgress.updateQueue = current.updateQueue;
        workInProgress.flags = (workInProgress.mode & StrictEffectsMode) !== NoMode ? workInProgress.flags & -201328645 : workInProgress.flags & -2053;
        current.lanes &= ~lanes;
    }
    function resetHooksOnUnwind(workInProgress) {
        if (didScheduleRenderPhaseUpdate) {
            for(workInProgress = workInProgress.memoizedState; null !== workInProgress;){
                var queue = workInProgress.queue;
                null !== queue && (queue.pending = null);
                workInProgress = workInProgress.next;
            }
            didScheduleRenderPhaseUpdate = !1;
        }
        renderLanes = 0;
        hookTypesDev = workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        didScheduleRenderPhaseUpdateDuringThisPass = !1;
        thenableIndexCounter = localIdCounter = 0;
        thenableState = null;
    }
    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        null === workInProgressHook ? currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }
    function updateWorkInProgressHook() {
        if (null === currentHook) {
            var nextCurrentHook = currentlyRenderingFiber$1.alternate;
            nextCurrentHook = null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;
        } else nextCurrentHook = currentHook.next;
        var nextWorkInProgressHook = null === workInProgressHook ? currentlyRenderingFiber$1.memoizedState : workInProgressHook.next;
        if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, currentHook = nextCurrentHook;
        else {
            if (null === nextCurrentHook) {
                if (null === currentlyRenderingFiber$1.alternate) throw Error("Update hook called on initial render. This is likely a bug in React. Please file an issue.");
                throw Error("Rendered more hooks than during the previous render.");
            }
            currentHook = nextCurrentHook;
            nextCurrentHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                baseQueue: currentHook.baseQueue,
                queue: currentHook.queue,
                next: null
            };
            null === workInProgressHook ? currentlyRenderingFiber$1.memoizedState = workInProgressHook = nextCurrentHook : workInProgressHook = workInProgressHook.next = nextCurrentHook;
        }
        return workInProgressHook;
    }
    function useThenable(thenable) {
        var index = thenableIndexCounter;
        thenableIndexCounter += 1;
        null === thenableState && (thenableState = createThenableState());
        thenable = trackUsedThenable(thenableState, thenable, index);
        index = currentlyRenderingFiber$1;
        null === (null === workInProgressHook ? index.memoizedState : workInProgressHook.next) && (index = index.alternate, ReactSharedInternals.H = null !== index && null !== index.memoizedState ? HooksDispatcherOnUpdateInDEV : HooksDispatcherOnMountInDEV);
        return thenable;
    }
    function use(usable) {
        if (null !== usable && "object" === typeof usable) {
            if ("function" === typeof usable.then) return useThenable(usable);
            if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);
        }
        throw Error("An unsupported type was passed to use(): " + String(usable));
    }
    function useMemoCache(size) {
        var memoCache = null, updateQueue = currentlyRenderingFiber$1.updateQueue;
        null !== updateQueue && (memoCache = updateQueue.memoCache);
        if (null == memoCache) {
            var current = currentlyRenderingFiber$1.alternate;
            null !== current && (current = current.updateQueue, null !== current && (current = current.memoCache, null != current && (memoCache = {
                data: current.data.map(function(array) {
                    return array.slice();
                }),
                index: 0
            })));
        }
        null == memoCache && (memoCache = {
            data: [],
            index: 0
        });
        null === updateQueue && (updateQueue = createFunctionComponentUpdateQueue(), currentlyRenderingFiber$1.updateQueue = updateQueue);
        updateQueue.memoCache = memoCache;
        updateQueue = memoCache.data[memoCache.index];
        if (void 0 === updateQueue || ignorePreviousDependencies) for(updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0; current < size; current++)updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;
        else updateQueue.length !== size && console.error("Expected a constant size argument for each invocation of useMemoCache. The previous cache was allocated with size %s but size %s was requested.", updateQueue.length, size);
        memoCache.index++;
        return updateQueue;
    }
    function basicStateReducer(state, action) {
        return "function" === typeof action ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook();
        if (void 0 !== init) {
            var initialState = init(initialArg);
            if (shouldDoubleInvokeUserFnsInHooksDEV) {
                setIsStrictModeForDevtools(!0);
                try {
                    init(initialArg);
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
        } else initialState = initialArg;
        hook.memoizedState = hook.baseState = initialState;
        reducer = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
        };
        hook.queue = reducer;
        reducer = reducer.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, reducer);
        return [
            hook.memoizedState,
            reducer
        ];
    }
    function updateReducer(reducer) {
        var hook = updateWorkInProgressHook();
        return updateReducerImpl(hook, currentHook, reducer);
    }
    function updateReducerImpl(hook, current, reducer) {
        var queue = hook.queue;
        if (null === queue) throw Error("Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)");
        queue.lastRenderedReducer = reducer;
        var baseQueue = hook.baseQueue, pendingQueue = queue.pending;
        if (null !== pendingQueue) {
            if (null !== baseQueue) {
                var baseFirst = baseQueue.next;
                baseQueue.next = pendingQueue.next;
                pendingQueue.next = baseFirst;
            }
            current.baseQueue !== baseQueue && console.error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
            current.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
        }
        pendingQueue = hook.baseState;
        if (null === baseQueue) hook.memoizedState = pendingQueue;
        else {
            current = baseQueue.next;
            var newBaseQueueFirst = baseFirst = null, newBaseQueueLast = null, update = current, didReadFromEntangledAsyncAction = !1;
            do {
                var updateLane = update.lane & -536870913;
                if (updateLane !== update.lane ? (workInProgressRootRenderLanes & updateLane) === updateLane : (renderLanes & updateLane) === updateLane) {
                    var revertLane = update.revertLane;
                    if (0 === revertLane) null !== newBaseQueueLast && (newBaseQueueLast = newBaseQueueLast.next = {
                        lane: 0,
                        revertLane: 0,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    }), updateLane === currentEntangledLane && (didReadFromEntangledAsyncAction = !0);
                    else if ((renderLanes & revertLane) === revertLane) {
                        update = update.next;
                        revertLane === currentEntangledLane && (didReadFromEntangledAsyncAction = !0);
                        continue;
                    } else updateLane = {
                        lane: 0,
                        revertLane: update.revertLane,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    }, null === newBaseQueueLast ? (newBaseQueueFirst = newBaseQueueLast = updateLane, baseFirst = pendingQueue) : newBaseQueueLast = newBaseQueueLast.next = updateLane, currentlyRenderingFiber$1.lanes |= revertLane, workInProgressRootSkippedLanes |= revertLane;
                    updateLane = update.action;
                    shouldDoubleInvokeUserFnsInHooksDEV && reducer(pendingQueue, updateLane);
                    pendingQueue = update.hasEagerState ? update.eagerState : reducer(pendingQueue, updateLane);
                } else revertLane = {
                    lane: updateLane,
                    revertLane: update.revertLane,
                    action: update.action,
                    hasEagerState: update.hasEagerState,
                    eagerState: update.eagerState,
                    next: null
                }, null === newBaseQueueLast ? (newBaseQueueFirst = newBaseQueueLast = revertLane, baseFirst = pendingQueue) : newBaseQueueLast = newBaseQueueLast.next = revertLane, currentlyRenderingFiber$1.lanes |= updateLane, workInProgressRootSkippedLanes |= updateLane;
                update = update.next;
            }while (null !== update && update !== current);
            null === newBaseQueueLast ? baseFirst = pendingQueue : newBaseQueueLast.next = newBaseQueueFirst;
            if (!objectIs(pendingQueue, hook.memoizedState) && (didReceiveUpdate = !0, didReadFromEntangledAsyncAction && (reducer = currentEntangledActionThenable, null !== reducer))) throw reducer;
            hook.memoizedState = pendingQueue;
            hook.baseState = baseFirst;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = pendingQueue;
        }
        null === baseQueue && (queue.lanes = 0);
        return [
            hook.memoizedState,
            queue.dispatch
        ];
    }
    function rerenderReducer(reducer) {
        var hook = updateWorkInProgressHook(), queue = hook.queue;
        if (null === queue) throw Error("Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)");
        queue.lastRenderedReducer = reducer;
        var dispatch = queue.dispatch, lastRenderPhaseUpdate = queue.pending, newState = hook.memoizedState;
        if (null !== lastRenderPhaseUpdate) {
            queue.pending = null;
            var update = lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            do newState = reducer(newState, update.action), update = update.next;
            while (update !== lastRenderPhaseUpdate);
            objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);
            hook.memoizedState = newState;
            null === hook.baseQueue && (hook.baseState = newState);
            queue.lastRenderedState = newState;
        }
        return [
            newState,
            dispatch
        ];
    }
    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1, hook = mountWorkInProgressHook();
        if (isHydrating) {
            if (void 0 === getServerSnapshot) throw Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            var nextSnapshot = getServerSnapshot();
            didWarnUncachedGetSnapshot || nextSnapshot === getServerSnapshot() || (console.error("The result of getServerSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0);
        } else {
            nextSnapshot = getSnapshot();
            didWarnUncachedGetSnapshot || (getServerSnapshot = getSnapshot(), objectIs(nextSnapshot, getServerSnapshot) || (console.error("The result of getSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0));
            if (null === workInProgressRoot) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            0 !== (workInProgressRootRenderLanes & 60) || pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        }
        hook.memoizedState = nextSnapshot;
        getServerSnapshot = {
            value: nextSnapshot,
            getSnapshot: getSnapshot
        };
        hook.queue = getServerSnapshot;
        mountEffect(subscribeToStore.bind(null, fiber, getServerSnapshot, subscribe), [
            subscribe
        ]);
        fiber.flags |= 2048;
        pushEffect(HasEffect | Passive, updateStoreInstance.bind(null, fiber, getServerSnapshot, nextSnapshot, getSnapshot), {
            destroy: void 0
        }, null);
        return nextSnapshot;
    }
    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1, hook = updateWorkInProgressHook(), isHydrating$jscomp$0 = isHydrating;
        if (isHydrating$jscomp$0) {
            if (void 0 === getServerSnapshot) throw Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            getServerSnapshot = getServerSnapshot();
        } else if (getServerSnapshot = getSnapshot(), !didWarnUncachedGetSnapshot) {
            var cachedSnapshot = getSnapshot();
            objectIs(getServerSnapshot, cachedSnapshot) || (console.error("The result of getSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0);
        }
        if (cachedSnapshot = !objectIs((currentHook || hook).memoizedState, getServerSnapshot)) hook.memoizedState = getServerSnapshot, didReceiveUpdate = !0;
        hook = hook.queue;
        var create = subscribeToStore.bind(null, fiber, hook, subscribe);
        updateEffectImpl(2048, Passive, create, [
            subscribe
        ]);
        if (hook.getSnapshot !== getSnapshot || cachedSnapshot || null !== workInProgressHook && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= 2048;
            pushEffect(HasEffect | Passive, updateStoreInstance.bind(null, fiber, hook, getServerSnapshot, getSnapshot), {
                destroy: void 0
            }, null);
            if (null === workInProgressRoot) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            isHydrating$jscomp$0 || 0 !== (renderLanes & 60) || pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
        }
        return getServerSnapshot;
    }
    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
        fiber.flags |= 16384;
        fiber = {
            getSnapshot: getSnapshot,
            value: renderedSnapshot
        };
        getSnapshot = currentlyRenderingFiber$1.updateQueue;
        null === getSnapshot ? (getSnapshot = createFunctionComponentUpdateQueue(), currentlyRenderingFiber$1.updateQueue = getSnapshot, getSnapshot.stores = [
            fiber
        ]) : (renderedSnapshot = getSnapshot.stores, null === renderedSnapshot ? getSnapshot.stores = [
            fiber
        ] : renderedSnapshot.push(fiber));
    }
    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
        inst.value = nextSnapshot;
        inst.getSnapshot = getSnapshot;
        checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
    }
    function subscribeToStore(fiber, inst, subscribe) {
        return subscribe(function() {
            checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
        });
    }
    function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        inst = inst.value;
        try {
            var nextValue = latestGetSnapshot();
            return !objectIs(inst, nextValue);
        } catch (error) {
            return !0;
        }
    }
    function forceStoreRerender(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, 2);
        null !== root && scheduleUpdateOnFiber(root, fiber, 2);
    }
    function mountStateImpl(initialState) {
        var hook = mountWorkInProgressHook();
        if ("function" === typeof initialState) {
            var initialStateInitializer = initialState;
            initialState = initialStateInitializer();
            if (shouldDoubleInvokeUserFnsInHooksDEV) {
                setIsStrictModeForDevtools(!0);
                try {
                    initialStateInitializer();
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
        }
        hook.memoizedState = hook.baseState = initialState;
        hook.queue = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
        };
        return hook;
    }
    function mountState(initialState) {
        initialState = mountStateImpl(initialState);
        var queue = initialState.queue, dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
        queue.dispatch = dispatch;
        return [
            initialState.memoizedState,
            dispatch
        ];
    }
    function mountOptimistic(passthrough) {
        var hook = mountWorkInProgressHook();
        hook.memoizedState = hook.baseState = passthrough;
        var queue = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: null,
            lastRenderedState: null
        };
        hook.queue = queue;
        hook = dispatchOptimisticSetState.bind(null, currentlyRenderingFiber$1, !0, queue);
        queue.dispatch = hook;
        return [
            passthrough,
            hook
        ];
    }
    function updateOptimistic(passthrough, reducer) {
        var hook = updateWorkInProgressHook();
        return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
    }
    function updateOptimisticImpl(hook, current, passthrough, reducer) {
        hook.baseState = passthrough;
        return updateReducerImpl(hook, currentHook, "function" === typeof reducer ? reducer : basicStateReducer);
    }
    function rerenderOptimistic(passthrough, reducer) {
        var hook = updateWorkInProgressHook();
        if (null !== currentHook) return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
        hook.baseState = passthrough;
        return [
            passthrough,
            hook.queue.dispatch
        ];
    }
    function dispatchActionState(fiber, actionQueue, setPendingState, setState, payload) {
        if (isRenderPhaseUpdate(fiber)) throw Error("Cannot update form state while rendering.");
        fiber = actionQueue.action;
        if (null !== fiber) {
            var actionNode = {
                payload: payload,
                action: fiber,
                next: null,
                isTransition: !0,
                status: "pending",
                value: null,
                reason: null,
                listeners: [],
                then: function(listener) {
                    actionNode.listeners.push(listener);
                }
            };
            null !== ReactSharedInternals.T ? setPendingState(!0) : actionNode.isTransition = !1;
            setState(actionNode);
            setPendingState = actionQueue.pending;
            null === setPendingState ? (actionNode.next = actionQueue.pending = actionNode, runActionStateAction(actionQueue, actionNode)) : (actionNode.next = setPendingState.next, actionQueue.pending = setPendingState.next = actionNode);
        }
    }
    function runActionStateAction(actionQueue, node) {
        var action = node.action, payload = node.payload, prevState = actionQueue.state;
        if (node.isTransition) {
            var prevTransition = ReactSharedInternals.T, currentTransition = {};
            ReactSharedInternals.T = currentTransition;
            ReactSharedInternals.T._updatedFibers = new Set();
            try {
                var returnValue = action(prevState, payload), onStartTransitionFinish = ReactSharedInternals.S;
                null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
                handleActionReturnValue(actionQueue, node, returnValue);
            } catch (error) {
                onActionError(actionQueue, node, error);
            } finally{
                ReactSharedInternals.T = prevTransition, null === prevTransition && currentTransition._updatedFibers && (actionQueue = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < actionQueue && console.warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."));
            }
        } else try {
            currentTransition = action(prevState, payload), handleActionReturnValue(actionQueue, node, currentTransition);
        } catch (error$3) {
            onActionError(actionQueue, node, error$3);
        }
    }
    function handleActionReturnValue(actionQueue, node, returnValue) {
        null !== returnValue && "object" === typeof returnValue && "function" === typeof returnValue.then ? (returnValue.then(function(nextState) {
            onActionSuccess(actionQueue, node, nextState);
        }, function(error) {
            return onActionError(actionQueue, node, error);
        }), node.isTransition || console.error("An async function was passed to useActionState, but it was dispatched outside of an action context. This is likely not what you intended. Either pass the dispatch function to an `action` prop, or dispatch manually inside `startTransition`")) : onActionSuccess(actionQueue, node, returnValue);
    }
    function onActionSuccess(actionQueue, actionNode, nextState) {
        actionNode.status = "fulfilled";
        actionNode.value = nextState;
        notifyActionListeners(actionNode);
        actionQueue.state = nextState;
        actionNode = actionQueue.pending;
        null !== actionNode && (nextState = actionNode.next, nextState === actionNode ? actionQueue.pending = null : (nextState = nextState.next, actionNode.next = nextState, runActionStateAction(actionQueue, nextState)));
    }
    function onActionError(actionQueue, actionNode, error) {
        var last = actionQueue.pending;
        actionQueue.pending = null;
        if (null !== last) {
            last = last.next;
            do actionNode.status = "rejected", actionNode.reason = error, notifyActionListeners(actionNode), actionNode = actionNode.next;
            while (actionNode !== last);
        }
        actionQueue.action = null;
    }
    function notifyActionListeners(actionNode) {
        actionNode = actionNode.listeners;
        for(var i = 0; i < actionNode.length; i++)(0, actionNode[i])();
    }
    function actionStateReducer(oldState, newState) {
        return newState;
    }
    function mountActionState(action, initialStateProp) {
        if (isHydrating) {
            var ssrFormState = workInProgressRoot.formState;
            if (null !== ssrFormState) {
                a: {
                    var isMatching = currentlyRenderingFiber$1;
                    if (isHydrating) {
                        if (nextHydratableInstance) {
                            b: {
                                var markerInstance = nextHydratableInstance;
                                for(var inRootOrSingleton = rootOrSingletonContext; 8 !== markerInstance.nodeType;){
                                    if (!inRootOrSingleton) {
                                        markerInstance = null;
                                        break b;
                                    }
                                    markerInstance = getNextHydratable(markerInstance.nextSibling);
                                    if (null === markerInstance) {
                                        markerInstance = null;
                                        break b;
                                    }
                                }
                                inRootOrSingleton = markerInstance.data;
                                markerInstance = inRootOrSingleton === FORM_STATE_IS_MATCHING || inRootOrSingleton === FORM_STATE_IS_NOT_MATCHING ? markerInstance : null;
                            }
                            if (markerInstance) {
                                nextHydratableInstance = getNextHydratable(markerInstance.nextSibling);
                                isMatching = markerInstance.data === FORM_STATE_IS_MATCHING;
                                break a;
                            }
                        }
                        throwOnHydrationMismatch(isMatching);
                    }
                    isMatching = !1;
                }
                isMatching && (initialStateProp = ssrFormState[0]);
            }
        }
        ssrFormState = mountWorkInProgressHook();
        ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;
        isMatching = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: actionStateReducer,
            lastRenderedState: initialStateProp
        };
        ssrFormState.queue = isMatching;
        ssrFormState = dispatchSetState.bind(null, currentlyRenderingFiber$1, isMatching);
        isMatching.dispatch = ssrFormState;
        isMatching = mountStateImpl(!1);
        inRootOrSingleton = dispatchOptimisticSetState.bind(null, currentlyRenderingFiber$1, !1, isMatching.queue);
        isMatching = mountWorkInProgressHook();
        markerInstance = {
            state: initialStateProp,
            dispatch: null,
            action: action,
            pending: null
        };
        isMatching.queue = markerInstance;
        ssrFormState = dispatchActionState.bind(null, currentlyRenderingFiber$1, markerInstance, inRootOrSingleton, ssrFormState);
        markerInstance.dispatch = ssrFormState;
        isMatching.memoizedState = action;
        return [
            initialStateProp,
            ssrFormState,
            !1
        ];
    }
    function updateActionState(action) {
        var stateHook = updateWorkInProgressHook();
        return updateActionStateImpl(stateHook, currentHook, action);
    }
    function updateActionStateImpl(stateHook, currentStateHook, action) {
        currentStateHook = updateReducerImpl(stateHook, currentStateHook, actionStateReducer)[0];
        stateHook = updateReducer(basicStateReducer)[0];
        currentStateHook = "object" === typeof currentStateHook && null !== currentStateHook && "function" === typeof currentStateHook.then ? useThenable(currentStateHook) : currentStateHook;
        var actionQueueHook = updateWorkInProgressHook(), actionQueue = actionQueueHook.queue, dispatch = actionQueue.dispatch;
        action !== actionQueueHook.memoizedState && (currentlyRenderingFiber$1.flags |= 2048, pushEffect(HasEffect | Passive, actionStateActionEffect.bind(null, actionQueue, action), {
            destroy: void 0
        }, null));
        return [
            currentStateHook,
            dispatch,
            stateHook
        ];
    }
    function actionStateActionEffect(actionQueue, action) {
        actionQueue.action = action;
    }
    function rerenderActionState(action) {
        var stateHook = updateWorkInProgressHook(), currentStateHook = currentHook;
        if (null !== currentStateHook) return updateActionStateImpl(stateHook, currentStateHook, action);
        updateWorkInProgressHook();
        stateHook = stateHook.memoizedState;
        currentStateHook = updateWorkInProgressHook();
        var dispatch = currentStateHook.queue.dispatch;
        currentStateHook.memoizedState = action;
        return [
            stateHook,
            dispatch,
            !1
        ];
    }
    function pushEffect(tag, create, inst, deps) {
        tag = {
            tag: tag,
            create: create,
            inst: inst,
            deps: deps,
            next: null
        };
        create = currentlyRenderingFiber$1.updateQueue;
        null === create && (create = createFunctionComponentUpdateQueue(), currentlyRenderingFiber$1.updateQueue = create);
        inst = create.lastEffect;
        null === inst ? create.lastEffect = tag.next = tag : (deps = inst.next, inst.next = tag, tag.next = deps, create.lastEffect = tag);
        return tag;
    }
    function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        initialValue = {
            current: initialValue
        };
        return hook.memoizedState = initialValue;
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = mountWorkInProgressHook();
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, {
            destroy: void 0
        }, void 0 === deps ? null : deps);
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var inst = hook.memoizedState.inst;
        null !== currentHook && null !== deps && areHookInputsEqual(deps, currentHook.memoizedState.deps) ? hook.memoizedState = pushEffect(hookFlags, create, inst, deps) : (currentlyRenderingFiber$1.flags |= fiberFlags, hook.memoizedState = pushEffect(HasEffect | hookFlags, create, inst, deps));
    }
    function mountEffect(create, deps) {
        (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode && (currentlyRenderingFiber$1.mode & NoStrictPassiveEffectsMode) === NoMode ? mountEffectImpl(142608384, Passive, create, deps) : mountEffectImpl(8390656, Passive, create, deps);
    }
    function mountLayoutEffect(create, deps) {
        var fiberFlags = 4194308;
        (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode && (fiberFlags |= 67108864);
        return mountEffectImpl(fiberFlags, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
        if ("function" === typeof ref) {
            create = create();
            var refCleanup = ref(create);
            return function() {
                "function" === typeof refCleanup ? refCleanup() : ref(null);
            };
        }
        if (null !== ref && void 0 !== ref) return ref.hasOwnProperty("current") || console.error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(ref).join(", ") + "}"), create = create(), ref.current = create, function() {
            ref.current = null;
        };
    }
    function mountImperativeHandle(ref, create, deps) {
        "function" !== typeof create && console.error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", null !== create ? typeof create : "null");
        deps = null !== deps && void 0 !== deps ? deps.concat([
            ref
        ]) : null;
        var fiberFlags = 4194308;
        (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode && (fiberFlags |= 67108864);
        mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), deps);
    }
    function updateImperativeHandle(ref, create, deps) {
        "function" !== typeof create && console.error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", null !== create ? typeof create : "null");
        deps = null !== deps && void 0 !== deps ? deps.concat([
            ref
        ]) : null;
        updateEffectImpl(4, Layout, imperativeHandleEffect.bind(null, create, ref), deps);
    }
    function mountCallback(callback, deps) {
        mountWorkInProgressHook().memoizedState = [
            callback,
            void 0 === deps ? null : deps
        ];
        return callback;
    }
    function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var prevState = hook.memoizedState;
        if (null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
        hook.memoizedState = [
            callback,
            deps
        ];
        return callback;
    }
    function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var nextValue = nextCreate();
        if (shouldDoubleInvokeUserFnsInHooksDEV) {
            setIsStrictModeForDevtools(!0);
            try {
                nextCreate();
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        hook.memoizedState = [
            nextValue,
            deps
        ];
        return nextValue;
    }
    function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var prevState = hook.memoizedState;
        if (null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
        prevState = nextCreate();
        if (shouldDoubleInvokeUserFnsInHooksDEV) {
            setIsStrictModeForDevtools(!0);
            try {
                nextCreate();
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        hook.memoizedState = [
            prevState,
            deps
        ];
        return prevState;
    }
    function mountDeferredValue(value, initialValue) {
        var hook = mountWorkInProgressHook();
        return mountDeferredValueImpl(hook, value, initialValue);
    }
    function updateDeferredValue(value, initialValue) {
        var hook = updateWorkInProgressHook();
        return updateDeferredValueImpl(hook, currentHook.memoizedState, value, initialValue);
    }
    function rerenderDeferredValue(value, initialValue) {
        var hook = updateWorkInProgressHook();
        return null === currentHook ? mountDeferredValueImpl(hook, value, initialValue) : updateDeferredValueImpl(hook, currentHook.memoizedState, value, initialValue);
    }
    function mountDeferredValueImpl(hook, value, initialValue) {
        if (void 0 === initialValue || 0 !== (renderLanes & 1073741824)) return hook.memoizedState = value;
        hook.memoizedState = initialValue;
        hook = requestDeferredLane();
        currentlyRenderingFiber$1.lanes |= hook;
        workInProgressRootSkippedLanes |= hook;
        return initialValue;
    }
    function updateDeferredValueImpl(hook, prevValue, value, initialValue) {
        if (objectIs(value, prevValue)) return value;
        if (null !== currentTreeHiddenStackCursor.current) return hook = mountDeferredValueImpl(hook, value, initialValue), objectIs(hook, prevValue) || (didReceiveUpdate = !0), hook;
        if (0 === (renderLanes & 42)) return didReceiveUpdate = !0, hook.memoizedState = value;
        hook = requestDeferredLane();
        currentlyRenderingFiber$1.lanes |= hook;
        workInProgressRootSkippedLanes |= hook;
        return prevValue;
    }
    function startTransition(fiber, queue, pendingState, finishedState, callback) {
        var previousPriority = ReactDOMSharedInternals.p;
        ReactDOMSharedInternals.p = 0 !== previousPriority && previousPriority < ContinuousEventPriority ? previousPriority : ContinuousEventPriority;
        var prevTransition = ReactSharedInternals.T, currentTransition = {};
        ReactSharedInternals.T = currentTransition;
        dispatchOptimisticSetState(fiber, !1, queue, pendingState);
        currentTransition._updatedFibers = new Set();
        try {
            var returnValue = callback(), onStartTransitionFinish = ReactSharedInternals.S;
            null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
            if (null !== returnValue && "object" === typeof returnValue && "function" === typeof returnValue.then) {
                var thenableForFinishedState = chainThenableValue(returnValue, finishedState);
                dispatchSetStateInternal(fiber, queue, thenableForFinishedState, requestUpdateLane(fiber));
            } else dispatchSetStateInternal(fiber, queue, finishedState, requestUpdateLane(fiber));
        } catch (error) {
            dispatchSetStateInternal(fiber, queue, {
                then: function() {},
                status: "rejected",
                reason: error
            }, requestUpdateLane(fiber));
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = prevTransition, null === prevTransition && currentTransition._updatedFibers && (fiber = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < fiber && console.warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."));
        }
    }
    function startHostTransition(formFiber, pendingState, action, formData) {
        if (5 !== formFiber.tag) throw Error("Expected the form instance to be a HostComponent. This is a bug in React.");
        var queue = ensureFormComponentIsStateful(formFiber).queue;
        startTransition(formFiber, queue, pendingState, NotPendingTransition, null === action ? noop$2 : function() {
            requestFormReset$1(formFiber);
            return action(formData);
        });
    }
    function ensureFormComponentIsStateful(formFiber) {
        var existingStateHook = formFiber.memoizedState;
        if (null !== existingStateHook) return existingStateHook;
        existingStateHook = {
            memoizedState: NotPendingTransition,
            baseState: NotPendingTransition,
            baseQueue: null,
            queue: {
                pending: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: basicStateReducer,
                lastRenderedState: NotPendingTransition
            },
            next: null
        };
        var initialResetState = {};
        existingStateHook.next = {
            memoizedState: initialResetState,
            baseState: initialResetState,
            baseQueue: null,
            queue: {
                pending: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: basicStateReducer,
                lastRenderedState: initialResetState
            },
            next: null
        };
        formFiber.memoizedState = existingStateHook;
        formFiber = formFiber.alternate;
        null !== formFiber && (formFiber.memoizedState = existingStateHook);
        return existingStateHook;
    }
    function requestFormReset$1(formFiber) {
        null === ReactSharedInternals.T && console.error("requestFormReset was called outside a transition or action. To fix, move to an action, or wrap with startTransition.");
        var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;
        dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane(formFiber));
    }
    function mountTransition() {
        var stateHook = mountStateImpl(!1);
        stateHook = startTransition.bind(null, currentlyRenderingFiber$1, stateHook.queue, !0, !1);
        mountWorkInProgressHook().memoizedState = stateHook;
        return [
            !1,
            stateHook
        ];
    }
    function updateTransition() {
        var booleanOrThenable = updateReducer(basicStateReducer)[0], start = updateWorkInProgressHook().memoizedState;
        return [
            "boolean" === typeof booleanOrThenable ? booleanOrThenable : useThenable(booleanOrThenable),
            start
        ];
    }
    function rerenderTransition() {
        var booleanOrThenable = rerenderReducer(basicStateReducer)[0], start = updateWorkInProgressHook().memoizedState;
        return [
            "boolean" === typeof booleanOrThenable ? booleanOrThenable : useThenable(booleanOrThenable),
            start
        ];
    }
    function useHostTransitionStatus() {
        return readContext(HostTransitionContext);
    }
    function mountId() {
        var hook = mountWorkInProgressHook(), identifierPrefix = workInProgressRoot.identifierPrefix;
        if (isHydrating) {
            var treeId = treeContextOverflow;
            var idWithLeadingBit = treeContextId;
            treeId = (idWithLeadingBit & ~(1 << 32 - clz32(idWithLeadingBit) - 1)).toString(32) + treeId;
            identifierPrefix = ":" + identifierPrefix + "R" + treeId;
            treeId = localIdCounter++;
            0 < treeId && (identifierPrefix += "H" + treeId.toString(32));
            identifierPrefix += ":";
        } else treeId = globalClientIdCounter++, identifierPrefix = ":" + identifierPrefix + "r" + treeId.toString(32) + ":";
        return hook.memoizedState = identifierPrefix;
    }
    function mountRefresh() {
        return mountWorkInProgressHook().memoizedState = refreshCache.bind(null, currentlyRenderingFiber$1);
    }
    function refreshCache(fiber, seedKey) {
        for(var provider = fiber.return; null !== provider;){
            switch(provider.tag){
                case 24:
                case 3:
                    var lane = requestUpdateLane(provider);
                    fiber = createUpdate(lane);
                    var root = enqueueUpdate(provider, fiber, lane);
                    null !== root && (scheduleUpdateOnFiber(root, provider, lane), entangleTransitions(root, provider, lane));
                    provider = createCache();
                    null !== seedKey && void 0 !== seedKey && null !== root && console.error("The seed argument is not enabled outside experimental channels.");
                    fiber.payload = {
                        cache: provider
                    };
                    return;
            }
            provider = provider.return;
        }
    }
    function dispatchReducerAction(fiber, queue, action, JSCompiler_OptimizeArgumentsArray_p0) {
        "function" === typeof JSCompiler_OptimizeArgumentsArray_p0 && console.error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        JSCompiler_OptimizeArgumentsArray_p0 = requestUpdateLane(fiber);
        action = {
            lane: JSCompiler_OptimizeArgumentsArray_p0,
            revertLane: 0,
            action: action,
            hasEagerState: !1,
            eagerState: null,
            next: null
        };
        isRenderPhaseUpdate(fiber) ? enqueueRenderPhaseUpdate(queue, action) : (action = enqueueConcurrentHookUpdate(fiber, queue, action, JSCompiler_OptimizeArgumentsArray_p0), null !== action && (scheduleUpdateOnFiber(action, fiber, JSCompiler_OptimizeArgumentsArray_p0), entangleTransitionUpdate(action, queue, JSCompiler_OptimizeArgumentsArray_p0)));
        markStateUpdateScheduled(fiber, JSCompiler_OptimizeArgumentsArray_p0);
    }
    function dispatchSetState(fiber, queue, action, JSCompiler_OptimizeArgumentsArray_p1) {
        "function" === typeof JSCompiler_OptimizeArgumentsArray_p1 && console.error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        JSCompiler_OptimizeArgumentsArray_p1 = requestUpdateLane(fiber);
        dispatchSetStateInternal(fiber, queue, action, JSCompiler_OptimizeArgumentsArray_p1);
        markStateUpdateScheduled(fiber, JSCompiler_OptimizeArgumentsArray_p1);
    }
    function dispatchSetStateInternal(fiber, queue, action, lane) {
        var update = {
            lane: lane,
            revertLane: 0,
            action: action,
            hasEagerState: !1,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var alternate = fiber.alternate;
            if (0 === fiber.lanes && (null === alternate || 0 === alternate.lanes) && (alternate = queue.lastRenderedReducer, null !== alternate)) {
                var prevDispatcher = ReactSharedInternals.H;
                ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                    var currentState = queue.lastRenderedState, eagerState = alternate(currentState, action);
                    update.hasEagerState = !0;
                    update.eagerState = eagerState;
                    if (objectIs(eagerState, currentState)) return enqueueUpdate$1(fiber, queue, update, 0), null === workInProgressRoot && finishQueueingConcurrentUpdates(), !1;
                } catch (error) {} finally{
                    ReactSharedInternals.H = prevDispatcher;
                }
            }
            action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (null !== action) return scheduleUpdateOnFiber(action, fiber, lane), entangleTransitionUpdate(action, queue, lane), !0;
        }
        return !1;
    }
    function dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {
        null === ReactSharedInternals.T && 0 === currentEntangledLane && console.error("An optimistic state update occurred outside a transition or action. To fix, move the update to an action, or wrap with startTransition.");
        action = {
            lane: 2,
            revertLane: requestTransitionLane(),
            action: action,
            hasEagerState: !1,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) {
            if (throwIfDuringRender) throw Error("Cannot update optimistic state while rendering.");
            console.error("Cannot call startTransition while rendering.");
        } else throwIfDuringRender = enqueueConcurrentHookUpdate(fiber, queue, action, 2), null !== throwIfDuringRender && scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);
        markStateUpdateScheduled(fiber, 2);
    }
    function isRenderPhaseUpdate(fiber) {
        var alternate = fiber.alternate;
        return fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1;
    }
    function enqueueRenderPhaseUpdate(queue, update) {
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = !0;
        var pending = queue.pending;
        null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
        queue.pending = update;
    }
    function entangleTransitionUpdate(root, queue, lane) {
        if (0 !== (lane & 4194176)) {
            var queueLanes = queue.lanes;
            queueLanes &= root.pendingLanes;
            lane |= queueLanes;
            queue.lanes = lane;
            markRootEntangled(root, lane);
        }
    }
    function warnOnInvalidCallback(callback) {
        if (null !== callback && "function" !== typeof callback) {
            var key = String(callback);
            didWarnOnInvalidCallback.has(key) || (didWarnOnInvalidCallback.add(key), console.error("Expected the last optional `callback` argument to be a function. Instead received: %s.", callback));
        }
    }
    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress.memoizedState, partialState = getDerivedStateFromProps(nextProps, prevState);
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(!0);
            try {
                partialState = getDerivedStateFromProps(nextProps, prevState);
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        void 0 === partialState && (ctor = getComponentNameFromType(ctor) || "Component", didWarnAboutUndefinedDerivedState.has(ctor) || (didWarnAboutUndefinedDerivedState.add(ctor), console.error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", ctor)));
        prevState = null === partialState || void 0 === partialState ? prevState : assign({}, prevState, partialState);
        workInProgress.memoizedState = prevState;
        0 === workInProgress.lanes && (workInProgress.updateQueue.baseState = prevState);
    }
    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress.stateNode;
        if ("function" === typeof instance.shouldComponentUpdate) {
            oldProps = instance.shouldComponentUpdate(newProps, newState, nextContext);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(!0);
                try {
                    oldProps = instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
            void 0 === oldProps && console.error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
            return oldProps;
        }
        return ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : !0;
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        var oldState = instance.state;
        "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
        "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        instance.state !== oldState && (workInProgress = getComponentNameFromFiber(workInProgress) || "Component", didWarnAboutStateAssignmentForComponent.has(workInProgress) || (didWarnAboutStateAssignmentForComponent.add(workInProgress), console.error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", workInProgress)), classComponentUpdater.enqueueReplaceState(instance, instance.state, null));
    }
    function resolveClassComponentProps(Component, baseProps) {
        var newProps = baseProps;
        if ("ref" in baseProps) {
            newProps = {};
            for(var propName in baseProps)"ref" !== propName && (newProps[propName] = baseProps[propName]);
        }
        if (Component = Component.defaultProps) {
            newProps === baseProps && (newProps = assign({}, newProps));
            for(var _propName in Component)void 0 === newProps[_propName] && (newProps[_propName] = Component[_propName]);
        }
        return newProps;
    }
    function defaultOnUncaughtError(error, errorInfo) {
        reportGlobalError(error);
        error = componentName ? "An error occurred in the <" + componentName + "> component." : "An error occurred in one of your React components.";
        var prevGetCurrentStack = ReactSharedInternals.getCurrentStack, componentStack = null != errorInfo.componentStack ? errorInfo.componentStack : "";
        ReactSharedInternals.getCurrentStack = function() {
            return componentStack;
        };
        try {
            console.warn("%s\n\n%s\n", error, "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://react.dev/link/error-boundaries to learn more about error boundaries.");
        } finally{
            ReactSharedInternals.getCurrentStack = prevGetCurrentStack;
        }
    }
    function defaultOnCaughtError(error, errorInfo) {
        var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component." : "The above error occurred in one of your React components.", recreateMessage = "React will try to recreate this component tree from scratch using the error boundary you provided, " + ((errorBoundaryName || "Anonymous") + "."), prevGetCurrentStack = ReactSharedInternals.getCurrentStack, componentStack = null != errorInfo.componentStack ? errorInfo.componentStack : "";
        ReactSharedInternals.getCurrentStack = function() {
            return componentStack;
        };
        try {
            "object" === typeof error && null !== error && "string" === typeof error.environmentName ? bindToConsole("error", [
                "%o\n\n%s\n\n%s\n",
                error,
                componentNameMessage,
                recreateMessage
            ], error.environmentName)() : console.error("%o\n\n%s\n\n%s\n", error, componentNameMessage, recreateMessage);
        } finally{
            ReactSharedInternals.getCurrentStack = prevGetCurrentStack;
        }
    }
    function defaultOnRecoverableError(error) {
        reportGlobalError(error);
    }
    function logUncaughtError(root, errorInfo) {
        try {
            componentName = errorInfo.source ? getComponentNameFromFiber(errorInfo.source) : null;
            errorBoundaryName = null;
            var error = errorInfo.value;
            if (null !== ReactSharedInternals.actQueue) ReactSharedInternals.thrownErrors.push(error);
            else {
                var onUncaughtError = root.onUncaughtError;
                onUncaughtError(error, {
                    componentStack: errorInfo.stack
                });
            }
        } catch (e$4) {
            setTimeout(function() {
                throw e$4;
            });
        }
    }
    function logCaughtError(root, boundary, errorInfo) {
        try {
            componentName = errorInfo.source ? getComponentNameFromFiber(errorInfo.source) : null;
            errorBoundaryName = getComponentNameFromFiber(boundary);
            var onCaughtError = root.onCaughtError;
            onCaughtError(errorInfo.value, {
                componentStack: errorInfo.stack,
                errorBoundary: 1 === boundary.tag ? boundary.stateNode : null
            });
        } catch (e$5) {
            setTimeout(function() {
                throw e$5;
            });
        }
    }
    function createRootErrorUpdate(root, errorInfo, lane) {
        lane = createUpdate(lane);
        lane.tag = CaptureUpdate;
        lane.payload = {
            element: null
        };
        lane.callback = function() {
            runWithFiberInDEV(errorInfo.source, logUncaughtError, root, errorInfo);
        };
        return lane;
    }
    function createClassErrorUpdate(lane) {
        lane = createUpdate(lane);
        lane.tag = CaptureUpdate;
        return lane;
    }
    function initializeClassErrorUpdate(update, root, fiber, errorInfo) {
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if ("function" === typeof getDerivedStateFromError) {
            var error = errorInfo.value;
            update.payload = function() {
                return getDerivedStateFromError(error);
            };
            update.callback = function() {
                markFailedErrorBoundaryForHotReloading(fiber);
                runWithFiberInDEV(errorInfo.source, logCaughtError, root, fiber, errorInfo);
            };
        }
        var inst = fiber.stateNode;
        null !== inst && "function" === typeof inst.componentDidCatch && (update.callback = function() {
            markFailedErrorBoundaryForHotReloading(fiber);
            runWithFiberInDEV(errorInfo.source, logCaughtError, root, fiber, errorInfo);
            "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([
                this
            ]) : legacyErrorBoundariesThatAlreadyFailed.add(this));
            callComponentDidCatchInDEV(this, errorInfo);
            "function" === typeof getDerivedStateFromError || 0 === (fiber.lanes & 2) && console.error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown");
        });
    }
    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
        sourceFiber.flags |= 32768;
        isDevToolsPresent && restorePendingUpdaters(root, rootRenderLanes);
        if (null !== value && "object" === typeof value && "function" === typeof value.then) {
            returnFiber = sourceFiber.alternate;
            null !== returnFiber && propagateParentContextChanges(returnFiber, sourceFiber, rootRenderLanes, !0);
            isHydrating && (didSuspendOrErrorDEV = !0);
            sourceFiber = suspenseHandlerStackCursor.current;
            if (null !== sourceFiber) {
                switch(sourceFiber.tag){
                    case 13:
                        return null === shellBoundary ? renderDidSuspendDelayIfPossible() : null === sourceFiber.alternate && workInProgressRootExitStatus === RootInProgress && (workInProgressRootExitStatus = RootSuspended), sourceFiber.flags &= -257, sourceFiber.flags |= 65536, sourceFiber.lanes = rootRenderLanes, value === noopSuspenseyCommitThenable ? sourceFiber.flags |= 16384 : (returnFiber = sourceFiber.updateQueue, null === returnFiber ? sourceFiber.updateQueue = new Set([
                            value
                        ]) : returnFiber.add(value), attachPingListener(root, value, rootRenderLanes)), !1;
                    case 22:
                        return sourceFiber.flags |= 65536, value === noopSuspenseyCommitThenable ? sourceFiber.flags |= 16384 : (returnFiber = sourceFiber.updateQueue, null === returnFiber ? (returnFiber = {
                            transitions: null,
                            markerInstances: null,
                            retryQueue: new Set([
                                value
                            ])
                        }, sourceFiber.updateQueue = returnFiber) : (sourceFiber = returnFiber.retryQueue, null === sourceFiber ? returnFiber.retryQueue = new Set([
                            value
                        ]) : sourceFiber.add(value)), attachPingListener(root, value, rootRenderLanes)), !1;
                }
                throw Error("Unexpected Suspense handler tag (" + sourceFiber.tag + "). This is a bug in React.");
            }
            attachPingListener(root, value, rootRenderLanes);
            renderDidSuspendDelayIfPossible();
            return !1;
        }
        if (isHydrating) return didSuspendOrErrorDEV = !0, returnFiber = suspenseHandlerStackCursor.current, null !== returnFiber ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256), returnFiber.flags |= 65536, returnFiber.lanes = rootRenderLanes, value !== HydrationMismatchException && queueHydrationError(createCapturedValueAtFiber(Error("There was an error while hydrating but React was able to recover by instead client rendering from the nearest Suspense boundary.", {
            cause: value
        }), sourceFiber))) : (value !== HydrationMismatchException && queueHydrationError(createCapturedValueAtFiber(Error("There was an error while hydrating but React was able to recover by instead client rendering the entire root.", {
            cause: value
        }), sourceFiber)), root = root.current.alternate, root.flags |= 65536, rootRenderLanes &= -rootRenderLanes, root.lanes |= rootRenderLanes, value = createCapturedValueAtFiber(value, sourceFiber), rootRenderLanes = createRootErrorUpdate(root.stateNode, value, rootRenderLanes), enqueueCapturedUpdate(root, rootRenderLanes), workInProgressRootExitStatus !== RootSuspendedWithDelay && (workInProgressRootExitStatus = RootErrored)), !1;
        var error = createCapturedValueAtFiber(Error("There was an error during concurrent rendering but React was able to recover by instead synchronously rendering the entire root.", {
            cause: value
        }), sourceFiber);
        null === workInProgressRootConcurrentErrors ? workInProgressRootConcurrentErrors = [
            error
        ] : workInProgressRootConcurrentErrors.push(error);
        workInProgressRootExitStatus !== RootSuspendedWithDelay && (workInProgressRootExitStatus = RootErrored);
        if (null === returnFiber) return !0;
        value = createCapturedValueAtFiber(value, sourceFiber);
        sourceFiber = returnFiber;
        do {
            switch(sourceFiber.tag){
                case 3:
                    return sourceFiber.flags |= 65536, root = rootRenderLanes & -rootRenderLanes, sourceFiber.lanes |= root, root = createRootErrorUpdate(sourceFiber.stateNode, value, root), enqueueCapturedUpdate(sourceFiber, root), !1;
                case 1:
                    if (returnFiber = sourceFiber.type, error = sourceFiber.stateNode, 0 === (sourceFiber.flags & 128) && ("function" === typeof returnFiber.getDerivedStateFromError || null !== error && "function" === typeof error.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(error)))) return sourceFiber.flags |= 65536, rootRenderLanes &= -rootRenderLanes, sourceFiber.lanes |= rootRenderLanes, rootRenderLanes = createClassErrorUpdate(rootRenderLanes), initializeClassErrorUpdate(rootRenderLanes, root, sourceFiber, value), enqueueCapturedUpdate(sourceFiber, rootRenderLanes), !1;
            }
            sourceFiber = sourceFiber.return;
        }while (null !== sourceFiber);
        return !1;
    }
    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
        workInProgress.child = null === current ? mountChildFibers(workInProgress, null, nextChildren, renderLanes) : reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
    }
    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
        Component = Component.render;
        var ref = workInProgress.ref;
        if ("ref" in nextProps) {
            var propsWithoutRef = {};
            for(var key in nextProps)"ref" !== key && (propsWithoutRef[key] = nextProps[key]);
        } else propsWithoutRef = nextProps;
        prepareToReadContext(workInProgress);
        markComponentRenderStarted(workInProgress);
        nextProps = renderWithHooks(current, workInProgress, Component, propsWithoutRef, ref, renderLanes);
        key = checkDidRenderIdHook();
        markComponentRenderStopped();
        if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        isHydrating && key && pushMaterializedTreeId(workInProgress);
        workInProgress.flags |= 1;
        reconcileChildren(current, workInProgress, nextProps, renderLanes);
        return workInProgress.child;
    }
    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (null === current) {
            var type = Component.type;
            if ("function" === typeof type && !shouldConstruct(type) && void 0 === type.defaultProps && null === Component.compare) return Component = resolveFunctionForHotReloading(type), workInProgress.tag = 15, workInProgress.type = Component, validateFunctionComponentInDev(workInProgress, type), updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes);
            current = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
            current.ref = workInProgress.ref;
            current.return = workInProgress;
            return workInProgress.child = current;
        }
        type = current.child;
        if (!checkScheduledUpdateOrContext(current, renderLanes)) {
            var prevProps = type.memoizedProps;
            Component = Component.compare;
            Component = null !== Component ? Component : shallowEqual;
            if (Component(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        workInProgress.flags |= 1;
        current = createWorkInProgress(type, nextProps);
        current.ref = workInProgress.ref;
        current.return = workInProgress;
        return workInProgress.child = current;
    }
    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (null !== current) {
            var prevProps = current.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {
                if (didReceiveUpdate = !1, workInProgress.pendingProps = nextProps = prevProps, checkScheduledUpdateOrContext(current, renderLanes)) 0 !== (current.flags & 131072) && (didReceiveUpdate = !0);
                else return workInProgress.lanes = current.lanes, bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            }
        }
        return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }
    function updateOffscreenComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps, nextChildren = nextProps.children, nextIsDetached = 0 !== (workInProgress.stateNode._pendingVisibility & OffscreenDetached), prevState = null !== current ? current.memoizedState : null;
        markRef(current, workInProgress);
        if ("hidden" === nextProps.mode || nextIsDetached) {
            if (0 !== (workInProgress.flags & 128)) {
                nextProps = null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;
                if (null !== current) {
                    nextChildren = workInProgress.child = current.child;
                    for(nextIsDetached = 0; null !== nextChildren;)nextIsDetached = nextIsDetached | nextChildren.lanes | nextChildren.childLanes, nextChildren = nextChildren.sibling;
                    workInProgress.childLanes = nextIsDetached & ~nextProps;
                } else workInProgress.childLanes = 0, workInProgress.child = null;
                return deferHiddenOffscreenComponent(current, workInProgress, nextProps, renderLanes);
            }
            if (0 !== (renderLanes & 536870912)) workInProgress.memoizedState = {
                baseLanes: 0,
                cachePool: null
            }, null !== current && pushTransition(workInProgress, null !== prevState ? prevState.cachePool : null), null !== prevState ? pushHiddenContext(workInProgress, prevState) : reuseHiddenContextOnStack(workInProgress), pushOffscreenSuspenseHandler(workInProgress);
            else return workInProgress.lanes = workInProgress.childLanes = 536870912, deferHiddenOffscreenComponent(current, workInProgress, null !== prevState ? prevState.baseLanes | renderLanes : renderLanes, renderLanes);
        } else null !== prevState ? (pushTransition(workInProgress, prevState.cachePool), pushHiddenContext(workInProgress, prevState), reuseSuspenseHandlerOnStack(workInProgress), workInProgress.memoizedState = null) : (null !== current && pushTransition(workInProgress, null), reuseHiddenContextOnStack(workInProgress), reuseSuspenseHandlerOnStack(workInProgress));
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function deferHiddenOffscreenComponent(current, workInProgress, nextBaseLanes, renderLanes) {
        var JSCompiler_inline_result = peekCacheFromPool();
        JSCompiler_inline_result = null === JSCompiler_inline_result ? null : {
            parent: CacheContext._currentValue,
            pool: JSCompiler_inline_result
        };
        workInProgress.memoizedState = {
            baseLanes: nextBaseLanes,
            cachePool: JSCompiler_inline_result
        };
        null !== current && pushTransition(workInProgress, null);
        reuseHiddenContextOnStack(workInProgress);
        pushOffscreenSuspenseHandler(workInProgress);
        null !== current && propagateParentContextChanges(current, workInProgress, renderLanes, !0);
        return null;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        if (null === ref) null !== current && null !== current.ref && (workInProgress.flags |= 2097664);
        else {
            if ("function" !== typeof ref && "object" !== typeof ref) throw Error("Expected ref to be a function, an object returned by React.createRef(), or undefined/null.");
            if (null === current || current.ref !== ref) workInProgress.flags |= 2097664;
        }
    }
    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (Component.prototype && "function" === typeof Component.prototype.render) {
            var componentName = getComponentNameFromType(Component) || "Unknown";
            didWarnAboutBadClass[componentName] || (console.error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName), didWarnAboutBadClass[componentName] = !0);
        }
        workInProgress.mode & StrictLegacyMode && ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        null === current && (validateFunctionComponentInDev(workInProgress, workInProgress.type), Component.contextTypes && (componentName = getComponentNameFromType(Component) || "Unknown", didWarnAboutContextTypes[componentName] || (didWarnAboutContextTypes[componentName] = !0, console.error("%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with React.useContext() instead. (https://react.dev/link/legacy-context)", componentName))));
        prepareToReadContext(workInProgress);
        markComponentRenderStarted(workInProgress);
        Component = renderWithHooks(current, workInProgress, Component, nextProps, void 0, renderLanes);
        nextProps = checkDidRenderIdHook();
        markComponentRenderStopped();
        if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        isHydrating && nextProps && pushMaterializedTreeId(workInProgress);
        workInProgress.flags |= 1;
        reconcileChildren(current, workInProgress, Component, renderLanes);
        return workInProgress.child;
    }
    function replayFunctionComponent(current, workInProgress, nextProps, Component, secondArg, renderLanes) {
        prepareToReadContext(workInProgress);
        markComponentRenderStarted(workInProgress);
        hookTypesUpdateIndexDev = -1;
        ignorePreviousDependencies = null !== current && current.type !== workInProgress.type;
        workInProgress.updateQueue = null;
        nextProps = renderWithHooksAgain(workInProgress, Component, nextProps, secondArg);
        finishRenderingHooks(current, workInProgress);
        Component = checkDidRenderIdHook();
        markComponentRenderStopped();
        if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        isHydrating && Component && pushMaterializedTreeId(workInProgress);
        workInProgress.flags |= 1;
        reconcileChildren(current, workInProgress, nextProps, renderLanes);
        return workInProgress.child;
    }
    function updateClassComponent(current$jscomp$0, workInProgress, Component, nextProps, renderLanes) {
        switch(shouldErrorImpl(workInProgress)){
            case !1:
                var _instance = workInProgress.stateNode, state = new workInProgress.type(workInProgress.memoizedProps, _instance.context).state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
            case !0:
                workInProgress.flags |= 128;
                workInProgress.flags |= 65536;
                _instance = Error("Simulated error coming from DevTools");
                var lane = renderLanes & -renderLanes;
                workInProgress.lanes |= lane;
                state = workInProgressRoot;
                if (null === state) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
                lane = createClassErrorUpdate(lane);
                initializeClassErrorUpdate(lane, state, workInProgress, createCapturedValueAtFiber(_instance, workInProgress));
                enqueueCapturedUpdate(workInProgress, lane);
        }
        prepareToReadContext(workInProgress);
        if (null === workInProgress.stateNode) {
            state = emptyContextObject;
            _instance = Component.contextType;
            "contextType" in Component && null !== _instance && (void 0 === _instance || _instance.$$typeof !== REACT_CONTEXT_TYPE) && !didWarnAboutInvalidateContextType.has(Component) && (didWarnAboutInvalidateContextType.add(Component), lane = void 0 === _instance ? " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : "object" !== typeof _instance ? " However, it is set to a " + typeof _instance + "." : _instance.$$typeof === REACT_CONSUMER_TYPE ? " Did you accidentally pass the Context.Consumer instead?" : " However, it is set to an object with keys {" + Object.keys(_instance).join(", ") + "}.", console.error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(Component) || "Component", lane));
            "object" === typeof _instance && null !== _instance && (state = readContext(_instance));
            _instance = new Component(nextProps, state);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(!0);
                try {
                    _instance = new Component(nextProps, state);
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
            state = workInProgress.memoizedState = null !== _instance.state && void 0 !== _instance.state ? _instance.state : null;
            _instance.updater = classComponentUpdater;
            workInProgress.stateNode = _instance;
            _instance._reactInternals = workInProgress;
            _instance._reactInternalInstance = fakeInternalInstance;
            "function" === typeof Component.getDerivedStateFromProps && null === state && (state = getComponentNameFromType(Component) || "Component", didWarnAboutUninitializedState.has(state) || (didWarnAboutUninitializedState.add(state), console.error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", state, null === _instance.state ? "null" : "undefined", state)));
            if ("function" === typeof Component.getDerivedStateFromProps || "function" === typeof _instance.getSnapshotBeforeUpdate) {
                var foundWillUpdateName = lane = state = null;
                "function" === typeof _instance.componentWillMount && !0 !== _instance.componentWillMount.__suppressDeprecationWarning ? state = "componentWillMount" : "function" === typeof _instance.UNSAFE_componentWillMount && (state = "UNSAFE_componentWillMount");
                "function" === typeof _instance.componentWillReceiveProps && !0 !== _instance.componentWillReceiveProps.__suppressDeprecationWarning ? lane = "componentWillReceiveProps" : "function" === typeof _instance.UNSAFE_componentWillReceiveProps && (lane = "UNSAFE_componentWillReceiveProps");
                "function" === typeof _instance.componentWillUpdate && !0 !== _instance.componentWillUpdate.__suppressDeprecationWarning ? foundWillUpdateName = "componentWillUpdate" : "function" === typeof _instance.UNSAFE_componentWillUpdate && (foundWillUpdateName = "UNSAFE_componentWillUpdate");
                if (null !== state || null !== lane || null !== foundWillUpdateName) {
                    _instance = getComponentNameFromType(Component) || "Component";
                    var newApiName = "function" === typeof Component.getDerivedStateFromProps ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                    didWarnAboutLegacyLifecyclesAndDerivedState.has(_instance) || (didWarnAboutLegacyLifecyclesAndDerivedState.add(_instance), console.error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://react.dev/link/unsafe-component-lifecycles", _instance, newApiName, null !== state ? "\n  " + state : "", null !== lane ? "\n  " + lane : "", null !== foundWillUpdateName ? "\n  " + foundWillUpdateName : ""));
                }
            }
            _instance = workInProgress.stateNode;
            state = getComponentNameFromType(Component) || "Component";
            _instance.render || (Component.prototype && "function" === typeof Component.prototype.render ? console.error("No `render` method found on the %s instance: did you accidentally return an object from the constructor?", state) : console.error("No `render` method found on the %s instance: you may have forgotten to define `render`.", state));
            !_instance.getInitialState || _instance.getInitialState.isReactClassApproved || _instance.state || console.error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", state);
            _instance.getDefaultProps && !_instance.getDefaultProps.isReactClassApproved && console.error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", state);
            _instance.contextType && console.error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", state);
            Component.childContextTypes && !didWarnAboutChildContextTypes.has(Component) && (didWarnAboutChildContextTypes.add(Component), console.error("%s uses the legacy childContextTypes API which was removed in React 19. Use React.createContext() instead. (https://react.dev/link/legacy-context)", state));
            Component.contextTypes && !didWarnAboutContextTypes$1.has(Component) && (didWarnAboutContextTypes$1.add(Component), console.error("%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with static contextType instead. (https://react.dev/link/legacy-context)", state));
            "function" === typeof _instance.componentShouldUpdate && console.error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", state);
            Component.prototype && Component.prototype.isPureReactComponent && "undefined" !== typeof _instance.shouldComponentUpdate && console.error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(Component) || "A pure component");
            "function" === typeof _instance.componentDidUnmount && console.error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", state);
            "function" === typeof _instance.componentDidReceiveProps && console.error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", state);
            "function" === typeof _instance.componentWillRecieveProps && console.error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", state);
            "function" === typeof _instance.UNSAFE_componentWillRecieveProps && console.error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", state);
            lane = _instance.props !== nextProps;
            void 0 !== _instance.props && lane && console.error("When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", state);
            _instance.defaultProps && console.error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", state, state);
            "function" !== typeof _instance.getSnapshotBeforeUpdate || "function" === typeof _instance.componentDidUpdate || didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(Component) || (didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(Component), console.error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(Component)));
            "function" === typeof _instance.getDerivedStateFromProps && console.error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", state);
            "function" === typeof _instance.getDerivedStateFromError && console.error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", state);
            "function" === typeof Component.getSnapshotBeforeUpdate && console.error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", state);
            (lane = _instance.state) && ("object" !== typeof lane || isArrayImpl(lane)) && console.error("%s.state: must be set to an object or null", state);
            "function" === typeof _instance.getChildContext && "object" !== typeof Component.childContextTypes && console.error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", state);
            _instance = workInProgress.stateNode;
            _instance.props = nextProps;
            _instance.state = workInProgress.memoizedState;
            _instance.refs = {};
            initializeUpdateQueue(workInProgress);
            state = Component.contextType;
            _instance.context = "object" === typeof state && null !== state ? readContext(state) : emptyContextObject;
            _instance.state === nextProps && (state = getComponentNameFromType(Component) || "Component", didWarnAboutDirectlyAssigningPropsToState.has(state) || (didWarnAboutDirectlyAssigningPropsToState.add(state), console.error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", state)));
            workInProgress.mode & StrictLegacyMode && ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, _instance);
            ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, _instance);
            _instance.state = workInProgress.memoizedState;
            state = Component.getDerivedStateFromProps;
            "function" === typeof state && (applyDerivedStateFromProps(workInProgress, Component, state, nextProps), _instance.state = workInProgress.memoizedState);
            "function" === typeof Component.getDerivedStateFromProps || "function" === typeof _instance.getSnapshotBeforeUpdate || "function" !== typeof _instance.UNSAFE_componentWillMount && "function" !== typeof _instance.componentWillMount || (state = _instance.state, "function" === typeof _instance.componentWillMount && _instance.componentWillMount(), "function" === typeof _instance.UNSAFE_componentWillMount && _instance.UNSAFE_componentWillMount(), state !== _instance.state && (console.error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress) || "Component"), classComponentUpdater.enqueueReplaceState(_instance, _instance.state, null)), processUpdateQueue(workInProgress, nextProps, _instance, renderLanes), suspendIfUpdateReadFromEntangledAsyncAction(), _instance.state = workInProgress.memoizedState);
            "function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308);
            (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 67108864);
            _instance = !0;
        } else if (null === current$jscomp$0) {
            _instance = workInProgress.stateNode;
            var unresolvedOldProps = workInProgress.memoizedProps;
            lane = resolveClassComponentProps(Component, unresolvedOldProps);
            _instance.props = lane;
            var oldContext = _instance.context;
            foundWillUpdateName = Component.contextType;
            state = emptyContextObject;
            "object" === typeof foundWillUpdateName && null !== foundWillUpdateName && (state = readContext(foundWillUpdateName));
            newApiName = Component.getDerivedStateFromProps;
            foundWillUpdateName = "function" === typeof newApiName || "function" === typeof _instance.getSnapshotBeforeUpdate;
            unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;
            foundWillUpdateName || "function" !== typeof _instance.UNSAFE_componentWillReceiveProps && "function" !== typeof _instance.componentWillReceiveProps || (unresolvedOldProps || oldContext !== state) && callComponentWillReceiveProps(workInProgress, _instance, nextProps, state);
            hasForceUpdate = !1;
            var oldState = workInProgress.memoizedState;
            _instance.state = oldState;
            processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);
            suspendIfUpdateReadFromEntangledAsyncAction();
            oldContext = workInProgress.memoizedState;
            unresolvedOldProps || oldState !== oldContext || hasForceUpdate ? ("function" === typeof newApiName && (applyDerivedStateFromProps(workInProgress, Component, newApiName, nextProps), oldContext = workInProgress.memoizedState), (lane = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, lane, nextProps, oldState, oldContext, state)) ? (foundWillUpdateName || "function" !== typeof _instance.UNSAFE_componentWillMount && "function" !== typeof _instance.componentWillMount || ("function" === typeof _instance.componentWillMount && _instance.componentWillMount(), "function" === typeof _instance.UNSAFE_componentWillMount && _instance.UNSAFE_componentWillMount()), "function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308), (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 67108864)) : ("function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308), (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 67108864), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), _instance.props = nextProps, _instance.state = oldContext, _instance.context = state, _instance = lane) : ("function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308), (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 67108864), _instance = !1);
        } else {
            _instance = workInProgress.stateNode;
            cloneUpdateQueue(current$jscomp$0, workInProgress);
            state = workInProgress.memoizedProps;
            foundWillUpdateName = resolveClassComponentProps(Component, state);
            _instance.props = foundWillUpdateName;
            newApiName = workInProgress.pendingProps;
            oldState = _instance.context;
            oldContext = Component.contextType;
            lane = emptyContextObject;
            "object" === typeof oldContext && null !== oldContext && (lane = readContext(oldContext));
            unresolvedOldProps = Component.getDerivedStateFromProps;
            (oldContext = "function" === typeof unresolvedOldProps || "function" === typeof _instance.getSnapshotBeforeUpdate) || "function" !== typeof _instance.UNSAFE_componentWillReceiveProps && "function" !== typeof _instance.componentWillReceiveProps || (state !== newApiName || oldState !== lane) && callComponentWillReceiveProps(workInProgress, _instance, nextProps, lane);
            hasForceUpdate = !1;
            oldState = workInProgress.memoizedState;
            _instance.state = oldState;
            processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);
            suspendIfUpdateReadFromEntangledAsyncAction();
            var newState = workInProgress.memoizedState;
            state !== newApiName || oldState !== newState || hasForceUpdate || null !== current$jscomp$0 && null !== current$jscomp$0.dependencies && checkIfContextChanged(current$jscomp$0.dependencies) ? ("function" === typeof unresolvedOldProps && (applyDerivedStateFromProps(workInProgress, Component, unresolvedOldProps, nextProps), newState = workInProgress.memoizedState), (foundWillUpdateName = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, foundWillUpdateName, nextProps, oldState, newState, lane) || null !== current$jscomp$0 && null !== current$jscomp$0.dependencies && checkIfContextChanged(current$jscomp$0.dependencies)) ? (oldContext || "function" !== typeof _instance.UNSAFE_componentWillUpdate && "function" !== typeof _instance.componentWillUpdate || ("function" === typeof _instance.componentWillUpdate && _instance.componentWillUpdate(nextProps, newState, lane), "function" === typeof _instance.UNSAFE_componentWillUpdate && _instance.UNSAFE_componentWillUpdate(nextProps, newState, lane)), "function" === typeof _instance.componentDidUpdate && (workInProgress.flags |= 4), "function" === typeof _instance.getSnapshotBeforeUpdate && (workInProgress.flags |= 1024)) : ("function" !== typeof _instance.componentDidUpdate || state === current$jscomp$0.memoizedProps && oldState === current$jscomp$0.memoizedState || (workInProgress.flags |= 4), "function" !== typeof _instance.getSnapshotBeforeUpdate || state === current$jscomp$0.memoizedProps && oldState === current$jscomp$0.memoizedState || (workInProgress.flags |= 1024), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = newState), _instance.props = nextProps, _instance.state = newState, _instance.context = lane, _instance = foundWillUpdateName) : ("function" !== typeof _instance.componentDidUpdate || state === current$jscomp$0.memoizedProps && oldState === current$jscomp$0.memoizedState || (workInProgress.flags |= 4), "function" !== typeof _instance.getSnapshotBeforeUpdate || state === current$jscomp$0.memoizedProps && oldState === current$jscomp$0.memoizedState || (workInProgress.flags |= 1024), _instance = !1);
        }
        lane = _instance;
        markRef(current$jscomp$0, workInProgress);
        state = 0 !== (workInProgress.flags & 128);
        if (lane || state) {
            lane = workInProgress.stateNode;
            ReactSharedInternals.getCurrentStack = null === workInProgress ? null : getCurrentFiberStackInDev;
            isRendering = !1;
            current = workInProgress;
            if (state && "function" !== typeof Component.getDerivedStateFromError) Component = null, profilerStartTime = -1;
            else {
                markComponentRenderStarted(workInProgress);
                Component = callRenderInDEV(lane);
                if (workInProgress.mode & StrictLegacyMode) {
                    setIsStrictModeForDevtools(!0);
                    try {
                        callRenderInDEV(lane);
                    } finally{
                        setIsStrictModeForDevtools(!1);
                    }
                }
                markComponentRenderStopped();
            }
            workInProgress.flags |= 1;
            null !== current$jscomp$0 && state ? (workInProgress.child = reconcileChildFibers(workInProgress, current$jscomp$0.child, null, renderLanes), workInProgress.child = reconcileChildFibers(workInProgress, null, Component, renderLanes)) : reconcileChildren(current$jscomp$0, workInProgress, Component, renderLanes);
            workInProgress.memoizedState = lane.state;
            current$jscomp$0 = workInProgress.child;
        } else current$jscomp$0 = bailoutOnAlreadyFinishedWork(current$jscomp$0, workInProgress, renderLanes);
        renderLanes = workInProgress.stateNode;
        _instance && renderLanes.props !== nextProps && (didWarnAboutReassigningProps || console.error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress) || "a component"), didWarnAboutReassigningProps = !0);
        return current$jscomp$0;
    }
    function mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes) {
        resetHydrationState();
        workInProgress.flags |= 256;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
        Component && Component.childContextTypes && console.error("childContextTypes cannot be defined on a function component.\n  %s.childContextTypes = ...", Component.displayName || Component.name || "Component");
        "function" === typeof Component.getDerivedStateFromProps && (workInProgress = getComponentNameFromType(Component) || "Unknown", didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] || (console.error("%s: Function components do not support getDerivedStateFromProps.", workInProgress), didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] = !0));
        "object" === typeof Component.contextType && null !== Component.contextType && (Component = getComponentNameFromType(Component) || "Unknown", didWarnAboutContextTypeOnFunctionComponent[Component] || (console.error("%s: Function components do not support contextType.", Component), didWarnAboutContextTypeOnFunctionComponent[Component] = !0));
    }
    function mountSuspenseOffscreenState(renderLanes) {
        return {
            baseLanes: renderLanes,
            cachePool: getSuspendedCache()
        };
    }
    function getRemainingWorkInPrimaryTree(current, primaryTreeDidDefer, renderLanes) {
        current = null !== current ? current.childLanes & ~renderLanes : 0;
        primaryTreeDidDefer && (current |= workInProgressDeferredLane);
        return current;
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
        var JSCompiler_object_inline_digest_2317;
        var JSCompiler_object_inline_stack_2318 = workInProgress.pendingProps;
        shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);
        var JSCompiler_object_inline_componentStack_2319 = !1;
        var didSuspend = 0 !== (workInProgress.flags & 128);
        (JSCompiler_object_inline_digest_2317 = didSuspend) || (JSCompiler_object_inline_digest_2317 = null !== current && null === current.memoizedState ? !1 : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));
        JSCompiler_object_inline_digest_2317 && (JSCompiler_object_inline_componentStack_2319 = !0, workInProgress.flags &= -129);
        JSCompiler_object_inline_digest_2317 = 0 !== (workInProgress.flags & 32);
        workInProgress.flags &= -33;
        if (null === current) {
            if (isHydrating) {
                JSCompiler_object_inline_componentStack_2319 ? pushPrimaryTreeSuspenseHandler(workInProgress) : reuseSuspenseHandlerOnStack(workInProgress);
                if (isHydrating) {
                    var JSCompiler_object_inline_message_2316 = nextHydratableInstance;
                    var JSCompiler_temp;
                    if (!(JSCompiler_temp = !JSCompiler_object_inline_message_2316)) {
                        c: {
                            var instance = JSCompiler_object_inline_message_2316;
                            for(JSCompiler_temp = rootOrSingletonContext; 8 !== instance.nodeType;){
                                if (!JSCompiler_temp) {
                                    JSCompiler_temp = null;
                                    break c;
                                }
                                instance = getNextHydratable(instance.nextSibling);
                                if (null === instance) {
                                    JSCompiler_temp = null;
                                    break c;
                                }
                            }
                            JSCompiler_temp = instance;
                        }
                        null !== JSCompiler_temp ? (warnIfNotHydrating(), workInProgress.memoizedState = {
                            dehydrated: JSCompiler_temp,
                            treeContext: null !== treeContextProvider ? {
                                id: treeContextId,
                                overflow: treeContextOverflow
                            } : null,
                            retryLane: 536870912
                        }, instance = createFiber(18, null, null, NoMode), instance.stateNode = JSCompiler_temp, instance.return = workInProgress, workInProgress.child = instance, hydrationParentFiber = workInProgress, nextHydratableInstance = null, JSCompiler_temp = !0) : JSCompiler_temp = !1;
                        JSCompiler_temp = !JSCompiler_temp;
                    }
                    JSCompiler_temp && (warnNonHydratedInstance(workInProgress, JSCompiler_object_inline_message_2316), throwOnHydrationMismatch(workInProgress));
                }
                JSCompiler_object_inline_message_2316 = workInProgress.memoizedState;
                if (null !== JSCompiler_object_inline_message_2316 && (JSCompiler_object_inline_message_2316 = JSCompiler_object_inline_message_2316.dehydrated, null !== JSCompiler_object_inline_message_2316)) return JSCompiler_object_inline_message_2316.data === SUSPENSE_FALLBACK_START_DATA ? workInProgress.lanes = 16 : workInProgress.lanes = 536870912, null;
                popSuspenseHandler(workInProgress);
            }
            JSCompiler_object_inline_message_2316 = JSCompiler_object_inline_stack_2318.children;
            JSCompiler_object_inline_stack_2318 = JSCompiler_object_inline_stack_2318.fallback;
            if (JSCompiler_object_inline_componentStack_2319) return reuseSuspenseHandlerOnStack(workInProgress), JSCompiler_object_inline_componentStack_2319 = workInProgress.mode, JSCompiler_object_inline_message_2316 = mountWorkInProgressOffscreenFiber({
                mode: "hidden",
                children: JSCompiler_object_inline_message_2316
            }, JSCompiler_object_inline_componentStack_2319), JSCompiler_object_inline_stack_2318 = createFiberFromFragment(JSCompiler_object_inline_stack_2318, JSCompiler_object_inline_componentStack_2319, renderLanes, null), JSCompiler_object_inline_message_2316.return = workInProgress, JSCompiler_object_inline_stack_2318.return = workInProgress, JSCompiler_object_inline_message_2316.sibling = JSCompiler_object_inline_stack_2318, workInProgress.child = JSCompiler_object_inline_message_2316, JSCompiler_object_inline_componentStack_2319 = workInProgress.child, JSCompiler_object_inline_componentStack_2319.memoizedState = mountSuspenseOffscreenState(renderLanes), JSCompiler_object_inline_componentStack_2319.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_object_inline_digest_2317, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, JSCompiler_object_inline_stack_2318;
            pushPrimaryTreeSuspenseHandler(workInProgress);
            return mountSuspensePrimaryChildren(workInProgress, JSCompiler_object_inline_message_2316);
        }
        var prevState = current.memoizedState;
        if (null !== prevState && (JSCompiler_object_inline_message_2316 = prevState.dehydrated, null !== JSCompiler_object_inline_message_2316)) {
            if (didSuspend) workInProgress.flags & 256 ? (pushPrimaryTreeSuspenseHandler(workInProgress), workInProgress.flags &= -257, workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes)) : null !== workInProgress.memoizedState ? (reuseSuspenseHandlerOnStack(workInProgress), workInProgress.child = current.child, workInProgress.flags |= 128, workInProgress = null) : (reuseSuspenseHandlerOnStack(workInProgress), JSCompiler_object_inline_componentStack_2319 = JSCompiler_object_inline_stack_2318.fallback, JSCompiler_object_inline_message_2316 = workInProgress.mode, JSCompiler_object_inline_stack_2318 = mountWorkInProgressOffscreenFiber({
                mode: "visible",
                children: JSCompiler_object_inline_stack_2318.children
            }, JSCompiler_object_inline_message_2316), JSCompiler_object_inline_componentStack_2319 = createFiberFromFragment(JSCompiler_object_inline_componentStack_2319, JSCompiler_object_inline_message_2316, renderLanes, null), JSCompiler_object_inline_componentStack_2319.flags |= 2, JSCompiler_object_inline_stack_2318.return = workInProgress, JSCompiler_object_inline_componentStack_2319.return = workInProgress, JSCompiler_object_inline_stack_2318.sibling = JSCompiler_object_inline_componentStack_2319, workInProgress.child = JSCompiler_object_inline_stack_2318, reconcileChildFibers(workInProgress, current.child, null, renderLanes), JSCompiler_object_inline_stack_2318 = workInProgress.child, JSCompiler_object_inline_stack_2318.memoizedState = mountSuspenseOffscreenState(renderLanes), JSCompiler_object_inline_stack_2318.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_object_inline_digest_2317, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, workInProgress = JSCompiler_object_inline_componentStack_2319);
            else if (pushPrimaryTreeSuspenseHandler(workInProgress), isHydrating && console.error("We should not be hydrating here. This is a bug in React. Please file a bug."), JSCompiler_object_inline_message_2316.data === SUSPENSE_FALLBACK_START_DATA) {
                JSCompiler_object_inline_digest_2317 = JSCompiler_object_inline_message_2316.nextSibling && JSCompiler_object_inline_message_2316.nextSibling.dataset;
                if (JSCompiler_object_inline_digest_2317) {
                    JSCompiler_temp = JSCompiler_object_inline_digest_2317.dgst;
                    var message = JSCompiler_object_inline_digest_2317.msg;
                    instance = JSCompiler_object_inline_digest_2317.stck;
                    var componentStack = JSCompiler_object_inline_digest_2317.cstck;
                }
                JSCompiler_object_inline_message_2316 = message;
                JSCompiler_object_inline_digest_2317 = JSCompiler_temp;
                JSCompiler_object_inline_stack_2318 = instance;
                JSCompiler_temp = JSCompiler_object_inline_componentStack_2319 = componentStack;
                JSCompiler_object_inline_componentStack_2319 = JSCompiler_object_inline_message_2316 ? Error(JSCompiler_object_inline_message_2316) : Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
                JSCompiler_object_inline_componentStack_2319.stack = JSCompiler_object_inline_stack_2318 || "";
                JSCompiler_object_inline_componentStack_2319.digest = JSCompiler_object_inline_digest_2317;
                JSCompiler_object_inline_digest_2317 = void 0 === JSCompiler_temp ? null : JSCompiler_temp;
                JSCompiler_object_inline_stack_2318 = {
                    value: JSCompiler_object_inline_componentStack_2319,
                    source: null,
                    stack: JSCompiler_object_inline_digest_2317
                };
                "string" === typeof JSCompiler_object_inline_digest_2317 && CapturedStacks.set(JSCompiler_object_inline_componentStack_2319, JSCompiler_object_inline_stack_2318);
                queueHydrationError(JSCompiler_object_inline_stack_2318);
                workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes);
            } else if (didReceiveUpdate || propagateParentContextChanges(current, workInProgress, renderLanes, !1), JSCompiler_object_inline_digest_2317 = 0 !== (renderLanes & current.childLanes), didReceiveUpdate || JSCompiler_object_inline_digest_2317) {
                JSCompiler_object_inline_digest_2317 = workInProgressRoot;
                if (null !== JSCompiler_object_inline_digest_2317) {
                    JSCompiler_object_inline_stack_2318 = renderLanes & -renderLanes;
                    if (0 !== (JSCompiler_object_inline_stack_2318 & 42)) JSCompiler_object_inline_stack_2318 = 1;
                    else switch(JSCompiler_object_inline_stack_2318){
                        case 2:
                            JSCompiler_object_inline_stack_2318 = 1;
                            break;
                        case 8:
                            JSCompiler_object_inline_stack_2318 = 4;
                            break;
                        case 32:
                            JSCompiler_object_inline_stack_2318 = 16;
                            break;
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                            JSCompiler_object_inline_stack_2318 = 64;
                            break;
                        case 268435456:
                            JSCompiler_object_inline_stack_2318 = 134217728;
                            break;
                        default:
                            JSCompiler_object_inline_stack_2318 = 0;
                    }
                    JSCompiler_object_inline_stack_2318 = 0 !== (JSCompiler_object_inline_stack_2318 & (JSCompiler_object_inline_digest_2317.suspendedLanes | renderLanes)) ? 0 : JSCompiler_object_inline_stack_2318;
                    if (0 !== JSCompiler_object_inline_stack_2318 && JSCompiler_object_inline_stack_2318 !== prevState.retryLane) throw prevState.retryLane = JSCompiler_object_inline_stack_2318, enqueueConcurrentRenderForLane(current, JSCompiler_object_inline_stack_2318), scheduleUpdateOnFiber(JSCompiler_object_inline_digest_2317, current, JSCompiler_object_inline_stack_2318), SelectiveHydrationException;
                }
                JSCompiler_object_inline_message_2316.data === SUSPENSE_PENDING_START_DATA || renderDidSuspendDelayIfPossible();
                workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes);
            } else JSCompiler_object_inline_message_2316.data === SUSPENSE_PENDING_START_DATA ? (workInProgress.flags |= 128, workInProgress.child = current.child, workInProgress = retryDehydratedSuspenseBoundary.bind(null, current), JSCompiler_object_inline_message_2316._reactRetry = workInProgress, workInProgress = null) : (current = prevState.treeContext, nextHydratableInstance = getNextHydratable(JSCompiler_object_inline_message_2316.nextSibling), hydrationParentFiber = workInProgress, isHydrating = !0, hydrationErrors = null, didSuspendOrErrorDEV = !1, hydrationDiffRootDEV = null, rootOrSingletonContext = !1, null !== current && (warnIfNotHydrating(), idStack[idStackIndex++] = treeContextId, idStack[idStackIndex++] = treeContextOverflow, idStack[idStackIndex++] = treeContextProvider, treeContextId = current.id, treeContextOverflow = current.overflow, treeContextProvider = workInProgress), workInProgress = mountSuspensePrimaryChildren(workInProgress, JSCompiler_object_inline_stack_2318.children), workInProgress.flags |= 4096);
            return workInProgress;
        }
        if (JSCompiler_object_inline_componentStack_2319) return reuseSuspenseHandlerOnStack(workInProgress), JSCompiler_object_inline_componentStack_2319 = JSCompiler_object_inline_stack_2318.fallback, JSCompiler_object_inline_message_2316 = workInProgress.mode, JSCompiler_temp = current.child, instance = JSCompiler_temp.sibling, JSCompiler_object_inline_stack_2318 = createWorkInProgress(JSCompiler_temp, {
            mode: "hidden",
            children: JSCompiler_object_inline_stack_2318.children
        }), JSCompiler_object_inline_stack_2318.subtreeFlags = JSCompiler_temp.subtreeFlags & 31457280, null !== instance ? JSCompiler_object_inline_componentStack_2319 = createWorkInProgress(instance, JSCompiler_object_inline_componentStack_2319) : (JSCompiler_object_inline_componentStack_2319 = createFiberFromFragment(JSCompiler_object_inline_componentStack_2319, JSCompiler_object_inline_message_2316, renderLanes, null), JSCompiler_object_inline_componentStack_2319.flags |= 2), JSCompiler_object_inline_componentStack_2319.return = workInProgress, JSCompiler_object_inline_stack_2318.return = workInProgress, JSCompiler_object_inline_stack_2318.sibling = JSCompiler_object_inline_componentStack_2319, workInProgress.child = JSCompiler_object_inline_stack_2318, JSCompiler_object_inline_stack_2318 = JSCompiler_object_inline_componentStack_2319, JSCompiler_object_inline_componentStack_2319 = workInProgress.child, JSCompiler_object_inline_message_2316 = current.child.memoizedState, null === JSCompiler_object_inline_message_2316 ? JSCompiler_object_inline_message_2316 = mountSuspenseOffscreenState(renderLanes) : (JSCompiler_temp = JSCompiler_object_inline_message_2316.cachePool, null !== JSCompiler_temp ? (instance = CacheContext._currentValue, JSCompiler_temp = JSCompiler_temp.parent !== instance ? {
            parent: instance,
            pool: instance
        } : JSCompiler_temp) : JSCompiler_temp = getSuspendedCache(), JSCompiler_object_inline_message_2316 = {
            baseLanes: JSCompiler_object_inline_message_2316.baseLanes | renderLanes,
            cachePool: JSCompiler_temp
        }), JSCompiler_object_inline_componentStack_2319.memoizedState = JSCompiler_object_inline_message_2316, JSCompiler_object_inline_componentStack_2319.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_object_inline_digest_2317, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, JSCompiler_object_inline_stack_2318;
        pushPrimaryTreeSuspenseHandler(workInProgress);
        renderLanes = current.child;
        current = renderLanes.sibling;
        renderLanes = createWorkInProgress(renderLanes, {
            mode: "visible",
            children: JSCompiler_object_inline_stack_2318.children
        });
        renderLanes.return = workInProgress;
        renderLanes.sibling = null;
        null !== current && (JSCompiler_object_inline_digest_2317 = workInProgress.deletions, null === JSCompiler_object_inline_digest_2317 ? (workInProgress.deletions = [
            current
        ], workInProgress.flags |= 16) : JSCompiler_object_inline_digest_2317.push(current));
        workInProgress.child = renderLanes;
        workInProgress.memoizedState = null;
        return renderLanes;
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren) {
        primaryChildren = mountWorkInProgressOffscreenFiber({
            mode: "visible",
            children: primaryChildren
        }, workInProgress.mode);
        primaryChildren.return = workInProgress;
        return workInProgress.child = primaryChildren;
    }
    function mountWorkInProgressOffscreenFiber(offscreenProps, mode) {
        return createFiberFromOffscreen(offscreenProps, mode, 0, null);
    }
    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes) {
        reconcileChildFibers(workInProgress, current.child, null, renderLanes);
        current = mountSuspensePrimaryChildren(workInProgress, workInProgress.pendingProps.children);
        current.flags |= 2;
        workInProgress.memoizedState = null;
        return current;
    }
    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
        fiber.lanes |= renderLanes;
        var alternate = fiber.alternate;
        null !== alternate && (alternate.lanes |= renderLanes);
        scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
    }
    function validateSuspenseListNestedChild(childSlot, index) {
        var isAnArray = isArrayImpl(childSlot);
        childSlot = !isAnArray && "function" === typeof getIteratorFn(childSlot);
        return isAnArray || childSlot ? (isAnArray = isAnArray ? "array" : "iterable", console.error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", isAnArray, index, isAnArray), !1) : !0;
    }
    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress.memoizedState;
        null === renderState ? workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode
        } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.renderingStartTime = 0, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailMode = tailMode);
    }
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps, revealOrder = nextProps.revealOrder, tailMode = nextProps.tail;
        nextProps = nextProps.children;
        if (void 0 !== revealOrder && "forwards" !== revealOrder && "backwards" !== revealOrder && "together" !== revealOrder && !didWarnAboutRevealOrder[revealOrder]) {
            if (didWarnAboutRevealOrder[revealOrder] = !0, "string" === typeof revealOrder) switch(revealOrder.toLowerCase()){
                case "together":
                case "forwards":
                case "backwards":
                    console.error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                case "forward":
                case "backward":
                    console.error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                default:
                    console.error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
            }
            else console.error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
        }
        void 0 === tailMode || didWarnAboutTailOptions[tailMode] || ("collapsed" !== tailMode && "hidden" !== tailMode ? (didWarnAboutTailOptions[tailMode] = !0, console.error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode)) : "forwards" !== revealOrder && "backwards" !== revealOrder && (didWarnAboutTailOptions[tailMode] = !0, console.error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode)));
        a: if (("forwards" === revealOrder || "backwards" === revealOrder) && void 0 !== nextProps && null !== nextProps && !1 !== nextProps) {
            if (isArrayImpl(nextProps)) for(var i = 0; i < nextProps.length; i++){
                if (!validateSuspenseListNestedChild(nextProps[i], i)) break a;
            }
            else if (i = getIteratorFn(nextProps), "function" === typeof i) {
                if (i = i.call(nextProps)) for(var step = i.next(), _i = 0; !step.done; step = i.next()){
                    if (!validateSuspenseListNestedChild(step.value, _i)) break a;
                    _i++;
                }
            } else console.error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
        }
        reconcileChildren(current, workInProgress, nextProps, renderLanes);
        nextProps = suspenseStackCursor.current;
        if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.flags |= 128;
        else {
            if (null !== current && 0 !== (current.flags & 128)) a: for(current = workInProgress.child; null !== current;){
                if (13 === current.tag) null !== current.memoizedState && scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
                else if (19 === current.tag) scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
                else if (null !== current.child) {
                    current.child.return = current;
                    current = current.child;
                    continue;
                }
                if (current === workInProgress) break a;
                for(; null === current.sibling;){
                    if (null === current.return || current.return === workInProgress) break a;
                    current = current.return;
                }
                current.sibling.return = current.return;
                current = current.sibling;
            }
            nextProps &= SubtreeSuspenseContextMask;
        }
        push(suspenseStackCursor, nextProps, workInProgress);
        switch(revealOrder){
            case "forwards":
                renderLanes = workInProgress.child;
                for(revealOrder = null; null !== renderLanes;)current = renderLanes.alternate, null !== current && null === findFirstSuspended(current) && (revealOrder = renderLanes), renderLanes = renderLanes.sibling;
                renderLanes = revealOrder;
                null === renderLanes ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderLanes.sibling, renderLanes.sibling = null);
                initSuspenseListRenderState(workInProgress, !1, revealOrder, renderLanes, tailMode);
                break;
            case "backwards":
                renderLanes = null;
                revealOrder = workInProgress.child;
                for(workInProgress.child = null; null !== revealOrder;){
                    current = revealOrder.alternate;
                    if (null !== current && null === findFirstSuspended(current)) {
                        workInProgress.child = revealOrder;
                        break;
                    }
                    current = revealOrder.sibling;
                    revealOrder.sibling = renderLanes;
                    renderLanes = revealOrder;
                    revealOrder = current;
                }
                initSuspenseListRenderState(workInProgress, !0, renderLanes, null, tailMode);
                break;
            case "together":
                initSuspenseListRenderState(workInProgress, !1, null, null, void 0);
                break;
            default:
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
        null !== current && (workInProgress.dependencies = current.dependencies);
        profilerStartTime = -1;
        workInProgressRootSkippedLanes |= workInProgress.lanes;
        if (0 === (renderLanes & workInProgress.childLanes)) {
            if (null !== current) {
                if (propagateParentContextChanges(current, workInProgress, renderLanes, !1), 0 === (renderLanes & workInProgress.childLanes)) return null;
            } else return null;
        }
        if (null !== current && workInProgress.child !== current.child) throw Error("Resuming work not yet implemented.");
        if (null !== workInProgress.child) {
            current = workInProgress.child;
            renderLanes = createWorkInProgress(current, current.pendingProps);
            workInProgress.child = renderLanes;
            for(renderLanes.return = workInProgress; null !== current.sibling;)current = current.sibling, renderLanes = renderLanes.sibling = createWorkInProgress(current, current.pendingProps), renderLanes.return = workInProgress;
            renderLanes.sibling = null;
        }
        return workInProgress.child;
    }
    function checkScheduledUpdateOrContext(current, renderLanes) {
        if (0 !== (current.lanes & renderLanes)) return !0;
        current = current.dependencies;
        return null !== current && checkIfContextChanged(current) ? !0 : !1;
    }
    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
        switch(workInProgress.tag){
            case 3:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
                resetHydrationState();
                break;
            case 27:
            case 5:
                pushHostContext(workInProgress);
                break;
            case 4:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                break;
            case 10:
                pushProvider(workInProgress, workInProgress.type, workInProgress.memoizedProps.value);
                break;
            case 12:
                0 !== (renderLanes & workInProgress.childLanes) && (workInProgress.flags |= 4);
                workInProgress.flags |= 2048;
                var stateNode = workInProgress.stateNode;
                stateNode.effectDuration = -0;
                stateNode.passiveEffectDuration = -0;
                break;
            case 13:
                stateNode = workInProgress.memoizedState;
                if (null !== stateNode) {
                    if (null !== stateNode.dehydrated) return pushPrimaryTreeSuspenseHandler(workInProgress), workInProgress.flags |= 128, null;
                    if (0 !== (renderLanes & workInProgress.child.childLanes)) return updateSuspenseComponent(current, workInProgress, renderLanes);
                    pushPrimaryTreeSuspenseHandler(workInProgress);
                    current = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                    return null !== current ? current.sibling : null;
                }
                pushPrimaryTreeSuspenseHandler(workInProgress);
                break;
            case 19:
                var didSuspendBefore = 0 !== (current.flags & 128);
                stateNode = 0 !== (renderLanes & workInProgress.childLanes);
                stateNode || (propagateParentContextChanges(current, workInProgress, renderLanes, !1), stateNode = 0 !== (renderLanes & workInProgress.childLanes));
                if (didSuspendBefore) {
                    if (stateNode) return updateSuspenseListComponent(current, workInProgress, renderLanes);
                    workInProgress.flags |= 128;
                }
                didSuspendBefore = workInProgress.memoizedState;
                null !== didSuspendBefore && (didSuspendBefore.rendering = null, didSuspendBefore.tail = null, didSuspendBefore.lastEffect = null);
                push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
                if (stateNode) break;
                else return null;
            case 22:
            case 23:
                return workInProgress.lanes = 0, updateOffscreenComponent(current, workInProgress, renderLanes);
            case 24:
                pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
        }
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    function beginWork(current, workInProgress, renderLanes) {
        if (workInProgress._debugNeedsRemount && null !== current) {
            renderLanes = createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes);
            var returnFiber = workInProgress.return;
            if (null === returnFiber) throw Error("Cannot swap the root fiber.");
            current.alternate = null;
            workInProgress.alternate = null;
            renderLanes.index = workInProgress.index;
            renderLanes.sibling = workInProgress.sibling;
            renderLanes.return = workInProgress.return;
            renderLanes.ref = workInProgress.ref;
            renderLanes._debugInfo = workInProgress._debugInfo;
            if (workInProgress === returnFiber.child) returnFiber.child = renderLanes;
            else {
                var prevSibling = returnFiber.child;
                if (null === prevSibling) throw Error("Expected parent to have a child.");
                for(; prevSibling.sibling !== workInProgress;)if (prevSibling = prevSibling.sibling, null === prevSibling) throw Error("Expected to find the previous sibling.");
                prevSibling.sibling = renderLanes;
            }
            workInProgress = returnFiber.deletions;
            null === workInProgress ? (returnFiber.deletions = [
                current
            ], returnFiber.flags |= 16) : workInProgress.push(current);
            renderLanes.flags |= 2;
            return renderLanes;
        }
        if (null !== current) {
            if (current.memoizedProps !== workInProgress.pendingProps || workInProgress.type !== current.type) didReceiveUpdate = !0;
            else {
                if (!checkScheduledUpdateOrContext(current, renderLanes) && 0 === (workInProgress.flags & 128)) return didReceiveUpdate = !1, attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
                didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;
            }
        } else {
            didReceiveUpdate = !1;
            if (returnFiber = isHydrating) warnIfNotHydrating(), returnFiber = 0 !== (workInProgress.flags & 1048576);
            returnFiber && (returnFiber = workInProgress.index, warnIfNotHydrating(), pushTreeId(workInProgress, treeForkCount, returnFiber));
        }
        workInProgress.lanes = 0;
        switch(workInProgress.tag){
            case 16:
                a: if (returnFiber = workInProgress.pendingProps, current = callLazyInitInDEV(workInProgress.elementType), workInProgress.type = current, "function" === typeof current) shouldConstruct(current) ? (returnFiber = resolveClassComponentProps(current, returnFiber), workInProgress.tag = 1, workInProgress.type = current = resolveFunctionForHotReloading(current), workInProgress = updateClassComponent(null, workInProgress, current, returnFiber, renderLanes)) : (workInProgress.tag = 0, validateFunctionComponentInDev(workInProgress, current), workInProgress.type = current = resolveFunctionForHotReloading(current), workInProgress = updateFunctionComponent(null, workInProgress, current, returnFiber, renderLanes));
                else {
                    if (void 0 !== current && null !== current) {
                        if (prevSibling = current.$$typeof, prevSibling === REACT_FORWARD_REF_TYPE) {
                            workInProgress.tag = 11;
                            workInProgress.type = current = resolveForwardRefForHotReloading(current);
                            workInProgress = updateForwardRef(null, workInProgress, current, returnFiber, renderLanes);
                            break a;
                        } else if (prevSibling === REACT_MEMO_TYPE) {
                            workInProgress.tag = 14;
                            workInProgress = updateMemoComponent(null, workInProgress, current, returnFiber, renderLanes);
                            break a;
                        }
                    }
                    workInProgress = "";
                    null !== current && "object" === typeof current && current.$$typeof === REACT_LAZY_TYPE && (workInProgress = " Did you wrap a component in React.lazy() more than once?");
                    current = getComponentNameFromType(current) || current;
                    throw Error("Element type is invalid. Received a promise that resolves to: " + current + ". Lazy element type must resolve to a class or function." + workInProgress);
                }
                return workInProgress;
            case 0:
                return updateFunctionComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 1:
                return returnFiber = workInProgress.type, prevSibling = resolveClassComponentProps(returnFiber, workInProgress.pendingProps), updateClassComponent(current, workInProgress, returnFiber, prevSibling, renderLanes);
            case 3:
                a: {
                    pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                    if (null === current) throw Error("Should have a current fiber. This is a bug in React.");
                    var nextProps = workInProgress.pendingProps;
                    prevSibling = workInProgress.memoizedState;
                    returnFiber = prevSibling.element;
                    cloneUpdateQueue(current, workInProgress);
                    processUpdateQueue(workInProgress, nextProps, null, renderLanes);
                    var nextState = workInProgress.memoizedState;
                    nextProps = nextState.cache;
                    pushProvider(workInProgress, CacheContext, nextProps);
                    nextProps !== prevSibling.cache && propagateContextChanges(workInProgress, [
                        CacheContext
                    ], renderLanes, !0);
                    suspendIfUpdateReadFromEntangledAsyncAction();
                    nextProps = nextState.element;
                    if (prevSibling.isDehydrated) {
                        if (prevSibling = {
                            element: nextProps,
                            isDehydrated: !1,
                            cache: nextState.cache
                        }, workInProgress.updateQueue.baseState = prevSibling, workInProgress.memoizedState = prevSibling, workInProgress.flags & 256) {
                            workInProgress = mountHostRootWithoutHydrating(current, workInProgress, nextProps, renderLanes);
                            break a;
                        } else if (nextProps !== returnFiber) {
                            returnFiber = createCapturedValueAtFiber(Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress);
                            queueHydrationError(returnFiber);
                            workInProgress = mountHostRootWithoutHydrating(current, workInProgress, nextProps, renderLanes);
                            break a;
                        } else for(nextHydratableInstance = getNextHydratable(workInProgress.stateNode.containerInfo.firstChild), hydrationParentFiber = workInProgress, isHydrating = !0, hydrationErrors = null, didSuspendOrErrorDEV = !1, hydrationDiffRootDEV = null, rootOrSingletonContext = !0, current = mountChildFibers(workInProgress, null, nextProps, renderLanes), workInProgress.child = current; current;)current.flags = current.flags & -3 | 4096, current = current.sibling;
                    } else {
                        resetHydrationState();
                        if (nextProps === returnFiber) {
                            workInProgress = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                            break a;
                        }
                        reconcileChildren(current, workInProgress, nextProps, renderLanes);
                    }
                    workInProgress = workInProgress.child;
                }
                return workInProgress;
            case 26:
                return markRef(current, workInProgress), null === current ? (current = getResource(workInProgress.type, null, workInProgress.pendingProps, null)) ? workInProgress.memoizedState = current : isHydrating || (current = workInProgress.type, renderLanes = workInProgress.pendingProps, returnFiber = requiredContext(rootInstanceStackCursor.current), returnFiber = getOwnerDocumentFromRootContainer(returnFiber).createElement(current), returnFiber[internalInstanceKey] = workInProgress, returnFiber[internalPropsKey] = renderLanes, setInitialProperties(returnFiber, current, renderLanes), markNodeAsHoistable(returnFiber), workInProgress.stateNode = returnFiber) : workInProgress.memoizedState = getResource(workInProgress.type, current.memoizedProps, workInProgress.pendingProps, current.memoizedState), null;
            case 27:
                return pushHostContext(workInProgress), null === current && isHydrating && (prevSibling = requiredContext(rootInstanceStackCursor.current), returnFiber = getHostContext(), prevSibling = workInProgress.stateNode = resolveSingletonInstance(workInProgress.type, workInProgress.pendingProps, prevSibling, returnFiber, !1), didSuspendOrErrorDEV || (returnFiber = diffHydratedProperties(prevSibling, workInProgress.type, workInProgress.pendingProps, returnFiber), null !== returnFiber && (buildHydrationDiffNode(workInProgress, 0).serverProps = returnFiber)), hydrationParentFiber = workInProgress, rootOrSingletonContext = !0, nextHydratableInstance = getNextHydratable(prevSibling.firstChild)), returnFiber = workInProgress.pendingProps.children, null !== current || isHydrating ? reconcileChildren(current, workInProgress, returnFiber, renderLanes) : workInProgress.child = reconcileChildFibers(workInProgress, null, returnFiber, renderLanes), markRef(current, workInProgress), workInProgress.child;
            case 5:
                return null === current && isHydrating && (nextProps = getHostContext(), returnFiber = validateDOMNesting(workInProgress.type, nextProps.ancestorInfo), prevSibling = nextHydratableInstance, (nextState = !prevSibling) || (nextState = canHydrateInstance(prevSibling, workInProgress.type, workInProgress.pendingProps, rootOrSingletonContext), null !== nextState ? (workInProgress.stateNode = nextState, didSuspendOrErrorDEV || (nextProps = diffHydratedProperties(nextState, workInProgress.type, workInProgress.pendingProps, nextProps), null !== nextProps && (buildHydrationDiffNode(workInProgress, 0).serverProps = nextProps)), hydrationParentFiber = workInProgress, nextHydratableInstance = getNextHydratable(nextState.firstChild), rootOrSingletonContext = !1, nextProps = !0) : nextProps = !1, nextState = !nextProps), nextState && (returnFiber && warnNonHydratedInstance(workInProgress, prevSibling), throwOnHydrationMismatch(workInProgress))), pushHostContext(workInProgress), prevSibling = workInProgress.type, nextProps = workInProgress.pendingProps, nextState = null !== current ? current.memoizedProps : null, returnFiber = nextProps.children, shouldSetTextContent(prevSibling, nextProps) ? returnFiber = null : null !== nextState && shouldSetTextContent(prevSibling, nextState) && (workInProgress.flags |= 32), null !== workInProgress.memoizedState && (prevSibling = renderWithHooks(current, workInProgress, TransitionAwareHostComponent, null, null, renderLanes), HostTransitionContext._currentValue = prevSibling), markRef(current, workInProgress), reconcileChildren(current, workInProgress, returnFiber, renderLanes), workInProgress.child;
            case 6:
                return null === current && isHydrating && (current = workInProgress.pendingProps, renderLanes = getHostContext().ancestorInfo.current, current = null != renderLanes ? validateTextNesting(current, renderLanes.tag) : !0, renderLanes = nextHydratableInstance, (returnFiber = !renderLanes) || (returnFiber = canHydrateTextInstance(renderLanes, workInProgress.pendingProps, rootOrSingletonContext), null !== returnFiber ? (workInProgress.stateNode = returnFiber, hydrationParentFiber = workInProgress, nextHydratableInstance = null, returnFiber = !0) : returnFiber = !1, returnFiber = !returnFiber), returnFiber && (current && warnNonHydratedInstance(workInProgress, renderLanes), throwOnHydrationMismatch(workInProgress))), null;
            case 13:
                return updateSuspenseComponent(current, workInProgress, renderLanes);
            case 4:
                return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), returnFiber = workInProgress.pendingProps, null === current ? workInProgress.child = reconcileChildFibers(workInProgress, null, returnFiber, renderLanes) : reconcileChildren(current, workInProgress, returnFiber, renderLanes), workInProgress.child;
            case 11:
                return updateForwardRef(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 7:
                return reconcileChildren(current, workInProgress, workInProgress.pendingProps, renderLanes), workInProgress.child;
            case 8:
                return reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
            case 12:
                return workInProgress.flags |= 4, workInProgress.flags |= 2048, returnFiber = workInProgress.stateNode, returnFiber.effectDuration = -0, returnFiber.passiveEffectDuration = -0, reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
            case 10:
                return returnFiber = workInProgress.type, prevSibling = workInProgress.pendingProps, nextProps = prevSibling.value, "value" in prevSibling || hasWarnedAboutUsingNoValuePropOnContextProvider || (hasWarnedAboutUsingNoValuePropOnContextProvider = !0, console.error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?")), pushProvider(workInProgress, returnFiber, nextProps), reconcileChildren(current, workInProgress, prevSibling.children, renderLanes), workInProgress.child;
            case 9:
                return prevSibling = workInProgress.type._context, returnFiber = workInProgress.pendingProps.children, "function" !== typeof returnFiber && console.error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), prepareToReadContext(workInProgress), prevSibling = readContext(prevSibling), markComponentRenderStarted(workInProgress), returnFiber = callComponentInDEV(returnFiber, prevSibling, void 0), markComponentRenderStopped(), workInProgress.flags |= 1, reconcileChildren(current, workInProgress, returnFiber, renderLanes), workInProgress.child;
            case 14:
                return updateMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 15:
                return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 19:
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
            case 22:
                return updateOffscreenComponent(current, workInProgress, renderLanes);
            case 24:
                return prepareToReadContext(workInProgress), returnFiber = readContext(CacheContext), null === current ? (prevSibling = peekCacheFromPool(), null === prevSibling && (prevSibling = workInProgressRoot, nextProps = createCache(), prevSibling.pooledCache = nextProps, retainCache(nextProps), null !== nextProps && (prevSibling.pooledCacheLanes |= renderLanes), prevSibling = nextProps), workInProgress.memoizedState = {
                    parent: returnFiber,
                    cache: prevSibling
                }, initializeUpdateQueue(workInProgress), pushProvider(workInProgress, CacheContext, prevSibling)) : (0 !== (current.lanes & renderLanes) && (cloneUpdateQueue(current, workInProgress), processUpdateQueue(workInProgress, null, null, renderLanes), suspendIfUpdateReadFromEntangledAsyncAction()), prevSibling = current.memoizedState, nextProps = workInProgress.memoizedState, prevSibling.parent !== returnFiber ? (prevSibling = {
                    parent: returnFiber,
                    cache: returnFiber
                }, workInProgress.memoizedState = prevSibling, 0 === workInProgress.lanes && (workInProgress.memoizedState = workInProgress.updateQueue.baseState = prevSibling), pushProvider(workInProgress, CacheContext, returnFiber)) : (returnFiber = nextProps.cache, pushProvider(workInProgress, CacheContext, returnFiber), returnFiber !== prevSibling.cache && propagateContextChanges(workInProgress, [
                    CacheContext
                ], renderLanes, !0))), reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
            case 29:
                throw workInProgress.pendingProps;
        }
        throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function resetContextDependencies() {
        lastContextDependency = currentlyRenderingFiber = null;
        isDisallowedContextReadInDEV = !1;
    }
    function pushProvider(providerFiber, context, nextValue) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        push(rendererCursorDEV, context._currentRenderer, providerFiber);
        void 0 !== context._currentRenderer && null !== context._currentRenderer && context._currentRenderer !== rendererSigil && console.error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
        context._currentRenderer = rendererSigil;
    }
    function popProvider(context, providerFiber) {
        context._currentValue = valueCursor.current;
        var currentRenderer = rendererCursorDEV.current;
        pop(rendererCursorDEV, providerFiber);
        context._currentRenderer = currentRenderer;
        pop(valueCursor, providerFiber);
    }
    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
        for(; null !== parent;){
            var alternate = parent.alternate;
            (parent.childLanes & renderLanes) !== renderLanes ? (parent.childLanes |= renderLanes, null !== alternate && (alternate.childLanes |= renderLanes)) : null !== alternate && (alternate.childLanes & renderLanes) !== renderLanes && (alternate.childLanes |= renderLanes);
            if (parent === propagationRoot) break;
            parent = parent.return;
        }
        parent !== propagationRoot && console.error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function propagateContextChanges(workInProgress, contexts, renderLanes, forcePropagateEntireTree) {
        var fiber = workInProgress.child;
        null !== fiber && (fiber.return = workInProgress);
        for(; null !== fiber;){
            var list = fiber.dependencies;
            if (null !== list) {
                var nextFiber = fiber.child;
                list = list.firstContext;
                a: for(; null !== list;){
                    var dependency = list;
                    list = fiber;
                    for(var i = 0; i < contexts.length; i++)if (dependency.context === contexts[i]) {
                        list.lanes |= renderLanes;
                        dependency = list.alternate;
                        null !== dependency && (dependency.lanes |= renderLanes);
                        scheduleContextWorkOnParentPath(list.return, renderLanes, workInProgress);
                        forcePropagateEntireTree || (nextFiber = null);
                        break a;
                    }
                    list = dependency.next;
                }
            } else if (18 === fiber.tag) {
                nextFiber = fiber.return;
                if (null === nextFiber) throw Error("We just came from a parent so we must have had a parent. This is a bug in React.");
                nextFiber.lanes |= renderLanes;
                list = nextFiber.alternate;
                null !== list && (list.lanes |= renderLanes);
                scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);
                nextFiber = null;
            } else nextFiber = fiber.child;
            if (null !== nextFiber) nextFiber.return = fiber;
            else for(nextFiber = fiber; null !== nextFiber;){
                if (nextFiber === workInProgress) {
                    nextFiber = null;
                    break;
                }
                fiber = nextFiber.sibling;
                if (null !== fiber) {
                    fiber.return = nextFiber.return;
                    nextFiber = fiber;
                    break;
                }
                nextFiber = nextFiber.return;
            }
            fiber = nextFiber;
        }
    }
    function propagateParentContextChanges(current, workInProgress, renderLanes, forcePropagateEntireTree) {
        current = null;
        for(var parent = workInProgress, isInsidePropagationBailout = !1; null !== parent;){
            if (!isInsidePropagationBailout) {
                if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;
                else if (0 !== (parent.flags & 262144)) break;
            }
            if (10 === parent.tag) {
                var currentParent = parent.alternate;
                if (null === currentParent) throw Error("Should have a current fiber. This is a bug in React.");
                currentParent = currentParent.memoizedProps;
                if (null !== currentParent) {
                    var context = parent.type;
                    objectIs(parent.pendingProps.value, currentParent.value) || (null !== current ? current.push(context) : current = [
                        context
                    ]);
                }
            } else if (parent === hostTransitionProviderCursor.current) {
                currentParent = parent.alternate;
                if (null === currentParent) throw Error("Should have a current fiber. This is a bug in React.");
                currentParent.memoizedState.memoizedState !== parent.memoizedState.memoizedState && (null !== current ? current.push(HostTransitionContext) : current = [
                    HostTransitionContext
                ]);
            }
            parent = parent.return;
        }
        null !== current && propagateContextChanges(workInProgress, current, renderLanes, forcePropagateEntireTree);
        workInProgress.flags |= 262144;
    }
    function checkIfContextChanged(currentDependencies) {
        for(currentDependencies = currentDependencies.firstContext; null !== currentDependencies;){
            if (!objectIs(currentDependencies.context._currentValue, currentDependencies.memoizedValue)) return !0;
            currentDependencies = currentDependencies.next;
        }
        return !1;
    }
    function prepareToReadContext(workInProgress) {
        currentlyRenderingFiber = workInProgress;
        lastContextDependency = null;
        workInProgress = workInProgress.dependencies;
        null !== workInProgress && (workInProgress.firstContext = null);
    }
    function readContext(context) {
        isDisallowedContextReadInDEV && console.error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        return readContextForConsumer(currentlyRenderingFiber, context);
    }
    function readContextDuringReconciliation(consumer, context) {
        null === currentlyRenderingFiber && prepareToReadContext(consumer);
        return readContextForConsumer(consumer, context);
    }
    function readContextForConsumer(consumer, context) {
        var value = context._currentValue;
        context = {
            context: context,
            memoizedValue: value,
            next: null
        };
        if (null === lastContextDependency) {
            if (null === consumer) throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            lastContextDependency = context;
            consumer.dependencies = {
                lanes: 0,
                firstContext: context,
                _debugThenableState: null
            };
            consumer.flags |= 524288;
        } else lastContextDependency = lastContextDependency.next = context;
        return value;
    }
    function initializeUpdateQueue(fiber) {
        fiber.updateQueue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
                pending: null,
                lanes: 0,
                hiddenCallbacks: null
            },
            callbacks: null
        };
    }
    function cloneUpdateQueue(current, workInProgress) {
        current = current.updateQueue;
        workInProgress.updateQueue === current && (workInProgress.updateQueue = {
            baseState: current.baseState,
            firstBaseUpdate: current.firstBaseUpdate,
            lastBaseUpdate: current.lastBaseUpdate,
            shared: current.shared,
            callbacks: null
        });
    }
    function createUpdate(lane) {
        return {
            lane: lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
        };
    }
    function enqueueUpdate(fiber, update, lane) {
        var updateQueue = fiber.updateQueue;
        if (null === updateQueue) return null;
        updateQueue = updateQueue.shared;
        if (currentlyProcessingQueue === updateQueue && !didWarnUpdateInsideUpdate) {
            var componentName = getComponentNameFromFiber(fiber);
            console.error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.\n\nPlease update the following component: %s", componentName);
            didWarnUpdateInsideUpdate = !0;
        }
        if ((executionContext & RenderContext) !== NoContext) return componentName = updateQueue.pending, null === componentName ? update.next = update : (update.next = componentName.next, componentName.next = update), updateQueue.pending = update, update = getRootForUpdatedFiber(fiber), markUpdateLaneFromFiberToRoot(fiber, null, lane), update;
        enqueueUpdate$1(fiber, updateQueue, update, lane);
        return getRootForUpdatedFiber(fiber);
    }
    function entangleTransitions(root, fiber, lane) {
        fiber = fiber.updateQueue;
        if (null !== fiber && (fiber = fiber.shared, 0 !== (lane & 4194176))) {
            var queueLanes = fiber.lanes;
            queueLanes &= root.pendingLanes;
            lane |= queueLanes;
            fiber.lanes = lane;
            markRootEntangled(root, lane);
        }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
        var queue = workInProgress.updateQueue, current = workInProgress.alternate;
        if (null !== current && (current = current.updateQueue, queue === current)) {
            var newFirst = null, newLast = null;
            queue = queue.firstBaseUpdate;
            if (null !== queue) {
                do {
                    var clone = {
                        lane: queue.lane,
                        tag: queue.tag,
                        payload: queue.payload,
                        callback: null,
                        next: null
                    };
                    null === newLast ? newFirst = newLast = clone : newLast = newLast.next = clone;
                    queue = queue.next;
                }while (null !== queue);
                null === newLast ? newFirst = newLast = capturedUpdate : newLast = newLast.next = capturedUpdate;
            } else newFirst = newLast = capturedUpdate;
            queue = {
                baseState: current.baseState,
                firstBaseUpdate: newFirst,
                lastBaseUpdate: newLast,
                shared: current.shared,
                callbacks: current.callbacks
            };
            workInProgress.updateQueue = queue;
            return;
        }
        workInProgress = queue.lastBaseUpdate;
        null === workInProgress ? queue.firstBaseUpdate = capturedUpdate : workInProgress.next = capturedUpdate;
        queue.lastBaseUpdate = capturedUpdate;
    }
    function suspendIfUpdateReadFromEntangledAsyncAction() {
        if (didReadFromEntangledAsyncAction) {
            var entangledActionThenable = currentEntangledActionThenable;
            if (null !== entangledActionThenable) throw entangledActionThenable;
        }
    }
    function processUpdateQueue(workInProgress, props, instance$jscomp$0, renderLanes) {
        didReadFromEntangledAsyncAction = !1;
        var queue = workInProgress.updateQueue;
        hasForceUpdate = !1;
        currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate, lastBaseUpdate = queue.lastBaseUpdate, pendingQueue = queue.shared.pending;
        if (null !== pendingQueue) {
            queue.shared.pending = null;
            var lastPendingUpdate = pendingQueue, firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null;
            null === lastBaseUpdate ? firstBaseUpdate = firstPendingUpdate : lastBaseUpdate.next = firstPendingUpdate;
            lastBaseUpdate = lastPendingUpdate;
            var current = workInProgress.alternate;
            null !== current && (current = current.updateQueue, pendingQueue = current.lastBaseUpdate, pendingQueue !== lastBaseUpdate && (null === pendingQueue ? current.firstBaseUpdate = firstPendingUpdate : pendingQueue.next = firstPendingUpdate, current.lastBaseUpdate = lastPendingUpdate));
        }
        if (null !== firstBaseUpdate) {
            var newState = queue.baseState;
            lastBaseUpdate = 0;
            current = firstPendingUpdate = lastPendingUpdate = null;
            pendingQueue = firstBaseUpdate;
            do {
                var updateLane = pendingQueue.lane & -536870913, isHiddenUpdate = updateLane !== pendingQueue.lane;
                if (isHiddenUpdate ? (workInProgressRootRenderLanes & updateLane) === updateLane : (renderLanes & updateLane) === updateLane) {
                    0 !== updateLane && updateLane === currentEntangledLane && (didReadFromEntangledAsyncAction = !0);
                    null !== current && (current = current.next = {
                        lane: 0,
                        tag: pendingQueue.tag,
                        payload: pendingQueue.payload,
                        callback: null,
                        next: null
                    });
                    a: {
                        updateLane = workInProgress;
                        var partialState = pendingQueue;
                        var nextProps = props, instance = instance$jscomp$0;
                        switch(partialState.tag){
                            case ReplaceState:
                                partialState = partialState.payload;
                                if ("function" === typeof partialState) {
                                    isDisallowedContextReadInDEV = !0;
                                    var nextState = partialState.call(instance, newState, nextProps);
                                    if (updateLane.mode & StrictLegacyMode) {
                                        setIsStrictModeForDevtools(!0);
                                        try {
                                            partialState.call(instance, newState, nextProps);
                                        } finally{
                                            setIsStrictModeForDevtools(!1);
                                        }
                                    }
                                    isDisallowedContextReadInDEV = !1;
                                    newState = nextState;
                                    break a;
                                }
                                newState = partialState;
                                break a;
                            case CaptureUpdate:
                                updateLane.flags = updateLane.flags & -65537 | 128;
                            case UpdateState:
                                nextState = partialState.payload;
                                if ("function" === typeof nextState) {
                                    isDisallowedContextReadInDEV = !0;
                                    partialState = nextState.call(instance, newState, nextProps);
                                    if (updateLane.mode & StrictLegacyMode) {
                                        setIsStrictModeForDevtools(!0);
                                        try {
                                            nextState.call(instance, newState, nextProps);
                                        } finally{
                                            setIsStrictModeForDevtools(!1);
                                        }
                                    }
                                    isDisallowedContextReadInDEV = !1;
                                } else partialState = nextState;
                                if (null === partialState || void 0 === partialState) break a;
                                newState = assign({}, newState, partialState);
                                break a;
                            case ForceUpdate:
                                hasForceUpdate = !0;
                        }
                    }
                    updateLane = pendingQueue.callback;
                    null !== updateLane && (workInProgress.flags |= 64, isHiddenUpdate && (workInProgress.flags |= 8192), isHiddenUpdate = queue.callbacks, null === isHiddenUpdate ? queue.callbacks = [
                        updateLane
                    ] : isHiddenUpdate.push(updateLane));
                } else isHiddenUpdate = {
                    lane: updateLane,
                    tag: pendingQueue.tag,
                    payload: pendingQueue.payload,
                    callback: pendingQueue.callback,
                    next: null
                }, null === current ? (firstPendingUpdate = current = isHiddenUpdate, lastPendingUpdate = newState) : current = current.next = isHiddenUpdate, lastBaseUpdate |= updateLane;
                pendingQueue = pendingQueue.next;
                if (null === pendingQueue) {
                    if (pendingQueue = queue.shared.pending, null === pendingQueue) break;
                    else isHiddenUpdate = pendingQueue, pendingQueue = isHiddenUpdate.next, isHiddenUpdate.next = null, queue.lastBaseUpdate = isHiddenUpdate, queue.shared.pending = null;
                }
            }while (1);
            null === current && (lastPendingUpdate = newState);
            queue.baseState = lastPendingUpdate;
            queue.firstBaseUpdate = firstPendingUpdate;
            queue.lastBaseUpdate = current;
            null === firstBaseUpdate && (queue.shared.lanes = 0);
            workInProgressRootSkippedLanes |= lastBaseUpdate;
            workInProgress.lanes = lastBaseUpdate;
            workInProgress.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
    }
    function callCallback(callback, context) {
        if ("function" !== typeof callback) throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
        callback.call(context);
    }
    function commitHiddenCallbacks(updateQueue, context) {
        var hiddenCallbacks = updateQueue.shared.hiddenCallbacks;
        if (null !== hiddenCallbacks) for(updateQueue.shared.hiddenCallbacks = null, updateQueue = 0; updateQueue < hiddenCallbacks.length; updateQueue++)callCallback(hiddenCallbacks[updateQueue], context);
    }
    function commitCallbacks(updateQueue, context) {
        var callbacks = updateQueue.callbacks;
        if (null !== callbacks) for(updateQueue.callbacks = null, updateQueue = 0; updateQueue < callbacks.length; updateQueue++)callCallback(callbacks[updateQueue], context);
    }
    function shouldProfile(current) {
        return (current.mode & ProfileMode) !== NoMode;
    }
    function commitHookLayoutEffects(finishedWork, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListMount(hookFlags, finishedWork), recordEffectDuration()) : commitHookEffectListMount(hookFlags, finishedWork);
    }
    function commitHookLayoutUnmountEffects(finishedWork, nearestMountedAncestor, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor), recordEffectDuration()) : commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor);
    }
    function commitHookEffectListMount(flags, finishedWork) {
        try {
            var updateQueue = finishedWork.updateQueue, lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
            if (null !== lastEffect) {
                var firstEffect = lastEffect.next;
                updateQueue = firstEffect;
                do {
                    if ((updateQueue.tag & flags) === flags && ((flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted && injectedProfilingHooks.markComponentPassiveEffectMountStarted(finishedWork) : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted && injectedProfilingHooks.markComponentLayoutEffectMountStarted(finishedWork), lastEffect = void 0, (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !0), lastEffect = runWithFiberInDEV(finishedWork, callCreateInDEV, updateQueue), (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !1), (flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped && injectedProfilingHooks.markComponentPassiveEffectMountStopped() : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped && injectedProfilingHooks.markComponentLayoutEffectMountStopped(), void 0 !== lastEffect && "function" !== typeof lastEffect)) {
                        var hookName = void 0;
                        hookName = 0 !== (updateQueue.tag & Layout) ? "useLayoutEffect" : 0 !== (updateQueue.tag & Insertion) ? "useInsertionEffect" : "useEffect";
                        var addendum = void 0;
                        addendum = null === lastEffect ? " You returned null. If your effect does not require clean up, return undefined (or nothing)." : "function" === typeof lastEffect.then ? "\n\nIt looks like you wrote " + hookName + "(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\n" + hookName + "(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://react.dev/link/hooks-data-fetching" : " You returned: " + lastEffect;
                        runWithFiberInDEV(finishedWork, function(n, a) {
                            console.error("%s must not return anything besides a function, which is used for clean-up.%s", n, a);
                        }, hookName, addendum);
                    }
                    updateQueue = updateQueue.next;
                }while (updateQueue !== firstEffect);
            }
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
        try {
            var updateQueue = finishedWork.updateQueue, lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
            if (null !== lastEffect) {
                var firstEffect = lastEffect.next;
                updateQueue = firstEffect;
                do {
                    if ((updateQueue.tag & flags) === flags) {
                        var inst = updateQueue.inst, destroy = inst.destroy;
                        void 0 !== destroy && (inst.destroy = void 0, (flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted && injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(finishedWork) : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted && injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(finishedWork), (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !0), runWithFiberInDEV(finishedWork, callDestroyInDEV, finishedWork, nearestMountedAncestor, destroy), (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !1), (flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped && injectedProfilingHooks.markComponentPassiveEffectUnmountStopped() : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped && injectedProfilingHooks.markComponentLayoutEffectUnmountStopped());
                    }
                    updateQueue = updateQueue.next;
                }while (updateQueue !== firstEffect);
            }
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitHookPassiveMountEffects(finishedWork, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListMount(hookFlags, finishedWork), recordEffectDuration()) : commitHookEffectListMount(hookFlags, finishedWork);
    }
    function commitHookPassiveUnmountEffects(finishedWork, nearestMountedAncestor, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor), recordEffectDuration()) : commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor);
    }
    function commitClassCallbacks(finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        if (null !== updateQueue) {
            var instance = finishedWork.stateNode;
            finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (instance.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), instance.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
            try {
                runWithFiberInDEV(finishedWork, commitCallbacks, updateQueue, instance);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
        }
    }
    function callGetSnapshotBeforeUpdates(instance, prevProps, prevState) {
        return instance.getSnapshotBeforeUpdate(prevProps, prevState);
    }
    function commitClassSnapshot(finishedWork, current) {
        var prevProps = current.memoizedProps, prevState = current.memoizedState;
        current = finishedWork.stateNode;
        finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (current.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), current.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
        try {
            var resolvedPrevProps = resolveClassComponentProps(finishedWork.type, prevProps, finishedWork.elementType === finishedWork.type);
            var snapshot = runWithFiberInDEV(finishedWork, callGetSnapshotBeforeUpdates, current, resolvedPrevProps, prevState);
            prevProps = didWarnAboutUndefinedSnapshotBeforeUpdate;
            void 0 !== snapshot || prevProps.has(finishedWork.type) || (prevProps.add(finishedWork.type), runWithFiberInDEV(finishedWork, function() {
                console.error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
            }));
            current.__reactInternalSnapshotBeforeUpdate = snapshot;
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
        instance.props = resolveClassComponentProps(current.type, current.memoizedProps);
        instance.state = current.memoizedState;
        shouldProfile(current) ? (startEffectTimer(), runWithFiberInDEV(current, callComponentWillUnmountInDEV, current, nearestMountedAncestor, instance), recordEffectDuration()) : runWithFiberInDEV(current, callComponentWillUnmountInDEV, current, nearestMountedAncestor, instance);
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (null !== ref) {
            var instance = finishedWork.stateNode;
            if ("function" === typeof ref) {
                if (shouldProfile(finishedWork)) try {
                    startEffectTimer(), finishedWork.refCleanup = ref(instance);
                } finally{
                    recordEffectDuration();
                }
                else finishedWork.refCleanup = ref(instance);
            } else "string" === typeof ref ? console.error("String refs are no longer supported.") : ref.hasOwnProperty("current") || console.error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork)), ref.current = instance;
        }
    }
    function safelyAttachRef(current, nearestMountedAncestor) {
        try {
            runWithFiberInDEV(current, commitAttachRef, current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    function safelyDetachRef(current, nearestMountedAncestor) {
        var ref = current.ref, refCleanup = current.refCleanup;
        if (null !== ref) {
            if ("function" === typeof refCleanup) try {
                if (shouldProfile(current)) try {
                    startEffectTimer(), runWithFiberInDEV(current, refCleanup);
                } finally{
                    recordEffectDuration(current);
                }
                else runWithFiberInDEV(current, refCleanup);
            } catch (error) {
                captureCommitPhaseError(current, nearestMountedAncestor, error);
            } finally{
                current.refCleanup = null, current = current.alternate, null != current && (current.refCleanup = null);
            }
            else if ("function" === typeof ref) try {
                if (shouldProfile(current)) try {
                    startEffectTimer(), runWithFiberInDEV(current, ref, null);
                } finally{
                    recordEffectDuration(current);
                }
                else runWithFiberInDEV(current, ref, null);
            } catch (error$6) {
                captureCommitPhaseError(current, nearestMountedAncestor, error$6);
            }
            else ref.current = null;
        }
    }
    function commitProfiler(finishedWork, current, commitStartTime, effectDuration) {
        var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onCommit = _finishedWork$memoize.onCommit;
        _finishedWork$memoize = _finishedWork$memoize.onRender;
        current = null === current ? "mount" : "update";
        currentUpdateIsNested && (current = "nested-update");
        "function" === typeof _finishedWork$memoize && _finishedWork$memoize(id, current, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitStartTime);
        "function" === typeof onCommit && onCommit(finishedWork.memoizedProps.id, current, effectDuration, commitStartTime);
    }
    function commitProfilerPostCommitImpl(finishedWork, current, commitStartTime, passiveEffectDuration) {
        var _finishedWork$memoize2 = finishedWork.memoizedProps;
        finishedWork = _finishedWork$memoize2.id;
        _finishedWork$memoize2 = _finishedWork$memoize2.onPostCommit;
        current = null === current ? "mount" : "update";
        currentUpdateIsNested && (current = "nested-update");
        "function" === typeof _finishedWork$memoize2 && _finishedWork$memoize2(finishedWork, current, passiveEffectDuration, commitStartTime);
    }
    function commitHostMount(finishedWork) {
        var type = finishedWork.type, props = finishedWork.memoizedProps, instance = finishedWork.stateNode;
        try {
            runWithFiberInDEV(finishedWork, commitMount, instance, type, props, finishedWork);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitHostUpdate(finishedWork, newProps, oldProps) {
        try {
            runWithFiberInDEV(finishedWork, commitUpdate, finishedWork.stateNode, finishedWork.type, oldProps, newProps, finishedWork);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function isHostParent(fiber) {
        return 5 === fiber.tag || 3 === fiber.tag || 26 === fiber.tag || 27 === fiber.tag || 4 === fiber.tag;
    }
    function getHostSibling(fiber) {
        a: for(;;){
            for(; null === fiber.sibling;){
                if (null === fiber.return || isHostParent(fiber.return)) return null;
                fiber = fiber.return;
            }
            fiber.sibling.return = fiber.return;
            for(fiber = fiber.sibling; 5 !== fiber.tag && 6 !== fiber.tag && 27 !== fiber.tag && 18 !== fiber.tag;){
                if (fiber.flags & 2) continue a;
                if (null === fiber.child || 4 === fiber.tag) continue a;
                else fiber.child.return = fiber, fiber = fiber.child;
            }
            if (!(fiber.flags & 2)) return fiber.stateNode;
        }
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag;
        if (5 === tag || 6 === tag) node = node.stateNode, before ? 8 === parent.nodeType ? parent.parentNode.insertBefore(node, before) : parent.insertBefore(node, before) : (8 === parent.nodeType ? (before = parent.parentNode, before.insertBefore(node, parent)) : (before = parent, before.appendChild(node)), parent = parent._reactRootContainer, null !== parent && void 0 !== parent || null !== before.onclick || (before.onclick = noop$1));
        else if (4 !== tag && 27 !== tag && (node = node.child, null !== node)) for(insertOrAppendPlacementNodeIntoContainer(node, before, parent), node = node.sibling; null !== node;)insertOrAppendPlacementNodeIntoContainer(node, before, parent), node = node.sibling;
    }
    function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag;
        if (5 === tag || 6 === tag) node = node.stateNode, before ? parent.insertBefore(node, before) : parent.appendChild(node);
        else if (4 !== tag && 27 !== tag && (node = node.child, null !== node)) for(insertOrAppendPlacementNode(node, before, parent), node = node.sibling; null !== node;)insertOrAppendPlacementNode(node, before, parent), node = node.sibling;
    }
    function commitPlacement(finishedWork) {
        if (27 !== finishedWork.tag) {
            a: {
                for(var parent = finishedWork.return; null !== parent;){
                    if (isHostParent(parent)) {
                        var parentFiber = parent;
                        break a;
                    }
                    parent = parent.return;
                }
                throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
            }
            switch(parentFiber.tag){
                case 27:
                    parent = parentFiber.stateNode;
                    parentFiber = getHostSibling(finishedWork);
                    insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
                    break;
                case 5:
                    parent = parentFiber.stateNode;
                    parentFiber.flags & 32 && (resetTextContent(parent), parentFiber.flags &= -33);
                    parentFiber = getHostSibling(finishedWork);
                    insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
                    break;
                case 3:
                case 4:
                    parent = parentFiber.stateNode.containerInfo;
                    parentFiber = getHostSibling(finishedWork);
                    insertOrAppendPlacementNodeIntoContainer(finishedWork, parentFiber, parent);
                    break;
                default:
                    throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
            }
        }
    }
    function commitBeforeMutationEffects(root, firstChild) {
        root = root.containerInfo;
        eventsEnabled = _enabled;
        root = getActiveElementDeep(root);
        if (hasSelectionCapabilities(root)) {
            if ("selectionStart" in root) var JSCompiler_temp = {
                start: root.selectionStart,
                end: root.selectionEnd
            };
            else a: {
                JSCompiler_temp = (JSCompiler_temp = root.ownerDocument) && JSCompiler_temp.defaultView || window;
                var selection = JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();
                if (selection && 0 !== selection.rangeCount) {
                    JSCompiler_temp = selection.anchorNode;
                    var anchorOffset = selection.anchorOffset, focusNode = selection.focusNode;
                    selection = selection.focusOffset;
                    try {
                        JSCompiler_temp.nodeType, focusNode.nodeType;
                    } catch (e$2) {
                        JSCompiler_temp = null;
                        break a;
                    }
                    var length = 0, start = -1, end = -1, indexWithinAnchor = 0, indexWithinFocus = 0, node = root, parentNode = null;
                    b: for(;;){
                        for(var next;;){
                            node !== JSCompiler_temp || 0 !== anchorOffset && 3 !== node.nodeType || (start = length + anchorOffset);
                            node !== focusNode || 0 !== selection && 3 !== node.nodeType || (end = length + selection);
                            3 === node.nodeType && (length += node.nodeValue.length);
                            if (null === (next = node.firstChild)) break;
                            parentNode = node;
                            node = next;
                        }
                        for(;;){
                            if (node === root) break b;
                            parentNode === JSCompiler_temp && ++indexWithinAnchor === anchorOffset && (start = length);
                            parentNode === focusNode && ++indexWithinFocus === selection && (end = length);
                            if (null !== (next = node.nextSibling)) break;
                            node = parentNode;
                            parentNode = node.parentNode;
                        }
                        node = next;
                    }
                    JSCompiler_temp = -1 === start || -1 === end ? null : {
                        start: start,
                        end: end
                    };
                } else JSCompiler_temp = null;
            }
            JSCompiler_temp = JSCompiler_temp || {
                start: 0,
                end: 0
            };
        } else JSCompiler_temp = null;
        selectionInformation = {
            focusedElem: root,
            selectionRange: JSCompiler_temp
        };
        _enabled = !1;
        for(nextEffect = firstChild; null !== nextEffect;)if (firstChild = nextEffect, root = firstChild.child, 0 !== (firstChild.subtreeFlags & 1028) && null !== root) root.return = firstChild, nextEffect = root;
        else for(; null !== nextEffect;){
            root = firstChild = nextEffect;
            JSCompiler_temp = root.alternate;
            anchorOffset = root.flags;
            switch(root.tag){
                case 0:
                    break;
                case 11:
                case 15:
                    break;
                case 1:
                    0 !== (anchorOffset & 1024) && null !== JSCompiler_temp && commitClassSnapshot(root, JSCompiler_temp);
                    break;
                case 3:
                    if (0 !== (anchorOffset & 1024)) {
                        if (root = root.stateNode.containerInfo, JSCompiler_temp = root.nodeType, 9 === JSCompiler_temp) clearContainerSparingly(root);
                        else if (1 === JSCompiler_temp) switch(root.nodeName){
                            case "HEAD":
                            case "HTML":
                            case "BODY":
                                clearContainerSparingly(root);
                                break;
                            default:
                                root.textContent = "";
                        }
                    }
                    break;
                case 5:
                case 26:
                case 27:
                case 6:
                case 4:
                case 17:
                    break;
                default:
                    if (0 !== (anchorOffset & 1024)) throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
            root = firstChild.sibling;
            if (null !== root) {
                root.return = firstChild.return;
                nextEffect = root;
                break;
            }
            nextEffect = firstChild.return;
        }
        firstChild = shouldFireAfterActiveInstanceBlur;
        shouldFireAfterActiveInstanceBlur = !1;
        return firstChild;
    }
    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                flags & 4 && commitHookLayoutEffects(finishedWork, Layout | HasEffect);
                break;
            case 1:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                if (flags & 4) {
                    if (finishedRoot = finishedWork.stateNode, null === current) finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (finishedRoot.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), finishedRoot.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance")), shouldProfile(finishedWork) ? (startEffectTimer(), runWithFiberInDEV(finishedWork, callComponentDidMountInDEV, finishedWork, finishedRoot), recordEffectDuration()) : runWithFiberInDEV(finishedWork, callComponentDidMountInDEV, finishedWork, finishedRoot);
                    else {
                        var prevProps = resolveClassComponentProps(finishedWork.type, current.memoizedProps);
                        current = current.memoizedState;
                        finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (finishedRoot.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), finishedRoot.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
                        shouldProfile(finishedWork) ? (startEffectTimer(), runWithFiberInDEV(finishedWork, callComponentDidUpdateInDEV, finishedWork, finishedRoot, prevProps, current, finishedRoot.__reactInternalSnapshotBeforeUpdate), recordEffectDuration()) : runWithFiberInDEV(finishedWork, callComponentDidUpdateInDEV, finishedWork, finishedRoot, prevProps, current, finishedRoot.__reactInternalSnapshotBeforeUpdate);
                    }
                }
                flags & 64 && commitClassCallbacks(finishedWork);
                flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 3:
                current = pushNestedEffectDurations();
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                if (flags & 64 && (flags = finishedWork.updateQueue, null !== flags)) {
                    prevProps = null;
                    if (null !== finishedWork.child) switch(finishedWork.child.tag){
                        case 27:
                        case 5:
                            prevProps = finishedWork.child.stateNode;
                            break;
                        case 1:
                            prevProps = finishedWork.child.stateNode;
                    }
                    try {
                        runWithFiberInDEV(finishedWork, commitCallbacks, flags, prevProps);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                finishedRoot.effectDuration += popNestedEffectDurations(current);
                break;
            case 26:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 27:
            case 5:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                null === current && flags & 4 && commitHostMount(finishedWork);
                flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 12:
                if (flags & 4) {
                    flags = pushNestedEffectDurations();
                    recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                    finishedRoot = finishedWork.stateNode;
                    finishedRoot.effectDuration += bubbleNestedEffectDurations(flags);
                    try {
                        runWithFiberInDEV(finishedWork, commitProfiler, finishedWork, current, commitStartTime, finishedRoot.effectDuration);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                } else recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                break;
            case 13:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
            case 22:
                prevProps = null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;
                if (!prevProps) {
                    current = null !== current && null !== current.memoizedState || offscreenSubtreeWasHidden;
                    var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden, prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeIsHidden = prevProps;
                    (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden ? recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, 0 !== (finishedWork.subtreeFlags & 8772)) : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                    offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                }
                flags & 512 && ("manual" === finishedWork.memoizedProps.mode ? safelyAttachRef(finishedWork, finishedWork.return) : safelyDetachRef(finishedWork, finishedWork.return));
                break;
            default:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        }
    }
    function detachFiberAfterEffects(fiber) {
        var alternate = fiber.alternate;
        null !== alternate && (fiber.alternate = null, detachFiberAfterEffects(alternate));
        fiber.child = null;
        fiber.deletions = null;
        fiber.sibling = null;
        5 === fiber.tag && (alternate = fiber.stateNode, null !== alternate && detachDeletedInstance(alternate));
        fiber.stateNode = null;
        fiber._debugOwner = null;
        fiber.return = null;
        fiber.dependencies = null;
        fiber.memoizedProps = null;
        fiber.memoizedState = null;
        fiber.pendingProps = null;
        fiber.stateNode = null;
        fiber.updateQueue = null;
    }
    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
        for(parent = parent.child; null !== parent;)commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent), parent = parent.sibling;
    }
    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
        if (injectedHook && "function" === typeof injectedHook.onCommitFiberUnmount) try {
            injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
        switch(deletedFiber.tag){
            case 26:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                deletedFiber.memoizedState ? deletedFiber.memoizedState.count-- : deletedFiber.stateNode && (deletedFiber = deletedFiber.stateNode, deletedFiber.parentNode.removeChild(deletedFiber));
                break;
            case 27:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
                var prevHostParent = hostParent, prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                deletedFiber = deletedFiber.stateNode;
                for(finishedRoot = deletedFiber.attributes; finishedRoot.length;)deletedFiber.removeAttributeNode(finishedRoot[0]);
                detachDeletedInstance(deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                break;
            case 5:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
            case 6:
                prevHostParent = hostParent;
                prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (null !== hostParent) {
                    if (hostParentIsContainer) try {
                        runWithFiberInDEV(deletedFiber, removeChildFromContainer, hostParent, deletedFiber.stateNode);
                    } catch (error) {
                        captureCommitPhaseError(deletedFiber, nearestMountedAncestor, error);
                    }
                    else try {
                        runWithFiberInDEV(deletedFiber, removeChild, hostParent, deletedFiber.stateNode);
                    } catch (error) {
                        captureCommitPhaseError(deletedFiber, nearestMountedAncestor, error);
                    }
                }
                break;
            case 18:
                null !== hostParent && (hostParentIsContainer ? (finishedRoot = hostParent, deletedFiber = deletedFiber.stateNode, 8 === finishedRoot.nodeType ? clearSuspenseBoundary(finishedRoot.parentNode, deletedFiber) : 1 === finishedRoot.nodeType && clearSuspenseBoundary(finishedRoot, deletedFiber), retryIfBlockedOn(finishedRoot)) : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));
                break;
            case 4:
                prevHostParent = hostParent;
                prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = !0;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                break;
            case 0:
            case 11:
            case 14:
            case 15:
                offscreenSubtreeWasHidden || commitHookEffectListUnmount(Insertion, deletedFiber, nearestMountedAncestor);
                offscreenSubtreeWasHidden || commitHookLayoutUnmountEffects(deletedFiber, nearestMountedAncestor, Layout);
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            case 1:
                offscreenSubtreeWasHidden || (safelyDetachRef(deletedFiber, nearestMountedAncestor), prevHostParent = deletedFiber.stateNode, "function" === typeof prevHostParent.componentWillUnmount && safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, prevHostParent));
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            case 21:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            case 22:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
                offscreenSubtreeWasHidden = (prevHostParent = offscreenSubtreeWasHidden) || null !== deletedFiber.memoizedState;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                offscreenSubtreeWasHidden = prevHostParent;
                break;
            default:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        }
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        if (null === finishedWork.memoizedState && (finishedRoot = finishedWork.alternate, null !== finishedRoot && (finishedRoot = finishedRoot.memoizedState, null !== finishedRoot && (finishedRoot = finishedRoot.dehydrated, null !== finishedRoot)))) try {
            runWithFiberInDEV(finishedWork, commitHydratedSuspenseInstance, finishedRoot);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function getRetryCache(finishedWork) {
        switch(finishedWork.tag){
            case 13:
            case 19:
                var retryCache = finishedWork.stateNode;
                null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet());
                return retryCache;
            case 22:
                return finishedWork = finishedWork.stateNode, retryCache = finishedWork._retryCache, null === retryCache && (retryCache = finishedWork._retryCache = new PossiblyWeakSet()), retryCache;
            default:
                throw Error("Unexpected Suspense handler tag (" + finishedWork.tag + "). This is a bug in React.");
        }
    }
    function attachSuspenseRetryListeners(finishedWork, wakeables) {
        var retryCache = getRetryCache(finishedWork);
        wakeables.forEach(function(wakeable) {
            var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
            if (!retryCache.has(wakeable)) {
                retryCache.add(wakeable);
                if (isDevToolsPresent) {
                    if (null !== inProgressLanes && null !== inProgressRoot) restorePendingUpdaters(inProgressRoot, inProgressLanes);
                    else throw Error("Expected finished root and lanes to be set. This is a bug in React.");
                }
                wakeable.then(retry, retry);
            }
        });
    }
    function commitMutationEffects(root, finishedWork, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        commitMutationEffectsOnFiber(finishedWork, root);
        inProgressRoot = inProgressLanes = null;
    }
    function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {
        var deletions = parentFiber.deletions;
        if (null !== deletions) for(var i = 0; i < deletions.length; i++){
            var root = root$jscomp$0, returnFiber = parentFiber, deletedFiber = deletions[i], parent = returnFiber;
            a: for(; null !== parent;){
                switch(parent.tag){
                    case 27:
                    case 5:
                        hostParent = parent.stateNode;
                        hostParentIsContainer = !1;
                        break a;
                    case 3:
                        hostParent = parent.stateNode.containerInfo;
                        hostParentIsContainer = !0;
                        break a;
                    case 4:
                        hostParent = parent.stateNode.containerInfo;
                        hostParentIsContainer = !0;
                        break a;
                }
                parent = parent.return;
            }
            if (null === hostParent) throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
            commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
            hostParent = null;
            hostParentIsContainer = !1;
            root = deletedFiber;
            returnFiber = root.alternate;
            null !== returnFiber && (returnFiber.return = null);
            root.return = null;
        }
        if (parentFiber.subtreeFlags & 13878) for(parentFiber = parentFiber.child; null !== parentFiber;)commitMutationEffectsOnFiber(parentFiber, root$jscomp$0), parentFiber = parentFiber.sibling;
    }
    function commitMutationEffectsOnFiber(finishedWork, root) {
        var current = finishedWork.alternate, flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 14:
            case 15:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 4 && (commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return), commitHookEffectListMount(Insertion | HasEffect, finishedWork), commitHookLayoutUnmountEffects(finishedWork, finishedWork.return, Layout | HasEffect));
                break;
            case 1:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                flags & 64 && offscreenSubtreeIsHidden && (finishedWork = finishedWork.updateQueue, null !== finishedWork && (flags = finishedWork.callbacks, null !== flags && (current = finishedWork.shared.hiddenCallbacks, finishedWork.shared.hiddenCallbacks = null === current ? flags : current.concat(flags))));
                break;
            case 26:
                var hoistableRoot = currentHoistableRoot;
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                if (flags & 4) {
                    if (root = null !== current ? current.memoizedState : null, flags = finishedWork.memoizedState, null === current) {
                        if (null === flags) {
                            if (null === finishedWork.stateNode) {
                                a: {
                                    flags = finishedWork.type;
                                    current = finishedWork.memoizedProps;
                                    root = hoistableRoot.ownerDocument || hoistableRoot;
                                    b: switch(flags){
                                        case "title":
                                            hoistableRoot = root.getElementsByTagName("title")[0];
                                            if (!hoistableRoot || hoistableRoot[internalHoistableMarker] || hoistableRoot[internalInstanceKey] || hoistableRoot.namespaceURI === SVG_NAMESPACE || hoistableRoot.hasAttribute("itemprop")) hoistableRoot = root.createElement(flags), root.head.insertBefore(hoistableRoot, root.querySelector("head > title"));
                                            setInitialProperties(hoistableRoot, flags, current);
                                            hoistableRoot[internalInstanceKey] = finishedWork;
                                            markNodeAsHoistable(hoistableRoot);
                                            flags = hoistableRoot;
                                            break a;
                                        case "link":
                                            var maybeNodes = getHydratableHoistableCache("link", "href", root).get(flags + (current.href || ""));
                                            if (maybeNodes) {
                                                for(var i = 0; i < maybeNodes.length; i++)if (hoistableRoot = maybeNodes[i], hoistableRoot.getAttribute("href") === (null == current.href ? null : current.href) && hoistableRoot.getAttribute("rel") === (null == current.rel ? null : current.rel) && hoistableRoot.getAttribute("title") === (null == current.title ? null : current.title) && hoistableRoot.getAttribute("crossorigin") === (null == current.crossOrigin ? null : current.crossOrigin)) {
                                                    maybeNodes.splice(i, 1);
                                                    break b;
                                                }
                                            }
                                            hoistableRoot = root.createElement(flags);
                                            setInitialProperties(hoistableRoot, flags, current);
                                            root.head.appendChild(hoistableRoot);
                                            break;
                                        case "meta":
                                            if (maybeNodes = getHydratableHoistableCache("meta", "content", root).get(flags + (current.content || ""))) {
                                                for(i = 0; i < maybeNodes.length; i++)if (hoistableRoot = maybeNodes[i], checkAttributeStringCoercion(current.content, "content"), hoistableRoot.getAttribute("content") === (null == current.content ? null : "" + current.content) && hoistableRoot.getAttribute("name") === (null == current.name ? null : current.name) && hoistableRoot.getAttribute("property") === (null == current.property ? null : current.property) && hoistableRoot.getAttribute("http-equiv") === (null == current.httpEquiv ? null : current.httpEquiv) && hoistableRoot.getAttribute("charset") === (null == current.charSet ? null : current.charSet)) {
                                                    maybeNodes.splice(i, 1);
                                                    break b;
                                                }
                                            }
                                            hoistableRoot = root.createElement(flags);
                                            setInitialProperties(hoistableRoot, flags, current);
                                            root.head.appendChild(hoistableRoot);
                                            break;
                                        default:
                                            throw Error('getNodesForType encountered a type it did not expect: "' + flags + '". This is a bug in React.');
                                    }
                                    hoistableRoot[internalInstanceKey] = finishedWork;
                                    markNodeAsHoistable(hoistableRoot);
                                    flags = hoistableRoot;
                                }
                                finishedWork.stateNode = flags;
                            } else mountHoistable(hoistableRoot, finishedWork.type, finishedWork.stateNode);
                        } else finishedWork.stateNode = acquireResource(hoistableRoot, flags, finishedWork.memoizedProps);
                    } else root !== flags ? (null === root ? null !== current.stateNode && (current = current.stateNode, current.parentNode.removeChild(current)) : root.count--, null === flags ? mountHoistable(hoistableRoot, finishedWork.type, finishedWork.stateNode) : acquireResource(hoistableRoot, flags, finishedWork.memoizedProps)) : null === flags && null !== finishedWork.stateNode && commitHostUpdate(finishedWork, finishedWork.memoizedProps, current.memoizedProps);
                }
                break;
            case 27:
                if (flags & 4 && null === finishedWork.alternate) {
                    hoistableRoot = finishedWork.stateNode;
                    maybeNodes = finishedWork.memoizedProps;
                    try {
                        for(i = hoistableRoot.firstChild; i;){
                            var nextNode = i.nextSibling, nodeName = i.nodeName;
                            i[internalHoistableMarker] || "HEAD" === nodeName || "BODY" === nodeName || "SCRIPT" === nodeName || "STYLE" === nodeName || "LINK" === nodeName && "stylesheet" === i.rel.toLowerCase() || hoistableRoot.removeChild(i);
                            i = nextNode;
                        }
                        runWithFiberInDEV(finishedWork, acquireSingletonInstance, finishedWork.type, maybeNodes, hoistableRoot, finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
            case 5:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                if (finishedWork.flags & 32) {
                    root = finishedWork.stateNode;
                    try {
                        runWithFiberInDEV(finishedWork, resetTextContent, root);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                flags & 4 && null != finishedWork.stateNode && (root = finishedWork.memoizedProps, commitHostUpdate(finishedWork, root, null !== current ? current.memoizedProps : root));
                flags & 1024 && (needsFormReset = !0, "form" !== finishedWork.type && console.error("Unexpected host component type. Expected a form. This is a bug in React."));
                break;
            case 6:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & 4) {
                    if (null === finishedWork.stateNode) throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                    flags = finishedWork.memoizedProps;
                    current = null !== current ? current.memoizedProps : flags;
                    root = finishedWork.stateNode;
                    try {
                        runWithFiberInDEV(finishedWork, commitTextUpdate, root, current, flags);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                break;
            case 3:
                hoistableRoot = pushNestedEffectDurations();
                tagCaches = null;
                maybeNodes = currentHoistableRoot;
                currentHoistableRoot = getHoistableRoot(root.containerInfo);
                recursivelyTraverseMutationEffects(root, finishedWork);
                currentHoistableRoot = maybeNodes;
                commitReconciliationEffects(finishedWork);
                if (flags & 4 && null !== current && current.memoizedState.isDehydrated) try {
                    runWithFiberInDEV(finishedWork, commitHydratedContainer, root.containerInfo);
                } catch (error) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
                needsFormReset && (needsFormReset = !1, recursivelyResetForms(finishedWork));
                root.effectDuration += popNestedEffectDurations(hoistableRoot);
                break;
            case 4:
                flags = currentHoistableRoot;
                currentHoistableRoot = getHoistableRoot(finishedWork.stateNode.containerInfo);
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                currentHoistableRoot = flags;
                break;
            case 12:
                flags = pushNestedEffectDurations();
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                finishedWork.stateNode.effectDuration += bubbleNestedEffectDurations(flags);
                break;
            case 13:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                finishedWork.child.flags & 8192 && null !== finishedWork.memoizedState !== (null !== current && null !== current.memoizedState) && (globalMostRecentFallbackTime = now$1());
                flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (finishedWork.updateQueue = null, attachSuspenseRetryListeners(finishedWork, flags)));
                break;
            case 22:
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                i = null !== finishedWork.memoizedState;
                nextNode = null !== current && null !== current.memoizedState;
                nodeName = offscreenSubtreeIsHidden;
                var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeIsHidden = nodeName || i;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || nextNode;
                recursivelyTraverseMutationEffects(root, finishedWork);
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                offscreenSubtreeIsHidden = nodeName;
                commitReconciliationEffects(finishedWork);
                root = finishedWork.stateNode;
                root._current = finishedWork;
                root._visibility &= ~OffscreenDetached;
                root._visibility |= root._pendingVisibility & OffscreenDetached;
                if (flags & 8192 && (root._visibility = i ? root._visibility & ~OffscreenVisible : root._visibility | OffscreenVisible, i && (root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden, null === current || nextNode || root || recursivelyTraverseDisappearLayoutEffects(finishedWork)), null === finishedWork.memoizedProps || "manual" !== finishedWork.memoizedProps.mode)) a: for(current = null, root = finishedWork;;){
                    if (5 === root.tag || 26 === root.tag || 27 === root.tag) {
                        if (null === current) {
                            nextNode = current = root;
                            try {
                                hoistableRoot = nextNode.stateNode, i ? runWithFiberInDEV(nextNode, hideInstance, hoistableRoot) : runWithFiberInDEV(nextNode, unhideInstance, nextNode.stateNode, nextNode.memoizedProps);
                            } catch (error) {
                                captureCommitPhaseError(nextNode, nextNode.return, error);
                            }
                        }
                    } else if (6 === root.tag) {
                        if (null === current) {
                            nextNode = root;
                            try {
                                maybeNodes = nextNode.stateNode, i ? runWithFiberInDEV(nextNode, hideTextInstance, maybeNodes) : runWithFiberInDEV(nextNode, unhideTextInstance, maybeNodes, nextNode.memoizedProps);
                            } catch (error) {
                                captureCommitPhaseError(nextNode, nextNode.return, error);
                            }
                        }
                    } else if ((22 !== root.tag && 23 !== root.tag || null === root.memoizedState || root === finishedWork) && null !== root.child) {
                        root.child.return = root;
                        root = root.child;
                        continue;
                    }
                    if (root === finishedWork) break a;
                    for(; null === root.sibling;){
                        if (null === root.return || root.return === finishedWork) break a;
                        current === root && (current = null);
                        root = root.return;
                    }
                    current === root && (current = null);
                    root.sibling.return = root.return;
                    root = root.sibling;
                }
                flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (current = flags.retryQueue, null !== current && (flags.retryQueue = null, attachSuspenseRetryListeners(finishedWork, current))));
                break;
            case 19:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (finishedWork.updateQueue = null, attachSuspenseRetryListeners(finishedWork, flags)));
                break;
            case 21:
                break;
            default:
                recursivelyTraverseMutationEffects(root, finishedWork), commitReconciliationEffects(finishedWork);
        }
    }
    function commitReconciliationEffects(finishedWork) {
        var flags = finishedWork.flags;
        if (flags & 2) {
            try {
                runWithFiberInDEV(finishedWork, commitPlacement, finishedWork);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
            finishedWork.flags &= -3;
        }
        flags & 4096 && (finishedWork.flags &= -4097);
    }
    function recursivelyResetForms(parentFiber) {
        if (parentFiber.subtreeFlags & 1024) for(parentFiber = parentFiber.child; null !== parentFiber;){
            var fiber = parentFiber;
            recursivelyResetForms(fiber);
            5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();
            parentFiber = parentFiber.sibling;
        }
    }
    function commitLayoutEffects(finishedWork, root, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork);
        inProgressRoot = inProgressLanes = null;
    }
    function recursivelyTraverseLayoutEffects(root, parentFiber) {
        if (parentFiber.subtreeFlags & 8772) for(parentFiber = parentFiber.child; null !== parentFiber;)commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber), parentFiber = parentFiber.sibling;
    }
    function disappearLayoutEffects(finishedWork) {
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 14:
            case 15:
                commitHookLayoutUnmountEffects(finishedWork, finishedWork.return, Layout);
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 1:
                safelyDetachRef(finishedWork, finishedWork.return);
                var instance = finishedWork.stateNode;
                "function" === typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(finishedWork, finishedWork.return, instance);
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 26:
            case 27:
            case 5:
                safelyDetachRef(finishedWork, finishedWork.return);
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 22:
                safelyDetachRef(finishedWork, finishedWork.return);
                null === finishedWork.memoizedState && recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            default:
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
        }
    }
    function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
        for(parentFiber = parentFiber.child; null !== parentFiber;)disappearLayoutEffects(parentFiber), parentFiber = parentFiber.sibling;
    }
    function reappearLayoutEffects(finishedRoot, current, finishedWork, includeWorkInProgressEffects) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                commitHookLayoutEffects(finishedWork, Layout);
                break;
            case 1:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                current = finishedWork.stateNode;
                "function" === typeof current.componentDidMount && runWithFiberInDEV(finishedWork, callComponentDidMountInDEV, finishedWork, current);
                current = finishedWork.updateQueue;
                if (null !== current) {
                    finishedRoot = finishedWork.stateNode;
                    try {
                        runWithFiberInDEV(finishedWork, commitHiddenCallbacks, current, finishedRoot);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                includeWorkInProgressEffects && flags & 64 && commitClassCallbacks(finishedWork);
                safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 26:
            case 27:
            case 5:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                includeWorkInProgressEffects && null === current && flags & 4 && commitHostMount(finishedWork);
                safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 12:
                if (includeWorkInProgressEffects && flags & 4) {
                    flags = pushNestedEffectDurations();
                    recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                    includeWorkInProgressEffects = finishedWork.stateNode;
                    includeWorkInProgressEffects.effectDuration += bubbleNestedEffectDurations(flags);
                    try {
                        runWithFiberInDEV(finishedWork, commitProfiler, finishedWork, current, commitStartTime, includeWorkInProgressEffects.effectDuration);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                } else recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                break;
            case 13:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                includeWorkInProgressEffects && flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
            case 22:
                null === finishedWork.memoizedState && recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                safelyAttachRef(finishedWork, finishedWork.return);
                break;
            default:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
        }
    }
    function recursivelyTraverseReappearLayoutEffects(finishedRoot, parentFiber, includeWorkInProgressEffects) {
        includeWorkInProgressEffects = includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);
        for(parentFiber = parentFiber.child; null !== parentFiber;)reappearLayoutEffects(finishedRoot, parentFiber.alternate, parentFiber, includeWorkInProgressEffects), parentFiber = parentFiber.sibling;
    }
    function commitOffscreenPassiveMountEffects(current, finishedWork) {
        var previousCache = null;
        null !== current && null !== current.memoizedState && null !== current.memoizedState.cachePool && (previousCache = current.memoizedState.cachePool.pool);
        current = null;
        null !== finishedWork.memoizedState && null !== finishedWork.memoizedState.cachePool && (current = finishedWork.memoizedState.cachePool.pool);
        current !== previousCache && (null != current && retainCache(current), null != previousCache && releaseCache(previousCache));
    }
    function commitCachePassiveMountEffect(current, finishedWork) {
        current = null;
        null !== finishedWork.alternate && (current = finishedWork.alternate.memoizedState.cache);
        finishedWork = finishedWork.memoizedState.cache;
        finishedWork !== current && (retainCache(finishedWork), null != current && releaseCache(current));
    }
    function recursivelyTraversePassiveMountEffects(root, parentFiber, committedLanes, committedTransitions) {
        if (parentFiber.subtreeFlags & 10256) for(parentFiber = parentFiber.child; null !== parentFiber;)commitPassiveMountOnFiber(root, parentFiber, committedLanes, committedTransitions), parentFiber = parentFiber.sibling;
    }
    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                flags & 2048 && commitHookPassiveMountEffects(finishedWork, Passive | HasEffect);
                break;
            case 3:
                var prevEffectDuration = pushNestedEffectDurations();
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                flags & 2048 && (committedLanes = null, null !== finishedWork.alternate && (committedLanes = finishedWork.alternate.memoizedState.cache), finishedWork = finishedWork.memoizedState.cache, finishedWork !== committedLanes && (retainCache(finishedWork), null != committedLanes && releaseCache(committedLanes)));
                finishedRoot.passiveEffectDuration += popNestedEffectDurations(prevEffectDuration);
                break;
            case 12:
                if (flags & 2048) {
                    prevEffectDuration = pushNestedEffectDurations();
                    recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                    finishedRoot = finishedWork.stateNode;
                    finishedRoot.passiveEffectDuration += bubbleNestedEffectDurations(prevEffectDuration);
                    try {
                        runWithFiberInDEV(finishedWork, commitProfilerPostCommitImpl, finishedWork, finishedWork.alternate, commitStartTime, finishedRoot.passiveEffectDuration);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                } else recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                break;
            case 23:
                break;
            case 22:
                prevEffectDuration = finishedWork.stateNode;
                null !== finishedWork.memoizedState ? prevEffectDuration._visibility & OffscreenPassiveEffectsConnected ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions) : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork) : prevEffectDuration._visibility & OffscreenPassiveEffectsConnected ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions) : (prevEffectDuration._visibility |= OffscreenPassiveEffectsConnected, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, 0 !== (finishedWork.subtreeFlags & 10256)));
                flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
                break;
            case 24:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
                break;
            default:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
        }
    }
    function recursivelyTraverseReconnectPassiveEffects(finishedRoot, parentFiber, committedLanes, committedTransitions, includeWorkInProgressEffects) {
        includeWorkInProgressEffects = includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);
        for(parentFiber = parentFiber.child; null !== parentFiber;)reconnectPassiveEffects(finishedRoot, parentFiber, committedLanes, committedTransitions, includeWorkInProgressEffects), parentFiber = parentFiber.sibling;
    }
    function reconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
                commitHookPassiveMountEffects(finishedWork, Passive);
                break;
            case 23:
                break;
            case 22:
                var _instance2 = finishedWork.stateNode;
                null !== finishedWork.memoizedState ? _instance2._visibility & OffscreenPassiveEffectsConnected ? recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects) : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork) : (_instance2._visibility |= OffscreenPassiveEffectsConnected, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects));
                includeWorkInProgressEffects && flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
                break;
            case 24:
                recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
                includeWorkInProgressEffects && flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
                break;
            default:
                recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
        }
    }
    function recursivelyTraverseAtomicPassiveEffects(finishedRoot$jscomp$0, parentFiber) {
        if (parentFiber.subtreeFlags & 10256) for(parentFiber = parentFiber.child; null !== parentFiber;){
            var finishedRoot = finishedRoot$jscomp$0, finishedWork = parentFiber, flags = finishedWork.flags;
            switch(finishedWork.tag){
                case 22:
                    recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
                    flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
                    break;
                case 24:
                    recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
                    flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
                    break;
                default:
                    recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
            }
            parentFiber = parentFiber.sibling;
        }
    }
    function recursivelyAccumulateSuspenseyCommit(parentFiber) {
        if (parentFiber.subtreeFlags & suspenseyCommitFlag) for(parentFiber = parentFiber.child; null !== parentFiber;)accumulateSuspenseyCommitOnFiber(parentFiber), parentFiber = parentFiber.sibling;
    }
    function accumulateSuspenseyCommitOnFiber(fiber) {
        switch(fiber.tag){
            case 26:
                recursivelyAccumulateSuspenseyCommit(fiber);
                fiber.flags & suspenseyCommitFlag && null !== fiber.memoizedState && suspendResource(currentHoistableRoot, fiber.memoizedState, fiber.memoizedProps);
                break;
            case 5:
                recursivelyAccumulateSuspenseyCommit(fiber);
                break;
            case 3:
            case 4:
                var previousHoistableRoot = currentHoistableRoot;
                currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);
                recursivelyAccumulateSuspenseyCommit(fiber);
                currentHoistableRoot = previousHoistableRoot;
                break;
            case 22:
                null === fiber.memoizedState && (previousHoistableRoot = fiber.alternate, null !== previousHoistableRoot && null !== previousHoistableRoot.memoizedState ? (previousHoistableRoot = suspenseyCommitFlag, suspenseyCommitFlag = 16777216, recursivelyAccumulateSuspenseyCommit(fiber), suspenseyCommitFlag = previousHoistableRoot) : recursivelyAccumulateSuspenseyCommit(fiber));
                break;
            default:
                recursivelyAccumulateSuspenseyCommit(fiber);
        }
    }
    function detachAlternateSiblings(parentFiber) {
        var previousFiber = parentFiber.alternate;
        if (null !== previousFiber && (parentFiber = previousFiber.child, null !== parentFiber)) {
            previousFiber.child = null;
            do previousFiber = parentFiber.sibling, parentFiber.sibling = null, parentFiber = previousFiber;
            while (null !== parentFiber);
        }
    }
    function recursivelyTraversePassiveUnmountEffects(parentFiber) {
        var deletions = parentFiber.deletions;
        if (0 !== (parentFiber.flags & 16)) {
            if (null !== deletions) for(var i = 0; i < deletions.length; i++){
                var childToDelete = deletions[i];
                nextEffect = childToDelete;
                commitPassiveUnmountEffectsInsideOfDeletedTree_begin(childToDelete, parentFiber);
            }
            detachAlternateSiblings(parentFiber);
        }
        if (parentFiber.subtreeFlags & 10256) for(parentFiber = parentFiber.child; null !== parentFiber;)commitPassiveUnmountOnFiber(parentFiber), parentFiber = parentFiber.sibling;
    }
    function commitPassiveUnmountOnFiber(finishedWork) {
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraversePassiveUnmountEffects(finishedWork);
                finishedWork.flags & 2048 && commitHookPassiveUnmountEffects(finishedWork, finishedWork.return, Passive | HasEffect);
                break;
            case 3:
                var prevEffectDuration = pushNestedEffectDurations();
                recursivelyTraversePassiveUnmountEffects(finishedWork);
                finishedWork.stateNode.passiveEffectDuration += popNestedEffectDurations(prevEffectDuration);
                break;
            case 12:
                prevEffectDuration = pushNestedEffectDurations();
                recursivelyTraversePassiveUnmountEffects(finishedWork);
                finishedWork.stateNode.passiveEffectDuration += bubbleNestedEffectDurations(prevEffectDuration);
                break;
            case 22:
                prevEffectDuration = finishedWork.stateNode;
                null !== finishedWork.memoizedState && prevEffectDuration._visibility & OffscreenPassiveEffectsConnected && (null === finishedWork.return || 13 !== finishedWork.return.tag) ? (prevEffectDuration._visibility &= ~OffscreenPassiveEffectsConnected, recursivelyTraverseDisconnectPassiveEffects(finishedWork)) : recursivelyTraversePassiveUnmountEffects(finishedWork);
                break;
            default:
                recursivelyTraversePassiveUnmountEffects(finishedWork);
        }
    }
    function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {
        var deletions = parentFiber.deletions;
        if (0 !== (parentFiber.flags & 16)) {
            if (null !== deletions) for(var i = 0; i < deletions.length; i++){
                var childToDelete = deletions[i];
                nextEffect = childToDelete;
                commitPassiveUnmountEffectsInsideOfDeletedTree_begin(childToDelete, parentFiber);
            }
            detachAlternateSiblings(parentFiber);
        }
        for(parentFiber = parentFiber.child; null !== parentFiber;)disconnectPassiveEffect(parentFiber), parentFiber = parentFiber.sibling;
    }
    function disconnectPassiveEffect(finishedWork) {
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                commitHookPassiveUnmountEffects(finishedWork, finishedWork.return, Passive);
                recursivelyTraverseDisconnectPassiveEffects(finishedWork);
                break;
            case 22:
                var instance = finishedWork.stateNode;
                instance._visibility & OffscreenPassiveEffectsConnected && (instance._visibility &= ~OffscreenPassiveEffectsConnected, recursivelyTraverseDisconnectPassiveEffects(finishedWork));
                break;
            default:
                recursivelyTraverseDisconnectPassiveEffects(finishedWork);
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
        for(; null !== nextEffect;){
            var fiber = nextEffect, current = fiber;
            switch(current.tag){
                case 0:
                case 11:
                case 15:
                    commitHookPassiveUnmountEffects(current, nearestMountedAncestor, Passive);
                    break;
                case 23:
                case 22:
                    null !== current.memoizedState && null !== current.memoizedState.cachePool && (current = current.memoizedState.cachePool.pool, null != current && retainCache(current));
                    break;
                case 24:
                    releaseCache(current.memoizedState.cache);
            }
            current = fiber.child;
            if (null !== current) current.return = fiber, nextEffect = current;
            else a: for(fiber = deletedSubtreeRoot; null !== nextEffect;){
                current = nextEffect;
                var sibling = current.sibling, returnFiber = current.return;
                detachFiberAfterEffects(current);
                if (current === fiber) {
                    nextEffect = null;
                    break a;
                }
                if (null !== sibling) {
                    sibling.return = returnFiber;
                    nextEffect = sibling;
                    break a;
                }
                nextEffect = returnFiber;
            }
        }
    }
    function FiberNode(tag, pendingProps, key, mode) {
        this.tag = tag;
        this.key = key;
        this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
        this.index = 0;
        this.refCleanup = this.ref = null;
        this.pendingProps = pendingProps;
        this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
        this.mode = mode;
        this.subtreeFlags = this.flags = 0;
        this.deletions = null;
        this.childLanes = this.lanes = 0;
        this.alternate = null;
        this.actualDuration = -0;
        this.actualStartTime = -1.1;
        this.treeBaseDuration = this.selfBaseDuration = -0;
        this._debugOwner = this._debugInfo = null;
        this._debugNeedsRemount = !1;
        this._debugHookTypes = null;
        hasBadMapPolyfill || "function" !== typeof Object.preventExtensions || Object.preventExtensions(this);
    }
    function shouldConstruct(Component) {
        Component = Component.prototype;
        return !(!Component || !Component.isReactComponent);
    }
    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress._debugOwner = current._debugOwner, workInProgress._debugHookTypes = current._debugHookTypes, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.type = current.type, workInProgress.flags = 0, workInProgress.subtreeFlags = 0, workInProgress.deletions = null, workInProgress.actualDuration = -0, workInProgress.actualStartTime = -1.1);
        workInProgress.flags = current.flags & 31457280;
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue;
        pendingProps = current.dependencies;
        workInProgress.dependencies = null === pendingProps ? null : {
            lanes: pendingProps.lanes,
            firstContext: pendingProps.firstContext,
            _debugThenableState: pendingProps._debugThenableState
        };
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        workInProgress.refCleanup = current.refCleanup;
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
        workInProgress._debugInfo = current._debugInfo;
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;
        switch(workInProgress.tag){
            case 0:
            case 15:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case 1:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case 11:
                workInProgress.type = resolveForwardRefForHotReloading(current.type);
        }
        return workInProgress;
    }
    function resetWorkInProgress(workInProgress, renderLanes) {
        workInProgress.flags &= 31457282;
        var current = workInProgress.alternate;
        null === current ? (workInProgress.childLanes = 0, workInProgress.lanes = renderLanes, workInProgress.child = null, workInProgress.subtreeFlags = 0, workInProgress.memoizedProps = null, workInProgress.memoizedState = null, workInProgress.updateQueue = null, workInProgress.dependencies = null, workInProgress.stateNode = null, workInProgress.selfBaseDuration = 0, workInProgress.treeBaseDuration = 0) : (workInProgress.childLanes = current.childLanes, workInProgress.lanes = current.lanes, workInProgress.child = current.child, workInProgress.subtreeFlags = 0, workInProgress.deletions = null, workInProgress.memoizedProps = current.memoizedProps, workInProgress.memoizedState = current.memoizedState, workInProgress.updateQueue = current.updateQueue, workInProgress.type = current.type, renderLanes = current.dependencies, workInProgress.dependencies = null === renderLanes ? null : {
            lanes: renderLanes.lanes,
            firstContext: renderLanes.firstContext,
            _debugThenableState: renderLanes._debugThenableState
        }, workInProgress.selfBaseDuration = current.selfBaseDuration, workInProgress.treeBaseDuration = current.treeBaseDuration);
        return workInProgress;
    }
    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = 0, resolvedType = type;
        if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1), resolvedType = resolveFunctionForHotReloading(resolvedType);
        else if ("string" === typeof type) fiberTag = getHostContext(), fiberTag = isHostHoistableType(type, pendingProps, fiberTag) ? 26 : "html" === type || "head" === type || "body" === type ? 27 : 5;
        else a: switch(type){
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
            case REACT_STRICT_MODE_TYPE:
                fiberTag = 8;
                mode |= StrictLegacyMode;
                mode |= StrictEffectsMode;
                break;
            case REACT_PROFILER_TYPE:
                return type = pendingProps, owner = mode, "string" !== typeof type.id && console.error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof type.id), key = createFiber(12, type, key, owner | ProfileMode), key.elementType = REACT_PROFILER_TYPE, key.lanes = lanes, key.stateNode = {
                    effectDuration: 0,
                    passiveEffectDuration: 0
                }, key;
            case REACT_SUSPENSE_TYPE:
                return key = createFiber(13, pendingProps, key, mode), key.elementType = REACT_SUSPENSE_TYPE, key.lanes = lanes, key;
            case REACT_SUSPENSE_LIST_TYPE:
                return key = createFiber(19, pendingProps, key, mode), key.elementType = REACT_SUSPENSE_LIST_TYPE, key.lanes = lanes, key;
            case REACT_OFFSCREEN_TYPE:
                return createFiberFromOffscreen(pendingProps, mode, lanes, key);
            default:
                if ("object" === typeof type && null !== type) switch(type.$$typeof){
                    case REACT_PROVIDER_TYPE:
                    case REACT_CONTEXT_TYPE:
                        fiberTag = 10;
                        break a;
                    case REACT_CONSUMER_TYPE:
                        fiberTag = 9;
                        break a;
                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = 11;
                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        break a;
                    case REACT_MEMO_TYPE:
                        fiberTag = 14;
                        break a;
                    case REACT_LAZY_TYPE:
                        fiberTag = 16;
                        resolvedType = null;
                        break a;
                }
                resolvedType = "";
                if (void 0 === type || "object" === typeof type && null !== type && 0 === Object.keys(type).length) resolvedType += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                null === type ? pendingProps = "null" : isArrayImpl(type) ? pendingProps = "array" : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE ? (pendingProps = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", resolvedType = " Did you accidentally export a JSX literal instead of a component?") : pendingProps = typeof type;
                (fiberTag = owner ? getComponentNameFromOwner(owner) : null) && (resolvedType += "\n\nCheck the render method of `" + fiberTag + "`.");
                fiberTag = 29;
                pendingProps = Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (pendingProps + "." + resolvedType));
                resolvedType = null;
        }
        key = createFiber(fiberTag, pendingProps, key, mode);
        key.elementType = type;
        key.type = resolvedType;
        key.lanes = lanes;
        key._debugOwner = owner;
        return key;
    }
    function createFiberFromElement(element, mode, lanes) {
        mode = createFiberFromTypeAndProps(element.type, element.key, element.props, element._owner, mode, lanes);
        mode._debugOwner = element._owner;
        return mode;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
        elements = createFiber(7, elements, key, mode);
        elements.lanes = lanes;
        return elements;
    }
    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
        pendingProps = createFiber(22, pendingProps, key, mode);
        pendingProps.elementType = REACT_OFFSCREEN_TYPE;
        pendingProps.lanes = lanes;
        var primaryChildInstance = {
            _visibility: OffscreenVisible,
            _pendingVisibility: OffscreenVisible,
            _pendingMarkers: null,
            _retryCache: null,
            _transitions: null,
            _current: null,
            detach: function() {
                var instance = primaryChildInstance, fiber = instance._current;
                if (null === fiber) throw Error("Calling Offscreen.detach before instance handle has been set.");
                if (0 === (instance._pendingVisibility & OffscreenDetached)) {
                    var root = enqueueConcurrentRenderForLane(fiber, 2);
                    null !== root && (instance._pendingVisibility |= OffscreenDetached, scheduleUpdateOnFiber(root, fiber, 2));
                }
            },
            attach: function() {
                var instance = primaryChildInstance, fiber = instance._current;
                if (null === fiber) throw Error("Calling Offscreen.detach before instance handle has been set.");
                if (0 !== (instance._pendingVisibility & OffscreenDetached)) {
                    var root = enqueueConcurrentRenderForLane(fiber, 2);
                    null !== root && (instance._pendingVisibility &= ~OffscreenDetached, scheduleUpdateOnFiber(root, fiber, 2));
                }
            }
        };
        pendingProps.stateNode = primaryChildInstance;
        return pendingProps;
    }
    function createFiberFromText(content, mode, lanes) {
        content = createFiber(6, content, null, mode);
        content.lanes = lanes;
        return content;
    }
    function createFiberFromPortal(portal, mode, lanes) {
        mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
        mode.lanes = lanes;
        mode.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            implementation: portal.implementation
        };
        return mode;
    }
    function markUpdate(workInProgress) {
        workInProgress.flags |= 4;
    }
    function preloadResourceAndSuspendIfNeeded(workInProgress, resource) {
        if ("stylesheet" !== resource.type || (resource.state.loading & Inserted) !== NotLoaded) workInProgress.flags &= -16777217;
        else if (workInProgress.flags |= 16777216, !preloadResource(resource)) {
            resource = suspenseHandlerStackCursor.current;
            if (null !== resource && ((workInProgressRootRenderLanes & 4194176) === workInProgressRootRenderLanes ? null !== shellBoundary : (workInProgressRootRenderLanes & 62914560) !== workInProgressRootRenderLanes && 0 === (workInProgressRootRenderLanes & 536870912) || resource !== shellBoundary)) throw suspendedThenable = noopSuspenseyCommitThenable, SuspenseyCommitException;
            workInProgress.flags |= 8192;
        }
    }
    function scheduleRetryEffect(workInProgress, retryQueue) {
        null !== retryQueue && (workInProgress.flags |= 4);
        workInProgress.flags & 16384 && (retryQueue = 22 !== workInProgress.tag ? claimNextRetryLane() : 536870912, workInProgress.lanes |= retryQueue, workInProgressSuspendedRetryLanes |= retryQueue);
    }
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (!isHydrating) switch(renderState.tailMode){
            case "hidden":
                hasRenderedATailFallback = renderState.tail;
                for(var lastTailNode = null; null !== hasRenderedATailFallback;)null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
                null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
                break;
            case "collapsed":
                lastTailNode = renderState.tail;
                for(var _lastTailNode = null; null !== lastTailNode;)null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
                null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
        }
    }
    function bubbleProperties(completedWork) {
        var didBailout = null !== completedWork.alternate && completedWork.alternate.child === completedWork.child, newChildLanes = 0, subtreeFlags = 0;
        if (didBailout) {
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                for(var _treeBaseDuration = completedWork.selfBaseDuration, _child2 = completedWork.child; null !== _child2;)newChildLanes |= _child2.lanes | _child2.childLanes, subtreeFlags |= _child2.subtreeFlags & 31457280, subtreeFlags |= _child2.flags & 31457280, _treeBaseDuration += _child2.treeBaseDuration, _child2 = _child2.sibling;
                completedWork.treeBaseDuration = _treeBaseDuration;
            } else for(_treeBaseDuration = completedWork.child; null !== _treeBaseDuration;)newChildLanes |= _treeBaseDuration.lanes | _treeBaseDuration.childLanes, subtreeFlags |= _treeBaseDuration.subtreeFlags & 31457280, subtreeFlags |= _treeBaseDuration.flags & 31457280, _treeBaseDuration.return = completedWork, _treeBaseDuration = _treeBaseDuration.sibling;
        } else if ((completedWork.mode & ProfileMode) !== NoMode) {
            _treeBaseDuration = completedWork.actualDuration;
            _child2 = completedWork.selfBaseDuration;
            for(var child = completedWork.child; null !== child;)newChildLanes |= child.lanes | child.childLanes, subtreeFlags |= child.subtreeFlags, subtreeFlags |= child.flags, _treeBaseDuration += child.actualDuration, _child2 += child.treeBaseDuration, child = child.sibling;
            completedWork.actualDuration = _treeBaseDuration;
            completedWork.treeBaseDuration = _child2;
        } else for(_treeBaseDuration = completedWork.child; null !== _treeBaseDuration;)newChildLanes |= _treeBaseDuration.lanes | _treeBaseDuration.childLanes, subtreeFlags |= _treeBaseDuration.subtreeFlags, subtreeFlags |= _treeBaseDuration.flags, _treeBaseDuration.return = completedWork, _treeBaseDuration = _treeBaseDuration.sibling;
        completedWork.subtreeFlags |= subtreeFlags;
        completedWork.childLanes = newChildLanes;
        return didBailout;
    }
    function completeWork(current, workInProgress, renderLanes) {
        var newProps = workInProgress.pendingProps;
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
                return bubbleProperties(workInProgress), null;
            case 1:
                return bubbleProperties(workInProgress), null;
            case 3:
                newProps = workInProgress.stateNode;
                renderLanes = null;
                null !== current && (renderLanes = current.memoizedState.cache);
                workInProgress.memoizedState.cache !== renderLanes && (workInProgress.flags |= 2048);
                popProvider(CacheContext, workInProgress);
                popHostContainer(workInProgress);
                newProps.pendingContext && (newProps.context = newProps.pendingContext, newProps.pendingContext = null);
                if (null === current || null === current.child) popHydrationState(workInProgress) ? (emitPendingHydrationWarnings(), markUpdate(workInProgress)) : null === current || current.memoizedState.isDehydrated && 0 === (workInProgress.flags & 256) || (workInProgress.flags |= 1024, null !== hydrationErrors && (queueRecoverableErrors(hydrationErrors), hydrationErrors = null));
                bubbleProperties(workInProgress);
                return null;
            case 26:
                return renderLanes = workInProgress.memoizedState, null === current ? (markUpdate(workInProgress), null !== renderLanes ? (bubbleProperties(workInProgress), preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes)) : (bubbleProperties(workInProgress), workInProgress.flags &= -16777217)) : renderLanes ? renderLanes !== current.memoizedState ? (markUpdate(workInProgress), bubbleProperties(workInProgress), preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes)) : (bubbleProperties(workInProgress), workInProgress.flags &= -16777217) : (current.memoizedProps !== newProps && markUpdate(workInProgress), bubbleProperties(workInProgress), workInProgress.flags &= -16777217), null;
            case 27:
                popHostContext(workInProgress);
                renderLanes = requiredContext(rootInstanceStackCursor.current);
                var _type = workInProgress.type;
                if (null !== current && null != workInProgress.stateNode) current.memoizedProps !== newProps && markUpdate(workInProgress);
                else {
                    if (!newProps) {
                        if (null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    current = getHostContext();
                    popHydrationState(workInProgress) ? prepareToHydrateHostInstance(workInProgress, current) : (current = resolveSingletonInstance(_type, newProps, renderLanes, current, !0), workInProgress.stateNode = current, markUpdate(workInProgress));
                }
                bubbleProperties(workInProgress);
                return null;
            case 5:
                popHostContext(workInProgress);
                renderLanes = workInProgress.type;
                if (null !== current && null != workInProgress.stateNode) current.memoizedProps !== newProps && markUpdate(workInProgress);
                else {
                    if (!newProps) {
                        if (null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    _type = getHostContext();
                    if (popHydrationState(workInProgress)) prepareToHydrateHostInstance(workInProgress, _type);
                    else {
                        current = requiredContext(rootInstanceStackCursor.current);
                        validateDOMNesting(renderLanes, _type.ancestorInfo);
                        _type = _type.context;
                        current = getOwnerDocumentFromRootContainer(current);
                        switch(_type){
                            case HostContextNamespaceSvg:
                                current = current.createElementNS(SVG_NAMESPACE, renderLanes);
                                break;
                            case HostContextNamespaceMath:
                                current = current.createElementNS(MATH_NAMESPACE, renderLanes);
                                break;
                            default:
                                switch(renderLanes){
                                    case "svg":
                                        current = current.createElementNS(SVG_NAMESPACE, renderLanes);
                                        break;
                                    case "math":
                                        current = current.createElementNS(MATH_NAMESPACE, renderLanes);
                                        break;
                                    case "script":
                                        current = current.createElement("div");
                                        current.innerHTML = "<script>\x3c/script>";
                                        current = current.removeChild(current.firstChild);
                                        break;
                                    case "select":
                                        current = "string" === typeof newProps.is ? current.createElement("select", {
                                            is: newProps.is
                                        }) : current.createElement("select");
                                        newProps.multiple ? current.multiple = !0 : newProps.size && (current.size = newProps.size);
                                        break;
                                    default:
                                        current = "string" === typeof newProps.is ? current.createElement(renderLanes, {
                                            is: newProps.is
                                        }) : current.createElement(renderLanes), -1 === renderLanes.indexOf("-") && (renderLanes !== renderLanes.toLowerCase() && console.error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", renderLanes), "[object HTMLUnknownElement]" !== Object.prototype.toString.call(current) || hasOwnProperty.call(warnedUnknownTags, renderLanes) || (warnedUnknownTags[renderLanes] = !0, console.error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", renderLanes)));
                                }
                        }
                        current[internalInstanceKey] = workInProgress;
                        current[internalPropsKey] = newProps;
                        a: for(_type = workInProgress.child; null !== _type;){
                            if (5 === _type.tag || 6 === _type.tag) current.appendChild(_type.stateNode);
                            else if (4 !== _type.tag && 27 !== _type.tag && null !== _type.child) {
                                _type.child.return = _type;
                                _type = _type.child;
                                continue;
                            }
                            if (_type === workInProgress) break a;
                            for(; null === _type.sibling;){
                                if (null === _type.return || _type.return === workInProgress) break a;
                                _type = _type.return;
                            }
                            _type.sibling.return = _type.return;
                            _type = _type.sibling;
                        }
                        workInProgress.stateNode = current;
                        a: switch(setInitialProperties(current, renderLanes, newProps), renderLanes){
                            case "button":
                            case "input":
                            case "select":
                            case "textarea":
                                current = !!newProps.autoFocus;
                                break a;
                            case "img":
                                current = !0;
                                break a;
                            default:
                                current = !1;
                        }
                        current && markUpdate(workInProgress);
                    }
                }
                bubbleProperties(workInProgress);
                workInProgress.flags &= -16777217;
                return null;
            case 6:
                if (current && null != workInProgress.stateNode) current.memoizedProps !== newProps && markUpdate(workInProgress);
                else {
                    if ("string" !== typeof newProps && null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                    current = requiredContext(rootInstanceStackCursor.current);
                    renderLanes = getHostContext();
                    if (popHydrationState(workInProgress)) {
                        current = workInProgress.stateNode;
                        newProps = workInProgress.memoizedProps;
                        _type = !didSuspendOrErrorDEV;
                        renderLanes = null;
                        var returnFiber = hydrationParentFiber;
                        if (null !== returnFiber) switch(returnFiber.tag){
                            case 3:
                                _type && (_type = diffHydratedTextForDevWarnings(current, newProps, renderLanes), null !== _type && (buildHydrationDiffNode(workInProgress, 0).serverProps = _type));
                                break;
                            case 27:
                            case 5:
                                renderLanes = returnFiber.memoizedProps, _type && (_type = diffHydratedTextForDevWarnings(current, newProps, renderLanes), null !== _type && (buildHydrationDiffNode(workInProgress, 0).serverProps = _type));
                        }
                        current[internalInstanceKey] = workInProgress;
                        current = current.nodeValue === newProps || null !== renderLanes && !0 === renderLanes.suppressHydrationWarning || checkForUnmatchedText(current.nodeValue, newProps) ? !0 : !1;
                        current || throwOnHydrationMismatch(workInProgress);
                    } else renderLanes = renderLanes.ancestorInfo.current, null != renderLanes && validateTextNesting(newProps, renderLanes.tag), current = getOwnerDocumentFromRootContainer(current).createTextNode(newProps), current[internalInstanceKey] = workInProgress, workInProgress.stateNode = current;
                }
                bubbleProperties(workInProgress);
                return null;
            case 13:
                newProps = workInProgress.memoizedState;
                if (null === current || null !== current.memoizedState && null !== current.memoizedState.dehydrated) {
                    _type = popHydrationState(workInProgress);
                    if (null !== newProps && null !== newProps.dehydrated) {
                        if (null === current) {
                            if (!_type) throw Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                            _type = workInProgress.memoizedState;
                            _type = null !== _type ? _type.dehydrated : null;
                            if (!_type) throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
                            _type[internalInstanceKey] = workInProgress;
                            bubbleProperties(workInProgress);
                            (workInProgress.mode & ProfileMode) !== NoMode && null !== newProps && (_type = workInProgress.child, null !== _type && (workInProgress.treeBaseDuration -= _type.treeBaseDuration));
                        } else emitPendingHydrationWarnings(), resetHydrationState(), 0 === (workInProgress.flags & 128) && (workInProgress.memoizedState = null), workInProgress.flags |= 4, bubbleProperties(workInProgress), (workInProgress.mode & ProfileMode) !== NoMode && null !== newProps && (_type = workInProgress.child, null !== _type && (workInProgress.treeBaseDuration -= _type.treeBaseDuration));
                        _type = !1;
                    } else null !== hydrationErrors && (queueRecoverableErrors(hydrationErrors), hydrationErrors = null), _type = !0;
                    if (!_type) {
                        if (workInProgress.flags & 256) return popSuspenseHandler(workInProgress), workInProgress;
                        popSuspenseHandler(workInProgress);
                        return null;
                    }
                }
                popSuspenseHandler(workInProgress);
                if (0 !== (workInProgress.flags & 128)) return workInProgress.lanes = renderLanes, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress;
                newProps = null !== newProps;
                current = null !== current && null !== current.memoizedState;
                newProps && (renderLanes = workInProgress.child, _type = null, null !== renderLanes.alternate && null !== renderLanes.alternate.memoizedState && null !== renderLanes.alternate.memoizedState.cachePool && (_type = renderLanes.alternate.memoizedState.cachePool.pool), returnFiber = null, null !== renderLanes.memoizedState && null !== renderLanes.memoizedState.cachePool && (returnFiber = renderLanes.memoizedState.cachePool.pool), returnFiber !== _type && (renderLanes.flags |= 2048));
                newProps !== current && newProps && (workInProgress.child.flags |= 8192);
                scheduleRetryEffect(workInProgress, workInProgress.updateQueue);
                bubbleProperties(workInProgress);
                (workInProgress.mode & ProfileMode) !== NoMode && newProps && (current = workInProgress.child, null !== current && (workInProgress.treeBaseDuration -= current.treeBaseDuration));
                return null;
            case 4:
                return popHostContainer(workInProgress), null === current && listenToAllSupportedEvents(workInProgress.stateNode.containerInfo), bubbleProperties(workInProgress), null;
            case 10:
                return popProvider(workInProgress.type, workInProgress), bubbleProperties(workInProgress), null;
            case 19:
                pop(suspenseStackCursor, workInProgress);
                _type = workInProgress.memoizedState;
                if (null === _type) return bubbleProperties(workInProgress), null;
                newProps = 0 !== (workInProgress.flags & 128);
                returnFiber = _type.rendering;
                if (null === returnFiber) {
                    if (newProps) cutOffTailIfNeeded(_type, !1);
                    else {
                        if (workInProgressRootExitStatus !== RootInProgress || null !== current && 0 !== (current.flags & 128)) for(current = workInProgress.child; null !== current;){
                            returnFiber = findFirstSuspended(current);
                            if (null !== returnFiber) {
                                workInProgress.flags |= 128;
                                cutOffTailIfNeeded(_type, !1);
                                current = returnFiber.updateQueue;
                                workInProgress.updateQueue = current;
                                scheduleRetryEffect(workInProgress, current);
                                workInProgress.subtreeFlags = 0;
                                current = renderLanes;
                                for(newProps = workInProgress.child; null !== newProps;)resetWorkInProgress(newProps, current), newProps = newProps.sibling;
                                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress);
                                return workInProgress.child;
                            }
                            current = current.sibling;
                        }
                        null !== _type.tail && now$1() > workInProgressRootRenderTargetTime && (workInProgress.flags |= 128, newProps = !0, cutOffTailIfNeeded(_type, !1), workInProgress.lanes = 4194304);
                    }
                } else {
                    if (!newProps) {
                        if (current = findFirstSuspended(returnFiber), null !== current) {
                            if (workInProgress.flags |= 128, newProps = !0, current = current.updateQueue, workInProgress.updateQueue = current, scheduleRetryEffect(workInProgress, current), cutOffTailIfNeeded(_type, !0), null === _type.tail && "hidden" === _type.tailMode && !returnFiber.alternate && !isHydrating) return bubbleProperties(workInProgress), null;
                        } else 2 * now$1() - _type.renderingStartTime > workInProgressRootRenderTargetTime && 536870912 !== renderLanes && (workInProgress.flags |= 128, newProps = !0, cutOffTailIfNeeded(_type, !1), workInProgress.lanes = 4194304);
                    }
                    _type.isBackwards ? (returnFiber.sibling = workInProgress.child, workInProgress.child = returnFiber) : (current = _type.last, null !== current ? current.sibling = returnFiber : workInProgress.child = returnFiber, _type.last = returnFiber);
                }
                if (null !== _type.tail) return current = _type.tail, _type.rendering = current, _type.tail = current.sibling, _type.renderingStartTime = now$1(), current.sibling = null, renderLanes = suspenseStackCursor.current, renderLanes = newProps ? renderLanes & SubtreeSuspenseContextMask | ForceSuspenseFallback : renderLanes & SubtreeSuspenseContextMask, push(suspenseStackCursor, renderLanes, workInProgress), current;
                bubbleProperties(workInProgress);
                return null;
            case 22:
            case 23:
                return popSuspenseHandler(workInProgress), popHiddenContext(workInProgress), newProps = null !== workInProgress.memoizedState, null !== current ? null !== current.memoizedState !== newProps && (workInProgress.flags |= 8192) : newProps && (workInProgress.flags |= 8192), newProps ? 0 !== (renderLanes & 536870912) && 0 === (workInProgress.flags & 128) && (bubbleProperties(workInProgress), workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192)) : bubbleProperties(workInProgress), newProps = workInProgress.updateQueue, null !== newProps && scheduleRetryEffect(workInProgress, newProps.retryQueue), newProps = null, null !== current && null !== current.memoizedState && null !== current.memoizedState.cachePool && (newProps = current.memoizedState.cachePool.pool), renderLanes = null, null !== workInProgress.memoizedState && null !== workInProgress.memoizedState.cachePool && (renderLanes = workInProgress.memoizedState.cachePool.pool), renderLanes !== newProps && (workInProgress.flags |= 2048), null !== current && pop(resumedCache, workInProgress), null;
            case 24:
                return newProps = null, null !== current && (newProps = current.memoizedState.cache), workInProgress.memoizedState.cache !== newProps && (workInProgress.flags |= 2048), popProvider(CacheContext, workInProgress), bubbleProperties(workInProgress), null;
            case 25:
                return null;
        }
        throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function unwindWork(current, workInProgress) {
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case 1:
                return current = workInProgress.flags, current & 65536 ? (workInProgress.flags = current & -65537 | 128, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress) : null;
            case 3:
                return popProvider(CacheContext, workInProgress), popHostContainer(workInProgress), current = workInProgress.flags, 0 !== (current & 65536) && 0 === (current & 128) ? (workInProgress.flags = current & -65537 | 128, workInProgress) : null;
            case 26:
            case 27:
            case 5:
                return popHostContext(workInProgress), null;
            case 13:
                popSuspenseHandler(workInProgress);
                current = workInProgress.memoizedState;
                if (null !== current && null !== current.dehydrated) {
                    if (null === workInProgress.alternate) throw Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                    resetHydrationState();
                }
                current = workInProgress.flags;
                return current & 65536 ? (workInProgress.flags = current & -65537 | 128, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress) : null;
            case 19:
                return pop(suspenseStackCursor, workInProgress), null;
            case 4:
                return popHostContainer(workInProgress), null;
            case 10:
                return popProvider(workInProgress.type, workInProgress), null;
            case 22:
            case 23:
                return popSuspenseHandler(workInProgress), popHiddenContext(workInProgress), null !== current && pop(resumedCache, workInProgress), current = workInProgress.flags, current & 65536 ? (workInProgress.flags = current & -65537 | 128, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress) : null;
            case 24:
                return popProvider(CacheContext, workInProgress), null;
            case 25:
                return null;
            default:
                return null;
        }
    }
    function unwindInterruptedWork(current, interruptedWork) {
        popTreeContext(interruptedWork);
        switch(interruptedWork.tag){
            case 3:
                popProvider(CacheContext, interruptedWork);
                popHostContainer(interruptedWork);
                break;
            case 26:
            case 27:
            case 5:
                popHostContext(interruptedWork);
                break;
            case 4:
                popHostContainer(interruptedWork);
                break;
            case 13:
                popSuspenseHandler(interruptedWork);
                break;
            case 19:
                pop(suspenseStackCursor, interruptedWork);
                break;
            case 10:
                popProvider(interruptedWork.type, interruptedWork);
                break;
            case 22:
            case 23:
                popSuspenseHandler(interruptedWork);
                popHiddenContext(interruptedWork);
                null !== current && pop(resumedCache, interruptedWork);
                break;
            case 24:
                popProvider(CacheContext, interruptedWork);
        }
    }
    function onCommitRoot() {
        commitHooks.forEach(function(commitHook) {
            return commitHook();
        });
    }
    function isConcurrentActEnvironment() {
        var isReactActEnvironmentGlobal = "undefined" !== typeof IS_REACT_ACT_ENVIRONMENT ? IS_REACT_ACT_ENVIRONMENT : void 0;
        isReactActEnvironmentGlobal || null === ReactSharedInternals.actQueue || console.error("The current testing environment is not configured to support act(...)");
        return isReactActEnvironmentGlobal;
    }
    function requestUpdateLane(fiber) {
        if ((executionContext & RenderContext) !== NoContext && 0 !== workInProgressRootRenderLanes) return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;
        var transition = ReactSharedInternals.T;
        return null !== transition ? (transition._updatedFibers || (transition._updatedFibers = new Set()), transition._updatedFibers.add(fiber), fiber = currentEntangledLane, 0 !== fiber ? fiber : requestTransitionLane()) : resolveUpdatePriority();
    }
    function requestDeferredLane() {
        0 === workInProgressDeferredLane && (workInProgressDeferredLane = 0 === (workInProgressRootRenderLanes & 536870912) || isHydrating ? claimNextTransitionLane() : 536870912);
        var suspenseHandler = suspenseHandlerStackCursor.current;
        null !== suspenseHandler && (suspenseHandler.flags |= 32);
        return workInProgressDeferredLane;
    }
    function scheduleUpdateOnFiber(root, fiber, lane) {
        isRunningInsertionEffect && console.error("useInsertionEffect must not schedule updates.");
        isFlushingPassiveEffects && (didScheduleUpdateDuringPassiveEffects = !0);
        if (root === workInProgressRoot && workInProgressSuspendedReason === SuspendedOnData || null !== root.cancelPendingCommit) prepareFreshStack(root, 0), markRootSuspended(root, workInProgressRootRenderLanes, workInProgressDeferredLane, !1);
        markRootUpdated$1(root, lane);
        if (0 !== (executionContext & RenderContext) && root === workInProgressRoot) {
            if (isRendering) switch(fiber.tag){
                case 0:
                case 11:
                case 15:
                    root = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown";
                    didWarnAboutUpdateInRenderForAnotherComponent.has(root) || (didWarnAboutUpdateInRenderForAnotherComponent.add(root), fiber = getComponentNameFromFiber(fiber) || "Unknown", console.error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://react.dev/link/setstate-in-render", fiber, root, root));
                    break;
                case 1:
                    didWarnAboutUpdateInRender || (console.error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), didWarnAboutUpdateInRender = !0);
            }
        } else isDevToolsPresent && addFiberToLanesMap(root, fiber, lane), warnIfUpdatesNotWrappedWithActDEV(fiber), root === workInProgressRoot && ((executionContext & RenderContext) === NoContext && (workInProgressRootInterleavedUpdatedLanes |= lane), workInProgressRootExitStatus === RootSuspendedWithDelay && markRootSuspended(root, workInProgressRootRenderLanes, workInProgressDeferredLane, !1)), ensureRootIsScheduled(root);
    }
    function performWorkOnRoot(root, lanes, forceSync) {
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw Error("Should not already be working.");
        var shouldTimeSlice = !forceSync && 0 === (lanes & 60) && 0 === (lanes & root.expiredLanes) || checkIfRootIsPrerendering(root, lanes), exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes, !0), renderWasConcurrent = shouldTimeSlice;
        do {
            if (exitStatus === RootInProgress) {
                workInProgressRootIsPrerendering && !shouldTimeSlice && markRootSuspended(root, lanes, 0, !1);
                break;
            } else if (exitStatus === RootDidNotComplete) markRootSuspended(root, lanes, 0, !workInProgressRootDidSkipSuspendedSiblings);
            else {
                forceSync = root.current.alternate;
                if (renderWasConcurrent && !isRenderConsistentWithExternalStores(forceSync)) {
                    exitStatus = renderRootSync(root, lanes, !1);
                    renderWasConcurrent = !1;
                    continue;
                }
                if (exitStatus === RootErrored) {
                    renderWasConcurrent = lanes;
                    if (root.errorRecoveryDisabledLanes & renderWasConcurrent) var errorRetryLanes = 0;
                    else errorRetryLanes = root.pendingLanes & -536870913, errorRetryLanes = 0 !== errorRetryLanes ? errorRetryLanes : errorRetryLanes & 536870912 ? 536870912 : 0;
                    if (0 !== errorRetryLanes) {
                        lanes = errorRetryLanes;
                        a: {
                            exitStatus = root;
                            var errorRetryLanes$jscomp$0 = errorRetryLanes;
                            errorRetryLanes = workInProgressRootConcurrentErrors;
                            var wasRootDehydrated = exitStatus.current.memoizedState.isDehydrated;
                            wasRootDehydrated && (prepareFreshStack(exitStatus, errorRetryLanes$jscomp$0).flags |= 256);
                            errorRetryLanes$jscomp$0 = renderRootSync(exitStatus, errorRetryLanes$jscomp$0, !1);
                            if (errorRetryLanes$jscomp$0 !== RootErrored) {
                                if (workInProgressRootDidAttachPingListener && !wasRootDehydrated) {
                                    exitStatus.errorRecoveryDisabledLanes |= renderWasConcurrent;
                                    workInProgressRootInterleavedUpdatedLanes |= renderWasConcurrent;
                                    exitStatus = RootSuspendedWithDelay;
                                    break a;
                                }
                                exitStatus = workInProgressRootRecoverableErrors;
                                workInProgressRootRecoverableErrors = errorRetryLanes;
                                null !== exitStatus && queueRecoverableErrors(exitStatus);
                            }
                            exitStatus = errorRetryLanes$jscomp$0;
                        }
                        renderWasConcurrent = !1;
                        if (exitStatus !== RootErrored) continue;
                    }
                }
                if (exitStatus === RootFatalErrored) {
                    prepareFreshStack(root, 0);
                    markRootSuspended(root, lanes, 0, !0);
                    break;
                }
                a: {
                    shouldTimeSlice = root;
                    switch(exitStatus){
                        case RootInProgress:
                        case RootFatalErrored:
                            throw Error("Root did not complete. This is a bug in React.");
                        case RootSuspendedWithDelay:
                            if ((lanes & 4194176) === lanes) {
                                markRootSuspended(shouldTimeSlice, lanes, workInProgressDeferredLane, !workInProgressRootDidSkipSuspendedSiblings);
                                break a;
                            }
                            break;
                        case RootErrored:
                            workInProgressRootRecoverableErrors = null;
                            break;
                        case RootSuspended:
                        case RootCompleted:
                            break;
                        default:
                            throw Error("Unknown root exit status.");
                    }
                    shouldTimeSlice.finishedWork = forceSync;
                    shouldTimeSlice.finishedLanes = lanes;
                    if (null !== ReactSharedInternals.actQueue) commitRoot(shouldTimeSlice, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, IMMEDIATE_COMMIT, renderStartTime, 0);
                    else {
                        if ((lanes & 62914560) === lanes && (exitStatus = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now$1(), 10 < exitStatus)) {
                            markRootSuspended(shouldTimeSlice, lanes, workInProgressDeferredLane, !workInProgressRootDidSkipSuspendedSiblings);
                            if (0 !== getNextLanes(shouldTimeSlice, 0)) break a;
                            shouldTimeSlice.timeoutHandle = scheduleTimeout(commitRootWhenReady.bind(null, shouldTimeSlice, forceSync, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, lanes, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, workInProgressRootDidSkipSuspendedSiblings, THROTTLED_COMMIT, renderStartTime, 0), exitStatus);
                            break a;
                        }
                        commitRootWhenReady(shouldTimeSlice, forceSync, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, lanes, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, workInProgressRootDidSkipSuspendedSiblings, IMMEDIATE_COMMIT, renderStartTime, 0);
                    }
                }
            }
            break;
        }while (1);
        ensureRootIsScheduled(root);
    }
    function queueRecoverableErrors(errors) {
        null === workInProgressRootRecoverableErrors ? workInProgressRootRecoverableErrors = errors : workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
    }
    function commitRootWhenReady(root, finishedWork, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, lanes, spawnedLane, updatedLanes, suspendedRetryLanes, didSkipSuspendedSiblings, suspendedCommitReason, completedRenderStartTime, completedRenderEndTime) {
        var subtreeFlags = finishedWork.subtreeFlags;
        if (subtreeFlags & 8192 || 16785408 === (subtreeFlags & 16785408)) {
            if (suspendedState = {
                stylesheets: null,
                count: 0,
                unsuspend: noop
            }, accumulateSuspenseyCommitOnFiber(finishedWork), finishedWork = waitForCommitToBeReady(), null !== finishedWork) {
                root.cancelPendingCommit = finishedWork(commitRoot.bind(null, root, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes, SUSPENDED_COMMIT, completedRenderStartTime, completedRenderEndTime));
                markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);
                return;
            }
        }
        commitRoot(root, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes, suspendedCommitReason, completedRenderStartTime, completedRenderEndTime);
    }
    function isRenderConsistentWithExternalStores(finishedWork) {
        for(var node = finishedWork;;){
            var tag = node.tag;
            if ((0 === tag || 11 === tag || 15 === tag) && node.flags & 16384 && (tag = node.updateQueue, null !== tag && (tag = tag.stores, null !== tag))) for(var i = 0; i < tag.length; i++){
                var check = tag[i], getSnapshot = check.getSnapshot;
                check = check.value;
                try {
                    if (!objectIs(getSnapshot(), check)) return !1;
                } catch (error) {
                    return !1;
                }
            }
            tag = node.child;
            if (node.subtreeFlags & 16384 && null !== tag) tag.return = node, node = tag;
            else {
                if (node === finishedWork) break;
                for(; null === node.sibling;){
                    if (null === node.return || node.return === finishedWork) return !0;
                    node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
            }
        }
        return !0;
    }
    function markRootSuspended(root, suspendedLanes, spawnedLane, didAttemptEntireTree) {
        suspendedLanes &= ~workInProgressRootPingedLanes;
        suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;
        root.suspendedLanes |= suspendedLanes;
        root.pingedLanes &= ~suspendedLanes;
        didAttemptEntireTree && (root.warmLanes |= suspendedLanes);
        didAttemptEntireTree = root.expirationTimes;
        for(var lanes = suspendedLanes; 0 < lanes;){
            var index = 31 - clz32(lanes), lane = 1 << index;
            didAttemptEntireTree[index] = -1;
            lanes &= ~lane;
        }
        0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);
    }
    function flushSyncWork$1() {
        return (executionContext & (RenderContext | CommitContext)) === NoContext ? (flushSyncWorkAcrossRoots_impl(0, !1), !1) : !0;
    }
    function resetWorkInProgressStack() {
        if (null !== workInProgress) {
            if (workInProgressSuspendedReason === NotSuspended) var interruptedWork = workInProgress.return;
            else interruptedWork = workInProgress, resetContextDependencies(), resetHooksOnUnwind(interruptedWork), thenableState$1 = null, thenableIndexCounter$1 = 0, interruptedWork = workInProgress;
            for(; null !== interruptedWork;)unwindInterruptedWork(interruptedWork.alternate, interruptedWork), interruptedWork = interruptedWork.return;
            workInProgress = null;
        }
    }
    function prepareFreshStack(root, lanes) {
        root.finishedWork = null;
        root.finishedLanes = 0;
        var timeoutHandle = root.timeoutHandle;
        timeoutHandle !== noTimeout && (root.timeoutHandle = noTimeout, cancelTimeout(timeoutHandle));
        timeoutHandle = root.cancelPendingCommit;
        null !== timeoutHandle && (root.cancelPendingCommit = null, timeoutHandle());
        resetWorkInProgressStack();
        workInProgressRoot = root;
        workInProgress = timeoutHandle = createWorkInProgress(root.current, null);
        workInProgressRootRenderLanes = lanes;
        workInProgressSuspendedReason = NotSuspended;
        workInProgressThrownValue = null;
        workInProgressRootDidSkipSuspendedSiblings = !1;
        workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
        workInProgressRootDidAttachPingListener = !1;
        workInProgressRootExitStatus = RootInProgress;
        workInProgressSuspendedRetryLanes = workInProgressDeferredLane = workInProgressRootPingedLanes = workInProgressRootInterleavedUpdatedLanes = workInProgressRootSkippedLanes = 0;
        workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors = null;
        workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
        0 !== (lanes & 8) && (lanes |= lanes & 32);
        var allEntangledLanes = root.entangledLanes;
        if (0 !== allEntangledLanes) for(root = root.entanglements, allEntangledLanes &= lanes; 0 < allEntangledLanes;){
            var index = 31 - clz32(allEntangledLanes), lane = 1 << index;
            lanes |= root[index];
            allEntangledLanes &= ~lane;
        }
        entangledRenderLanes = lanes;
        finishQueueingConcurrentUpdates();
        ReactStrictModeWarnings.discardPendingWarnings();
        return timeoutHandle;
    }
    function handleThrow(root, thrownValue) {
        currentlyRenderingFiber$1 = null;
        ReactSharedInternals.H = ContextOnlyDispatcher;
        ReactSharedInternals.getCurrentStack = null;
        isRendering = !1;
        current = null;
        thrownValue === SuspenseException ? (thrownValue = getSuspendedThenable(), workInProgressSuspendedReason = SuspendedOnImmediate) : thrownValue === SuspenseyCommitException ? (thrownValue = getSuspendedThenable(), workInProgressSuspendedReason = SuspendedOnInstance) : workInProgressSuspendedReason = thrownValue === SelectiveHydrationException ? SuspendedOnHydration : null !== thrownValue && "object" === typeof thrownValue && "function" === typeof thrownValue.then ? SuspendedOnDeprecatedThrowPromise : SuspendedOnError;
        workInProgressThrownValue = thrownValue;
        var erroredWork = workInProgress;
        if (null === erroredWork) workInProgressRootExitStatus = RootFatalErrored, logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
        else switch(erroredWork.mode & ProfileMode && stopProfilerTimerIfRunningAndRecordDuration(erroredWork), markComponentRenderStopped(), workInProgressSuspendedReason){
            case SuspendedOnError:
                null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentErrored && injectedProfilingHooks.markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                break;
            case SuspendedOnData:
            case SuspendedOnImmediate:
            case SuspendedOnDeprecatedThrowPromise:
            case SuspendedAndReadyToContinue:
                null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentSuspended && injectedProfilingHooks.markComponentSuspended(erroredWork, thrownValue, workInProgressRootRenderLanes);
        }
    }
    function pushDispatcher() {
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = ContextOnlyDispatcher;
        return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;
    }
    function pushAsyncDispatcher() {
        var prevAsyncDispatcher = ReactSharedInternals.A;
        ReactSharedInternals.A = DefaultAsyncDispatcher;
        return prevAsyncDispatcher;
    }
    function renderDidSuspendDelayIfPossible() {
        workInProgressRootExitStatus = RootSuspendedWithDelay;
        workInProgressRootDidSkipSuspendedSiblings || (workInProgressRootRenderLanes & 4194176) !== workInProgressRootRenderLanes && null !== suspenseHandlerStackCursor.current || (workInProgressRootIsPrerendering = !0);
        0 === (workInProgressRootSkippedLanes & 134217727) && 0 === (workInProgressRootInterleavedUpdatedLanes & 134217727) || null === workInProgressRoot || markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes, workInProgressDeferredLane, !1);
    }
    function renderRootSync(root, lanes, shouldYieldForPrerendering) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(), prevAsyncDispatcher = pushAsyncDispatcher();
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                0 < memoizedUpdaters.size && (restorePendingUpdaters(root, workInProgressRootRenderLanes), memoizedUpdaters.clear());
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = null;
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        lanes = !1;
        memoizedUpdaters = workInProgressRootExitStatus;
        a: do try {
            if (workInProgressSuspendedReason !== NotSuspended && null !== workInProgress) {
                var unitOfWork = workInProgress, thrownValue = workInProgressThrownValue;
                switch(workInProgressSuspendedReason){
                    case SuspendedOnHydration:
                        resetWorkInProgressStack();
                        memoizedUpdaters = RootDidNotComplete;
                        break a;
                    case SuspendedOnImmediate:
                    case SuspendedOnData:
                    case SuspendedOnDeprecatedThrowPromise:
                        null === suspenseHandlerStackCursor.current && (lanes = !0);
                        var reason = workInProgressSuspendedReason;
                        workInProgressSuspendedReason = NotSuspended;
                        workInProgressThrownValue = null;
                        throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
                        if (shouldYieldForPrerendering && workInProgressRootIsPrerendering) {
                            memoizedUpdaters = RootInProgress;
                            break a;
                        }
                        break;
                    default:
                        reason = workInProgressSuspendedReason, workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
                }
            }
            workLoopSync();
            memoizedUpdaters = workInProgressRootExitStatus;
            break;
        } catch (thrownValue$8) {
            handleThrow(root, thrownValue$8);
        }
        while (1);
        lanes && root.shellSuspendCounter++;
        resetContextDependencies();
        executionContext = prevExecutionContext;
        ReactSharedInternals.H = prevDispatcher;
        ReactSharedInternals.A = prevAsyncDispatcher;
        markRenderStopped();
        null === workInProgress && (workInProgressRoot = null, workInProgressRootRenderLanes = 0, finishQueueingConcurrentUpdates());
        return memoizedUpdaters;
    }
    function workLoopSync() {
        for(; null !== workInProgress;)performUnitOfWork(workInProgress);
    }
    function renderRootConcurrent(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(), prevAsyncDispatcher = pushAsyncDispatcher();
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                0 < memoizedUpdaters.size && (restorePendingUpdaters(root, workInProgressRootRenderLanes), memoizedUpdaters.clear());
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = null;
            workInProgressRootRenderTargetTime = now$1() + RENDER_TIMEOUT_MS;
            prepareFreshStack(root, lanes);
        } else workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
        markRenderStarted(lanes);
        a: do try {
            if (workInProgressSuspendedReason !== NotSuspended && null !== workInProgress) b: switch(lanes = workInProgress, memoizedUpdaters = workInProgressThrownValue, workInProgressSuspendedReason){
                case SuspendedOnError:
                    workInProgressSuspendedReason = NotSuspended;
                    workInProgressThrownValue = null;
                    throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedOnError);
                    break;
                case SuspendedOnData:
                    if (isThenableResolved(memoizedUpdaters)) {
                        workInProgressSuspendedReason = NotSuspended;
                        workInProgressThrownValue = null;
                        replaySuspendedUnitOfWork(lanes);
                        break;
                    }
                    lanes = function() {
                        workInProgressSuspendedReason === SuspendedOnData && workInProgressRoot === root && (workInProgressSuspendedReason = SuspendedAndReadyToContinue);
                        ensureRootIsScheduled(root);
                    };
                    memoizedUpdaters.then(lanes, lanes);
                    break a;
                case SuspendedOnImmediate:
                    workInProgressSuspendedReason = SuspendedAndReadyToContinue;
                    break a;
                case SuspendedOnInstance:
                    workInProgressSuspendedReason = SuspendedOnInstanceAndReadyToContinue;
                    break a;
                case SuspendedAndReadyToContinue:
                    isThenableResolved(memoizedUpdaters) ? (workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, replaySuspendedUnitOfWork(lanes)) : (workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedAndReadyToContinue));
                    break;
                case SuspendedOnInstanceAndReadyToContinue:
                    var resource = null;
                    switch(workInProgress.tag){
                        case 26:
                            resource = workInProgress.memoizedState;
                        case 5:
                        case 27:
                            var hostFiber = workInProgress;
                            if (resource ? preloadResource(resource) : 1) {
                                workInProgressSuspendedReason = NotSuspended;
                                workInProgressThrownValue = null;
                                var sibling = hostFiber.sibling;
                                if (null !== sibling) workInProgress = sibling;
                                else {
                                    var returnFiber = hostFiber.return;
                                    null !== returnFiber ? (workInProgress = returnFiber, completeUnitOfWork(returnFiber)) : workInProgress = null;
                                }
                                break b;
                            }
                            break;
                        default:
                            console.error("Unexpected type of fiber triggered a suspensey commit. This is a bug in React.");
                    }
                    workInProgressSuspendedReason = NotSuspended;
                    workInProgressThrownValue = null;
                    throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedOnInstanceAndReadyToContinue);
                    break;
                case SuspendedOnDeprecatedThrowPromise:
                    workInProgressSuspendedReason = NotSuspended;
                    workInProgressThrownValue = null;
                    throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedOnDeprecatedThrowPromise);
                    break;
                case SuspendedOnHydration:
                    resetWorkInProgressStack();
                    workInProgressRootExitStatus = RootDidNotComplete;
                    break a;
                default:
                    throw Error("Unexpected SuspendedReason. This is a bug in React.");
            }
            null !== ReactSharedInternals.actQueue ? workLoopSync() : workLoopConcurrent();
            break;
        } catch (thrownValue$9) {
            handleThrow(root, thrownValue$9);
        }
        while (1);
        resetContextDependencies();
        ReactSharedInternals.H = prevDispatcher;
        ReactSharedInternals.A = prevAsyncDispatcher;
        executionContext = prevExecutionContext;
        if (null !== workInProgress) return null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderYielded && injectedProfilingHooks.markRenderYielded(), RootInProgress;
        markRenderStopped();
        workInProgressRoot = null;
        workInProgressRootRenderLanes = 0;
        finishQueueingConcurrentUpdates();
        return workInProgressRootExitStatus;
    }
    function workLoopConcurrent() {
        for(; null !== workInProgress && !shouldYield();)performUnitOfWork(workInProgress);
    }
    function performUnitOfWork(unitOfWork) {
        var current = unitOfWork.alternate;
        (unitOfWork.mode & ProfileMode) !== NoMode ? (startProfilerTimer(unitOfWork), current = runWithFiberInDEV(unitOfWork, beginWork, current, unitOfWork, entangledRenderLanes), stopProfilerTimerIfRunningAndRecordDuration(unitOfWork)) : current = runWithFiberInDEV(unitOfWork, beginWork, current, unitOfWork, entangledRenderLanes);
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        null === current ? completeUnitOfWork(unitOfWork) : workInProgress = current;
    }
    function replaySuspendedUnitOfWork(unitOfWork) {
        var next = runWithFiberInDEV(unitOfWork, replayBeginWork, unitOfWork);
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        null === next ? completeUnitOfWork(unitOfWork) : workInProgress = next;
    }
    function replayBeginWork(unitOfWork) {
        var current = unitOfWork.alternate, isProfilingMode = (unitOfWork.mode & ProfileMode) !== NoMode;
        isProfilingMode && startProfilerTimer(unitOfWork);
        switch(unitOfWork.tag){
            case 15:
            case 0:
                current = replayFunctionComponent(current, unitOfWork, unitOfWork.pendingProps, unitOfWork.type, void 0, workInProgressRootRenderLanes);
                break;
            case 11:
                current = replayFunctionComponent(current, unitOfWork, unitOfWork.pendingProps, unitOfWork.type.render, unitOfWork.ref, workInProgressRootRenderLanes);
                break;
            case 5:
                resetHooksOnUnwind(unitOfWork);
            default:
                unwindInterruptedWork(current, unitOfWork), unitOfWork = workInProgress = resetWorkInProgress(unitOfWork, entangledRenderLanes), current = beginWork(current, unitOfWork, entangledRenderLanes);
        }
        isProfilingMode && stopProfilerTimerIfRunningAndRecordDuration(unitOfWork);
        return current;
    }
    function throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, suspendedReason) {
        resetContextDependencies();
        resetHooksOnUnwind(unitOfWork);
        thenableState$1 = null;
        thenableIndexCounter$1 = 0;
        var returnFiber = unitOfWork.return;
        try {
            if (throwException(root, returnFiber, unitOfWork, thrownValue, workInProgressRootRenderLanes)) {
                workInProgressRootExitStatus = RootFatalErrored;
                logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
                workInProgress = null;
                return;
            }
        } catch (error) {
            if (null !== returnFiber) throw workInProgress = returnFiber, error;
            workInProgressRootExitStatus = RootFatalErrored;
            logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
            workInProgress = null;
            return;
        }
        if (unitOfWork.flags & 32768) {
            if (isHydrating || suspendedReason === SuspendedOnError) root = !0;
            else if (workInProgressRootIsPrerendering || 0 !== (workInProgressRootRenderLanes & 536870912)) root = !1;
            else if (workInProgressRootDidSkipSuspendedSiblings = root = !0, suspendedReason === SuspendedOnData || suspendedReason === SuspendedOnImmediate || suspendedReason === SuspendedOnDeprecatedThrowPromise) suspendedReason = suspenseHandlerStackCursor.current, null !== suspendedReason && 13 === suspendedReason.tag && (suspendedReason.flags |= 16384);
            unwindUnitOfWork(unitOfWork, root);
        } else completeUnitOfWork(unitOfWork);
    }
    function completeUnitOfWork(unitOfWork) {
        var completedWork = unitOfWork;
        do {
            if (0 !== (completedWork.flags & 32768)) {
                unwindUnitOfWork(completedWork, workInProgressRootDidSkipSuspendedSiblings);
                return;
            }
            var current = completedWork.alternate;
            unitOfWork = completedWork.return;
            startProfilerTimer(completedWork);
            current = runWithFiberInDEV(completedWork, completeWork, current, completedWork, entangledRenderLanes);
            (completedWork.mode & ProfileMode) !== NoMode && stopProfilerTimerIfRunningAndRecordIncompleteDuration(completedWork);
            if (null !== current) {
                workInProgress = current;
                return;
            }
            completedWork = completedWork.sibling;
            if (null !== completedWork) {
                workInProgress = completedWork;
                return;
            }
            workInProgress = completedWork = unitOfWork;
        }while (null !== completedWork);
        workInProgressRootExitStatus === RootInProgress && (workInProgressRootExitStatus = RootCompleted);
    }
    function unwindUnitOfWork(unitOfWork, skipSiblings) {
        do {
            var next = unwindWork(unitOfWork.alternate, unitOfWork);
            if (null !== next) {
                next.flags &= 32767;
                workInProgress = next;
                return;
            }
            if ((unitOfWork.mode & ProfileMode) !== NoMode) {
                stopProfilerTimerIfRunningAndRecordIncompleteDuration(unitOfWork);
                next = unitOfWork.actualDuration;
                for(var child = unitOfWork.child; null !== child;)next += child.actualDuration, child = child.sibling;
                unitOfWork.actualDuration = next;
            }
            next = unitOfWork.return;
            null !== next && (next.flags |= 32768, next.subtreeFlags = 0, next.deletions = null);
            if (!skipSiblings && (unitOfWork = unitOfWork.sibling, null !== unitOfWork)) {
                workInProgress = unitOfWork;
                return;
            }
            workInProgress = unitOfWork = next;
        }while (null !== unitOfWork);
        workInProgressRootExitStatus = RootDidNotComplete;
        workInProgress = null;
    }
    function commitRoot(root, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes, suspendedCommitReason, completedRenderStartTime, completedRenderEndTime) {
        var prevTransition = ReactSharedInternals.T, previousUpdateLanePriority = ReactDOMSharedInternals.p;
        try {
            ReactDOMSharedInternals.p = DiscreteEventPriority, ReactSharedInternals.T = null, commitRootImpl(root, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, previousUpdateLanePriority, spawnedLane, updatedLanes, suspendedRetryLanes, suspendedCommitReason, completedRenderStartTime, completedRenderEndTime);
        } finally{
            ReactSharedInternals.T = prevTransition, ReactDOMSharedInternals.p = previousUpdateLanePriority;
        }
    }
    function commitRootImpl(root, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, renderPriorityLevel, spawnedLane, updatedLanes, suspendedRetryLanes) {
        do flushPassiveEffects();
        while (null !== rootWithPendingPassiveEffects);
        ReactStrictModeWarnings.flushLegacyContextWarning();
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw Error("Should not already be working.");
        var finishedWork = root.finishedWork;
        didIncludeRenderPhaseUpdate = root.finishedLanes;
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markCommitStarted && injectedProfilingHooks.markCommitStarted(didIncludeRenderPhaseUpdate);
        if (null === finishedWork) return markCommitStopped(), null;
        0 === didIncludeRenderPhaseUpdate && console.error("root.finishedLanes should not be empty during a commit. This is a bug in React.");
        root.finishedWork = null;
        root.finishedLanes = 0;
        if (finishedWork === root.current) throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
        root.callbackNode = null;
        root.callbackPriority = 0;
        root.cancelPendingCommit = null;
        var remainingLanes = finishedWork.lanes | finishedWork.childLanes;
        remainingLanes |= concurrentlyUpdatedLanes;
        markRootFinished(root, didIncludeRenderPhaseUpdate, remainingLanes, spawnedLane, updatedLanes, suspendedRetryLanes);
        root === workInProgressRoot && (workInProgress = workInProgressRoot = null, workInProgressRootRenderLanes = 0);
        0 === (finishedWork.subtreeFlags & 10256) && 0 === (finishedWork.flags & 10256) || rootDoesHavePassiveEffects || (rootDoesHavePassiveEffects = !0, pendingPassiveEffectsRemainingLanes = remainingLanes, pendingPassiveTransitions = transitions, scheduleCallback$1(NormalPriority$1, function() {
            flushPassiveEffects(!0);
            return null;
        }));
        commitStartTime = now();
        transitions = 0 !== (finishedWork.flags & 15990);
        0 !== (finishedWork.subtreeFlags & 15990) || transitions ? (transitions = ReactSharedInternals.T, ReactSharedInternals.T = null, spawnedLane = ReactDOMSharedInternals.p, ReactDOMSharedInternals.p = DiscreteEventPriority, updatedLanes = executionContext, executionContext |= CommitContext, commitBeforeMutationEffects(root, finishedWork), commitMutationEffects(root, finishedWork, didIncludeRenderPhaseUpdate), restoreSelection(selectionInformation, root.containerInfo), _enabled = !!eventsEnabled, selectionInformation = eventsEnabled = null, root.current = finishedWork, null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markLayoutEffectsStarted && injectedProfilingHooks.markLayoutEffectsStarted(didIncludeRenderPhaseUpdate), commitLayoutEffects(finishedWork, root, didIncludeRenderPhaseUpdate), null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markLayoutEffectsStopped && injectedProfilingHooks.markLayoutEffectsStopped(), requestPaint(), executionContext = updatedLanes, ReactDOMSharedInternals.p = spawnedLane, ReactSharedInternals.T = transitions) : root.current = finishedWork;
        (transitions = rootDoesHavePassiveEffects) ? (rootDoesHavePassiveEffects = !1, rootWithPendingPassiveEffects = root, pendingPassiveEffectsLanes = didIncludeRenderPhaseUpdate) : (releaseRootPooledCache(root, remainingLanes), nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null);
        remainingLanes = root.pendingLanes;
        0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);
        transitions || commitDoubleInvokeEffectsInDEV(root);
        onCommitRoot$1(finishedWork.stateNode, renderPriorityLevel);
        isDevToolsPresent && root.memoizedUpdaters.clear();
        onCommitRoot();
        ensureRootIsScheduled(root);
        if (null !== recoverableErrors) for(renderPriorityLevel = root.onRecoverableError, finishedWork = 0; finishedWork < recoverableErrors.length; finishedWork++)remainingLanes = recoverableErrors[finishedWork], transitions = makeErrorInfo(remainingLanes.stack), runWithFiberInDEV(remainingLanes.source, renderPriorityLevel, remainingLanes.value, transitions);
        0 !== (pendingPassiveEffectsLanes & 3) && flushPassiveEffects();
        remainingLanes = root.pendingLanes;
        0 !== (didIncludeRenderPhaseUpdate & 4194218) && 0 !== (remainingLanes & 42) ? (nestedUpdateScheduled = !0, root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root)) : nestedUpdateCount = 0;
        flushSyncWorkAcrossRoots_impl(0, !1);
        markCommitStopped();
        return null;
    }
    function makeErrorInfo(componentStack) {
        componentStack = {
            componentStack: componentStack
        };
        Object.defineProperty(componentStack, "digest", {
            get: function() {
                console.error('You are accessing "digest" from the errorInfo object passed to onRecoverableError. This property is no longer provided as part of errorInfo but can be accessed as a property of the Error instance itself.');
            }
        });
        return componentStack;
    }
    function releaseRootPooledCache(root, remainingLanes) {
        0 === (root.pooledCacheLanes &= remainingLanes) && (remainingLanes = root.pooledCache, null != remainingLanes && (root.pooledCache = null, releaseCache(remainingLanes)));
    }
    function flushPassiveEffects() {
        if (null !== rootWithPendingPassiveEffects) {
            var root = rootWithPendingPassiveEffects, remainingLanes = pendingPassiveEffectsRemainingLanes;
            pendingPassiveEffectsRemainingLanes = 0;
            var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes), priority = 0 === DefaultEventPriority || DefaultEventPriority > renderPriority ? DefaultEventPriority : renderPriority;
            renderPriority = ReactSharedInternals.T;
            var previousPriority = ReactDOMSharedInternals.p;
            try {
                ReactDOMSharedInternals.p = priority;
                ReactSharedInternals.T = null;
                if (null === rootWithPendingPassiveEffects) var JSCompiler_inline_result = !1;
                else {
                    priority = pendingPassiveTransitions;
                    pendingPassiveTransitions = null;
                    var root$jscomp$0 = rootWithPendingPassiveEffects, lanes = pendingPassiveEffectsLanes;
                    rootWithPendingPassiveEffects = null;
                    pendingPassiveEffectsLanes = 0;
                    if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw Error("Cannot flush passive effects while already rendering.");
                    isFlushingPassiveEffects = !0;
                    didScheduleUpdateDuringPassiveEffects = !1;
                    null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markPassiveEffectsStarted && injectedProfilingHooks.markPassiveEffectsStarted(lanes);
                    var prevExecutionContext = executionContext;
                    executionContext |= CommitContext;
                    commitPassiveUnmountOnFiber(root$jscomp$0.current);
                    commitPassiveMountOnFiber(root$jscomp$0, root$jscomp$0.current, lanes, priority);
                    null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markPassiveEffectsStopped && injectedProfilingHooks.markPassiveEffectsStopped();
                    commitDoubleInvokeEffectsInDEV(root$jscomp$0);
                    executionContext = prevExecutionContext;
                    flushSyncWorkAcrossRoots_impl(0, !1);
                    didScheduleUpdateDuringPassiveEffects ? root$jscomp$0 === rootWithPassiveNestedUpdates ? nestedPassiveUpdateCount++ : (nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = root$jscomp$0) : nestedPassiveUpdateCount = 0;
                    didScheduleUpdateDuringPassiveEffects = isFlushingPassiveEffects = !1;
                    if (injectedHook && "function" === typeof injectedHook.onPostCommitFiberRoot) try {
                        injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);
                    } catch (err) {
                        hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
                    }
                    var stateNode = root$jscomp$0.current.stateNode;
                    stateNode.effectDuration = 0;
                    stateNode.passiveEffectDuration = 0;
                    JSCompiler_inline_result = !0;
                }
                return JSCompiler_inline_result;
            } finally{
                ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = renderPriority, releaseRootPooledCache(root, remainingLanes);
            }
        }
        return !1;
    }
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
        sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);
        rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);
        null !== rootFiber && (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));
    }
    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
        isRunningInsertionEffect = !1;
        if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
        else {
            for(; null !== nearestMountedAncestor;){
                if (3 === nearestMountedAncestor.tag) {
                    captureCommitPhaseErrorOnRoot(nearestMountedAncestor, sourceFiber, error);
                    return;
                }
                if (1 === nearestMountedAncestor.tag) {
                    var instance = nearestMountedAncestor.stateNode;
                    if ("function" === typeof nearestMountedAncestor.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
                        sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
                        error = createClassErrorUpdate(2);
                        instance = enqueueUpdate(nearestMountedAncestor, error, 2);
                        null !== instance && (initializeClassErrorUpdate(error, instance, nearestMountedAncestor, sourceFiber), markRootUpdated$1(instance, 2), ensureRootIsScheduled(instance));
                        return;
                    }
                }
                nearestMountedAncestor = nearestMountedAncestor.return;
            }
            console.error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Potential causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error);
        }
    }
    function attachPingListener(root, wakeable, lanes) {
        var pingCache = root.pingCache;
        if (null === pingCache) {
            pingCache = root.pingCache = new PossiblyWeakMap();
            var threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
        } else threadIDs = pingCache.get(wakeable), void 0 === threadIDs && (threadIDs = new Set(), pingCache.set(wakeable, threadIDs));
        threadIDs.has(lanes) || (workInProgressRootDidAttachPingListener = !0, threadIDs.add(lanes), pingCache = pingSuspendedRoot.bind(null, root, wakeable, lanes), isDevToolsPresent && restorePendingUpdaters(root, lanes), wakeable.then(pingCache, pingCache));
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
        var pingCache = root.pingCache;
        null !== pingCache && pingCache.delete(wakeable);
        root.pingedLanes |= root.suspendedLanes & pingedLanes;
        root.warmLanes &= ~pingedLanes;
        isConcurrentActEnvironment() && null === ReactSharedInternals.actQueue && console.error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act");
        workInProgressRoot === root && (workInProgressRootRenderLanes & pingedLanes) === pingedLanes && (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && (workInProgressRootRenderLanes & 62914560) === workInProgressRootRenderLanes && now$1() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? (executionContext & RenderContext) === NoContext && prepareFreshStack(root, 0) : workInProgressRootPingedLanes |= pingedLanes, workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes && (workInProgressSuspendedRetryLanes = 0));
        ensureRootIsScheduled(root);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
        0 === retryLane && (retryLane = claimNextRetryLane());
        boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
        null !== boundaryFiber && (markRootUpdated$1(boundaryFiber, retryLane), ensureRootIsScheduled(boundaryFiber));
    }
    function retryDehydratedSuspenseBoundary(boundaryFiber) {
        var suspenseState = boundaryFiber.memoizedState, retryLane = 0;
        null !== suspenseState && (retryLane = suspenseState.retryLane);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = 0;
        switch(boundaryFiber.tag){
            case 13:
                var retryCache = boundaryFiber.stateNode;
                var suspenseState = boundaryFiber.memoizedState;
                null !== suspenseState && (retryLane = suspenseState.retryLane);
                break;
            case 19:
                retryCache = boundaryFiber.stateNode;
                break;
            case 22:
                retryCache = boundaryFiber.stateNode._retryCache;
                break;
            default:
                throw Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
        }
        null !== retryCache && retryCache.delete(wakeable);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function recursivelyTraverseAndDoubleInvokeEffectsInDEV(root$jscomp$0, parentFiber, isInStrictMode) {
        if (0 !== (parentFiber.subtreeFlags & 33562624)) for(parentFiber = parentFiber.child; null !== parentFiber;){
            var root = root$jscomp$0, fiber = parentFiber, isStrictModeFiber = fiber.type === REACT_STRICT_MODE_TYPE;
            isStrictModeFiber = isInStrictMode || isStrictModeFiber;
            22 !== fiber.tag ? fiber.flags & 33554432 ? isStrictModeFiber && runWithFiberInDEV(fiber, doubleInvokeEffectsOnFiber, root, fiber, (fiber.mode & NoStrictPassiveEffectsMode) === NoMode) : recursivelyTraverseAndDoubleInvokeEffectsInDEV(root, fiber, isStrictModeFiber) : null === fiber.memoizedState && (isStrictModeFiber && fiber.flags & 8192 ? runWithFiberInDEV(fiber, doubleInvokeEffectsOnFiber, root, fiber) : fiber.subtreeFlags & 33554432 && runWithFiberInDEV(fiber, recursivelyTraverseAndDoubleInvokeEffectsInDEV, root, fiber, isStrictModeFiber));
            parentFiber = parentFiber.sibling;
        }
    }
    function doubleInvokeEffectsOnFiber(root, fiber) {
        var shouldDoubleInvokePassiveEffects = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !0;
        setIsStrictModeForDevtools(!0);
        try {
            disappearLayoutEffects(fiber), shouldDoubleInvokePassiveEffects && disconnectPassiveEffect(fiber), reappearLayoutEffects(root, fiber.alternate, fiber, !1), shouldDoubleInvokePassiveEffects && reconnectPassiveEffects(root, fiber, 0, null, !1);
        } finally{
            setIsStrictModeForDevtools(!1);
        }
    }
    function commitDoubleInvokeEffectsInDEV(root) {
        var doubleInvokeEffects = !0;
        root.current.mode & (StrictLegacyMode | StrictEffectsMode) || (doubleInvokeEffects = !1);
        recursivelyTraverseAndDoubleInvokeEffectsInDEV(root, root.current, doubleInvokeEffects);
    }
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        if ((executionContext & RenderContext) === NoContext) {
            var tag = fiber.tag;
            if (3 === tag || 1 === tag || 0 === tag || 11 === tag || 14 === tag || 15 === tag) {
                tag = getComponentNameFromFiber(fiber) || "ReactComponent";
                if (null !== didWarnStateUpdateForNotYetMountedComponent) {
                    if (didWarnStateUpdateForNotYetMountedComponent.has(tag)) return;
                    didWarnStateUpdateForNotYetMountedComponent.add(tag);
                } else didWarnStateUpdateForNotYetMountedComponent = new Set([
                    tag
                ]);
                runWithFiberInDEV(fiber, function() {
                    console.error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
                });
            }
        }
    }
    function restorePendingUpdaters(root, lanes) {
        isDevToolsPresent && root.memoizedUpdaters.forEach(function(schedulingFiber) {
            addFiberToLanesMap(root, schedulingFiber, lanes);
        });
    }
    function scheduleCallback$1(priorityLevel, callback) {
        var actQueue = ReactSharedInternals.actQueue;
        return null !== actQueue ? (actQueue.push(callback), fakeActCallbackNode$1) : scheduleCallback$3(priorityLevel, callback);
    }
    function warnIfUpdatesNotWrappedWithActDEV(fiber) {
        isConcurrentActEnvironment() && null === ReactSharedInternals.actQueue && runWithFiberInDEV(fiber, function() {
            console.error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
        });
    }
    function ensureRootIsScheduled(root) {
        root !== lastScheduledRoot && null === root.next && (null === lastScheduledRoot ? firstScheduledRoot = lastScheduledRoot = root : lastScheduledRoot = lastScheduledRoot.next = root);
        mightHavePendingSyncWork = !0;
        null !== ReactSharedInternals.actQueue ? didScheduleMicrotask_act || (didScheduleMicrotask_act = !0, scheduleImmediateTask(processRootScheduleInMicrotask)) : didScheduleMicrotask || (didScheduleMicrotask = !0, scheduleImmediateTask(processRootScheduleInMicrotask));
    }
    function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
        if (!isFlushingWork && mightHavePendingSyncWork) {
            isFlushingWork = !0;
            do {
                var didPerformSomeWork = !1;
                for(var root = firstScheduledRoot; null !== root;){
                    if (!onlyLegacy) {
                        if (0 !== syncTransitionLanes) {
                            var pendingLanes = root.pendingLanes;
                            if (0 === pendingLanes) var nextLanes = 0;
                            else {
                                var suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes;
                                nextLanes = (1 << 31 - clz32(42 | syncTransitionLanes) + 1) - 1;
                                nextLanes &= pendingLanes & ~(suspendedLanes & ~pingedLanes);
                                nextLanes = nextLanes & 201326677 ? nextLanes & 201326677 | 1 : nextLanes ? nextLanes | 2 : 0;
                            }
                            0 !== nextLanes && (didPerformSomeWork = !0, performSyncWorkOnRoot(root, nextLanes));
                        } else nextLanes = workInProgressRootRenderLanes, nextLanes = getNextLanes(root, root === workInProgressRoot ? nextLanes : 0), 0 === (nextLanes & 3) || checkIfRootIsPrerendering(root, nextLanes) || (didPerformSomeWork = !0, performSyncWorkOnRoot(root, nextLanes));
                    }
                    root = root.next;
                }
            }while (didPerformSomeWork);
            isFlushingWork = !1;
        }
    }
    function processRootScheduleInMicrotask() {
        mightHavePendingSyncWork = didScheduleMicrotask_act = didScheduleMicrotask = !1;
        var syncTransitionLanes = 0;
        0 !== currentEventTransitionLane && (shouldAttemptEagerTransition() && (syncTransitionLanes = currentEventTransitionLane), currentEventTransitionLane = 0);
        for(var currentTime = now$1(), prev = null, root = firstScheduledRoot; null !== root;){
            var next = root.next, nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);
            if (0 === nextLanes) root.next = null, null === prev ? firstScheduledRoot = next : prev.next = next, null === next && (lastScheduledRoot = prev);
            else if (prev = root, 0 !== syncTransitionLanes || 0 !== (nextLanes & 3)) mightHavePendingSyncWork = !0;
            root = next;
        }
        flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);
    }
    function scheduleTaskForRootDuringMicrotask(root, currentTime) {
        for(var suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes, expirationTimes = root.expirationTimes, lanes = root.pendingLanes & -62914561; 0 < lanes;){
            var index = 31 - clz32(lanes), lane = 1 << index, expirationTime = expirationTimes[index];
            if (-1 === expirationTime) {
                if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes)) expirationTimes[index] = computeExpirationTime(lane, currentTime);
            } else expirationTime <= currentTime && (root.expiredLanes |= lane);
            lanes &= ~lane;
        }
        currentTime = workInProgressRoot;
        suspendedLanes = workInProgressRootRenderLanes;
        suspendedLanes = getNextLanes(root, root === currentTime ? suspendedLanes : 0);
        pingedLanes = root.callbackNode;
        if (0 === suspendedLanes || root === currentTime && workInProgressSuspendedReason === SuspendedOnData || null !== root.cancelPendingCommit) return null !== pingedLanes && cancelCallback(pingedLanes), root.callbackNode = null, root.callbackPriority = 0;
        if (0 === (suspendedLanes & 3) || checkIfRootIsPrerendering(root, suspendedLanes)) {
            currentTime = suspendedLanes & -suspendedLanes;
            if (currentTime !== root.callbackPriority || null !== ReactSharedInternals.actQueue && pingedLanes !== fakeActCallbackNode) cancelCallback(pingedLanes);
            else return currentTime;
            switch(lanesToEventPriority(suspendedLanes)){
                case DiscreteEventPriority:
                case ContinuousEventPriority:
                    suspendedLanes = UserBlockingPriority;
                    break;
                case DefaultEventPriority:
                    suspendedLanes = NormalPriority$1;
                    break;
                case IdleEventPriority:
                    suspendedLanes = IdlePriority;
                    break;
                default:
                    suspendedLanes = NormalPriority$1;
            }
            pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);
            null !== ReactSharedInternals.actQueue ? (ReactSharedInternals.actQueue.push(pingedLanes), suspendedLanes = fakeActCallbackNode) : suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);
            root.callbackPriority = currentTime;
            root.callbackNode = suspendedLanes;
            return currentTime;
        }
        null !== pingedLanes && cancelCallback(pingedLanes);
        root.callbackPriority = 2;
        root.callbackNode = null;
        return 2;
    }
    function performWorkOnRootViaSchedulerTask(root, didTimeout) {
        nestedUpdateScheduled = currentUpdateIsNested = !1;
        var originalCallbackNode = root.callbackNode;
        if (flushPassiveEffects() && root.callbackNode !== originalCallbackNode) return null;
        var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;
        workInProgressRootRenderLanes$jscomp$0 = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0);
        if (0 === workInProgressRootRenderLanes$jscomp$0) return null;
        performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);
        scheduleTaskForRootDuringMicrotask(root, now$1());
        return null != root.callbackNode && root.callbackNode === originalCallbackNode ? performWorkOnRootViaSchedulerTask.bind(null, root) : null;
    }
    function performSyncWorkOnRoot(root, lanes) {
        if (flushPassiveEffects()) return null;
        currentUpdateIsNested = nestedUpdateScheduled;
        nestedUpdateScheduled = !1;
        performWorkOnRoot(root, lanes, !0);
    }
    function cancelCallback(callbackNode) {
        callbackNode !== fakeActCallbackNode && null !== callbackNode && cancelCallback$1(callbackNode);
    }
    function scheduleImmediateTask(cb) {
        null !== ReactSharedInternals.actQueue && ReactSharedInternals.actQueue.push(function() {
            cb();
            return null;
        });
        scheduleMicrotask(function() {
            (executionContext & (RenderContext | CommitContext)) !== NoContext ? scheduleCallback$3(ImmediatePriority, cb) : cb();
        });
    }
    function requestTransitionLane() {
        0 === currentEventTransitionLane && (currentEventTransitionLane = claimNextTransitionLane());
        return currentEventTransitionLane;
    }
    function coerceFormActionProp(actionProp) {
        if (null == actionProp || "symbol" === typeof actionProp || "boolean" === typeof actionProp) return null;
        if ("function" === typeof actionProp) return actionProp;
        checkAttributeStringCoercion(actionProp, "action");
        return sanitizeURL("" + actionProp);
    }
    function createFormDataWithSubmitter(form, submitter) {
        var temp = submitter.ownerDocument.createElement("input");
        temp.name = submitter.name;
        temp.value = submitter.value;
        form.id && temp.setAttribute("form", form.id);
        submitter.parentNode.insertBefore(temp, submitter);
        form = new FormData(form);
        temp.parentNode.removeChild(temp);
        return form;
    }
    function extractEvents$1(dispatchQueue, domEventName, maybeTargetInst, nativeEvent, nativeEventTarget) {
        if ("submit" === domEventName && maybeTargetInst && maybeTargetInst.stateNode === nativeEventTarget) {
            var action = coerceFormActionProp((nativeEventTarget[internalPropsKey] || null).action), submitter = nativeEvent.submitter;
            submitter && (domEventName = (domEventName = submitter[internalPropsKey] || null) ? coerceFormActionProp(domEventName.formAction) : submitter.getAttribute("formAction"), null !== domEventName && (action = domEventName, submitter = null));
            var event = new SyntheticEvent("action", "action", null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: [
                    {
                        instance: null,
                        listener: function() {
                            if (nativeEvent.defaultPrevented) {
                                if (0 !== currentEventTransitionLane) {
                                    var formData = submitter ? createFormDataWithSubmitter(nativeEventTarget, submitter) : new FormData(nativeEventTarget), pendingState = {
                                        pending: !0,
                                        data: formData,
                                        method: nativeEventTarget.method,
                                        action: action
                                    };
                                    Object.freeze(pendingState);
                                    startHostTransition(maybeTargetInst, pendingState, null, formData);
                                }
                            } else "function" === typeof action && (event.preventDefault(), formData = submitter ? createFormDataWithSubmitter(nativeEventTarget, submitter) : new FormData(nativeEventTarget), pendingState = {
                                pending: !0,
                                data: formData,
                                method: nativeEventTarget.method,
                                action: action
                            }, Object.freeze(pendingState), startHostTransition(maybeTargetInst, pendingState, action, formData));
                        },
                        currentTarget: nativeEventTarget
                    }
                ]
            });
        }
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        eventSystemFlags = 0 !== (eventSystemFlags & 4);
        for(var i = 0; i < dispatchQueue.length; i++){
            var _dispatchQueue$i = dispatchQueue[i];
            a: {
                var previousInstance = void 0, event = _dispatchQueue$i.event;
                _dispatchQueue$i = _dispatchQueue$i.listeners;
                if (eventSystemFlags) for(var i$jscomp$0 = _dispatchQueue$i.length - 1; 0 <= i$jscomp$0; i$jscomp$0--){
                    var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget;
                    _dispatchListeners$i = _dispatchListeners$i.listener;
                    if (instance !== previousInstance && event.isPropagationStopped()) break a;
                    previousInstance = event;
                    previousInstance.currentTarget = currentTarget;
                    try {
                        _dispatchListeners$i(previousInstance);
                    } catch (error) {
                        reportGlobalError(error);
                    }
                    previousInstance.currentTarget = null;
                    previousInstance = instance;
                }
                else for(i$jscomp$0 = 0; i$jscomp$0 < _dispatchQueue$i.length; i$jscomp$0++){
                    _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];
                    instance = _dispatchListeners$i.instance;
                    currentTarget = _dispatchListeners$i.currentTarget;
                    _dispatchListeners$i = _dispatchListeners$i.listener;
                    if (instance !== previousInstance && event.isPropagationStopped()) break a;
                    previousInstance = event;
                    previousInstance.currentTarget = currentTarget;
                    try {
                        _dispatchListeners$i(previousInstance);
                    } catch (error) {
                        reportGlobalError(error);
                    }
                    previousInstance.currentTarget = null;
                    previousInstance = instance;
                }
            }
        }
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
        nonDelegatedEvents.has(domEventName) || console.error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
        var listenerSet = targetElement[internalEventHandlersKey];
        void 0 === listenerSet && (listenerSet = targetElement[internalEventHandlersKey] = new Set());
        var listenerSetKey = domEventName + "__bubble";
        listenerSet.has(listenerSetKey) || (addTrappedEventListener(targetElement, domEventName, 2, !1), listenerSet.add(listenerSetKey));
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
        nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener && console.error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
        var eventSystemFlags = 0;
        isCapturePhaseListener && (eventSystemFlags |= 4);
        addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
    }
    function listenToAllSupportedEvents(rootContainerElement) {
        if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = !0;
            allNativeEvents.forEach(function(domEventName) {
                "selectionchange" !== domEventName && (nonDelegatedEvents.has(domEventName) || listenToNativeEvent(domEventName, !1, rootContainerElement), listenToNativeEvent(domEventName, !0, rootContainerElement));
            });
            var ownerDocument = 9 === rootContainerElement.nodeType ? rootContainerElement : rootContainerElement.ownerDocument;
            null === ownerDocument || ownerDocument[listeningMarker] || (ownerDocument[listeningMarker] = !0, listenToNativeEvent("selectionchange", !1, ownerDocument));
        }
    }
    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener) {
        switch(getEventPriority(domEventName)){
            case DiscreteEventPriority:
                var listenerWrapper = dispatchDiscreteEvent;
                break;
            case ContinuousEventPriority:
                listenerWrapper = dispatchContinuousEvent;
                break;
            default:
                listenerWrapper = dispatchEvent;
        }
        eventSystemFlags = listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
        listenerWrapper = void 0;
        !passiveBrowserEventsSupported || "touchstart" !== domEventName && "touchmove" !== domEventName && "wheel" !== domEventName || (listenerWrapper = !0);
        isCapturePhaseListener ? void 0 !== listenerWrapper ? targetContainer.addEventListener(domEventName, eventSystemFlags, {
            capture: !0,
            passive: listenerWrapper
        }) : targetContainer.addEventListener(domEventName, eventSystemFlags, !0) : void 0 !== listenerWrapper ? targetContainer.addEventListener(domEventName, eventSystemFlags, {
            passive: listenerWrapper
        }) : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);
    }
    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst$jscomp$0, targetContainer) {
        var ancestorInst = targetInst$jscomp$0;
        if (0 === (eventSystemFlags & 1) && 0 === (eventSystemFlags & 2) && null !== targetInst$jscomp$0) a: for(;;){
            if (null === targetInst$jscomp$0) return;
            var nodeTag = targetInst$jscomp$0.tag;
            if (3 === nodeTag || 4 === nodeTag) {
                var container = targetInst$jscomp$0.stateNode.containerInfo;
                if (container === targetContainer || 8 === container.nodeType && container.parentNode === targetContainer) break;
                if (4 === nodeTag) for(nodeTag = targetInst$jscomp$0.return; null !== nodeTag;){
                    var grandTag = nodeTag.tag;
                    if (3 === grandTag || 4 === grandTag) {
                        if (grandTag = nodeTag.stateNode.containerInfo, grandTag === targetContainer || 8 === grandTag.nodeType && grandTag.parentNode === targetContainer) return;
                    }
                    nodeTag = nodeTag.return;
                }
                for(; null !== container;){
                    nodeTag = getClosestInstanceFromNode(container);
                    if (null === nodeTag) return;
                    grandTag = nodeTag.tag;
                    if (5 === grandTag || 6 === grandTag || 26 === grandTag || 27 === grandTag) {
                        targetInst$jscomp$0 = ancestorInst = nodeTag;
                        continue a;
                    }
                    container = container.parentNode;
                }
            }
            targetInst$jscomp$0 = targetInst$jscomp$0.return;
        }
        batchedUpdates$1(function() {
            var targetInst = ancestorInst, nativeEventTarget = getEventTarget(nativeEvent), dispatchQueue = [];
            a: {
                var reactName = topLevelEventsToReactNames.get(domEventName);
                if (void 0 !== reactName) {
                    var SyntheticEventCtor = SyntheticEvent, reactEventType = domEventName;
                    switch(domEventName){
                        case "keypress":
                            if (0 === getEventCharCode(nativeEvent)) break a;
                        case "keydown":
                        case "keyup":
                            SyntheticEventCtor = SyntheticKeyboardEvent;
                            break;
                        case "focusin":
                            reactEventType = "focus";
                            SyntheticEventCtor = SyntheticFocusEvent;
                            break;
                        case "focusout":
                            reactEventType = "blur";
                            SyntheticEventCtor = SyntheticFocusEvent;
                            break;
                        case "beforeblur":
                        case "afterblur":
                            SyntheticEventCtor = SyntheticFocusEvent;
                            break;
                        case "click":
                            if (2 === nativeEvent.button) break a;
                        case "auxclick":
                        case "dblclick":
                        case "mousedown":
                        case "mousemove":
                        case "mouseup":
                        case "mouseout":
                        case "mouseover":
                        case "contextmenu":
                            SyntheticEventCtor = SyntheticMouseEvent;
                            break;
                        case "drag":
                        case "dragend":
                        case "dragenter":
                        case "dragexit":
                        case "dragleave":
                        case "dragover":
                        case "dragstart":
                        case "drop":
                            SyntheticEventCtor = SyntheticDragEvent;
                            break;
                        case "touchcancel":
                        case "touchend":
                        case "touchmove":
                        case "touchstart":
                            SyntheticEventCtor = SyntheticTouchEvent;
                            break;
                        case ANIMATION_END:
                        case ANIMATION_ITERATION:
                        case ANIMATION_START:
                            SyntheticEventCtor = SyntheticAnimationEvent;
                            break;
                        case TRANSITION_END:
                            SyntheticEventCtor = SyntheticTransitionEvent;
                            break;
                        case "scroll":
                        case "scrollend":
                            SyntheticEventCtor = SyntheticUIEvent;
                            break;
                        case "wheel":
                            SyntheticEventCtor = SyntheticWheelEvent;
                            break;
                        case "copy":
                        case "cut":
                        case "paste":
                            SyntheticEventCtor = SyntheticClipboardEvent;
                            break;
                        case "gotpointercapture":
                        case "lostpointercapture":
                        case "pointercancel":
                        case "pointerdown":
                        case "pointermove":
                        case "pointerout":
                        case "pointerover":
                        case "pointerup":
                            SyntheticEventCtor = SyntheticPointerEvent;
                            break;
                        case "toggle":
                        case "beforetoggle":
                            SyntheticEventCtor = SyntheticToggleEvent;
                    }
                    var inCapturePhase = 0 !== (eventSystemFlags & 4), accumulateTargetOnly = !inCapturePhase && ("scroll" === domEventName || "scrollend" === domEventName), reactEventName = inCapturePhase ? null !== reactName ? reactName + "Capture" : null : reactName;
                    inCapturePhase = [];
                    for(var instance = targetInst, lastHostComponent; null !== instance;){
                        var _instance2 = instance;
                        lastHostComponent = _instance2.stateNode;
                        _instance2 = _instance2.tag;
                        5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2 || null === lastHostComponent || null === reactEventName || (_instance2 = getListener(instance, reactEventName), null != _instance2 && inCapturePhase.push(createDispatchListener(instance, _instance2, lastHostComponent)));
                        if (accumulateTargetOnly) break;
                        instance = instance.return;
                    }
                    0 < inCapturePhase.length && (reactName = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget), dispatchQueue.push({
                        event: reactName,
                        listeners: inCapturePhase
                    }));
                }
            }
            if (0 === (eventSystemFlags & 7)) {
                a: {
                    reactName = "mouseover" === domEventName || "pointerover" === domEventName;
                    SyntheticEventCtor = "mouseout" === domEventName || "pointerout" === domEventName;
                    if (reactName && nativeEvent !== currentReplayingEvent && (reactEventType = nativeEvent.relatedTarget || nativeEvent.fromElement) && (getClosestInstanceFromNode(reactEventType) || reactEventType[internalContainerInstanceKey])) break a;
                    if (SyntheticEventCtor || reactName) {
                        reactName = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget : (reactName = nativeEventTarget.ownerDocument) ? reactName.defaultView || reactName.parentWindow : window;
                        if (SyntheticEventCtor) {
                            if (reactEventType = nativeEvent.relatedTarget || nativeEvent.toElement, SyntheticEventCtor = targetInst, reactEventType = reactEventType ? getClosestInstanceFromNode(reactEventType) : null, null !== reactEventType && (accumulateTargetOnly = getNearestMountedFiber(reactEventType), inCapturePhase = reactEventType.tag, reactEventType !== accumulateTargetOnly || 5 !== inCapturePhase && 27 !== inCapturePhase && 6 !== inCapturePhase)) reactEventType = null;
                        } else SyntheticEventCtor = null, reactEventType = targetInst;
                        if (SyntheticEventCtor !== reactEventType) {
                            inCapturePhase = SyntheticMouseEvent;
                            _instance2 = "onMouseLeave";
                            reactEventName = "onMouseEnter";
                            instance = "mouse";
                            if ("pointerout" === domEventName || "pointerover" === domEventName) inCapturePhase = SyntheticPointerEvent, _instance2 = "onPointerLeave", reactEventName = "onPointerEnter", instance = "pointer";
                            accumulateTargetOnly = null == SyntheticEventCtor ? reactName : getNodeFromInstance(SyntheticEventCtor);
                            lastHostComponent = null == reactEventType ? reactName : getNodeFromInstance(reactEventType);
                            reactName = new inCapturePhase(_instance2, instance + "leave", SyntheticEventCtor, nativeEvent, nativeEventTarget);
                            reactName.target = accumulateTargetOnly;
                            reactName.relatedTarget = lastHostComponent;
                            _instance2 = null;
                            getClosestInstanceFromNode(nativeEventTarget) === targetInst && (inCapturePhase = new inCapturePhase(reactEventName, instance + "enter", reactEventType, nativeEvent, nativeEventTarget), inCapturePhase.target = lastHostComponent, inCapturePhase.relatedTarget = accumulateTargetOnly, _instance2 = inCapturePhase);
                            accumulateTargetOnly = _instance2;
                            if (SyntheticEventCtor && reactEventType) b: {
                                inCapturePhase = SyntheticEventCtor;
                                reactEventName = reactEventType;
                                instance = 0;
                                for(lastHostComponent = inCapturePhase; lastHostComponent; lastHostComponent = getParent(lastHostComponent))instance++;
                                lastHostComponent = 0;
                                for(_instance2 = reactEventName; _instance2; _instance2 = getParent(_instance2))lastHostComponent++;
                                for(; 0 < instance - lastHostComponent;)inCapturePhase = getParent(inCapturePhase), instance--;
                                for(; 0 < lastHostComponent - instance;)reactEventName = getParent(reactEventName), lastHostComponent--;
                                for(; instance--;){
                                    if (inCapturePhase === reactEventName || null !== reactEventName && inCapturePhase === reactEventName.alternate) break b;
                                    inCapturePhase = getParent(inCapturePhase);
                                    reactEventName = getParent(reactEventName);
                                }
                                inCapturePhase = null;
                            }
                            else inCapturePhase = null;
                            null !== SyntheticEventCtor && accumulateEnterLeaveListenersForEvent(dispatchQueue, reactName, SyntheticEventCtor, inCapturePhase, !1);
                            null !== reactEventType && null !== accumulateTargetOnly && accumulateEnterLeaveListenersForEvent(dispatchQueue, accumulateTargetOnly, reactEventType, inCapturePhase, !0);
                        }
                    }
                }
                a: {
                    reactName = targetInst ? getNodeFromInstance(targetInst) : window;
                    SyntheticEventCtor = reactName.nodeName && reactName.nodeName.toLowerCase();
                    if ("select" === SyntheticEventCtor || "input" === SyntheticEventCtor && "file" === reactName.type) var getTargetInstFunc = getTargetInstForChangeEvent;
                    else if (isTextInputElement(reactName)) {
                        if (isInputEventSupported) getTargetInstFunc = getTargetInstForInputOrChangeEvent;
                        else {
                            getTargetInstFunc = getTargetInstForInputEventPolyfill;
                            var handleEventFunc = handleEventsForInputEventPolyfill;
                        }
                    } else SyntheticEventCtor = reactName.nodeName, !SyntheticEventCtor || "input" !== SyntheticEventCtor.toLowerCase() || "checkbox" !== reactName.type && "radio" !== reactName.type ? targetInst && isCustomElement(targetInst.elementType) && (getTargetInstFunc = getTargetInstForChangeEvent) : getTargetInstFunc = getTargetInstForClickEvent;
                    if (getTargetInstFunc && (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))) {
                        createAndAccumulateChangeEvent(dispatchQueue, getTargetInstFunc, nativeEvent, nativeEventTarget);
                        break a;
                    }
                    handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);
                    "focusout" === domEventName && targetInst && "number" === reactName.type && null != targetInst.memoizedProps.value && setDefaultValue(reactName, "number", reactName.value);
                }
                handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;
                switch(domEventName){
                    case "focusin":
                        if (isTextInputElement(handleEventFunc) || "true" === handleEventFunc.contentEditable) activeElement = handleEventFunc, activeElementInst = targetInst, lastSelection = null;
                        break;
                    case "focusout":
                        lastSelection = activeElementInst = activeElement = null;
                        break;
                    case "mousedown":
                        mouseDown = !0;
                        break;
                    case "contextmenu":
                    case "mouseup":
                    case "dragend":
                        mouseDown = !1;
                        constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                        break;
                    case "selectionchange":
                        if (skipSelectionChangeEvent) break;
                    case "keydown":
                    case "keyup":
                        constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                }
                var fallbackData;
                if (canUseCompositionEvent) b: {
                    switch(domEventName){
                        case "compositionstart":
                            var eventType = "onCompositionStart";
                            break b;
                        case "compositionend":
                            eventType = "onCompositionEnd";
                            break b;
                        case "compositionupdate":
                            eventType = "onCompositionUpdate";
                            break b;
                    }
                    eventType = void 0;
                }
                else isComposing ? isFallbackCompositionEnd(domEventName, nativeEvent) && (eventType = "onCompositionEnd") : "keydown" === domEventName && nativeEvent.keyCode === START_KEYCODE && (eventType = "onCompositionStart");
                eventType && (useFallbackCompositionData && "ko" !== nativeEvent.locale && (isComposing || "onCompositionStart" !== eventType ? "onCompositionEnd" === eventType && isComposing && (fallbackData = getData()) : (root = nativeEventTarget, startText = "value" in root ? root.value : root.textContent, isComposing = !0)), handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType), 0 < handleEventFunc.length && (eventType = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget), dispatchQueue.push({
                    event: eventType,
                    listeners: handleEventFunc
                }), fallbackData ? eventType.data = fallbackData : (fallbackData = getDataFromCustomEvent(nativeEvent), null !== fallbackData && (eventType.data = fallbackData))));
                if (fallbackData = canUseTextInputEvent ? getNativeBeforeInputChars(domEventName, nativeEvent) : getFallbackBeforeInputChars(domEventName, nativeEvent)) eventType = accumulateTwoPhaseListeners(targetInst, "onBeforeInput"), 0 < eventType.length && (handleEventFunc = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget), dispatchQueue.push({
                    event: handleEventFunc,
                    listeners: eventType
                }), handleEventFunc.data = fallbackData);
                extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            }
            processDispatchQueue(dispatchQueue, eventSystemFlags);
        });
    }
    function createDispatchListener(instance, listener, currentTarget) {
        return {
            instance: instance,
            listener: listener,
            currentTarget: currentTarget
        };
    }
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
        for(var captureName = reactName + "Capture", listeners = []; null !== targetFiber;){
            var _instance3 = targetFiber, stateNode = _instance3.stateNode;
            _instance3 = _instance3.tag;
            5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3 || null === stateNode || (_instance3 = getListener(targetFiber, captureName), null != _instance3 && listeners.unshift(createDispatchListener(targetFiber, _instance3, stateNode)), _instance3 = getListener(targetFiber, reactName), null != _instance3 && listeners.push(createDispatchListener(targetFiber, _instance3, stateNode)));
            targetFiber = targetFiber.return;
        }
        return listeners;
    }
    function getParent(inst) {
        if (null === inst) return null;
        do inst = inst.return;
        while (inst && 5 !== inst.tag && 27 !== inst.tag);
        return inst ? inst : null;
    }
    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        for(var registrationName = event._reactName, listeners = []; null !== target && target !== common;){
            var _instance4 = target, alternate = _instance4.alternate, stateNode = _instance4.stateNode;
            _instance4 = _instance4.tag;
            if (null !== alternate && alternate === common) break;
            5 !== _instance4 && 26 !== _instance4 && 27 !== _instance4 || null === stateNode || (alternate = stateNode, inCapturePhase ? (stateNode = getListener(target, registrationName), null != stateNode && listeners.unshift(createDispatchListener(target, stateNode, alternate))) : inCapturePhase || (stateNode = getListener(target, registrationName), null != stateNode && listeners.push(createDispatchListener(target, stateNode, alternate))));
            target = target.return;
        }
        0 !== listeners.length && dispatchQueue.push({
            event: event,
            listeners: listeners
        });
    }
    function validatePropertiesInDevelopment(type, props) {
        validateProperties$2(type, props);
        "input" !== type && "textarea" !== type && "select" !== type || null == props || null !== props.value || didWarnValueNull || (didWarnValueNull = !0, "select" === type && props.multiple ? console.error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type) : console.error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type));
        var eventRegistry = {
            registrationNameDependencies: registrationNameDependencies,
            possibleRegistrationNames: possibleRegistrationNames
        };
        isCustomElement(type) || "string" === typeof props.is || warnUnknownProperties(type, props, eventRegistry);
        props.contentEditable && !props.suppressContentEditableWarning && null != props.children && console.error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
    }
    function warnForPropDifference(propName, serverValue, clientValue, serverDifferences) {
        serverValue !== clientValue && (clientValue = normalizeMarkupForTextOrAttribute(clientValue), normalizeMarkupForTextOrAttribute(serverValue) !== clientValue && (serverDifferences[propName] = serverValue));
    }
    function warnForExtraAttributes(domElement, attributeNames, serverDifferences) {
        attributeNames.forEach(function(attributeName) {
            serverDifferences[getPropNameFromAttributeName(attributeName)] = "style" === attributeName ? getStylesObjectFromElement(domElement) : domElement.getAttribute(attributeName);
        });
    }
    function warnForInvalidEventListener(registrationName, listener) {
        !1 === listener ? console.error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName) : console.error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
    }
    function normalizeHTML(parent, html) {
        parent = parent.namespaceURI === MATH_NAMESPACE || parent.namespaceURI === SVG_NAMESPACE ? parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName) : parent.ownerDocument.createElement(parent.tagName);
        parent.innerHTML = html;
        return parent.innerHTML;
    }
    function normalizeMarkupForTextOrAttribute(markup) {
        willCoercionThrow(markup) && (console.error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before using it here.", typeName(markup)), testStringCoercion(markup));
        return ("string" === typeof markup ? markup : "" + markup).replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
    }
    function checkForUnmatchedText(serverText, clientText) {
        clientText = normalizeMarkupForTextOrAttribute(clientText);
        return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;
    }
    function noop$1() {}
    function setProp(domElement, tag, key, value, props, prevValue) {
        switch(key){
            case "children":
                if ("string" === typeof value) validateTextNesting(value, tag), "body" === tag || "textarea" === tag && "" === value || setTextContent(domElement, value);
                else if ("number" === typeof value || "bigint" === typeof value) validateTextNesting("" + value, tag), "body" !== tag && setTextContent(domElement, "" + value);
                break;
            case "className":
                setValueForKnownAttribute(domElement, "class", value);
                break;
            case "tabIndex":
                setValueForKnownAttribute(domElement, "tabindex", value);
                break;
            case "dir":
            case "role":
            case "viewBox":
            case "width":
            case "height":
                setValueForKnownAttribute(domElement, key, value);
                break;
            case "style":
                setValueForStyles(domElement, value, prevValue);
                break;
            case "data":
                if ("object" !== tag) {
                    setValueForKnownAttribute(domElement, "data", value);
                    break;
                }
            case "src":
            case "href":
                if ("" === value && ("a" !== tag || "href" !== key)) {
                    "src" === key ? console.error('An empty string ("") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', key, key) : console.error('An empty string ("") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', key, key);
                    domElement.removeAttribute(key);
                    break;
                }
                if (null == value || "function" === typeof value || "symbol" === typeof value || "boolean" === typeof value) {
                    domElement.removeAttribute(key);
                    break;
                }
                checkAttributeStringCoercion(value, key);
                value = sanitizeURL("" + value);
                domElement.setAttribute(key, value);
                break;
            case "action":
            case "formAction":
                null != value && ("form" === tag ? "formAction" === key ? console.error("You can only pass the formAction prop to <input> or <button>. Use the action prop on <form>.") : "function" === typeof value && (null == props.encType && null == props.method || didWarnFormActionMethod || (didWarnFormActionMethod = !0, console.error("Cannot specify a encType or method for a form that specifies a function as the action. React provides those automatically. They will get overridden.")), null == props.target || didWarnFormActionTarget || (didWarnFormActionTarget = !0, console.error("Cannot specify a target for a form that specifies a function as the action. The function will always be executed in the same window."))) : "input" === tag || "button" === tag ? "action" === key ? console.error("You can only pass the action prop to <form>. Use the formAction prop on <input> or <button>.") : "input" !== tag || "submit" === props.type || "image" === props.type || didWarnFormActionType ? "button" !== tag || null == props.type || "submit" === props.type || didWarnFormActionType ? "function" === typeof value && (null == props.name || didWarnFormActionName || (didWarnFormActionName = !0, console.error('Cannot specify a "name" prop for a button that specifies a function as a formAction. React needs it to encode which action should be invoked. It will get overridden.')), null == props.formEncType && null == props.formMethod || didWarnFormActionMethod || (didWarnFormActionMethod = !0, console.error("Cannot specify a formEncType or formMethod for a button that specifies a function as a formAction. React provides those automatically. They will get overridden.")), null == props.formTarget || didWarnFormActionTarget || (didWarnFormActionTarget = !0, console.error("Cannot specify a formTarget for a button that specifies a function as a formAction. The function will always be executed in the same window."))) : (didWarnFormActionType = !0, console.error('A button can only specify a formAction along with type="submit" or no type.')) : (didWarnFormActionType = !0, console.error('An input can only specify a formAction along with type="submit" or type="image".')) : "action" === key ? console.error("You can only pass the action prop to <form>.") : console.error("You can only pass the formAction prop to <input> or <button>."));
                if ("function" === typeof value) {
                    domElement.setAttribute(key, "javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");
                    break;
                } else "function" === typeof prevValue && ("formAction" === key ? ("input" !== tag && setProp(domElement, tag, "name", props.name, props, null), setProp(domElement, tag, "formEncType", props.formEncType, props, null), setProp(domElement, tag, "formMethod", props.formMethod, props, null), setProp(domElement, tag, "formTarget", props.formTarget, props, null)) : (setProp(domElement, tag, "encType", props.encType, props, null), setProp(domElement, tag, "method", props.method, props, null), setProp(domElement, tag, "target", props.target, props, null)));
                if (null == value || "symbol" === typeof value || "boolean" === typeof value) {
                    domElement.removeAttribute(key);
                    break;
                }
                checkAttributeStringCoercion(value, key);
                value = sanitizeURL("" + value);
                domElement.setAttribute(key, value);
                break;
            case "onClick":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), domElement.onclick = noop$1);
                break;
            case "onScroll":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scroll", domElement));
                break;
            case "onScrollEnd":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scrollend", domElement));
                break;
            case "dangerouslySetInnerHTML":
                if (null != value) {
                    if ("object" !== typeof value || !("__html" in value)) throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.");
                    key = value.__html;
                    if (null != key) {
                        if (null != props.children) throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
                        domElement.innerHTML = key;
                    }
                }
                break;
            case "multiple":
                domElement.multiple = value && "function" !== typeof value && "symbol" !== typeof value;
                break;
            case "muted":
                domElement.muted = value && "function" !== typeof value && "symbol" !== typeof value;
                break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "ref":
                break;
            case "autoFocus":
                break;
            case "xlinkHref":
                if (null == value || "function" === typeof value || "boolean" === typeof value || "symbol" === typeof value) {
                    domElement.removeAttribute("xlink:href");
                    break;
                }
                checkAttributeStringCoercion(value, key);
                key = sanitizeURL("" + value);
                domElement.setAttributeNS(xlinkNamespace, "xlink:href", key);
                break;
            case "contentEditable":
            case "spellCheck":
            case "draggable":
            case "value":
            case "autoReverse":
            case "externalResourcesRequired":
            case "focusable":
            case "preserveAlpha":
                null != value && "function" !== typeof value && "symbol" !== typeof value ? (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, "" + value)) : domElement.removeAttribute(key);
                break;
            case "inert":
                "" !== value || didWarnForNewBooleanPropsWithEmptyValue[key] || (didWarnForNewBooleanPropsWithEmptyValue[key] = !0, console.error("Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.", key));
            case "allowFullScreen":
            case "async":
            case "autoPlay":
            case "controls":
            case "default":
            case "defer":
            case "disabled":
            case "disablePictureInPicture":
            case "disableRemotePlayback":
            case "formNoValidate":
            case "hidden":
            case "loop":
            case "noModule":
            case "noValidate":
            case "open":
            case "playsInline":
            case "readOnly":
            case "required":
            case "reversed":
            case "scoped":
            case "seamless":
            case "itemScope":
                value && "function" !== typeof value && "symbol" !== typeof value ? domElement.setAttribute(key, "") : domElement.removeAttribute(key);
                break;
            case "capture":
            case "download":
                !0 === value ? domElement.setAttribute(key, "") : !1 !== value && null != value && "function" !== typeof value && "symbol" !== typeof value ? (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, value)) : domElement.removeAttribute(key);
                break;
            case "cols":
            case "rows":
            case "size":
            case "span":
                null != value && "function" !== typeof value && "symbol" !== typeof value && !isNaN(value) && 1 <= value ? (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, value)) : domElement.removeAttribute(key);
                break;
            case "rowSpan":
            case "start":
                null == value || "function" === typeof value || "symbol" === typeof value || isNaN(value) ? domElement.removeAttribute(key) : (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, value));
                break;
            case "popover":
                listenToNonDelegatedEvent("beforetoggle", domElement);
                listenToNonDelegatedEvent("toggle", domElement);
                setValueForAttribute(domElement, "popover", value);
                break;
            case "xlinkActuate":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:actuate", value);
                break;
            case "xlinkArcrole":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:arcrole", value);
                break;
            case "xlinkRole":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:role", value);
                break;
            case "xlinkShow":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:show", value);
                break;
            case "xlinkTitle":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:title", value);
                break;
            case "xlinkType":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:type", value);
                break;
            case "xmlBase":
                setValueForNamespacedAttribute(domElement, xmlNamespace, "xml:base", value);
                break;
            case "xmlLang":
                setValueForNamespacedAttribute(domElement, xmlNamespace, "xml:lang", value);
                break;
            case "xmlSpace":
                setValueForNamespacedAttribute(domElement, xmlNamespace, "xml:space", value);
                break;
            case "is":
                null != prevValue && console.error('Cannot update the "is" prop after it has been initialized.');
                setValueForAttribute(domElement, "is", value);
                break;
            case "innerText":
            case "textContent":
                break;
            case "popoverTarget":
                didWarnPopoverTargetObject || null == value || "object" !== typeof value || (didWarnPopoverTargetObject = !0, console.error("The `popoverTarget` prop expects the ID of an Element as a string. Received %s instead.", value));
            default:
                !(2 < key.length) || "o" !== key[0] && "O" !== key[0] || "n" !== key[1] && "N" !== key[1] ? (key = getAttributeAlias(key), setValueForAttribute(domElement, key, value)) : registrationNameDependencies.hasOwnProperty(key) && null != value && "function" !== typeof value && warnForInvalidEventListener(key, value);
        }
    }
    function setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {
        switch(key){
            case "style":
                setValueForStyles(domElement, value, prevValue);
                break;
            case "dangerouslySetInnerHTML":
                if (null != value) {
                    if ("object" !== typeof value || !("__html" in value)) throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.");
                    key = value.__html;
                    if (null != key) {
                        if (null != props.children) throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
                        domElement.innerHTML = key;
                    }
                }
                break;
            case "children":
                "string" === typeof value ? setTextContent(domElement, value) : ("number" === typeof value || "bigint" === typeof value) && setTextContent(domElement, "" + value);
                break;
            case "onScroll":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scroll", domElement));
                break;
            case "onScrollEnd":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scrollend", domElement));
                break;
            case "onClick":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), domElement.onclick = noop$1);
                break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "innerHTML":
            case "ref":
                break;
            case "innerText":
            case "textContent":
                break;
            default:
                if (registrationNameDependencies.hasOwnProperty(key)) null != value && "function" !== typeof value && warnForInvalidEventListener(key, value);
                else a: {
                    if ("o" === key[0] && "n" === key[1] && (props = key.endsWith("Capture"), tag = key.slice(2, props ? key.length - 7 : void 0), prevValue = domElement[internalPropsKey] || null, prevValue = null != prevValue ? prevValue[key] : null, "function" === typeof prevValue && domElement.removeEventListener(tag, prevValue, props), "function" === typeof value)) {
                        "function" !== typeof prevValue && null !== prevValue && (key in domElement ? domElement[key] = null : domElement.hasAttribute(key) && domElement.removeAttribute(key));
                        domElement.addEventListener(tag, value, props);
                        break a;
                    }
                    key in domElement ? domElement[key] = value : !0 === value ? domElement.setAttribute(key, "") : setValueForAttribute(domElement, key, value);
                }
        }
    }
    function setInitialProperties(domElement, tag, props) {
        validatePropertiesInDevelopment(tag, props);
        switch(tag){
            case "div":
            case "span":
            case "svg":
            case "path":
            case "a":
            case "g":
            case "p":
            case "li":
                break;
            case "img":
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                var hasSrc = !1, hasSrcSet = !1, propKey;
                for(propKey in props)if (props.hasOwnProperty(propKey)) {
                    var propValue = props[propKey];
                    if (null != propValue) switch(propKey){
                        case "src":
                            hasSrc = !0;
                            break;
                        case "srcSet":
                            hasSrcSet = !0;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                        default:
                            setProp(domElement, tag, propKey, propValue, props, null);
                    }
                }
                hasSrcSet && setProp(domElement, tag, "srcSet", props.srcSet, props, null);
                hasSrc && setProp(domElement, tag, "src", props.src, props, null);
                return;
            case "input":
                checkControlledValueProps("input", props);
                listenToNonDelegatedEvent("invalid", domElement);
                var defaultValue = propKey = propValue = hasSrcSet = null, checked = null, defaultChecked = null;
                for(hasSrc in props)if (props.hasOwnProperty(hasSrc)) {
                    var _propValue = props[hasSrc];
                    if (null != _propValue) switch(hasSrc){
                        case "name":
                            hasSrcSet = _propValue;
                            break;
                        case "type":
                            propValue = _propValue;
                            break;
                        case "checked":
                            checked = _propValue;
                            break;
                        case "defaultChecked":
                            defaultChecked = _propValue;
                            break;
                        case "value":
                            propKey = _propValue;
                            break;
                        case "defaultValue":
                            defaultValue = _propValue;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            if (null != _propValue) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                            break;
                        default:
                            setProp(domElement, tag, hasSrc, _propValue, props, null);
                    }
                }
                validateInputProps(domElement, props);
                initInput(domElement, propKey, defaultValue, checked, defaultChecked, propValue, hasSrcSet, !1);
                track(domElement);
                return;
            case "select":
                checkControlledValueProps("select", props);
                listenToNonDelegatedEvent("invalid", domElement);
                hasSrc = propValue = propKey = null;
                for(hasSrcSet in props)if (props.hasOwnProperty(hasSrcSet) && (defaultValue = props[hasSrcSet], null != defaultValue)) switch(hasSrcSet){
                    case "value":
                        propKey = defaultValue;
                        break;
                    case "defaultValue":
                        propValue = defaultValue;
                        break;
                    case "multiple":
                        hasSrc = defaultValue;
                    default:
                        setProp(domElement, tag, hasSrcSet, defaultValue, props, null);
                }
                validateSelectProps(domElement, props);
                tag = propKey;
                props = propValue;
                domElement.multiple = !!hasSrc;
                null != tag ? updateOptions(domElement, !!hasSrc, tag, !1) : null != props && updateOptions(domElement, !!hasSrc, props, !0);
                return;
            case "textarea":
                checkControlledValueProps("textarea", props);
                listenToNonDelegatedEvent("invalid", domElement);
                propKey = hasSrcSet = hasSrc = null;
                for(propValue in props)if (props.hasOwnProperty(propValue) && (defaultValue = props[propValue], null != defaultValue)) switch(propValue){
                    case "value":
                        hasSrc = defaultValue;
                        break;
                    case "defaultValue":
                        hasSrcSet = defaultValue;
                        break;
                    case "children":
                        propKey = defaultValue;
                        break;
                    case "dangerouslySetInnerHTML":
                        if (null != defaultValue) throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                        break;
                    default:
                        setProp(domElement, tag, propValue, defaultValue, props, null);
                }
                validateTextareaProps(domElement, props);
                initTextarea(domElement, hasSrc, hasSrcSet, propKey);
                track(domElement);
                return;
            case "option":
                validateOptionProps(domElement, props);
                for(checked in props)if (props.hasOwnProperty(checked) && (hasSrc = props[checked], null != hasSrc)) switch(checked){
                    case "selected":
                        domElement.selected = hasSrc && "function" !== typeof hasSrc && "symbol" !== typeof hasSrc;
                        break;
                    default:
                        setProp(domElement, tag, checked, hasSrc, props, null);
                }
                return;
            case "dialog":
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                break;
            case "iframe":
            case "object":
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "video":
            case "audio":
                for(hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);
                break;
            case "image":
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "details":
                listenToNonDelegatedEvent("toggle", domElement);
                break;
            case "embed":
            case "source":
            case "link":
                listenToNonDelegatedEvent("error", domElement), listenToNonDelegatedEvent("load", domElement);
            case "area":
            case "base":
            case "br":
            case "col":
            case "hr":
            case "keygen":
            case "meta":
            case "param":
            case "track":
            case "wbr":
            case "menuitem":
                for(defaultChecked in props)if (props.hasOwnProperty(defaultChecked) && (hasSrc = props[defaultChecked], null != hasSrc)) switch(defaultChecked){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                    default:
                        setProp(domElement, tag, defaultChecked, hasSrc, props, null);
                }
                return;
            default:
                if (isCustomElement(tag)) {
                    for(_propValue in props)props.hasOwnProperty(_propValue) && (hasSrc = props[_propValue], void 0 !== hasSrc && setPropOnCustomElement(domElement, tag, _propValue, hasSrc, props, void 0));
                    return;
                }
        }
        for(defaultValue in props)props.hasOwnProperty(defaultValue) && (hasSrc = props[defaultValue], null != hasSrc && setProp(domElement, tag, defaultValue, hasSrc, props, null));
    }
    function updateProperties(domElement, tag, lastProps, nextProps) {
        validatePropertiesInDevelopment(tag, nextProps);
        switch(tag){
            case "div":
            case "span":
            case "svg":
            case "path":
            case "a":
            case "g":
            case "p":
            case "li":
                break;
            case "input":
                var name = null, type = null, value = null, defaultValue = null, lastDefaultValue = null, checked = null, defaultChecked = null;
                for(propKey in lastProps){
                    var lastProp = lastProps[propKey];
                    if (lastProps.hasOwnProperty(propKey) && null != lastProp) switch(propKey){
                        case "checked":
                            break;
                        case "value":
                            break;
                        case "defaultValue":
                            lastDefaultValue = lastProp;
                        default:
                            nextProps.hasOwnProperty(propKey) || setProp(domElement, tag, propKey, null, nextProps, lastProp);
                    }
                }
                for(var _propKey8 in nextProps){
                    var propKey = nextProps[_propKey8];
                    lastProp = lastProps[_propKey8];
                    if (nextProps.hasOwnProperty(_propKey8) && (null != propKey || null != lastProp)) switch(_propKey8){
                        case "type":
                            type = propKey;
                            break;
                        case "name":
                            name = propKey;
                            break;
                        case "checked":
                            checked = propKey;
                            break;
                        case "defaultChecked":
                            defaultChecked = propKey;
                            break;
                        case "value":
                            value = propKey;
                            break;
                        case "defaultValue":
                            defaultValue = propKey;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            if (null != propKey) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                            break;
                        default:
                            propKey !== lastProp && setProp(domElement, tag, _propKey8, propKey, nextProps, lastProp);
                    }
                }
                tag = "checkbox" === lastProps.type || "radio" === lastProps.type ? null != lastProps.checked : null != lastProps.value;
                nextProps = "checkbox" === nextProps.type || "radio" === nextProps.type ? null != nextProps.checked : null != nextProps.value;
                tag || !nextProps || didWarnUncontrolledToControlled || (console.error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components"), didWarnUncontrolledToControlled = !0);
                !tag || nextProps || didWarnControlledToUncontrolled || (console.error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components"), didWarnControlledToUncontrolled = !0);
                updateInput(domElement, value, defaultValue, lastDefaultValue, checked, defaultChecked, type, name);
                return;
            case "select":
                propKey = value = defaultValue = _propKey8 = null;
                for(type in lastProps)if (lastDefaultValue = lastProps[type], lastProps.hasOwnProperty(type) && null != lastDefaultValue) switch(type){
                    case "value":
                        break;
                    case "multiple":
                        propKey = lastDefaultValue;
                    default:
                        nextProps.hasOwnProperty(type) || setProp(domElement, tag, type, null, nextProps, lastDefaultValue);
                }
                for(name in nextProps)if (type = nextProps[name], lastDefaultValue = lastProps[name], nextProps.hasOwnProperty(name) && (null != type || null != lastDefaultValue)) switch(name){
                    case "value":
                        _propKey8 = type;
                        break;
                    case "defaultValue":
                        defaultValue = type;
                        break;
                    case "multiple":
                        value = type;
                    default:
                        type !== lastDefaultValue && setProp(domElement, tag, name, type, nextProps, lastDefaultValue);
                }
                nextProps = defaultValue;
                tag = value;
                lastProps = propKey;
                null != _propKey8 ? updateOptions(domElement, !!tag, _propKey8, !1) : !!lastProps !== !!tag && (null != nextProps ? updateOptions(domElement, !!tag, nextProps, !0) : updateOptions(domElement, !!tag, tag ? [] : "", !1));
                return;
            case "textarea":
                propKey = _propKey8 = null;
                for(defaultValue in lastProps)if (name = lastProps[defaultValue], lastProps.hasOwnProperty(defaultValue) && null != name && !nextProps.hasOwnProperty(defaultValue)) switch(defaultValue){
                    case "value":
                        break;
                    case "children":
                        break;
                    default:
                        setProp(domElement, tag, defaultValue, null, nextProps, name);
                }
                for(value in nextProps)if (name = nextProps[value], type = lastProps[value], nextProps.hasOwnProperty(value) && (null != name || null != type)) switch(value){
                    case "value":
                        _propKey8 = name;
                        break;
                    case "defaultValue":
                        propKey = name;
                        break;
                    case "children":
                        break;
                    case "dangerouslySetInnerHTML":
                        if (null != name) throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                        break;
                    default:
                        name !== type && setProp(domElement, tag, value, name, nextProps, type);
                }
                updateTextarea(domElement, _propKey8, propKey);
                return;
            case "option":
                for(var _propKey13 in lastProps)if (_propKey8 = lastProps[_propKey13], lastProps.hasOwnProperty(_propKey13) && null != _propKey8 && !nextProps.hasOwnProperty(_propKey13)) switch(_propKey13){
                    case "selected":
                        domElement.selected = !1;
                        break;
                    default:
                        setProp(domElement, tag, _propKey13, null, nextProps, _propKey8);
                }
                for(lastDefaultValue in nextProps)if (_propKey8 = nextProps[lastDefaultValue], propKey = lastProps[lastDefaultValue], nextProps.hasOwnProperty(lastDefaultValue) && _propKey8 !== propKey && (null != _propKey8 || null != propKey)) switch(lastDefaultValue){
                    case "selected":
                        domElement.selected = _propKey8 && "function" !== typeof _propKey8 && "symbol" !== typeof _propKey8;
                        break;
                    default:
                        setProp(domElement, tag, lastDefaultValue, _propKey8, nextProps, propKey);
                }
                return;
            case "img":
            case "link":
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "keygen":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr":
            case "menuitem":
                for(var _propKey15 in lastProps)_propKey8 = lastProps[_propKey15], lastProps.hasOwnProperty(_propKey15) && null != _propKey8 && !nextProps.hasOwnProperty(_propKey15) && setProp(domElement, tag, _propKey15, null, nextProps, _propKey8);
                for(checked in nextProps)if (_propKey8 = nextProps[checked], propKey = lastProps[checked], nextProps.hasOwnProperty(checked) && _propKey8 !== propKey && (null != _propKey8 || null != propKey)) switch(checked){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        if (null != _propKey8) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                        break;
                    default:
                        setProp(domElement, tag, checked, _propKey8, nextProps, propKey);
                }
                return;
            default:
                if (isCustomElement(tag)) {
                    for(var _propKey17 in lastProps)_propKey8 = lastProps[_propKey17], lastProps.hasOwnProperty(_propKey17) && void 0 !== _propKey8 && !nextProps.hasOwnProperty(_propKey17) && setPropOnCustomElement(domElement, tag, _propKey17, void 0, nextProps, _propKey8);
                    for(defaultChecked in nextProps)_propKey8 = nextProps[defaultChecked], propKey = lastProps[defaultChecked], !nextProps.hasOwnProperty(defaultChecked) || _propKey8 === propKey || void 0 === _propKey8 && void 0 === propKey || setPropOnCustomElement(domElement, tag, defaultChecked, _propKey8, nextProps, propKey);
                    return;
                }
        }
        for(var _propKey19 in lastProps)_propKey8 = lastProps[_propKey19], lastProps.hasOwnProperty(_propKey19) && null != _propKey8 && !nextProps.hasOwnProperty(_propKey19) && setProp(domElement, tag, _propKey19, null, nextProps, _propKey8);
        for(lastProp in nextProps)_propKey8 = nextProps[lastProp], propKey = lastProps[lastProp], !nextProps.hasOwnProperty(lastProp) || _propKey8 === propKey || null == _propKey8 && null == propKey || setProp(domElement, tag, lastProp, _propKey8, nextProps, propKey);
    }
    function getPropNameFromAttributeName(attrName) {
        switch(attrName){
            case "class":
                return "className";
            case "for":
                return "htmlFor";
            default:
                return attrName;
        }
    }
    function getStylesObjectFromElement(domElement) {
        var serverValueInObjectForm = {};
        domElement = domElement.style;
        for(var i = 0; i < domElement.length; i++){
            var styleName = domElement[i];
            serverValueInObjectForm[styleName] = domElement.getPropertyValue(styleName);
        }
        return serverValueInObjectForm;
    }
    function diffHydratedStyles(domElement, value$jscomp$0, serverDifferences) {
        if (null != value$jscomp$0 && "object" !== typeof value$jscomp$0) console.error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        else if (canDiffStyleForHydrationWarning) {
            var clientValue;
            var delimiter = clientValue = "", styleName;
            for(styleName in value$jscomp$0)if (value$jscomp$0.hasOwnProperty(styleName)) {
                var value = value$jscomp$0[styleName];
                null != value && "boolean" !== typeof value && "" !== value && (0 === styleName.indexOf("--") ? (checkCSSPropertyStringCoercion(value, styleName), clientValue += delimiter + styleName + ":" + ("" + value).trim()) : "number" !== typeof value || 0 === value || unitlessNumbers.has(styleName) ? (checkCSSPropertyStringCoercion(value, styleName), clientValue += delimiter + styleName.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-") + ":" + ("" + value).trim()) : clientValue += delimiter + styleName.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-") + ":" + value + "px", delimiter = ";");
            }
            clientValue = clientValue || null;
            value$jscomp$0 = domElement.getAttribute("style");
            value$jscomp$0 !== clientValue && (clientValue = normalizeMarkupForTextOrAttribute(clientValue), normalizeMarkupForTextOrAttribute(value$jscomp$0) !== clientValue && (serverDifferences.style = getStylesObjectFromElement(domElement)));
        }
    }
    function hydrateAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
            case "boolean":
                return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
            case "boolean":
                break;
            default:
                if (checkAttributeStringCoercion(value, propKey), domElement === "" + value) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateBooleanAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) {
            switch(typeof value){
                case "function":
                case "symbol":
                    return;
            }
            if (!value) return;
        } else switch(typeof value){
            case "function":
            case "symbol":
                break;
            default:
                if (value) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateBooleanishAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
                return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
                break;
            default:
                if (checkAttributeStringCoercion(value, attributeName), domElement === "" + value) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateNumericAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
            case "boolean":
                return;
            default:
                if (isNaN(value)) return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
            case "boolean":
                break;
            default:
                if (!isNaN(value) && (checkAttributeStringCoercion(value, propKey), domElement === "" + value)) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateSanitizedAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
            case "boolean":
                return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
            case "boolean":
                break;
            default:
                if (checkAttributeStringCoercion(value, propKey), attributeName = sanitizeURL("" + value), domElement === attributeName) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function diffHydratedProperties(domElement, tag, props, hostContext) {
        for(var serverDifferences = {}, extraAttributes = new Set(), attributes = domElement.attributes, i = 0; i < attributes.length; i++)switch(attributes[i].name.toLowerCase()){
            case "value":
                break;
            case "checked":
                break;
            case "selected":
                break;
            default:
                extraAttributes.add(attributes[i].name);
        }
        if (isCustomElement(tag)) {
            for(var propKey in props)if (props.hasOwnProperty(propKey)) {
                var value = props[propKey];
                if (null != value) {
                    if (registrationNameDependencies.hasOwnProperty(propKey)) "function" !== typeof value && warnForInvalidEventListener(propKey, value);
                    else if (!0 !== props.suppressHydrationWarning) switch(propKey){
                        case "children":
                            "string" !== typeof value && "number" !== typeof value || warnForPropDifference("children", domElement.textContent, value, serverDifferences);
                            continue;
                        case "suppressContentEditableWarning":
                        case "suppressHydrationWarning":
                        case "defaultValue":
                        case "defaultChecked":
                        case "innerHTML":
                        case "ref":
                            continue;
                        case "dangerouslySetInnerHTML":
                            attributes = domElement.innerHTML;
                            value = value ? value.__html : void 0;
                            null != value && (value = normalizeHTML(domElement, value), warnForPropDifference(propKey, attributes, value, serverDifferences));
                            continue;
                        case "style":
                            extraAttributes.delete(propKey);
                            diffHydratedStyles(domElement, value, serverDifferences);
                            continue;
                        case "offsetParent":
                        case "offsetTop":
                        case "offsetLeft":
                        case "offsetWidth":
                        case "offsetHeight":
                        case "isContentEditable":
                        case "outerText":
                        case "outerHTML":
                            extraAttributes.delete(propKey.toLowerCase());
                            console.error("Assignment to read-only property will result in a no-op: `%s`", propKey);
                            continue;
                        case "className":
                            extraAttributes.delete("class");
                            attributes = getValueForAttributeOnCustomComponent(domElement, "class", value);
                            warnForPropDifference("className", attributes, value, serverDifferences);
                            continue;
                        default:
                            hostContext.context === HostContextNamespaceNone && "svg" !== tag && "math" !== tag ? extraAttributes.delete(propKey.toLowerCase()) : extraAttributes.delete(propKey), attributes = getValueForAttributeOnCustomComponent(domElement, propKey, value), warnForPropDifference(propKey, attributes, value, serverDifferences);
                    }
                }
            }
        } else for(value in props)if (props.hasOwnProperty(value) && (propKey = props[value], null != propKey)) {
            if (registrationNameDependencies.hasOwnProperty(value)) "function" !== typeof propKey && warnForInvalidEventListener(value, propKey);
            else if (!0 !== props.suppressHydrationWarning) switch(value){
                case "children":
                    "string" !== typeof propKey && "number" !== typeof propKey || warnForPropDifference("children", domElement.textContent, propKey, serverDifferences);
                    continue;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                case "value":
                case "checked":
                case "selected":
                case "defaultValue":
                case "defaultChecked":
                case "innerHTML":
                case "ref":
                    continue;
                case "dangerouslySetInnerHTML":
                    attributes = domElement.innerHTML;
                    propKey = propKey ? propKey.__html : void 0;
                    null != propKey && (propKey = normalizeHTML(domElement, propKey), attributes !== propKey && (serverDifferences[value] = {
                        __html: attributes
                    }));
                    continue;
                case "className":
                    hydrateAttribute(domElement, value, "class", propKey, extraAttributes, serverDifferences);
                    continue;
                case "tabIndex":
                    hydrateAttribute(domElement, value, "tabindex", propKey, extraAttributes, serverDifferences);
                    continue;
                case "style":
                    extraAttributes.delete(value);
                    diffHydratedStyles(domElement, propKey, serverDifferences);
                    continue;
                case "multiple":
                    extraAttributes.delete(value);
                    warnForPropDifference(value, domElement.multiple, propKey, serverDifferences);
                    continue;
                case "muted":
                    extraAttributes.delete(value);
                    warnForPropDifference(value, domElement.muted, propKey, serverDifferences);
                    continue;
                case "autoFocus":
                    extraAttributes.delete("autofocus");
                    warnForPropDifference(value, domElement.autofocus, propKey, serverDifferences);
                    continue;
                case "data":
                    if ("object" !== tag) {
                        extraAttributes.delete(value);
                        attributes = domElement.getAttribute("data");
                        warnForPropDifference(value, attributes, propKey, serverDifferences);
                        continue;
                    }
                case "src":
                case "href":
                    if (!("" !== propKey || "a" === tag && "href" === value || "object" === tag && "data" === value)) {
                        "src" === value ? console.error('An empty string ("") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', value, value) : console.error('An empty string ("") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', value, value);
                        hydrateSanitizedAttribute(domElement, value, value, null, extraAttributes, serverDifferences);
                        continue;
                    }
                    hydrateSanitizedAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                case "action":
                case "formAction":
                    attributes = domElement.getAttribute(value);
                    if ("function" === typeof propKey) {
                        extraAttributes.delete(value.toLowerCase());
                        "formAction" === value ? (extraAttributes.delete("name"), extraAttributes.delete("formenctype"), extraAttributes.delete("formmethod"), extraAttributes.delete("formtarget")) : (extraAttributes.delete("enctype"), extraAttributes.delete("method"), extraAttributes.delete("target"));
                        continue;
                    } else if (attributes === EXPECTED_FORM_ACTION_URL) {
                        extraAttributes.delete(value.toLowerCase());
                        warnForPropDifference(value, "function", propKey, serverDifferences);
                        continue;
                    }
                    hydrateSanitizedAttribute(domElement, value, value.toLowerCase(), propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkHref":
                    hydrateSanitizedAttribute(domElement, value, "xlink:href", propKey, extraAttributes, serverDifferences);
                    continue;
                case "contentEditable":
                    hydrateBooleanishAttribute(domElement, value, "contenteditable", propKey, extraAttributes, serverDifferences);
                    continue;
                case "spellCheck":
                    hydrateBooleanishAttribute(domElement, value, "spellcheck", propKey, extraAttributes, serverDifferences);
                    continue;
                case "draggable":
                case "autoReverse":
                case "externalResourcesRequired":
                case "focusable":
                case "preserveAlpha":
                    hydrateBooleanishAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                case "allowFullScreen":
                case "async":
                case "autoPlay":
                case "controls":
                case "default":
                case "defer":
                case "disabled":
                case "disablePictureInPicture":
                case "disableRemotePlayback":
                case "formNoValidate":
                case "hidden":
                case "loop":
                case "noModule":
                case "noValidate":
                case "open":
                case "playsInline":
                case "readOnly":
                case "required":
                case "reversed":
                case "scoped":
                case "seamless":
                case "itemScope":
                    hydrateBooleanAttribute(domElement, value, value.toLowerCase(), propKey, extraAttributes, serverDifferences);
                    continue;
                case "capture":
                case "download":
                    a: {
                        i = domElement;
                        var attributeName = attributes = value, serverDifferences$jscomp$0 = serverDifferences;
                        extraAttributes.delete(attributeName);
                        i = i.getAttribute(attributeName);
                        if (null === i) switch(typeof propKey){
                            case "undefined":
                            case "function":
                            case "symbol":
                                break a;
                            default:
                                if (!1 === propKey) break a;
                        }
                        else if (null != propKey) switch(typeof propKey){
                            case "function":
                            case "symbol":
                                break;
                            case "boolean":
                                if (!0 === propKey && "" === i) break a;
                                break;
                            default:
                                if (checkAttributeStringCoercion(propKey, attributes), i === "" + propKey) break a;
                        }
                        warnForPropDifference(attributes, i, propKey, serverDifferences$jscomp$0);
                    }
                    continue;
                case "cols":
                case "rows":
                case "size":
                case "span":
                    a: {
                        i = domElement;
                        attributeName = attributes = value;
                        serverDifferences$jscomp$0 = serverDifferences;
                        extraAttributes.delete(attributeName);
                        i = i.getAttribute(attributeName);
                        if (null === i) switch(typeof propKey){
                            case "undefined":
                            case "function":
                            case "symbol":
                            case "boolean":
                                break a;
                            default:
                                if (isNaN(propKey) || 1 > propKey) break a;
                        }
                        else if (null != propKey) switch(typeof propKey){
                            case "function":
                            case "symbol":
                            case "boolean":
                                break;
                            default:
                                if (!(isNaN(propKey) || 1 > propKey) && (checkAttributeStringCoercion(propKey, attributes), i === "" + propKey)) break a;
                        }
                        warnForPropDifference(attributes, i, propKey, serverDifferences$jscomp$0);
                    }
                    continue;
                case "rowSpan":
                    hydrateNumericAttribute(domElement, value, "rowspan", propKey, extraAttributes, serverDifferences);
                    continue;
                case "start":
                    hydrateNumericAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                case "xHeight":
                    hydrateAttribute(domElement, value, "x-height", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkActuate":
                    hydrateAttribute(domElement, value, "xlink:actuate", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkArcrole":
                    hydrateAttribute(domElement, value, "xlink:arcrole", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkRole":
                    hydrateAttribute(domElement, value, "xlink:role", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkShow":
                    hydrateAttribute(domElement, value, "xlink:show", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkTitle":
                    hydrateAttribute(domElement, value, "xlink:title", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkType":
                    hydrateAttribute(domElement, value, "xlink:type", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xmlBase":
                    hydrateAttribute(domElement, value, "xml:base", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xmlLang":
                    hydrateAttribute(domElement, value, "xml:lang", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xmlSpace":
                    hydrateAttribute(domElement, value, "xml:space", propKey, extraAttributes, serverDifferences);
                    continue;
                case "inert":
                    "" !== propKey || didWarnForNewBooleanPropsWithEmptyValue[value] || (didWarnForNewBooleanPropsWithEmptyValue[value] = !0, console.error("Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.", value));
                    hydrateBooleanAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                default:
                    if (!(2 < value.length) || "o" !== value[0] && "O" !== value[0] || "n" !== value[1] && "N" !== value[1]) {
                        i = getAttributeAlias(value);
                        attributes = !1;
                        hostContext.context === HostContextNamespaceNone && "svg" !== tag && "math" !== tag ? extraAttributes.delete(i.toLowerCase()) : (attributeName = value.toLowerCase(), attributeName = possibleStandardNames.hasOwnProperty(attributeName) ? possibleStandardNames[attributeName] || null : null, null !== attributeName && attributeName !== value && (attributes = !0, extraAttributes.delete(attributeName)), extraAttributes.delete(i));
                        a: if (attributeName = domElement, serverDifferences$jscomp$0 = i, i = propKey, isAttributeNameSafe(serverDifferences$jscomp$0)) {
                            if (attributeName.hasAttribute(serverDifferences$jscomp$0)) attributeName = attributeName.getAttribute(serverDifferences$jscomp$0), checkAttributeStringCoercion(i, serverDifferences$jscomp$0), i = attributeName === "" + i ? i : attributeName;
                            else {
                                switch(typeof i){
                                    case "function":
                                    case "symbol":
                                        break a;
                                    case "boolean":
                                        if (attributeName = serverDifferences$jscomp$0.toLowerCase().slice(0, 5), "data-" !== attributeName && "aria-" !== attributeName) break a;
                                }
                                i = void 0 === i ? void 0 : null;
                            }
                        } else i = void 0;
                        attributes || warnForPropDifference(value, i, propKey, serverDifferences);
                    }
            }
        }
        0 < extraAttributes.size && !0 !== props.suppressHydrationWarning && warnForExtraAttributes(domElement, extraAttributes, serverDifferences);
        return 0 === Object.keys(serverDifferences).length ? null : serverDifferences;
    }
    function propNamesListJoin(list, combinator) {
        switch(list.length){
            case 0:
                return "";
            case 1:
                return list[0];
            case 2:
                return list[0] + " " + combinator + " " + list[1];
            default:
                return list.slice(0, -1).join(", ") + ", " + combinator + " " + list[list.length - 1];
        }
    }
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return 9 === rootContainerElement.nodeType ? rootContainerElement : rootContainerElement.ownerDocument;
    }
    function getOwnHostContext(namespaceURI) {
        switch(namespaceURI){
            case SVG_NAMESPACE:
                return HostContextNamespaceSvg;
            case MATH_NAMESPACE:
                return HostContextNamespaceMath;
            default:
                return HostContextNamespaceNone;
        }
    }
    function getChildHostContextProd(parentNamespace, type) {
        if (parentNamespace === HostContextNamespaceNone) switch(type){
            case "svg":
                return HostContextNamespaceSvg;
            case "math":
                return HostContextNamespaceMath;
            default:
                return HostContextNamespaceNone;
        }
        return parentNamespace === HostContextNamespaceSvg && "foreignObject" === type ? HostContextNamespaceNone : parentNamespace;
    }
    function shouldSetTextContent(type, props) {
        return "textarea" === type || "noscript" === type || "string" === typeof props.children || "number" === typeof props.children || "bigint" === typeof props.children || "object" === typeof props.dangerouslySetInnerHTML && null !== props.dangerouslySetInnerHTML && null != props.dangerouslySetInnerHTML.__html;
    }
    function shouldAttemptEagerTransition() {
        var event = window.event;
        if (event && "popstate" === event.type) {
            if (event === currentPopstateTransitionEvent) return !1;
            currentPopstateTransitionEvent = event;
            return !0;
        }
        currentPopstateTransitionEvent = null;
        return !1;
    }
    function handleErrorInNextTick(error) {
        setTimeout(function() {
            throw error;
        });
    }
    function commitMount(domElement, type, newProps) {
        switch(type){
            case "button":
            case "input":
            case "select":
            case "textarea":
                newProps.autoFocus && domElement.focus();
                break;
            case "img":
                newProps.src ? domElement.src = newProps.src : newProps.srcSet && (domElement.srcset = newProps.srcSet);
        }
    }
    function commitUpdate(domElement, type, oldProps, newProps) {
        updateProperties(domElement, type, oldProps, newProps);
        domElement[internalPropsKey] = newProps;
    }
    function resetTextContent(domElement) {
        setTextContent(domElement, "");
    }
    function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
    }
    function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
        8 === container.nodeType ? container.parentNode.removeChild(child) : container.removeChild(child);
    }
    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
        var node = suspenseInstance, depth = 0;
        do {
            var nextNode = node.nextSibling;
            parentInstance.removeChild(node);
            if (nextNode && 8 === nextNode.nodeType) {
                if (node = nextNode.data, node === SUSPENSE_END_DATA) {
                    if (0 === depth) {
                        parentInstance.removeChild(nextNode);
                        retryIfBlockedOn(suspenseInstance);
                        return;
                    }
                    depth--;
                } else node !== SUSPENSE_START_DATA && node !== SUSPENSE_PENDING_START_DATA && node !== SUSPENSE_FALLBACK_START_DATA || depth++;
            }
            node = nextNode;
        }while (node);
        retryIfBlockedOn(suspenseInstance);
    }
    function hideInstance(instance) {
        instance = instance.style;
        "function" === typeof instance.setProperty ? instance.setProperty("display", "none", "important") : instance.display = "none";
    }
    function hideTextInstance(textInstance) {
        textInstance.nodeValue = "";
    }
    function unhideInstance(instance, props) {
        props = props[STYLE];
        props = void 0 !== props && null !== props && props.hasOwnProperty("display") ? props.display : null;
        instance.style.display = null == props || "boolean" === typeof props ? "" : ("" + props).trim();
    }
    function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
    }
    function clearContainerSparingly(container) {
        var nextNode = container.firstChild;
        nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);
        for(; nextNode;){
            var node = nextNode;
            nextNode = nextNode.nextSibling;
            switch(node.nodeName){
                case "HTML":
                case "HEAD":
                case "BODY":
                    clearContainerSparingly(node);
                    detachDeletedInstance(node);
                    continue;
                case "SCRIPT":
                case "STYLE":
                    continue;
                case "LINK":
                    if ("stylesheet" === node.rel.toLowerCase()) continue;
            }
            container.removeChild(node);
        }
    }
    function canHydrateInstance(instance, type, props, inRootOrSingleton) {
        for(; 1 === instance.nodeType;){
            var anyProps = props;
            if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {
                if (!inRootOrSingleton && ("INPUT" !== instance.nodeName || "hidden" !== instance.type)) break;
            } else if (!inRootOrSingleton) {
                if ("input" === type && "hidden" === instance.type) {
                    checkAttributeStringCoercion(anyProps.name, "name");
                    var name = null == anyProps.name ? null : "" + anyProps.name;
                    if ("hidden" === anyProps.type && instance.getAttribute("name") === name) return instance;
                } else return instance;
            } else if (!instance[internalHoistableMarker]) switch(type){
                case "meta":
                    if (!instance.hasAttribute("itemprop")) break;
                    return instance;
                case "link":
                    name = instance.getAttribute("rel");
                    if ("stylesheet" === name && instance.hasAttribute("data-precedence")) break;
                    else if (name !== anyProps.rel || instance.getAttribute("href") !== (null == anyProps.href ? null : anyProps.href) || instance.getAttribute("crossorigin") !== (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) || instance.getAttribute("title") !== (null == anyProps.title ? null : anyProps.title)) break;
                    return instance;
                case "style":
                    if (instance.hasAttribute("data-precedence")) break;
                    return instance;
                case "script":
                    name = instance.getAttribute("src");
                    if ((name !== (null == anyProps.src ? null : anyProps.src) || instance.getAttribute("type") !== (null == anyProps.type ? null : anyProps.type) || instance.getAttribute("crossorigin") !== (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) && name && instance.hasAttribute("async") && !instance.hasAttribute("itemprop")) break;
                    return instance;
                default:
                    return instance;
            }
            instance = getNextHydratable(instance.nextSibling);
            if (null === instance) break;
        }
        return null;
    }
    function canHydrateTextInstance(instance, text, inRootOrSingleton) {
        if ("" === text) return null;
        for(; 3 !== instance.nodeType;){
            if ((1 !== instance.nodeType || "INPUT" !== instance.nodeName || "hidden" !== instance.type) && !inRootOrSingleton) return null;
            instance = getNextHydratable(instance.nextSibling);
            if (null === instance) return null;
        }
        return instance;
    }
    function getNextHydratable(node) {
        for(; null != node; node = node.nextSibling){
            var nodeType = node.nodeType;
            if (1 === nodeType || 3 === nodeType) break;
            if (8 === nodeType) {
                nodeType = node.data;
                if (nodeType === SUSPENSE_START_DATA || nodeType === SUSPENSE_FALLBACK_START_DATA || nodeType === SUSPENSE_PENDING_START_DATA || nodeType === FORM_STATE_IS_MATCHING || nodeType === FORM_STATE_IS_NOT_MATCHING) break;
                if (nodeType === SUSPENSE_END_DATA) return null;
            }
        }
        return node;
    }
    function describeHydratableInstanceForDevWarnings(instance) {
        if (1 === instance.nodeType) {
            for(var JSCompiler_temp_const = instance.nodeName.toLowerCase(), serverDifferences = {}, attributes = instance.attributes, i = 0; i < attributes.length; i++){
                var attr = attributes[i];
                serverDifferences[getPropNameFromAttributeName(attr.name)] = "style" === attr.name.toLowerCase() ? getStylesObjectFromElement(instance) : attr.value;
            }
            return {
                type: JSCompiler_temp_const,
                props: serverDifferences
            };
        }
        return 8 === instance.nodeType ? {
            type: "Suspense",
            props: {}
        } : instance.nodeValue;
    }
    function diffHydratedTextForDevWarnings(textInstance, text, parentProps) {
        return null === parentProps || !0 !== parentProps[SUPPRESS_HYDRATION_WARNING] ? (textInstance.nodeValue === text ? textInstance = null : (text = normalizeMarkupForTextOrAttribute(text), textInstance = normalizeMarkupForTextOrAttribute(textInstance.nodeValue) === text ? null : textInstance.nodeValue), textInstance) : null;
    }
    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        suspenseInstance = suspenseInstance.nextSibling;
        for(var depth = 0; suspenseInstance;){
            if (8 === suspenseInstance.nodeType) {
                var data = suspenseInstance.data;
                if (data === SUSPENSE_END_DATA) {
                    if (0 === depth) return getNextHydratable(suspenseInstance.nextSibling);
                    depth--;
                } else data !== SUSPENSE_START_DATA && data !== SUSPENSE_FALLBACK_START_DATA && data !== SUSPENSE_PENDING_START_DATA || depth++;
            }
            suspenseInstance = suspenseInstance.nextSibling;
        }
        return null;
    }
    function getParentSuspenseInstance(targetInstance) {
        targetInstance = targetInstance.previousSibling;
        for(var depth = 0; targetInstance;){
            if (8 === targetInstance.nodeType) {
                var data = targetInstance.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                    if (0 === depth) return targetInstance;
                    depth--;
                } else data === SUSPENSE_END_DATA && depth++;
            }
            targetInstance = targetInstance.previousSibling;
        }
        return null;
    }
    function commitHydratedContainer(container) {
        retryIfBlockedOn(container);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
        retryIfBlockedOn(suspenseInstance);
    }
    function resolveSingletonInstance(type, props, rootContainerInstance, hostContext, validateDOMNestingDev) {
        validateDOMNestingDev && validateDOMNesting(type, hostContext.ancestorInfo);
        props = getOwnerDocumentFromRootContainer(rootContainerInstance);
        switch(type){
            case "html":
                type = props.documentElement;
                if (!type) throw Error("React expected an <html> element (document.documentElement) to exist in the Document but one was not found. React never removes the documentElement for any Document it renders into so the cause is likely in some other script running on this page.");
                return type;
            case "head":
                type = props.head;
                if (!type) throw Error("React expected a <head> element (document.head) to exist in the Document but one was not found. React never removes the head for any Document it renders into so the cause is likely in some other script running on this page.");
                return type;
            case "body":
                type = props.body;
                if (!type) throw Error("React expected a <body> element (document.body) to exist in the Document but one was not found. React never removes the body for any Document it renders into so the cause is likely in some other script running on this page.");
                return type;
            default:
                throw Error("resolveSingletonInstance was called with an element type that is not supported. This is a bug in React.");
        }
    }
    function acquireSingletonInstance(type, props, instance, internalInstanceHandle) {
        if (getInstanceFromNode(instance)) {
            var tagName = instance.tagName.toLowerCase();
            console.error("You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first.", tagName, tagName, tagName);
        }
        switch(type){
            case "html":
            case "head":
            case "body":
                break;
            default:
                console.error("acquireSingletonInstance was called with an element type that is not supported. This is a bug in React.");
        }
        for(tagName = instance.attributes; tagName.length;)instance.removeAttributeNode(tagName[0]);
        setInitialProperties(instance, type, props);
        instance[internalInstanceKey] = internalInstanceHandle;
        instance[internalPropsKey] = props;
    }
    function getHoistableRoot(container) {
        return "function" === typeof container.getRootNode ? container.getRootNode() : container.ownerDocument;
    }
    function preconnectAs(rel, href, crossOrigin) {
        var ownerDocument = globalDocument;
        if (ownerDocument && "string" === typeof href && href) {
            var limitedEscapedHref = escapeSelectorAttributeValueInsideDoubleQuotes(href);
            limitedEscapedHref = 'link[rel="' + rel + '"][href="' + limitedEscapedHref + '"]';
            "string" === typeof crossOrigin && (limitedEscapedHref += '[crossorigin="' + crossOrigin + '"]');
            preconnectsSet.has(limitedEscapedHref) || (preconnectsSet.add(limitedEscapedHref), rel = {
                rel: rel,
                crossOrigin: crossOrigin,
                href: href
            }, null === ownerDocument.querySelector(limitedEscapedHref) && (href = ownerDocument.createElement("link"), setInitialProperties(href, "link", rel), markNodeAsHoistable(href), ownerDocument.head.appendChild(href)));
        }
    }
    function getResource(type, currentProps, pendingProps, currentResource) {
        var resourceRoot = (resourceRoot = rootInstanceStackCursor.current) ? getHoistableRoot(resourceRoot) : null;
        if (!resourceRoot) throw Error('"resourceRoot" was expected to exist. This is a bug in React.');
        switch(type){
            case "meta":
            case "title":
                return null;
            case "style":
                return "string" === typeof pendingProps.precedence && "string" === typeof pendingProps.href ? (pendingProps = getStyleKey(pendingProps.href), currentProps = getResourcesFromRoot(resourceRoot).hoistableStyles, currentResource = currentProps.get(pendingProps), currentResource || (currentResource = {
                    type: "style",
                    instance: null,
                    count: 0,
                    state: null
                }, currentProps.set(pendingProps, currentResource)), currentResource) : {
                    type: "void",
                    instance: null,
                    count: 0,
                    state: null
                };
            case "link":
                if ("stylesheet" === pendingProps.rel && "string" === typeof pendingProps.href && "string" === typeof pendingProps.precedence) {
                    type = getStyleKey(pendingProps.href);
                    var _styles = getResourcesFromRoot(resourceRoot).hoistableStyles, _resource = _styles.get(type);
                    if (!_resource && (resourceRoot = resourceRoot.ownerDocument || resourceRoot, _resource = {
                        type: "stylesheet",
                        instance: null,
                        count: 0,
                        state: {
                            loading: NotLoaded,
                            preload: null
                        }
                    }, _styles.set(type, _resource), (_styles = resourceRoot.querySelector(getStylesheetSelectorFromKey(type))) && !_styles._p && (_resource.instance = _styles, _resource.state.loading = Loaded | Inserted), !preloadPropsMap.has(type))) {
                        var preloadProps = {
                            rel: "preload",
                            as: "style",
                            href: pendingProps.href,
                            crossOrigin: pendingProps.crossOrigin,
                            integrity: pendingProps.integrity,
                            media: pendingProps.media,
                            hrefLang: pendingProps.hrefLang,
                            referrerPolicy: pendingProps.referrerPolicy
                        };
                        preloadPropsMap.set(type, preloadProps);
                        _styles || preloadStylesheet(resourceRoot, type, preloadProps, _resource.state);
                    }
                    if (currentProps && null === currentResource) throw pendingProps = "\n\n  - " + describeLinkForResourceErrorDEV(currentProps) + "\n  + " + describeLinkForResourceErrorDEV(pendingProps), Error("Expected <link> not to update to be updated to a stylesheet with precedence. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key." + pendingProps);
                    return _resource;
                }
                if (currentProps && null !== currentResource) throw pendingProps = "\n\n  - " + describeLinkForResourceErrorDEV(currentProps) + "\n  + " + describeLinkForResourceErrorDEV(pendingProps), Error("Expected stylesheet with precedence to not be updated to a different kind of <link>. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key." + pendingProps);
                return null;
            case "script":
                return currentProps = pendingProps.async, pendingProps = pendingProps.src, "string" === typeof pendingProps && currentProps && "function" !== typeof currentProps && "symbol" !== typeof currentProps ? (pendingProps = getScriptKey(pendingProps), currentProps = getResourcesFromRoot(resourceRoot).hoistableScripts, currentResource = currentProps.get(pendingProps), currentResource || (currentResource = {
                    type: "script",
                    instance: null,
                    count: 0,
                    state: null
                }, currentProps.set(pendingProps, currentResource)), currentResource) : {
                    type: "void",
                    instance: null,
                    count: 0,
                    state: null
                };
            default:
                throw Error('getResource encountered a type it did not expect: "' + type + '". this is a bug in React.');
        }
    }
    function describeLinkForResourceErrorDEV(props) {
        var describedProps = 0, description = "<link";
        "string" === typeof props.rel ? (describedProps++, description += ' rel="' + props.rel + '"') : hasOwnProperty.call(props, "rel") && (describedProps++, description += ' rel="' + (null === props.rel ? "null" : "invalid type " + typeof props.rel) + '"');
        "string" === typeof props.href ? (describedProps++, description += ' href="' + props.href + '"') : hasOwnProperty.call(props, "href") && (describedProps++, description += ' href="' + (null === props.href ? "null" : "invalid type " + typeof props.href) + '"');
        "string" === typeof props.precedence ? (describedProps++, description += ' precedence="' + props.precedence + '"') : hasOwnProperty.call(props, "precedence") && (describedProps++, description += " precedence={" + (null === props.precedence ? "null" : "invalid type " + typeof props.precedence) + "}");
        Object.getOwnPropertyNames(props).length > describedProps && (description += " ...");
        return description + " />";
    }
    function getStyleKey(href) {
        return 'href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"';
    }
    function getStylesheetSelectorFromKey(key) {
        return 'link[rel="stylesheet"][' + key + "]";
    }
    function stylesheetPropsFromRawProps(rawProps) {
        return assign({}, rawProps, {
            "data-precedence": rawProps.precedence,
            precedence: null
        });
    }
    function preloadStylesheet(ownerDocument, key, preloadProps, state) {
        ownerDocument.querySelector('link[rel="preload"][as="style"][' + key + "]") ? state.loading = Loaded : (key = ownerDocument.createElement("link"), state.preload = key, key.addEventListener("load", function() {
            return state.loading |= Loaded;
        }), key.addEventListener("error", function() {
            return state.loading |= Errored;
        }), setInitialProperties(key, "link", preloadProps), markNodeAsHoistable(key), ownerDocument.head.appendChild(key));
    }
    function getScriptKey(src) {
        return '[src="' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '"]';
    }
    function getScriptSelectorFromKey(key) {
        return "script[async]" + key;
    }
    function acquireResource(hoistableRoot, resource, props) {
        resource.count++;
        if (null === resource.instance) switch(resource.type){
            case "style":
                var instance = hoistableRoot.querySelector('style[data-href~="' + escapeSelectorAttributeValueInsideDoubleQuotes(props.href) + '"]');
                if (instance) return resource.instance = instance, markNodeAsHoistable(instance), instance;
                var styleProps = assign({}, props, {
                    "data-href": props.href,
                    "data-precedence": props.precedence,
                    href: null,
                    precedence: null
                });
                instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement("style");
                markNodeAsHoistable(instance);
                setInitialProperties(instance, "style", styleProps);
                insertStylesheet(instance, props.precedence, hoistableRoot);
                return resource.instance = instance;
            case "stylesheet":
                styleProps = getStyleKey(props.href);
                var _instance = hoistableRoot.querySelector(getStylesheetSelectorFromKey(styleProps));
                if (_instance) return resource.state.loading |= Inserted, resource.instance = _instance, markNodeAsHoistable(_instance), _instance;
                instance = stylesheetPropsFromRawProps(props);
                (styleProps = preloadPropsMap.get(styleProps)) && adoptPreloadPropsForStylesheet(instance, styleProps);
                _instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement("link");
                markNodeAsHoistable(_instance);
                var linkInstance = _instance;
                linkInstance._p = new Promise(function(resolve, reject) {
                    linkInstance.onload = resolve;
                    linkInstance.onerror = reject;
                });
                setInitialProperties(_instance, "link", instance);
                resource.state.loading |= Inserted;
                insertStylesheet(_instance, props.precedence, hoistableRoot);
                return resource.instance = _instance;
            case "script":
                _instance = getScriptKey(props.src);
                if (styleProps = hoistableRoot.querySelector(getScriptSelectorFromKey(_instance))) return resource.instance = styleProps, markNodeAsHoistable(styleProps), styleProps;
                instance = props;
                if (styleProps = preloadPropsMap.get(_instance)) instance = assign({}, props), adoptPreloadPropsForScript(instance, styleProps);
                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
                styleProps = hoistableRoot.createElement("script");
                markNodeAsHoistable(styleProps);
                setInitialProperties(styleProps, "link", instance);
                hoistableRoot.head.appendChild(styleProps);
                return resource.instance = styleProps;
            case "void":
                return null;
            default:
                throw Error('acquireResource encountered a resource type it did not expect: "' + resource.type + '". this is a bug in React.');
        }
        else "stylesheet" === resource.type && (resource.state.loading & Inserted) === NotLoaded && (instance = resource.instance, resource.state.loading |= Inserted, insertStylesheet(instance, props.precedence, hoistableRoot));
        return resource.instance;
    }
    function insertStylesheet(instance, precedence, root) {
        for(var nodes = root.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'), last = nodes.length ? nodes[nodes.length - 1] : null, prior = last, i = 0; i < nodes.length; i++){
            var node = nodes[i];
            if (node.dataset.precedence === precedence) prior = node;
            else if (prior !== last) break;
        }
        prior ? prior.parentNode.insertBefore(instance, prior.nextSibling) : (precedence = 9 === root.nodeType ? root.head : root, precedence.insertBefore(instance, precedence.firstChild));
    }
    function adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {
        null == stylesheetProps.crossOrigin && (stylesheetProps.crossOrigin = preloadProps.crossOrigin);
        null == stylesheetProps.referrerPolicy && (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);
        null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);
    }
    function adoptPreloadPropsForScript(scriptProps, preloadProps) {
        null == scriptProps.crossOrigin && (scriptProps.crossOrigin = preloadProps.crossOrigin);
        null == scriptProps.referrerPolicy && (scriptProps.referrerPolicy = preloadProps.referrerPolicy);
        null == scriptProps.integrity && (scriptProps.integrity = preloadProps.integrity);
    }
    function getHydratableHoistableCache(type, keyAttribute, ownerDocument) {
        if (null === tagCaches) {
            var cache = new Map();
            var caches = tagCaches = new Map();
            caches.set(ownerDocument, cache);
        } else caches = tagCaches, cache = caches.get(ownerDocument), cache || (cache = new Map(), caches.set(ownerDocument, cache));
        if (cache.has(type)) return cache;
        cache.set(type, null);
        ownerDocument = ownerDocument.getElementsByTagName(type);
        for(caches = 0; caches < ownerDocument.length; caches++){
            var node = ownerDocument[caches];
            if (!(node[internalHoistableMarker] || node[internalInstanceKey] || "link" === type && "stylesheet" === node.getAttribute("rel")) && node.namespaceURI !== SVG_NAMESPACE) {
                var nodeKey = node.getAttribute(keyAttribute) || "";
                nodeKey = type + nodeKey;
                var existing = cache.get(nodeKey);
                existing ? existing.push(node) : cache.set(nodeKey, [
                    node
                ]);
            }
        }
        return cache;
    }
    function mountHoistable(hoistableRoot, type, instance) {
        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
        hoistableRoot.head.insertBefore(instance, "title" === type ? hoistableRoot.querySelector("head > title") : null);
    }
    function isHostHoistableType(type, props, hostContext) {
        var outsideHostContainerContext = !hostContext.ancestorInfo.containerTagInScope;
        if (hostContext.context === HostContextNamespaceSvg || null != props.itemProp) return !outsideHostContainerContext || null == props.itemProp || "meta" !== type && "title" !== type && "style" !== type && "link" !== type && "script" !== type || console.error("Cannot render a <%s> outside the main document if it has an `itemProp` prop. `itemProp` suggests the tag belongs to an `itemScope` which can appear anywhere in the DOM. If you were intending for React to hoist this <%s> remove the `itemProp` prop. Otherwise, try moving this tag into the <head> or <body> of the Document.", type, type), !1;
        switch(type){
            case "meta":
            case "title":
                return !0;
            case "style":
                if ("string" !== typeof props.precedence || "string" !== typeof props.href || "" === props.href) {
                    outsideHostContainerContext && console.error('Cannot render a <style> outside the main document without knowing its precedence and a unique href key. React can hoist and deduplicate <style> tags if you provide a `precedence` prop along with an `href` prop that does not conflic with the `href` values used in any other hoisted <style> or <link rel="stylesheet" ...> tags.  Note that hoisting <style> tags is considered an advanced feature that most will not use directly. Consider moving the <style> tag to the <head> or consider adding a `precedence="default"` and `href="some unique resource identifier"`, or move the <style> to the <style> tag.');
                    break;
                }
                return !0;
            case "link":
                if ("string" !== typeof props.rel || "string" !== typeof props.href || "" === props.href || props.onLoad || props.onError) {
                    if ("stylesheet" === props.rel && "string" === typeof props.precedence) {
                        type = props.href;
                        var onError = props.onError, disabled = props.disabled;
                        hostContext = [];
                        props.onLoad && hostContext.push("`onLoad`");
                        onError && hostContext.push("`onError`");
                        null != disabled && hostContext.push("`disabled`");
                        onError = propNamesListJoin(hostContext, "and");
                        onError += 1 === hostContext.length ? " prop" : " props";
                        disabled = 1 === hostContext.length ? "an " + onError : "the " + onError;
                        hostContext.length && console.error('React encountered a <link rel="stylesheet" href="%s" ... /> with a `precedence` prop that also included %s. The presence of loading and error handlers indicates an intent to manage the stylesheet loading state from your from your Component code and React will not hoist or deduplicate this stylesheet. If your intent was to have React hoist and deduplciate this stylesheet using the `precedence` prop remove the %s, otherwise remove the `precedence` prop.', type, disabled, onError);
                    }
                    outsideHostContainerContext && ("string" !== typeof props.rel || "string" !== typeof props.href || "" === props.href ? console.error("Cannot render a <link> outside the main document without a `rel` and `href` prop. Try adding a `rel` and/or `href` prop to this <link> or moving the link into the <head> tag") : (props.onError || props.onLoad) && console.error("Cannot render a <link> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>."));
                    break;
                }
                switch(props.rel){
                    case "stylesheet":
                        return type = props.precedence, props = props.disabled, "string" !== typeof type && outsideHostContainerContext && console.error('Cannot render a <link rel="stylesheet" /> outside the main document without knowing its precedence. Consider adding precedence="default" or moving it into the root <head> tag.'), "string" === typeof type && null == props;
                    default:
                        return !0;
                }
            case "script":
                type = props.async && "function" !== typeof props.async && "symbol" !== typeof props.async;
                if (!type || props.onLoad || props.onError || !props.src || "string" !== typeof props.src) {
                    outsideHostContainerContext && (type ? props.onLoad || props.onError ? console.error("Cannot render a <script> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>.") : console.error("Cannot render a <script> outside the main document without `async={true}` and a non-empty `src` prop. Ensure there is a valid `src` and either make the script async or move it into the root <head> tag or somewhere in the <body>.") : console.error('Cannot render a sync or defer <script> outside the main document without knowing its order. Try adding async="" or moving it into the root <head> tag.'));
                    break;
                }
                return !0;
            case "noscript":
            case "template":
                outsideHostContainerContext && console.error("Cannot render <%s> outside the main document. Try moving it into the root <head> tag.", type);
        }
        return !1;
    }
    function preloadResource(resource) {
        return "stylesheet" === resource.type && (resource.state.loading & Settled) === NotLoaded ? !1 : !0;
    }
    function noop() {}
    function suspendResource(hoistableRoot, resource, props) {
        if (null === suspendedState) throw Error("Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.");
        var state = suspendedState;
        if ("stylesheet" === resource.type && ("string" !== typeof props.media || !1 !== matchMedia(props.media).matches) && (resource.state.loading & Inserted) === NotLoaded) {
            if (null === resource.instance) {
                var key = getStyleKey(props.href), instance = hoistableRoot.querySelector(getStylesheetSelectorFromKey(key));
                if (instance) {
                    hoistableRoot = instance._p;
                    null !== hoistableRoot && "object" === typeof hoistableRoot && "function" === typeof hoistableRoot.then && (state.count++, state = onUnsuspend.bind(state), hoistableRoot.then(state, state));
                    resource.state.loading |= Inserted;
                    resource.instance = instance;
                    markNodeAsHoistable(instance);
                    return;
                }
                instance = hoistableRoot.ownerDocument || hoistableRoot;
                props = stylesheetPropsFromRawProps(props);
                (key = preloadPropsMap.get(key)) && adoptPreloadPropsForStylesheet(props, key);
                instance = instance.createElement("link");
                markNodeAsHoistable(instance);
                var linkInstance = instance;
                linkInstance._p = new Promise(function(resolve, reject) {
                    linkInstance.onload = resolve;
                    linkInstance.onerror = reject;
                });
                setInitialProperties(instance, "link", props);
                resource.instance = instance;
            }
            null === state.stylesheets && (state.stylesheets = new Map());
            state.stylesheets.set(resource, hoistableRoot);
            (hoistableRoot = resource.state.preload) && (resource.state.loading & Settled) === NotLoaded && (state.count++, resource = onUnsuspend.bind(state), hoistableRoot.addEventListener("load", resource), hoistableRoot.addEventListener("error", resource));
        }
    }
    function waitForCommitToBeReady() {
        if (null === suspendedState) throw Error("Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.");
        var state = suspendedState;
        state.stylesheets && 0 === state.count && insertSuspendedStylesheets(state, state.stylesheets);
        return 0 < state.count ? function(commit) {
            var stylesheetTimer = setTimeout(function() {
                state.stylesheets && insertSuspendedStylesheets(state, state.stylesheets);
                if (state.unsuspend) {
                    var unsuspend = state.unsuspend;
                    state.unsuspend = null;
                    unsuspend();
                }
            }, 6e4);
            state.unsuspend = commit;
            return function() {
                state.unsuspend = null;
                clearTimeout(stylesheetTimer);
            };
        } : null;
    }
    function onUnsuspend() {
        this.count--;
        if (0 === this.count) {
            if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);
            else if (this.unsuspend) {
                var unsuspend = this.unsuspend;
                this.unsuspend = null;
                unsuspend();
            }
        }
    }
    function insertSuspendedStylesheets(state, resources) {
        state.stylesheets = null;
        null !== state.unsuspend && (state.count++, precedencesByRoot = new Map(), resources.forEach(insertStylesheetIntoRoot, state), precedencesByRoot = null, onUnsuspend.call(state));
    }
    function insertStylesheetIntoRoot(root, resource) {
        if (!(resource.state.loading & Inserted)) {
            var precedences = precedencesByRoot.get(root);
            if (precedences) var last = precedences.get(LAST_PRECEDENCE);
            else {
                precedences = new Map();
                precedencesByRoot.set(root, precedences);
                for(var nodes = root.querySelectorAll("link[data-precedence],style[data-precedence]"), i = 0; i < nodes.length; i++){
                    var node = nodes[i];
                    if ("LINK" === node.nodeName || "not all" !== node.getAttribute("media")) precedences.set(node.dataset.precedence, node), last = node;
                }
                last && precedences.set(LAST_PRECEDENCE, last);
            }
            nodes = resource.instance;
            node = nodes.getAttribute("data-precedence");
            i = precedences.get(node) || last;
            i === last && precedences.set(LAST_PRECEDENCE, nodes);
            precedences.set(node, nodes);
            this.count++;
            last = onUnsuspend.bind(this);
            nodes.addEventListener("load", last);
            nodes.addEventListener("error", last);
            i ? i.parentNode.insertBefore(nodes, i.nextSibling) : (root = 9 === root.nodeType ? root.head : root, root.insertBefore(nodes, root.firstChild));
            resource.state.loading |= Inserted;
        }
    }
    function bindToConsole(methodName, args, badgeName) {
        var offset = 0;
        switch(methodName){
            case "dir":
            case "dirxml":
            case "groupEnd":
            case "table":
                return bind.apply(console[methodName], [
                    console
                ].concat(args));
            case "assert":
                offset = 1;
        }
        args = args.slice(0);
        "string" === typeof args[offset] ? args.splice(offset, 1, badgeFormat + args[offset], badgeStyle, pad + badgeName + pad, resetStyle) : args.splice(offset, 0, badgeFormat, badgeStyle, pad + badgeName + pad, resetStyle);
        args.unshift(console);
        return bind.apply(console[methodName], args);
    }
    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, formState) {
        this.tag = 1;
        this.containerInfo = containerInfo;
        this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
        this.timeoutHandle = noTimeout;
        this.callbackNode = this.next = this.pendingContext = this.context = this.cancelPendingCommit = null;
        this.callbackPriority = 0;
        this.expirationTimes = createLaneMap(-1);
        this.entangledLanes = this.shellSuspendCounter = this.errorRecoveryDisabledLanes = this.finishedLanes = this.expiredLanes = this.warmLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
        this.entanglements = createLaneMap(0);
        this.hiddenUpdates = createLaneMap(null);
        this.identifierPrefix = identifierPrefix;
        this.onUncaughtError = onUncaughtError;
        this.onCaughtError = onCaughtError;
        this.onRecoverableError = onRecoverableError;
        this.pooledCache = null;
        this.pooledCacheLanes = 0;
        this.formState = formState;
        this.incompleteTransitions = new Map();
        this.passiveEffectDuration = this.effectDuration = -0;
        this.memoizedUpdaters = new Set();
        containerInfo = this.pendingUpdatersLaneMap = [];
        for(tag = 0; 31 > tag; tag++)containerInfo.push(new Set());
        this._debugRootType = hydrate ? "hydrateRoot()" : "createRoot()";
    }
    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, transitionCallbacks, formState) {
        containerInfo = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, formState);
        tag = ConcurrentMode;
        !0 === isStrictMode && (tag |= StrictLegacyMode | StrictEffectsMode);
        isDevToolsPresent && (tag |= ProfileMode);
        isStrictMode = createFiber(3, null, null, tag);
        containerInfo.current = isStrictMode;
        isStrictMode.stateNode = containerInfo;
        tag = createCache();
        retainCache(tag);
        containerInfo.pooledCache = tag;
        retainCache(tag);
        isStrictMode.memoizedState = {
            element: initialChildren,
            isDehydrated: hydrate,
            cache: tag
        };
        initializeUpdateQueue(isStrictMode);
        return containerInfo;
    }
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyContextObject;
        parentComponent = emptyContextObject;
        return parentComponent;
    }
    function updateContainerSync(element, container, parentComponent, callback) {
        0 === container.tag && flushPassiveEffects();
        updateContainerImpl(container.current, 2, element, container, parentComponent, callback);
        return 2;
    }
    function updateContainerImpl(rootFiber, lane, element, container, parentComponent, callback) {
        if (injectedHook && "function" === typeof injectedHook.onScheduleFiberRoot) try {
            injectedHook.onScheduleFiberRoot(rendererID, container, element);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderScheduled && injectedProfilingHooks.markRenderScheduled(lane);
        parentComponent = getContextForSubtree(parentComponent);
        null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
        isRendering && null !== current && !didWarnAboutNestedUpdates && (didWarnAboutNestedUpdates = !0, console.error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || "Unknown"));
        container = createUpdate(lane);
        container.payload = {
            element: element
        };
        callback = void 0 === callback ? null : callback;
        null !== callback && ("function" !== typeof callback && console.error("Expected the last optional `callback` argument to be a function. Instead received: %s.", callback), container.callback = callback);
        element = enqueueUpdate(rootFiber, container, lane);
        null !== element && (scheduleUpdateOnFiber(element, rootFiber, lane), entangleTransitions(element, rootFiber, lane));
    }
    function markRetryLaneImpl(fiber, retryLane) {
        fiber = fiber.memoizedState;
        if (null !== fiber && null !== fiber.dehydrated) {
            var a = fiber.retryLane;
            fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;
        }
    }
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);
    }
    function attemptContinuousHydration(fiber) {
        if (13 === fiber.tag) {
            var root = enqueueConcurrentRenderForLane(fiber, 67108864);
            null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);
            markRetryLaneIfNotHydrated(fiber, 67108864);
        }
    }
    function getCurrentFiberForDevTools() {
        return current;
    }
    function getLaneLabelMap() {
        for(var map = new Map(), lane = 1, index = 0; 31 > index; index++){
            var label = getLabelForLane(lane);
            map.set(lane, label);
            lane *= 2;
        }
        return map;
    }
    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var prevTransition = ReactSharedInternals.T;
        ReactSharedInternals.T = null;
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            ReactDOMSharedInternals.p = DiscreteEventPriority, dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = prevTransition;
        }
    }
    function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var prevTransition = ReactSharedInternals.T;
        ReactSharedInternals.T = null;
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            ReactDOMSharedInternals.p = ContinuousEventPriority, dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = prevTransition;
        }
    }
    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (_enabled) {
            var blockedOn = findInstanceBlockingEvent(nativeEvent);
            if (null === blockedOn) dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer), clearIfContinuousEvent(domEventName, nativeEvent);
            else if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) nativeEvent.stopPropagation();
            else if (clearIfContinuousEvent(domEventName, nativeEvent), eventSystemFlags & 4 && -1 < discreteReplayableEvents.indexOf(domEventName)) {
                for(; null !== blockedOn;){
                    var fiber = getInstanceFromNode(blockedOn);
                    if (null !== fiber) switch(fiber.tag){
                        case 3:
                            fiber = fiber.stateNode;
                            if (fiber.current.memoizedState.isDehydrated) {
                                var lanes = getHighestPriorityLanes(fiber.pendingLanes);
                                if (0 !== lanes) {
                                    var root = fiber;
                                    root.pendingLanes |= 2;
                                    for(root.entangledLanes |= 2; lanes;){
                                        var lane = 1 << 31 - clz32(lanes);
                                        root.entanglements[1] |= lane;
                                        lanes &= ~lane;
                                    }
                                    ensureRootIsScheduled(fiber);
                                    (executionContext & (RenderContext | CommitContext)) === NoContext && (workInProgressRootRenderTargetTime = now$1() + RENDER_TIMEOUT_MS, flushSyncWorkAcrossRoots_impl(0, !1));
                                }
                            }
                            break;
                        case 13:
                            root = enqueueConcurrentRenderForLane(fiber, 2), null !== root && scheduleUpdateOnFiber(root, fiber, 2), flushSyncWork$1(), markRetryLaneIfNotHydrated(fiber, 2);
                    }
                    fiber = findInstanceBlockingEvent(nativeEvent);
                    null === fiber && dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                    if (fiber === blockedOn) break;
                    blockedOn = fiber;
                }
                null !== blockedOn && nativeEvent.stopPropagation();
            } else dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
        }
    }
    function findInstanceBlockingEvent(nativeEvent) {
        nativeEvent = getEventTarget(nativeEvent);
        return findInstanceBlockingTarget(nativeEvent);
    }
    function findInstanceBlockingTarget(targetNode) {
        return_targetInst = null;
        targetNode = getClosestInstanceFromNode(targetNode);
        if (null !== targetNode) {
            var nearestMounted = getNearestMountedFiber(targetNode);
            if (null === nearestMounted) targetNode = null;
            else {
                var tag = nearestMounted.tag;
                if (13 === tag) {
                    targetNode = getSuspenseInstanceFromFiber(nearestMounted);
                    if (null !== targetNode) return targetNode;
                    targetNode = null;
                } else if (3 === tag) {
                    if (nearestMounted.stateNode.current.memoizedState.isDehydrated) return 3 === nearestMounted.tag ? nearestMounted.stateNode.containerInfo : null;
                    targetNode = null;
                } else nearestMounted !== targetNode && (targetNode = null);
            }
        }
        return_targetInst = targetNode;
        return null;
    }
    function getEventPriority(domEventName) {
        switch(domEventName){
            case "beforetoggle":
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "toggle":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            case "beforeblur":
            case "afterblur":
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
                return DiscreteEventPriority;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "touchmove":
            case "wheel":
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
                return ContinuousEventPriority;
            case "message":
                switch(getCurrentPriorityLevel()){
                    case ImmediatePriority:
                        return DiscreteEventPriority;
                    case UserBlockingPriority:
                        return ContinuousEventPriority;
                    case NormalPriority$1:
                    case LowPriority:
                        return DefaultEventPriority;
                    case IdlePriority:
                        return IdleEventPriority;
                    default:
                        return DefaultEventPriority;
                }
            default:
                return DefaultEventPriority;
        }
    }
    function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch(domEventName){
            case "focusin":
            case "focusout":
                queuedFocus = null;
                break;
            case "dragenter":
            case "dragleave":
                queuedDrag = null;
                break;
            case "mouseover":
            case "mouseout":
                queuedMouse = null;
                break;
            case "pointerover":
            case "pointerout":
                queuedPointers.delete(nativeEvent.pointerId);
                break;
            case "gotpointercapture":
            case "lostpointercapture":
                queuedPointerCaptures.delete(nativeEvent.pointerId);
        }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (null === existingQueuedEvent || existingQueuedEvent.nativeEvent !== nativeEvent) return existingQueuedEvent = {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags,
            nativeEvent: nativeEvent,
            targetContainers: [
                targetContainer
            ]
        }, null !== blockedOn && (blockedOn = getInstanceFromNode(blockedOn), null !== blockedOn && attemptContinuousHydration(blockedOn)), existingQueuedEvent;
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        blockedOn = existingQueuedEvent.targetContainers;
        null !== targetContainer && -1 === blockedOn.indexOf(targetContainer) && blockedOn.push(targetContainer);
        return existingQueuedEvent;
    }
    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        switch(domEventName){
            case "focusin":
                return queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent), !0;
            case "dragenter":
                return queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent), !0;
            case "mouseover":
                return queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent), !0;
            case "pointerover":
                var pointerId = nativeEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent));
                return !0;
            case "gotpointercapture":
                return pointerId = nativeEvent.pointerId, queuedPointerCaptures.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)), !0;
        }
        return !1;
    }
    function attemptExplicitHydrationTarget(queuedTarget) {
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (null !== targetInst) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (null !== nearestMounted) {
                if (targetInst = nearestMounted.tag, 13 === targetInst) {
                    if (targetInst = getSuspenseInstanceFromFiber(nearestMounted), null !== targetInst) {
                        queuedTarget.blockedOn = targetInst;
                        runWithPriority(queuedTarget.priority, function() {
                            if (13 === nearestMounted.tag) {
                                var lane = requestUpdateLane(nearestMounted), root = enqueueConcurrentRenderForLane(nearestMounted, lane);
                                null !== root && scheduleUpdateOnFiber(root, nearestMounted, lane);
                                markRetryLaneIfNotHydrated(nearestMounted, lane);
                            }
                        });
                        return;
                    }
                } else if (3 === targetInst && nearestMounted.stateNode.current.memoizedState.isDehydrated) {
                    queuedTarget.blockedOn = 3 === nearestMounted.tag ? nearestMounted.stateNode.containerInfo : null;
                    return;
                }
            }
        }
        queuedTarget.blockedOn = null;
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (null !== queuedEvent.blockedOn) return !1;
        for(var targetContainers = queuedEvent.targetContainers; 0 < targetContainers.length;){
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);
            if (null === nextBlockedOn) {
                nextBlockedOn = queuedEvent.nativeEvent;
                var nativeEventClone = new nextBlockedOn.constructor(nextBlockedOn.type, nextBlockedOn), event = nativeEventClone;
                null !== currentReplayingEvent && console.error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
                currentReplayingEvent = event;
                nextBlockedOn.target.dispatchEvent(nativeEventClone);
                null === currentReplayingEvent && console.error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
                currentReplayingEvent = null;
            } else return targetContainers = getInstanceFromNode(nextBlockedOn), null !== targetContainers && attemptContinuousHydration(targetContainers), queuedEvent.blockedOn = nextBlockedOn, !1;
            targetContainers.shift();
        }
        return !0;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);
    }
    function replayUnblockedEvents() {
        hasScheduledReplayAttempt = !1;
        null !== queuedFocus && attemptReplayContinuousQueuedEvent(queuedFocus) && (queuedFocus = null);
        null !== queuedDrag && attemptReplayContinuousQueuedEvent(queuedDrag) && (queuedDrag = null);
        null !== queuedMouse && attemptReplayContinuousQueuedEvent(queuedMouse) && (queuedMouse = null);
        queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
        queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        queuedEvent.blockedOn === unblocked && (queuedEvent.blockedOn = null, hasScheduledReplayAttempt || (hasScheduledReplayAttempt = !0, Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents)));
    }
    function scheduleReplayQueueIfNeeded(formReplayingQueue) {
        lastScheduledReplayQueue !== formReplayingQueue && (lastScheduledReplayQueue = formReplayingQueue, Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, function() {
            lastScheduledReplayQueue === formReplayingQueue && (lastScheduledReplayQueue = null);
            for(var i = 0; i < formReplayingQueue.length; i += 3){
                var form = formReplayingQueue[i], submitterOrAction = formReplayingQueue[i + 1], formData = formReplayingQueue[i + 2];
                if ("function" !== typeof submitterOrAction) {
                    if (null === findInstanceBlockingTarget(submitterOrAction || form)) continue;
                    else break;
                }
                var formInst = getInstanceFromNode(form);
                null !== formInst && (formReplayingQueue.splice(i, 3), i -= 3, form = {
                    pending: !0,
                    data: formData,
                    method: form.method,
                    action: submitterOrAction
                }, Object.freeze(form), startHostTransition(formInst, form, submitterOrAction, formData));
            }
        }));
    }
    function retryIfBlockedOn(unblocked) {
        function unblock(queuedEvent) {
            return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
        }
        null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);
        null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);
        null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        queuedPointers.forEach(unblock);
        queuedPointerCaptures.forEach(unblock);
        for(var i = 0; i < queuedExplicitHydrationTargets.length; i++){
            var queuedTarget = queuedExplicitHydrationTargets[i];
            queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);
        }
        for(; 0 < queuedExplicitHydrationTargets.length && (i = queuedExplicitHydrationTargets[0], null === i.blockedOn);)attemptExplicitHydrationTarget(i), null === i.blockedOn && queuedExplicitHydrationTargets.shift();
        i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;
        if (null != i) for(queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3){
            var form = i[queuedTarget], submitterOrAction = i[queuedTarget + 1], formProps = form[internalPropsKey] || null;
            if ("function" === typeof submitterOrAction) formProps || scheduleReplayQueueIfNeeded(i);
            else if (formProps) {
                var action = null;
                if (submitterOrAction && submitterOrAction.hasAttribute("formAction")) {
                    if (form = submitterOrAction, formProps = submitterOrAction[internalPropsKey] || null) action = formProps.formAction;
                    else {
                        if (null !== findInstanceBlockingTarget(form)) continue;
                    }
                } else action = formProps.action;
                "function" === typeof action ? i[queuedTarget + 1] = action : (i.splice(queuedTarget, 3), queuedTarget -= 3);
                scheduleReplayQueueIfNeeded(i);
            }
        }
    }
    function ReactDOMRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function ReactDOMHydrationRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function warnIfReactDOMContainerInDEV(container) {
        container[internalContainerInstanceKey] && (container._reactRootContainer ? console.error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : console.error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var Scheduler = require("c31f9b99c1e288cf"), React = require("c4c4bc2113e5c77f"), ReactDOM = require("772d609564cfd8f6"), REACT_LEGACY_ELEMENT_TYPE = Symbol.for("react.element"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy");
    Symbol.for("react.scope");
    Symbol.for("react.debug_trace_mode");
    var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
    Symbol.for("react.legacy_hidden");
    Symbol.for("react.tracing_marker");
    var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, assign = Object.assign, disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
    disabledLog.__reactDisabledLog = !0;
    var prefix, suffix, reentry = !1;
    var componentFrameCache = new ("function" === typeof WeakMap ? WeakMap : Map)();
    var current = null, isRendering = !1, isArrayImpl = Array.isArray, ReactDOMSharedInternals = ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, NotPending = Object.freeze({
        pending: !1,
        data: null,
        method: null,
        action: null
    }), valueStack = [];
    var fiberStack = [];
    var index$jscomp$0 = -1, contextStackCursor = createCursor(null), contextFiberStackCursor = createCursor(null), rootInstanceStackCursor = createCursor(null), hostTransitionProviderCursor = createCursor(null), hasOwnProperty = Object.prototype.hasOwnProperty, scheduleCallback$3 = Scheduler.unstable_scheduleCallback, cancelCallback$1 = Scheduler.unstable_cancelCallback, shouldYield = Scheduler.unstable_shouldYield, requestPaint = Scheduler.unstable_requestPaint, now$1 = Scheduler.unstable_now, getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel, ImmediatePriority = Scheduler.unstable_ImmediatePriority, UserBlockingPriority = Scheduler.unstable_UserBlockingPriority, NormalPriority$1 = Scheduler.unstable_NormalPriority, LowPriority = Scheduler.unstable_LowPriority, IdlePriority = Scheduler.unstable_IdlePriority, log$1 = Scheduler.log, unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue, rendererID = null, injectedHook = null, injectedProfilingHooks = null, hasLoggedError = !1, isDevToolsPresent = "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__, clz32 = Math.clz32 ? Math.clz32 : clz32Fallback, log = Math.log, LN2 = Math.LN2, nextTransitionLane = 128, nextRetryLane = 4194304, DiscreteEventPriority = 2, ContinuousEventPriority = 8, DefaultEventPriority = 32, IdleEventPriority = 268435456, randomKey = Math.random().toString(36).slice(2), internalInstanceKey = "__reactFiber$" + randomKey, internalPropsKey = "__reactProps$" + randomKey, internalContainerInstanceKey = "__reactContainer$" + randomKey, internalEventHandlersKey = "__reactEvents$" + randomKey, internalEventHandlerListenersKey = "__reactListeners$" + randomKey, internalEventHandlesSetKey = "__reactHandles$" + randomKey, internalRootNodeResourcesKey = "__reactResources$" + randomKey, internalHoistableMarker = "__reactMarker$" + randomKey, allNativeEvents = new Set(), registrationNameDependencies = {}, possibleRegistrationNames = {}, canUseDOM = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), hasReadOnlyValue = {
        button: !0,
        checkbox: !0,
        image: !0,
        hidden: !0,
        radio: !0,
        reset: !0,
        submit: !0
    }, VALID_ATTRIBUTE_NAME_REGEX = RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), illegalAttributeNameCache = {}, validatedAttributeNameCache = {}, escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\n"\\]/g, didWarnValueDefaultValue$1 = !1, didWarnCheckedDefaultChecked = !1, didWarnSelectedSetOnOption = !1, didWarnInvalidChild = !1, didWarnInvalidInnerHTML = !1;
    var didWarnValueDefaultValue = !1;
    var valuePropNames = [
        "value",
        "defaultValue"
    ], didWarnValDefaultVal = !1, needsEscaping = /["'&<>\n\t]|^\s|\s$/, specialTags = "address applet area article aside base basefont bgsound blockquote body br button caption center col colgroup dd details dir div dl dt embed fieldset figcaption figure footer form frame frameset h1 h2 h3 h4 h5 h6 head header hgroup hr html iframe img input isindex li link listing main marquee menu menuitem meta nav noembed noframes noscript object ol p param plaintext pre script section select source style summary table tbody td template textarea tfoot th thead title tr track ul wbr xmp".split(" "), inScopeTags = "applet caption html table td th marquee object template foreignObject desc title".split(" "), buttonScopeTags = inScopeTags.concat([
        "button"
    ]), impliedEndTags = "dd dt li option optgroup p rp rt".split(" "), emptyAncestorInfoDev = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null,
        containerTagInScope: null
    }, didWarn = {}, MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML", SVG_NAMESPACE = "http://www.w3.org/2000/svg", shorthandToLonghand = {
        animation: "animationDelay animationDirection animationDuration animationFillMode animationIterationCount animationName animationPlayState animationTimingFunction".split(" "),
        background: "backgroundAttachment backgroundClip backgroundColor backgroundImage backgroundOrigin backgroundPositionX backgroundPositionY backgroundRepeat backgroundSize".split(" "),
        backgroundPosition: [
            "backgroundPositionX",
            "backgroundPositionY"
        ],
        border: "borderBottomColor borderBottomStyle borderBottomWidth borderImageOutset borderImageRepeat borderImageSlice borderImageSource borderImageWidth borderLeftColor borderLeftStyle borderLeftWidth borderRightColor borderRightStyle borderRightWidth borderTopColor borderTopStyle borderTopWidth".split(" "),
        borderBlockEnd: [
            "borderBlockEndColor",
            "borderBlockEndStyle",
            "borderBlockEndWidth"
        ],
        borderBlockStart: [
            "borderBlockStartColor",
            "borderBlockStartStyle",
            "borderBlockStartWidth"
        ],
        borderBottom: [
            "borderBottomColor",
            "borderBottomStyle",
            "borderBottomWidth"
        ],
        borderColor: [
            "borderBottomColor",
            "borderLeftColor",
            "borderRightColor",
            "borderTopColor"
        ],
        borderImage: [
            "borderImageOutset",
            "borderImageRepeat",
            "borderImageSlice",
            "borderImageSource",
            "borderImageWidth"
        ],
        borderInlineEnd: [
            "borderInlineEndColor",
            "borderInlineEndStyle",
            "borderInlineEndWidth"
        ],
        borderInlineStart: [
            "borderInlineStartColor",
            "borderInlineStartStyle",
            "borderInlineStartWidth"
        ],
        borderLeft: [
            "borderLeftColor",
            "borderLeftStyle",
            "borderLeftWidth"
        ],
        borderRadius: [
            "borderBottomLeftRadius",
            "borderBottomRightRadius",
            "borderTopLeftRadius",
            "borderTopRightRadius"
        ],
        borderRight: [
            "borderRightColor",
            "borderRightStyle",
            "borderRightWidth"
        ],
        borderStyle: [
            "borderBottomStyle",
            "borderLeftStyle",
            "borderRightStyle",
            "borderTopStyle"
        ],
        borderTop: [
            "borderTopColor",
            "borderTopStyle",
            "borderTopWidth"
        ],
        borderWidth: [
            "borderBottomWidth",
            "borderLeftWidth",
            "borderRightWidth",
            "borderTopWidth"
        ],
        columnRule: [
            "columnRuleColor",
            "columnRuleStyle",
            "columnRuleWidth"
        ],
        columns: [
            "columnCount",
            "columnWidth"
        ],
        flex: [
            "flexBasis",
            "flexGrow",
            "flexShrink"
        ],
        flexFlow: [
            "flexDirection",
            "flexWrap"
        ],
        font: "fontFamily fontFeatureSettings fontKerning fontLanguageOverride fontSize fontSizeAdjust fontStretch fontStyle fontVariant fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition fontWeight lineHeight".split(" "),
        fontVariant: "fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition".split(" "),
        gap: [
            "columnGap",
            "rowGap"
        ],
        grid: "gridAutoColumns gridAutoFlow gridAutoRows gridTemplateAreas gridTemplateColumns gridTemplateRows".split(" "),
        gridArea: [
            "gridColumnEnd",
            "gridColumnStart",
            "gridRowEnd",
            "gridRowStart"
        ],
        gridColumn: [
            "gridColumnEnd",
            "gridColumnStart"
        ],
        gridColumnGap: [
            "columnGap"
        ],
        gridGap: [
            "columnGap",
            "rowGap"
        ],
        gridRow: [
            "gridRowEnd",
            "gridRowStart"
        ],
        gridRowGap: [
            "rowGap"
        ],
        gridTemplate: [
            "gridTemplateAreas",
            "gridTemplateColumns",
            "gridTemplateRows"
        ],
        listStyle: [
            "listStyleImage",
            "listStylePosition",
            "listStyleType"
        ],
        margin: [
            "marginBottom",
            "marginLeft",
            "marginRight",
            "marginTop"
        ],
        marker: [
            "markerEnd",
            "markerMid",
            "markerStart"
        ],
        mask: "maskClip maskComposite maskImage maskMode maskOrigin maskPositionX maskPositionY maskRepeat maskSize".split(" "),
        maskPosition: [
            "maskPositionX",
            "maskPositionY"
        ],
        outline: [
            "outlineColor",
            "outlineStyle",
            "outlineWidth"
        ],
        overflow: [
            "overflowX",
            "overflowY"
        ],
        padding: [
            "paddingBottom",
            "paddingLeft",
            "paddingRight",
            "paddingTop"
        ],
        placeContent: [
            "alignContent",
            "justifyContent"
        ],
        placeItems: [
            "alignItems",
            "justifyItems"
        ],
        placeSelf: [
            "alignSelf",
            "justifySelf"
        ],
        textDecoration: [
            "textDecorationColor",
            "textDecorationLine",
            "textDecorationStyle"
        ],
        textEmphasis: [
            "textEmphasisColor",
            "textEmphasisStyle"
        ],
        transition: [
            "transitionDelay",
            "transitionDuration",
            "transitionProperty",
            "transitionTimingFunction"
        ],
        wordWrap: [
            "overflowWrap"
        ]
    }, uppercasePattern = /([A-Z])/g, msPattern$1 = /^ms-/, badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/, msPattern = /^-ms-/, hyphenPattern = /-(.)/g, badStyleValueWithSemicolonPattern = /;\s*$/, warnedStyleNames = {}, warnedStyleValues = {}, warnedForNaNValue = !1, warnedForInfinityValue = !1, unitlessNumbers = new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" ")), aliases = new Map([
        [
            "acceptCharset",
            "accept-charset"
        ],
        [
            "htmlFor",
            "for"
        ],
        [
            "httpEquiv",
            "http-equiv"
        ],
        [
            "crossOrigin",
            "crossorigin"
        ],
        [
            "accentHeight",
            "accent-height"
        ],
        [
            "alignmentBaseline",
            "alignment-baseline"
        ],
        [
            "arabicForm",
            "arabic-form"
        ],
        [
            "baselineShift",
            "baseline-shift"
        ],
        [
            "capHeight",
            "cap-height"
        ],
        [
            "clipPath",
            "clip-path"
        ],
        [
            "clipRule",
            "clip-rule"
        ],
        [
            "colorInterpolation",
            "color-interpolation"
        ],
        [
            "colorInterpolationFilters",
            "color-interpolation-filters"
        ],
        [
            "colorProfile",
            "color-profile"
        ],
        [
            "colorRendering",
            "color-rendering"
        ],
        [
            "dominantBaseline",
            "dominant-baseline"
        ],
        [
            "enableBackground",
            "enable-background"
        ],
        [
            "fillOpacity",
            "fill-opacity"
        ],
        [
            "fillRule",
            "fill-rule"
        ],
        [
            "floodColor",
            "flood-color"
        ],
        [
            "floodOpacity",
            "flood-opacity"
        ],
        [
            "fontFamily",
            "font-family"
        ],
        [
            "fontSize",
            "font-size"
        ],
        [
            "fontSizeAdjust",
            "font-size-adjust"
        ],
        [
            "fontStretch",
            "font-stretch"
        ],
        [
            "fontStyle",
            "font-style"
        ],
        [
            "fontVariant",
            "font-variant"
        ],
        [
            "fontWeight",
            "font-weight"
        ],
        [
            "glyphName",
            "glyph-name"
        ],
        [
            "glyphOrientationHorizontal",
            "glyph-orientation-horizontal"
        ],
        [
            "glyphOrientationVertical",
            "glyph-orientation-vertical"
        ],
        [
            "horizAdvX",
            "horiz-adv-x"
        ],
        [
            "horizOriginX",
            "horiz-origin-x"
        ],
        [
            "imageRendering",
            "image-rendering"
        ],
        [
            "letterSpacing",
            "letter-spacing"
        ],
        [
            "lightingColor",
            "lighting-color"
        ],
        [
            "markerEnd",
            "marker-end"
        ],
        [
            "markerMid",
            "marker-mid"
        ],
        [
            "markerStart",
            "marker-start"
        ],
        [
            "overlinePosition",
            "overline-position"
        ],
        [
            "overlineThickness",
            "overline-thickness"
        ],
        [
            "paintOrder",
            "paint-order"
        ],
        [
            "panose-1",
            "panose-1"
        ],
        [
            "pointerEvents",
            "pointer-events"
        ],
        [
            "renderingIntent",
            "rendering-intent"
        ],
        [
            "shapeRendering",
            "shape-rendering"
        ],
        [
            "stopColor",
            "stop-color"
        ],
        [
            "stopOpacity",
            "stop-opacity"
        ],
        [
            "strikethroughPosition",
            "strikethrough-position"
        ],
        [
            "strikethroughThickness",
            "strikethrough-thickness"
        ],
        [
            "strokeDasharray",
            "stroke-dasharray"
        ],
        [
            "strokeDashoffset",
            "stroke-dashoffset"
        ],
        [
            "strokeLinecap",
            "stroke-linecap"
        ],
        [
            "strokeLinejoin",
            "stroke-linejoin"
        ],
        [
            "strokeMiterlimit",
            "stroke-miterlimit"
        ],
        [
            "strokeOpacity",
            "stroke-opacity"
        ],
        [
            "strokeWidth",
            "stroke-width"
        ],
        [
            "textAnchor",
            "text-anchor"
        ],
        [
            "textDecoration",
            "text-decoration"
        ],
        [
            "textRendering",
            "text-rendering"
        ],
        [
            "transformOrigin",
            "transform-origin"
        ],
        [
            "underlinePosition",
            "underline-position"
        ],
        [
            "underlineThickness",
            "underline-thickness"
        ],
        [
            "unicodeBidi",
            "unicode-bidi"
        ],
        [
            "unicodeRange",
            "unicode-range"
        ],
        [
            "unitsPerEm",
            "units-per-em"
        ],
        [
            "vAlphabetic",
            "v-alphabetic"
        ],
        [
            "vHanging",
            "v-hanging"
        ],
        [
            "vIdeographic",
            "v-ideographic"
        ],
        [
            "vMathematical",
            "v-mathematical"
        ],
        [
            "vectorEffect",
            "vector-effect"
        ],
        [
            "vertAdvY",
            "vert-adv-y"
        ],
        [
            "vertOriginX",
            "vert-origin-x"
        ],
        [
            "vertOriginY",
            "vert-origin-y"
        ],
        [
            "wordSpacing",
            "word-spacing"
        ],
        [
            "writingMode",
            "writing-mode"
        ],
        [
            "xmlnsXlink",
            "xmlns:xlink"
        ],
        [
            "xHeight",
            "x-height"
        ]
    ]), possibleStandardNames = {
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        fetchpriority: "fetchPriority",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        inert: "inert",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        popover: "popover",
        popovertarget: "popoverTarget",
        popovertargetaction: "popoverTargetAction",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        transformorigin: "transformOrigin",
        "transform-origin": "transformOrigin",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
    }, ariaProperties = {
        "aria-current": 0,
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        "aria-hidden": 0,
        "aria-invalid": 0,
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0
    }, warnedProperties$1 = {}, rARIA$1 = RegExp("^(aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), rARIACamel$1 = RegExp("^(aria)[A-Z][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), didWarnValueNull = !1, warnedProperties = {}, EVENT_NAME_REGEX = /^on./, INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/, rARIA = RegExp("^(aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), rARIACamel = RegExp("^(aria)[A-Z][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i, currentReplayingEvent = null, restoreTarget = null, restoreQueue = null, isInsideEventHandler = !1, passiveBrowserEventsSupported = !1;
    if (canUseDOM) try {
        var options$jscomp$0 = {};
        Object.defineProperty(options$jscomp$0, "passive", {
            get: function() {
                passiveBrowserEventsSupported = !0;
            }
        });
        window.addEventListener("test", options$jscomp$0, options$jscomp$0);
        window.removeEventListener("test", options$jscomp$0, options$jscomp$0);
    } catch (e) {
        passiveBrowserEventsSupported = !1;
    }
    var root = null, startText = null, fallbackText = null, EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
    }, SyntheticEvent = createSyntheticEvent(EventInterface), UIEventInterface = assign({}, EventInterface, {
        view: 0,
        detail: 0
    }), SyntheticUIEvent = createSyntheticEvent(UIEventInterface), lastMovementX, lastMovementY, lastMouseEvent, MouseEventInterface = assign({}, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
            return void 0 === event.relatedTarget ? event.fromElement === event.srcElement ? event.toElement : event.fromElement : event.relatedTarget;
        },
        movementX: function(event) {
            if ("movementX" in event) return event.movementX;
            event !== lastMouseEvent && (lastMouseEvent && "mousemove" === event.type ? (lastMovementX = event.screenX - lastMouseEvent.screenX, lastMovementY = event.screenY - lastMouseEvent.screenY) : lastMovementY = lastMovementX = 0, lastMouseEvent = event);
            return lastMovementX;
        },
        movementY: function(event) {
            return "movementY" in event ? event.movementY : lastMovementY;
        }
    }), SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface), DragEventInterface = assign({}, MouseEventInterface, {
        dataTransfer: 0
    }), SyntheticDragEvent = createSyntheticEvent(DragEventInterface), FocusEventInterface = assign({}, UIEventInterface, {
        relatedTarget: 0
    }), SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface), AnimationEventInterface = assign({}, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    }), SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface), ClipboardEventInterface = assign({}, EventInterface, {
        clipboardData: function(event) {
            return "clipboardData" in event ? event.clipboardData : window.clipboardData;
        }
    }), SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface), CompositionEventInterface = assign({}, EventInterface, {
        data: 0
    }), SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface), SyntheticInputEvent = SyntheticCompositionEvent, normalizeKey = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
    }, translateToKey = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta"
    }, modifierKeyToProp = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
    }, KeyboardEventInterface = assign({}, UIEventInterface, {
        key: function(nativeEvent) {
            if (nativeEvent.key) {
                var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
                if ("Unidentified" !== key) return key;
            }
            return "keypress" === nativeEvent.type ? (nativeEvent = getEventCharCode(nativeEvent), 13 === nativeEvent ? "Enter" : String.fromCharCode(nativeEvent)) : "keydown" === nativeEvent.type || "keyup" === nativeEvent.type ? translateToKey[nativeEvent.keyCode] || "Unidentified" : "";
        },
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        charCode: function(event) {
            return "keypress" === event.type ? getEventCharCode(event) : 0;
        },
        keyCode: function(event) {
            return "keydown" === event.type || "keyup" === event.type ? event.keyCode : 0;
        },
        which: function(event) {
            return "keypress" === event.type ? getEventCharCode(event) : "keydown" === event.type || "keyup" === event.type ? event.keyCode : 0;
        }
    }), SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface), PointerEventInterface = assign({}, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
    }), SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface), TouchEventInterface = assign({}, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
    }), SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface), TransitionEventInterface = assign({}, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    }), SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface), WheelEventInterface = assign({}, MouseEventInterface, {
        deltaX: function(event) {
            return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
        },
        deltaY: function(event) {
            return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
        },
        deltaZ: 0,
        deltaMode: 0
    }), SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface), ToggleEventInterface = assign({}, EventInterface, {
        newState: 0,
        oldState: 0
    }), SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface), END_KEYCODES = [
        9,
        13,
        27,
        32
    ], START_KEYCODE = 229, canUseCompositionEvent = canUseDOM && "CompositionEvent" in window, documentMode = null;
    canUseDOM && "documentMode" in document && (documentMode = document.documentMode);
    var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode, useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && 8 < documentMode && 11 >= documentMode), SPACEBAR_CODE = 32, SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE), hasSpaceKeypress = !1, isComposing = !1, supportedInputTypes = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0
    }, activeElement$1 = null, activeElementInst$1 = null, isInputEventSupported = !1;
    canUseDOM && (isInputEventSupported = isEventSupported("input") && (!document.documentMode || 9 < document.documentMode));
    var objectIs = "function" === typeof Object.is ? Object.is : is, skipSelectionChangeEvent = canUseDOM && "documentMode" in document && 11 >= document.documentMode, activeElement = null, activeElementInst = null, lastSelection = null, mouseDown = !1, vendorPrefixes = {
        animationend: makePrefixMap("Animation", "AnimationEnd"),
        animationiteration: makePrefixMap("Animation", "AnimationIteration"),
        animationstart: makePrefixMap("Animation", "AnimationStart"),
        transitionrun: makePrefixMap("Transition", "TransitionRun"),
        transitionstart: makePrefixMap("Transition", "TransitionStart"),
        transitioncancel: makePrefixMap("Transition", "TransitionCancel"),
        transitionend: makePrefixMap("Transition", "TransitionEnd")
    }, prefixedEventNames = {}, style = {};
    canUseDOM && (style = document.createElement("div").style, "AnimationEvent" in window || (delete vendorPrefixes.animationend.animation, delete vendorPrefixes.animationiteration.animation, delete vendorPrefixes.animationstart.animation), "TransitionEvent" in window || delete vendorPrefixes.transitionend.transition);
    var ANIMATION_END = getVendorPrefixedEventName("animationend"), ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration"), ANIMATION_START = getVendorPrefixedEventName("animationstart"), TRANSITION_RUN = getVendorPrefixedEventName("transitionrun"), TRANSITION_START = getVendorPrefixedEventName("transitionstart"), TRANSITION_CANCEL = getVendorPrefixedEventName("transitioncancel"), TRANSITION_END = getVendorPrefixedEventName("transitionend"), topLevelEventsToReactNames = new Map(), simpleEventPluginEvents = "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(" "), OffscreenVisible = 1, OffscreenDetached = 2, OffscreenPassiveEffectsConnected = 4, concurrentQueues = [], concurrentQueuesIndex = 0, concurrentlyUpdatedLanes = 0, emptyContextObject = {};
    Object.freeze(emptyContextObject);
    var resolveFamily = null, failedBoundaries = null, NoMode = 0, ConcurrentMode = 1, ProfileMode = 2, StrictLegacyMode = 8, StrictEffectsMode = 16, NoStrictPassiveEffectsMode = 64, now = Scheduler.unstable_now, renderStartTime = -0, commitStartTime = -0, profilerStartTime = -1.1, profilerEffectDuration = -0, currentUpdateIsNested = !1, nestedUpdateScheduled = !1, ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function() {},
        flushPendingUnsafeLifecycleWarnings: function() {},
        recordLegacyContextWarning: function() {},
        flushLegacyContextWarning: function() {},
        discardPendingWarnings: function() {}
    }, pendingComponentWillMountWarnings = [], pendingUNSAFE_ComponentWillMountWarnings = [], pendingComponentWillReceivePropsWarnings = [], pendingUNSAFE_ComponentWillReceivePropsWarnings = [], pendingComponentWillUpdateWarnings = [], pendingUNSAFE_ComponentWillUpdateWarnings = [], didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
        didWarnAboutUnsafeLifecycles.has(fiber.type) || ("function" === typeof instance.componentWillMount && !0 !== instance.componentWillMount.__suppressDeprecationWarning && pendingComponentWillMountWarnings.push(fiber), fiber.mode & StrictLegacyMode && "function" === typeof instance.UNSAFE_componentWillMount && pendingUNSAFE_ComponentWillMountWarnings.push(fiber), "function" === typeof instance.componentWillReceiveProps && !0 !== instance.componentWillReceiveProps.__suppressDeprecationWarning && pendingComponentWillReceivePropsWarnings.push(fiber), fiber.mode & StrictLegacyMode && "function" === typeof instance.UNSAFE_componentWillReceiveProps && pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber), "function" === typeof instance.componentWillUpdate && !0 !== instance.componentWillUpdate.__suppressDeprecationWarning && pendingComponentWillUpdateWarnings.push(fiber), fiber.mode & StrictLegacyMode && "function" === typeof instance.UNSAFE_componentWillUpdate && pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber));
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
        var componentWillMountUniqueNames = new Set();
        0 < pendingComponentWillMountWarnings.length && (pendingComponentWillMountWarnings.forEach(function(fiber) {
            componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingComponentWillMountWarnings = []);
        var UNSAFE_componentWillMountUniqueNames = new Set();
        0 < pendingUNSAFE_ComponentWillMountWarnings.length && (pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
            UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingUNSAFE_ComponentWillMountWarnings = []);
        var componentWillReceivePropsUniqueNames = new Set();
        0 < pendingComponentWillReceivePropsWarnings.length && (pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
            componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingComponentWillReceivePropsWarnings = []);
        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
        0 < pendingUNSAFE_ComponentWillReceivePropsWarnings.length && (pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
            UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingUNSAFE_ComponentWillReceivePropsWarnings = []);
        var componentWillUpdateUniqueNames = new Set();
        0 < pendingComponentWillUpdateWarnings.length && (pendingComponentWillUpdateWarnings.forEach(function(fiber) {
            componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingComponentWillUpdateWarnings = []);
        var UNSAFE_componentWillUpdateUniqueNames = new Set();
        0 < pendingUNSAFE_ComponentWillUpdateWarnings.length && (pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
            UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingUNSAFE_ComponentWillUpdateWarnings = []);
        if (0 < UNSAFE_componentWillMountUniqueNames.size) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            console.error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
        }
        0 < UNSAFE_componentWillReceivePropsUniqueNames.size && (sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames), console.error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n\nPlease update the following components: %s", sortedNames));
        0 < UNSAFE_componentWillUpdateUniqueNames.size && (sortedNames = setToSortedString(UNSAFE_componentWillUpdateUniqueNames), console.error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", sortedNames));
        0 < componentWillMountUniqueNames.size && (sortedNames = setToSortedString(componentWillMountUniqueNames), console.warn("componentWillMount has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", sortedNames));
        0 < componentWillReceivePropsUniqueNames.size && (sortedNames = setToSortedString(componentWillReceivePropsUniqueNames), console.warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", sortedNames));
        0 < componentWillUpdateUniqueNames.size && (sortedNames = setToSortedString(componentWillUpdateUniqueNames), console.warn("componentWillUpdate has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", sortedNames));
    };
    var pendingLegacyContextWarning = new Map(), didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
        var strictRoot = null;
        for(var node = fiber; null !== node;)node.mode & StrictLegacyMode && (strictRoot = node), node = node.return;
        null === strictRoot ? console.error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.") : !didWarnAboutLegacyContext.has(fiber.type) && (node = pendingLegacyContextWarning.get(strictRoot), null != fiber.type.contextTypes || null != fiber.type.childContextTypes || null !== instance && "function" === typeof instance.getChildContext) && (void 0 === node && (node = [], pendingLegacyContextWarning.set(strictRoot, node)), node.push(fiber));
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function() {
        pendingLegacyContextWarning.forEach(function(fiberArray) {
            if (0 !== fiberArray.length) {
                var firstFiber = fiberArray[0], uniqueNames = new Set();
                fiberArray.forEach(function(fiber) {
                    uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                    didWarnAboutLegacyContext.add(fiber.type);
                });
                var sortedNames = setToSortedString(uniqueNames);
                runWithFiberInDEV(firstFiber, function() {
                    console.error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://react.dev/link/legacy-context", sortedNames);
                });
            }
        });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function() {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
    };
    var CapturedStacks = new WeakMap(), forkStack = [], forkStackIndex = 0, treeForkProvider = null, treeForkCount = 0, idStack = [], idStackIndex = 0, treeContextProvider = null, treeContextId = 1, treeContextOverflow = "", hydrationParentFiber = null, nextHydratableInstance = null, isHydrating = !1, didSuspendOrErrorDEV = !1, hydrationDiffRootDEV = null, hydrationErrors = null, rootOrSingletonContext = !1, HydrationMismatchException = Error("Hydration Mismatch Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."), SuspenseException = Error("Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`"), SuspenseyCommitException = Error("Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."), noopSuspenseyCommitThenable = {
        then: function() {
            console.error('Internal React error: A listener was unexpectedly attached to a "noop" thenable. This is a bug in React. Please file an issue.');
        }
    }, suspendedThenable = null, needsToResetSuspendedThenableDEV = !1, callComponent = {
        "react-stack-bottom-frame": function(Component, props, secondArg) {
            var wasRendering = isRendering;
            isRendering = !0;
            try {
                return Component(props, secondArg);
            } finally{
                isRendering = wasRendering;
            }
        }
    }, callComponentInDEV = callComponent["react-stack-bottom-frame"].bind(callComponent), callRender = {
        "react-stack-bottom-frame": function(instance) {
            var wasRendering = isRendering;
            isRendering = !0;
            try {
                return instance.render();
            } finally{
                isRendering = wasRendering;
            }
        }
    }, callRenderInDEV = callRender["react-stack-bottom-frame"].bind(callRender), callComponentDidMount = {
        "react-stack-bottom-frame": function(finishedWork, instance) {
            try {
                instance.componentDidMount();
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
        }
    }, callComponentDidMountInDEV = callComponentDidMount["react-stack-bottom-frame"].bind(callComponentDidMount), callComponentDidUpdate = {
        "react-stack-bottom-frame": function(finishedWork, instance, prevProps, prevState, snapshot) {
            try {
                instance.componentDidUpdate(prevProps, prevState, snapshot);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
        }
    }, callComponentDidUpdateInDEV = callComponentDidUpdate["react-stack-bottom-frame"].bind(callComponentDidUpdate), callComponentDidCatch = {
        "react-stack-bottom-frame": function(instance, errorInfo) {
            var stack = errorInfo.stack;
            instance.componentDidCatch(errorInfo.value, {
                componentStack: null !== stack ? stack : ""
            });
        }
    }, callComponentDidCatchInDEV = callComponentDidCatch["react-stack-bottom-frame"].bind(callComponentDidCatch), callComponentWillUnmount = {
        "react-stack-bottom-frame": function(current, nearestMountedAncestor, instance) {
            try {
                instance.componentWillUnmount();
            } catch (error) {
                captureCommitPhaseError(current, nearestMountedAncestor, error);
            }
        }
    }, callComponentWillUnmountInDEV = callComponentWillUnmount["react-stack-bottom-frame"].bind(callComponentWillUnmount), callCreate = {
        "react-stack-bottom-frame": function(effect) {
            var create = effect.create;
            effect = effect.inst;
            create = create();
            return effect.destroy = create;
        }
    }, callCreateInDEV = callCreate["react-stack-bottom-frame"].bind(callCreate), callDestroy = {
        "react-stack-bottom-frame": function(current, nearestMountedAncestor, destroy) {
            try {
                destroy();
            } catch (error) {
                captureCommitPhaseError(current, nearestMountedAncestor, error);
            }
        }
    }, callDestroyInDEV = callDestroy["react-stack-bottom-frame"].bind(callDestroy), callLazyInit = {
        "react-stack-bottom-frame": function(lazy) {
            var init = lazy._init;
            return init(lazy._payload);
        }
    }, callLazyInitInDEV = callLazyInit["react-stack-bottom-frame"].bind(callLazyInit), thenableState$1 = null, thenableIndexCounter$1 = 0, currentDebugInfo = null, didWarnAboutMaps;
    var didWarnAboutGenerators = didWarnAboutMaps = !1;
    var ownerHasKeyUseWarning = {};
    var ownerHasFunctionTypeWarning = {};
    var ownerHasSymbolTypeWarning = {};
    warnForMissingKey = function(returnFiber, workInProgress, child) {
        if (null !== child && "object" === typeof child && child._store && (!child._store.validated && null == child.key || 2 === child._store.validated)) {
            if ("object" !== typeof child._store) throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
            child._store.validated = 1;
            var componentName = getComponentNameFromFiber(returnFiber), componentKey = componentName || "null";
            if (!ownerHasKeyUseWarning[componentKey]) {
                ownerHasKeyUseWarning[componentKey] = !0;
                child = child._owner;
                returnFiber = returnFiber._debugOwner;
                var currentComponentErrorInfo = "";
                returnFiber && "number" === typeof returnFiber.tag && (componentKey = getComponentNameFromFiber(returnFiber)) && (currentComponentErrorInfo = "\n\nCheck the render method of `" + componentKey + "`.");
                currentComponentErrorInfo || componentName && (currentComponentErrorInfo = "\n\nCheck the top-level render call using <" + componentName + ">.");
                var childOwnerAppendix = "";
                null != child && returnFiber !== child && (componentName = null, "number" === typeof child.tag ? componentName = getComponentNameFromFiber(child) : "string" === typeof child.name && (componentName = child.name), componentName && (childOwnerAppendix = " It was passed a child from " + componentName + "."));
                runWithFiberInDEV(workInProgress, function() {
                    console.error('Each child in a list should have a unique "key" prop.%s%s See https://react.dev/link/warning-keys for more information.', currentComponentErrorInfo, childOwnerAppendix);
                });
            }
        }
    };
    var reconcileChildFibers = createChildReconciler(!0), mountChildFibers = createChildReconciler(!1), currentTreeHiddenStackCursor = createCursor(null), prevEntangledRenderLanesCursor = createCursor(0), suspenseHandlerStackCursor = createCursor(null), shellBoundary = null, SubtreeSuspenseContextMask = 1, ForceSuspenseFallback = 2, suspenseStackCursor = createCursor(0), NoFlags = 0, HasEffect = 1, Insertion = 2, Layout = 4, Passive = 8, AbortControllerLocal = "undefined" !== typeof AbortController ? AbortController : function() {
        var listeners = [], signal = this.signal = {
            aborted: !1,
            addEventListener: function(type, listener) {
                listeners.push(listener);
            }
        };
        this.abort = function() {
            signal.aborted = !0;
            listeners.forEach(function(listener) {
                return listener();
            });
        };
    }, scheduleCallback$2 = Scheduler.unstable_scheduleCallback, NormalPriority = Scheduler.unstable_NormalPriority, CacheContext = {
        $$typeof: REACT_CONTEXT_TYPE,
        Consumer: null,
        Provider: null,
        _currentValue: null,
        _currentValue2: null,
        _threadCount: 0,
        _currentRenderer: null,
        _currentRenderer2: null
    }, currentEntangledListeners = null, currentEntangledPendingCount = 0, currentEntangledLane = 0, currentEntangledActionThenable = null, prevOnStartTransitionFinish = ReactSharedInternals.S;
    ReactSharedInternals.S = function(transition, returnValue) {
        "object" === typeof returnValue && null !== returnValue && "function" === typeof returnValue.then && entangleAsyncAction(transition, returnValue);
        null !== prevOnStartTransitionFinish && prevOnStartTransitionFinish(transition, returnValue);
    };
    var resumedCache = createCursor(null), didWarnUncachedGetSnapshot;
    var didWarnAboutMismatchedHooksForComponent = new Set();
    var didWarnAboutUseWrappedInTryCatch = new Set();
    var didWarnAboutAsyncClientComponent = new Set();
    var didWarnAboutUseFormState = new Set();
    var renderLanes = 0, currentlyRenderingFiber$1 = null, currentHook = null, workInProgressHook = null, didScheduleRenderPhaseUpdate = !1, didScheduleRenderPhaseUpdateDuringThisPass = !1, shouldDoubleInvokeUserFnsInHooksDEV = !1, localIdCounter = 0, thenableIndexCounter = 0, thenableState = null, globalClientIdCounter = 0, RE_RENDER_LIMIT = 25, currentHookNameInDev = null, hookTypesDev = null, hookTypesUpdateIndexDev = -1, ignorePreviousDependencies = !1;
    var createFunctionComponentUpdateQueue = function() {
        return {
            lastEffect: null,
            events: null,
            stores: null,
            memoCache: null
        };
    };
    var ContextOnlyDispatcher = {
        readContext: readContext,
        use: use,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useInsertionEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useSyncExternalStore: throwInvalidHookError,
        useId: throwInvalidHookError
    };
    ContextOnlyDispatcher.useCacheRefresh = throwInvalidHookError;
    ContextOnlyDispatcher.useMemoCache = throwInvalidHookError;
    ContextOnlyDispatcher.useHostTransitionStatus = throwInvalidHookError;
    ContextOnlyDispatcher.useFormState = throwInvalidHookError;
    ContextOnlyDispatcher.useActionState = throwInvalidHookError;
    ContextOnlyDispatcher.useOptimistic = throwInvalidHookError;
    var HooksDispatcherOnMountInDEV = null, HooksDispatcherOnMountWithHookTypesInDEV = null, HooksDispatcherOnUpdateInDEV = null, HooksDispatcherOnRerenderInDEV = null, InvalidNestedHooksDispatcherOnMountInDEV = null, InvalidNestedHooksDispatcherOnUpdateInDEV = null, InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    HooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            mountEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            mountHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            mountHookTypesDev();
            return mountDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            mountHookTypesDev();
            return mountTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            mountHookTypesDev();
            return mountId();
        },
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            mountHookTypesDev();
            return mountRefresh();
        }
    };
    HooksDispatcherOnMountInDEV.useMemoCache = useMemoCache;
    HooksDispatcherOnMountInDEV.useHostTransitionStatus = useHostTransitionStatus;
    HooksDispatcherOnMountInDEV.useFormState = function(action, initialState) {
        currentHookNameInDev = "useFormState";
        mountHookTypesDev();
        warnOnUseFormStateInDev();
        return mountActionState(action, initialState);
    };
    HooksDispatcherOnMountInDEV.useActionState = function(action, initialState) {
        currentHookNameInDev = "useActionState";
        mountHookTypesDev();
        return mountActionState(action, initialState);
    };
    HooksDispatcherOnMountInDEV.useOptimistic = function(passthrough) {
        currentHookNameInDev = "useOptimistic";
        mountHookTypesDev();
        return mountOptimistic(passthrough);
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            mountEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return mountDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return mountTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return mountId();
        },
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return mountRefresh();
        }
    };
    HooksDispatcherOnMountWithHookTypesInDEV.useMemoCache = useMemoCache;
    HooksDispatcherOnMountWithHookTypesInDEV.useHostTransitionStatus = useHostTransitionStatus;
    HooksDispatcherOnMountWithHookTypesInDEV.useFormState = function(action, initialState) {
        currentHookNameInDev = "useFormState";
        updateHookTypesDev();
        warnOnUseFormStateInDev();
        return mountActionState(action, initialState);
    };
    HooksDispatcherOnMountWithHookTypesInDEV.useActionState = function(action, initialState) {
        currentHookNameInDev = "useActionState";
        updateHookTypesDev();
        return mountActionState(action, initialState);
    };
    HooksDispatcherOnMountWithHookTypesInDEV.useOptimistic = function(passthrough) {
        currentHookNameInDev = "useOptimistic";
        updateHookTypesDev();
        return mountOptimistic(passthrough);
    };
    HooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return updateDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return updateTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    HooksDispatcherOnUpdateInDEV.useMemoCache = useMemoCache;
    HooksDispatcherOnUpdateInDEV.useHostTransitionStatus = useHostTransitionStatus;
    HooksDispatcherOnUpdateInDEV.useFormState = function(action) {
        currentHookNameInDev = "useFormState";
        updateHookTypesDev();
        warnOnUseFormStateInDev();
        return updateActionState(action);
    };
    HooksDispatcherOnUpdateInDEV.useActionState = function(action) {
        currentHookNameInDev = "useActionState";
        updateHookTypesDev();
        return updateActionState(action);
    };
    HooksDispatcherOnUpdateInDEV.useOptimistic = function(passthrough, reducer) {
        currentHookNameInDev = "useOptimistic";
        updateHookTypesDev();
        return updateOptimistic(passthrough, reducer);
    };
    HooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return rerenderDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return rerenderTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    HooksDispatcherOnRerenderInDEV.useMemoCache = useMemoCache;
    HooksDispatcherOnRerenderInDEV.useHostTransitionStatus = useHostTransitionStatus;
    HooksDispatcherOnRerenderInDEV.useFormState = function(action) {
        currentHookNameInDev = "useFormState";
        updateHookTypesDev();
        warnOnUseFormStateInDev();
        return rerenderActionState(action);
    };
    HooksDispatcherOnRerenderInDEV.useActionState = function(action) {
        currentHookNameInDev = "useActionState";
        updateHookTypesDev();
        return rerenderActionState(action);
    };
    HooksDispatcherOnRerenderInDEV.useOptimistic = function(passthrough, reducer) {
        currentHookNameInDev = "useOptimistic";
        updateHookTypesDev();
        return rerenderOptimistic(passthrough, reducer);
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        use: function(usable) {
            warnInvalidHookAccess();
            return use(usable);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            mountEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountId();
        },
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            mountHookTypesDev();
            return mountRefresh();
        },
        useMemoCache: function(size) {
            warnInvalidHookAccess();
            return useMemoCache(size);
        }
    };
    InvalidNestedHooksDispatcherOnMountInDEV.useHostTransitionStatus = useHostTransitionStatus;
    InvalidNestedHooksDispatcherOnMountInDEV.useFormState = function(action, initialState) {
        currentHookNameInDev = "useFormState";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountActionState(action, initialState);
    };
    InvalidNestedHooksDispatcherOnMountInDEV.useActionState = function(action, initialState) {
        currentHookNameInDev = "useActionState";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountActionState(action, initialState);
    };
    InvalidNestedHooksDispatcherOnMountInDEV.useOptimistic = function(passthrough) {
        currentHookNameInDev = "useOptimistic";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountOptimistic(passthrough);
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        use: function(usable) {
            warnInvalidHookAccess();
            return use(usable);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useMemoCache: function(size) {
            warnInvalidHookAccess();
            return useMemoCache(size);
        }
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV.useHostTransitionStatus = useHostTransitionStatus;
    InvalidNestedHooksDispatcherOnUpdateInDEV.useFormState = function(action) {
        currentHookNameInDev = "useFormState";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateActionState(action);
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV.useActionState = function(action) {
        currentHookNameInDev = "useActionState";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateActionState(action);
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV.useOptimistic = function(passthrough, reducer) {
        currentHookNameInDev = "useOptimistic";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateOptimistic(passthrough, reducer);
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        use: function(usable) {
            warnInvalidHookAccess();
            return use(usable);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useMemoCache: function(size) {
            warnInvalidHookAccess();
            return useMemoCache(size);
        }
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV.useHostTransitionStatus = useHostTransitionStatus;
    InvalidNestedHooksDispatcherOnRerenderInDEV.useFormState = function(action) {
        currentHookNameInDev = "useFormState";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return rerenderActionState(action);
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV.useActionState = function(action) {
        currentHookNameInDev = "useActionState";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return rerenderActionState(action);
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV.useOptimistic = function(passthrough, reducer) {
        currentHookNameInDev = "useOptimistic";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return rerenderOptimistic(passthrough, reducer);
    };
    var fakeInternalInstance = {};
    var didWarnAboutStateAssignmentForComponent = new Set();
    var didWarnAboutUninitializedState = new Set();
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    var didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    var didWarnAboutDirectlyAssigningPropsToState = new Set();
    var didWarnAboutUndefinedDerivedState = new Set();
    var didWarnAboutContextTypes$1 = new Set();
    var didWarnAboutChildContextTypes = new Set();
    var didWarnAboutInvalidateContextType = new Set();
    var didWarnOnInvalidCallback = new Set();
    Object.freeze(fakeInternalInstance);
    var classComponentUpdater = {
        isMounted: function(component) {
            var owner = current;
            if (null !== owner && isRendering && 1 === owner.tag) {
                var instance = owner.stateNode;
                instance._warnedAboutRefsInRender || console.error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(owner) || "A component");
                instance._warnedAboutRefsInRender = !0;
            }
            return (component = component._reactInternals) ? getNearestMountedFiber(component) === component : !1;
        },
        enqueueSetState: function(inst, payload, callback) {
            inst = inst._reactInternals;
            var lane = requestUpdateLane(inst), update = createUpdate(lane);
            update.payload = payload;
            void 0 !== callback && null !== callback && (warnOnInvalidCallback(callback), update.callback = callback);
            payload = enqueueUpdate(inst, update, lane);
            null !== payload && (scheduleUpdateOnFiber(payload, inst, lane), entangleTransitions(payload, inst, lane));
            markStateUpdateScheduled(inst, lane);
        },
        enqueueReplaceState: function(inst, payload, callback) {
            inst = inst._reactInternals;
            var lane = requestUpdateLane(inst), update = createUpdate(lane);
            update.tag = ReplaceState;
            update.payload = payload;
            void 0 !== callback && null !== callback && (warnOnInvalidCallback(callback), update.callback = callback);
            payload = enqueueUpdate(inst, update, lane);
            null !== payload && (scheduleUpdateOnFiber(payload, inst, lane), entangleTransitions(payload, inst, lane));
            markStateUpdateScheduled(inst, lane);
        },
        enqueueForceUpdate: function(inst, callback) {
            inst = inst._reactInternals;
            var lane = requestUpdateLane(inst), update = createUpdate(lane);
            update.tag = ForceUpdate;
            void 0 !== callback && null !== callback && (warnOnInvalidCallback(callback), update.callback = callback);
            callback = enqueueUpdate(inst, update, lane);
            null !== callback && (scheduleUpdateOnFiber(callback, inst, lane), entangleTransitions(callback, inst, lane));
            null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markForceUpdateScheduled && injectedProfilingHooks.markForceUpdateScheduled(inst, lane);
        }
    }, reportGlobalError = "function" === typeof reportError ? reportError : function(error) {
        if ("object" === typeof window && "function" === typeof window.ErrorEvent) {
            var event = new window.ErrorEvent("error", {
                bubbles: !0,
                cancelable: !0,
                message: "object" === typeof error && null !== error && "string" === typeof error.message ? String(error.message) : String(error),
                error: error
            });
            if (!window.dispatchEvent(event)) return;
        }
        console.error(error);
    }, componentName = null, errorBoundaryName = null, SelectiveHydrationException = Error("This is not a real error. It's an implementation detail of React's selective hydration feature. If this leaks into userspace, it's a bug in React. Please file an issue."), didReceiveUpdate = !1;
    var didWarnAboutBadClass = {};
    var didWarnAboutContextTypeOnFunctionComponent = {};
    var didWarnAboutContextTypes = {};
    var didWarnAboutGetDerivedStateOnFunctionComponent = {};
    var didWarnAboutReassigningProps = !1;
    var didWarnAboutRevealOrder = {};
    var didWarnAboutTailOptions = {};
    var SUSPENDED_MARKER = {
        dehydrated: null,
        treeContext: null,
        retryLane: 0
    }, hasWarnedAboutUsingNoValuePropOnContextProvider = !1, valueCursor = createCursor(null);
    var rendererCursorDEV = createCursor(null);
    var rendererSigil = {};
    var currentlyRenderingFiber = null, lastContextDependency = null, isDisallowedContextReadInDEV = !1, UpdateState = 0, ReplaceState = 1, ForceUpdate = 2, CaptureUpdate = 3, hasForceUpdate = !1;
    var didWarnUpdateInsideUpdate = !1;
    var currentlyProcessingQueue = null;
    var didReadFromEntangledAsyncAction = !1, didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    var offscreenSubtreeIsHidden = !1, offscreenSubtreeWasHidden = !1, needsFormReset = !1, PossiblyWeakSet = "function" === typeof WeakSet ? WeakSet : Set, nextEffect = null, inProgressLanes = null, inProgressRoot = null, shouldFireAfterActiveInstanceBlur = !1, hostParent = null, hostParentIsContainer = !1, currentHoistableRoot = null, suspenseyCommitFlag = 8192;
    var hasBadMapPolyfill = !1;
    try {
        var nonExtensibleObject = Object.preventExtensions({});
        new Map([
            [
                nonExtensibleObject,
                null
            ]
        ]);
        new Set([
            nonExtensibleObject
        ]);
    } catch (e$7) {
        hasBadMapPolyfill = !0;
    }
    var DefaultAsyncDispatcher = {
        getCacheForType: function(resourceType) {
            var cache = readContext(CacheContext), cacheForType = cache.data.get(resourceType);
            void 0 === cacheForType && (cacheForType = resourceType(), cache.data.set(resourceType, cacheForType));
            return cacheForType;
        },
        getOwner: function() {
            return current;
        }
    };
    if ("function" === typeof Symbol && Symbol.for) {
        var symbolFor = Symbol.for;
        symbolFor("selector.component");
        symbolFor("selector.has_pseudo_class");
        symbolFor("selector.role");
        symbolFor("selector.test_id");
        symbolFor("selector.text");
    }
    var commitHooks = [], PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map, NoContext = 0, RenderContext = 2, CommitContext = 4, RootInProgress = 0, RootFatalErrored = 1, RootErrored = 2, RootSuspended = 3, RootSuspendedWithDelay = 4, RootCompleted = 5, RootDidNotComplete = 6, executionContext = NoContext, workInProgressRoot = null, workInProgress = null, workInProgressRootRenderLanes = 0, NotSuspended = 0, SuspendedOnError = 1, SuspendedOnData = 2, SuspendedOnImmediate = 3, SuspendedOnInstance = 4, SuspendedOnInstanceAndReadyToContinue = 5, SuspendedOnDeprecatedThrowPromise = 6, SuspendedAndReadyToContinue = 7, SuspendedOnHydration = 8, workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, workInProgressRootDidSkipSuspendedSiblings = !1, workInProgressRootIsPrerendering = !1, workInProgressRootDidAttachPingListener = !1, entangledRenderLanes = 0, workInProgressRootExitStatus = RootInProgress, workInProgressRootSkippedLanes = 0, workInProgressRootInterleavedUpdatedLanes = 0, workInProgressRootPingedLanes = 0, workInProgressDeferredLane = 0, workInProgressSuspendedRetryLanes = 0, workInProgressRootConcurrentErrors = null, workInProgressRootRecoverableErrors = null, workInProgressRootDidIncludeRecursiveRenderUpdate = !1, globalMostRecentFallbackTime = 0, FALLBACK_THROTTLE_MS = 300, workInProgressRootRenderTargetTime = Infinity, RENDER_TIMEOUT_MS = 500, workInProgressTransitions = null, legacyErrorBoundariesThatAlreadyFailed = null, rootDoesHavePassiveEffects = !1, rootWithPendingPassiveEffects = null, pendingPassiveEffectsLanes = 0, pendingPassiveEffectsRemainingLanes = 0, pendingPassiveTransitions = null, NESTED_UPDATE_LIMIT = 50, nestedUpdateCount = 0, rootWithNestedUpdates = null, isFlushingPassiveEffects = !1, didScheduleUpdateDuringPassiveEffects = !1, NESTED_PASSIVE_UPDATE_LIMIT = 50, nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null, isRunningInsertionEffect = !1, IMMEDIATE_COMMIT = 0, SUSPENDED_COMMIT = 1, THROTTLED_COMMIT = 2, didWarnStateUpdateForNotYetMountedComponent = null, didWarnAboutUpdateInRender = !1;
    var didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    var fakeActCallbackNode$1 = {}, firstScheduledRoot = null, lastScheduledRoot = null, didScheduleMicrotask = !1, didScheduleMicrotask_act = !1, mightHavePendingSyncWork = !1, isFlushingWork = !1, currentEventTransitionLane = 0, fakeActCallbackNode = {};
    (function() {
        for(var i = 0; i < simpleEventPluginEvents.length; i++){
            var eventName = simpleEventPluginEvents[i], domEventName = eventName.toLowerCase();
            eventName = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, "on" + eventName);
        }
        registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
        registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
        registerSimpleEvent(ANIMATION_START, "onAnimationStart");
        registerSimpleEvent("dblclick", "onDoubleClick");
        registerSimpleEvent("focusin", "onFocus");
        registerSimpleEvent("focusout", "onBlur");
        registerSimpleEvent(TRANSITION_RUN, "onTransitionRun");
        registerSimpleEvent(TRANSITION_START, "onTransitionStart");
        registerSimpleEvent(TRANSITION_CANCEL, "onTransitionCancel");
        registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
    })();
    registerDirectEvent("onMouseEnter", [
        "mouseout",
        "mouseover"
    ]);
    registerDirectEvent("onMouseLeave", [
        "mouseout",
        "mouseover"
    ]);
    registerDirectEvent("onPointerEnter", [
        "pointerout",
        "pointerover"
    ]);
    registerDirectEvent("onPointerLeave", [
        "pointerout",
        "pointerover"
    ]);
    registerTwoPhaseEvent("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
    registerTwoPhaseEvent("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
    registerTwoPhaseEvent("onBeforeInput", [
        "compositionend",
        "keypress",
        "textInput",
        "paste"
    ]);
    registerTwoPhaseEvent("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
    registerTwoPhaseEvent("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
    registerTwoPhaseEvent("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
    var mediaEventTypes = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), nonDelegatedEvents = new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(mediaEventTypes)), listeningMarker = "_reactListening" + Math.random().toString(36).slice(2), didWarnControlledToUncontrolled = !1, didWarnUncontrolledToControlled = !1, didWarnFormActionType = !1, didWarnFormActionName = !1, didWarnFormActionTarget = !1, didWarnFormActionMethod = !1, didWarnPopoverTargetObject = !1;
    var didWarnForNewBooleanPropsWithEmptyValue = {};
    var canDiffStyleForHydrationWarning = !0;
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g, NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g, xlinkNamespace = "http://www.w3.org/1999/xlink", xmlNamespace = "http://www.w3.org/XML/1998/namespace", EXPECTED_FORM_ACTION_URL = "javascript:throw new Error('React form unexpectedly submitted.')", SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning", SUSPENSE_START_DATA = "$", SUSPENSE_END_DATA = "/$", SUSPENSE_PENDING_START_DATA = "$?", SUSPENSE_FALLBACK_START_DATA = "$!", FORM_STATE_IS_MATCHING = "F!", FORM_STATE_IS_NOT_MATCHING = "F", STYLE = "style", HostContextNamespaceNone = 0, HostContextNamespaceSvg = 1, HostContextNamespaceMath = 2, eventsEnabled = null, selectionInformation = null, warnedUnknownTags = {
        dialog: !0,
        webview: !0
    }, currentPopstateTransitionEvent = null, scheduleTimeout = "function" === typeof setTimeout ? setTimeout : void 0, cancelTimeout = "function" === typeof clearTimeout ? clearTimeout : void 0, noTimeout = -1, localPromise = "function" === typeof Promise ? Promise : void 0, scheduleMicrotask = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof localPromise ? function(callback) {
        return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
    } : scheduleTimeout, NotLoaded = 0, Loaded = 1, Errored = 2, Settled = 3, Inserted = 4, preloadPropsMap = new Map(), preconnectsSet = new Set(), previousDispatcher = ReactDOMSharedInternals.d;
    ReactDOMSharedInternals.d = {
        f: function() {
            var previousWasRendering = previousDispatcher.f(), wasRendering = flushSyncWork$1();
            return previousWasRendering || wasRendering;
        },
        r: function(form) {
            var formInst = getInstanceFromNode(form);
            null !== formInst && 5 === formInst.tag && "form" === formInst.type ? requestFormReset$1(formInst) : previousDispatcher.r(form);
        },
        D: function(href) {
            previousDispatcher.D(href);
            preconnectAs("dns-prefetch", href, null);
        },
        C: function(href, crossOrigin) {
            previousDispatcher.C(href, crossOrigin);
            preconnectAs("preconnect", href, crossOrigin);
        },
        L: function(href, as, options) {
            previousDispatcher.L(href, as, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && href && as) {
                var preloadSelector = 'link[rel="preload"][as="' + escapeSelectorAttributeValueInsideDoubleQuotes(as) + '"]';
                "image" === as ? options && options.imageSrcSet ? (preloadSelector += '[imagesrcset="' + escapeSelectorAttributeValueInsideDoubleQuotes(options.imageSrcSet) + '"]', "string" === typeof options.imageSizes && (preloadSelector += '[imagesizes="' + escapeSelectorAttributeValueInsideDoubleQuotes(options.imageSizes) + '"]')) : preloadSelector += '[href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"]' : preloadSelector += '[href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"]';
                var key = preloadSelector;
                switch(as){
                    case "style":
                        key = getStyleKey(href);
                        break;
                    case "script":
                        key = getScriptKey(href);
                }
                preloadPropsMap.has(key) || (href = assign({
                    rel: "preload",
                    href: "image" === as && options && options.imageSrcSet ? void 0 : href,
                    as: as
                }, options), preloadPropsMap.set(key, href), null !== ownerDocument.querySelector(preloadSelector) || "style" === as && ownerDocument.querySelector(getStylesheetSelectorFromKey(key)) || "script" === as && ownerDocument.querySelector(getScriptSelectorFromKey(key)) || (as = ownerDocument.createElement("link"), setInitialProperties(as, "link", href), markNodeAsHoistable(as), ownerDocument.head.appendChild(as)));
            }
        },
        m: function(href, options) {
            previousDispatcher.m(href, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && href) {
                var as = options && "string" === typeof options.as ? options.as : "script", preloadSelector = 'link[rel="modulepreload"][as="' + escapeSelectorAttributeValueInsideDoubleQuotes(as) + '"][href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"]', key = preloadSelector;
                switch(as){
                    case "audioworklet":
                    case "paintworklet":
                    case "serviceworker":
                    case "sharedworker":
                    case "worker":
                    case "script":
                        key = getScriptKey(href);
                }
                if (!preloadPropsMap.has(key) && (href = assign({
                    rel: "modulepreload",
                    href: href
                }, options), preloadPropsMap.set(key, href), null === ownerDocument.querySelector(preloadSelector))) {
                    switch(as){
                        case "audioworklet":
                        case "paintworklet":
                        case "serviceworker":
                        case "sharedworker":
                        case "worker":
                        case "script":
                            if (ownerDocument.querySelector(getScriptSelectorFromKey(key))) return;
                    }
                    as = ownerDocument.createElement("link");
                    setInitialProperties(as, "link", href);
                    markNodeAsHoistable(as);
                    ownerDocument.head.appendChild(as);
                }
            }
        },
        X: function(src, options) {
            previousDispatcher.X(src, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && src) {
                var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts, key = getScriptKey(src), resource = scripts.get(key);
                resource || (resource = ownerDocument.querySelector(getScriptSelectorFromKey(key)), resource || (src = assign({
                    src: src,
                    async: !0
                }, options), (options = preloadPropsMap.get(key)) && adoptPreloadPropsForScript(src, options), resource = ownerDocument.createElement("script"), markNodeAsHoistable(resource), setInitialProperties(resource, "link", src), ownerDocument.head.appendChild(resource)), resource = {
                    type: "script",
                    instance: resource,
                    count: 1,
                    state: null
                }, scripts.set(key, resource));
            }
        },
        S: function(href, precedence, options) {
            previousDispatcher.S(href, precedence, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && href) {
                var styles = getResourcesFromRoot(ownerDocument).hoistableStyles, key = getStyleKey(href);
                precedence = precedence || "default";
                var resource = styles.get(key);
                if (!resource) {
                    var state = {
                        loading: NotLoaded,
                        preload: null
                    };
                    if (resource = ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) state.loading = Loaded | Inserted;
                    else {
                        href = assign({
                            rel: "stylesheet",
                            href: href,
                            "data-precedence": precedence
                        }, options);
                        (options = preloadPropsMap.get(key)) && adoptPreloadPropsForStylesheet(href, options);
                        var link = resource = ownerDocument.createElement("link");
                        markNodeAsHoistable(link);
                        setInitialProperties(link, "link", href);
                        link._p = new Promise(function(resolve, reject) {
                            link.onload = resolve;
                            link.onerror = reject;
                        });
                        link.addEventListener("load", function() {
                            state.loading |= Loaded;
                        });
                        link.addEventListener("error", function() {
                            state.loading |= Errored;
                        });
                        state.loading |= Inserted;
                        insertStylesheet(resource, precedence, ownerDocument);
                    }
                    resource = {
                        type: "stylesheet",
                        instance: resource,
                        count: 1,
                        state: state
                    };
                    styles.set(key, resource);
                }
            }
        },
        M: function(src, options) {
            previousDispatcher.M(src, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && src) {
                var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts, key = getScriptKey(src), resource = scripts.get(key);
                resource || (resource = ownerDocument.querySelector(getScriptSelectorFromKey(key)), resource || (src = assign({
                    src: src,
                    async: !0,
                    type: "module"
                }, options), (options = preloadPropsMap.get(key)) && adoptPreloadPropsForScript(src, options), resource = ownerDocument.createElement("script"), markNodeAsHoistable(resource), setInitialProperties(resource, "link", src), ownerDocument.head.appendChild(resource)), resource = {
                    type: "script",
                    instance: resource,
                    count: 1,
                    state: null
                }, scripts.set(key, resource));
            }
        }
    };
    var globalDocument = "undefined" === typeof document ? null : document, tagCaches = null, suspendedState = null, LAST_PRECEDENCE = null, precedencesByRoot = null, NotPendingTransition = NotPending, HostTransitionContext = {
        $$typeof: REACT_CONTEXT_TYPE,
        Provider: null,
        Consumer: null,
        _currentValue: NotPendingTransition,
        _currentValue2: NotPendingTransition,
        _threadCount: 0
    }, badgeFormat = "%c%s%c ", badgeStyle = "background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px", resetStyle = "", pad = " ", bind = Function.prototype.bind;
    var didWarnAboutNestedUpdates = !1;
    var overrideHookState = null, overrideHookStateDeletePath = null, overrideHookStateRenamePath = null, overrideProps = null, overridePropsDeletePath = null, overridePropsRenamePath = null, scheduleUpdate = null, setErrorHandler = null, setSuspenseHandler = null;
    overrideHookState = function(fiber, id, path, value) {
        id = findHook(fiber, id);
        null !== id && (path = copyWithSetImpl(id.memoizedState, path, 0, value), id.memoizedState = path, id.baseState = path, fiber.memoizedProps = assign({}, fiber.memoizedProps), path = enqueueConcurrentRenderForLane(fiber, 2), null !== path && scheduleUpdateOnFiber(path, fiber, 2));
    };
    overrideHookStateDeletePath = function(fiber, id, path) {
        id = findHook(fiber, id);
        null !== id && (path = copyWithDeleteImpl(id.memoizedState, path, 0), id.memoizedState = path, id.baseState = path, fiber.memoizedProps = assign({}, fiber.memoizedProps), path = enqueueConcurrentRenderForLane(fiber, 2), null !== path && scheduleUpdateOnFiber(path, fiber, 2));
    };
    overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
        id = findHook(fiber, id);
        null !== id && (oldPath = copyWithRename(id.memoizedState, oldPath, newPath), id.memoizedState = oldPath, id.baseState = oldPath, fiber.memoizedProps = assign({}, fiber.memoizedProps), oldPath = enqueueConcurrentRenderForLane(fiber, 2), null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2));
    };
    overrideProps = function(fiber, path, value) {
        fiber.pendingProps = copyWithSetImpl(fiber.memoizedProps, path, 0, value);
        fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
        path = enqueueConcurrentRenderForLane(fiber, 2);
        null !== path && scheduleUpdateOnFiber(path, fiber, 2);
    };
    overridePropsDeletePath = function(fiber, path) {
        fiber.pendingProps = copyWithDeleteImpl(fiber.memoizedProps, path, 0);
        fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
        path = enqueueConcurrentRenderForLane(fiber, 2);
        null !== path && scheduleUpdateOnFiber(path, fiber, 2);
    };
    overridePropsRenamePath = function(fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
        fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
        oldPath = enqueueConcurrentRenderForLane(fiber, 2);
        null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2);
    };
    scheduleUpdate = function(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, 2);
        null !== root && scheduleUpdateOnFiber(root, fiber, 2);
    };
    setErrorHandler = function(newShouldErrorImpl) {
        shouldErrorImpl = newShouldErrorImpl;
    };
    setSuspenseHandler = function(newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
    };
    var _enabled = !0, return_targetInst = null, hasScheduledReplayAttempt = !1, queuedFocus = null, queuedDrag = null, queuedMouse = null, queuedPointers = new Map(), queuedPointerCaptures = new Map(), queuedExplicitHydrationTargets = [], discreteReplayableEvents = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" "), lastScheduledReplayQueue = null;
    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children, JSCompiler_OptimizeArgumentsArray_p2) {
        var root = this._internalRoot;
        if (null === root) throw Error("Cannot update an unmounted root.");
        "function" === typeof JSCompiler_OptimizeArgumentsArray_p2 ? console.error("does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : isValidContainer(JSCompiler_OptimizeArgumentsArray_p2) ? console.error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : "undefined" !== typeof JSCompiler_OptimizeArgumentsArray_p2 && console.error("You passed a second argument to root.render(...) but it only accepts one argument.");
        JSCompiler_OptimizeArgumentsArray_p2 = root.current;
        var lane = requestUpdateLane(JSCompiler_OptimizeArgumentsArray_p2);
        updateContainerImpl(JSCompiler_OptimizeArgumentsArray_p2, lane, children, root, null, null);
    };
    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function(JSCompiler_OptimizeArgumentsArray_p3) {
        "function" === typeof JSCompiler_OptimizeArgumentsArray_p3 && console.error("does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        JSCompiler_OptimizeArgumentsArray_p3 = this._internalRoot;
        if (null !== JSCompiler_OptimizeArgumentsArray_p3) {
            this._internalRoot = null;
            var container = JSCompiler_OptimizeArgumentsArray_p3.containerInfo;
            (executionContext & (RenderContext | CommitContext)) !== NoContext && console.error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
            updateContainerSync(null, JSCompiler_OptimizeArgumentsArray_p3, null, null);
            flushSyncWork$1();
            container[internalContainerInstanceKey] = null;
        }
    };
    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function(target) {
        if (target) {
            var updatePriority = resolveUpdatePriority();
            target = {
                blockedOn: null,
                target: target,
                priority: updatePriority
            };
            for(var i = 0; i < queuedExplicitHydrationTargets.length && 0 !== updatePriority && updatePriority < queuedExplicitHydrationTargets[i].priority; i++);
            queuedExplicitHydrationTargets.splice(i, 0, target);
            0 === i && attemptExplicitHydrationTarget(target);
        }
    };
    (function() {
        var isomorphicReactPackageVersion = React.version;
        if ("19.0.0" !== isomorphicReactPackageVersion) throw Error('Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' + (isomorphicReactPackageVersion + "\n  - react-dom:  19.0.0\nLearn more: https://react.dev/warnings/version-mismatch"));
    })();
    "function" === typeof Map && null != Map.prototype && "function" === typeof Map.prototype.forEach && "function" === typeof Set && null != Set.prototype && "function" === typeof Set.prototype.clear && "function" === typeof Set.prototype.forEach || console.error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://react.dev/link/react-polyfills");
    ReactDOMSharedInternals.findDOMNode = function(componentOrElement) {
        var fiber = componentOrElement._reactInternals;
        if (void 0 === fiber) {
            if ("function" === typeof componentOrElement.render) throw Error("Unable to find node on an unmounted component.");
            componentOrElement = Object.keys(componentOrElement).join(",");
            throw Error("Argument appears to not be a ReactComponent. Keys: " + componentOrElement);
        }
        componentOrElement = findCurrentFiberUsingSlowPath(fiber);
        componentOrElement = null !== componentOrElement ? findCurrentHostFiberImpl(componentOrElement) : null;
        componentOrElement = null === componentOrElement ? null : componentOrElement.stateNode;
        return componentOrElement;
    };
    if (!function() {
        var internals = {
            bundleType: 1,
            version: "19.0.0",
            rendererPackageName: "react-dom",
            currentDispatcherRef: ReactSharedInternals,
            findFiberByHostInstance: getClosestInstanceFromNode,
            reconcilerVersion: "19.0.0"
        };
        internals.overrideHookState = overrideHookState;
        internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
        internals.overrideHookStateRenamePath = overrideHookStateRenamePath;
        internals.overrideProps = overrideProps;
        internals.overridePropsDeletePath = overridePropsDeletePath;
        internals.overridePropsRenamePath = overridePropsRenamePath;
        internals.scheduleUpdate = scheduleUpdate;
        internals.setErrorHandler = setErrorHandler;
        internals.setSuspenseHandler = setSuspenseHandler;
        internals.scheduleRefresh = scheduleRefresh;
        internals.scheduleRoot = scheduleRoot;
        internals.setRefreshHandler = setRefreshHandler;
        internals.getCurrentFiber = getCurrentFiberForDevTools;
        internals.getLaneLabelMap = getLaneLabelMap;
        internals.injectProfilingHooks = injectProfilingHooks;
        return injectInternals(internals);
    }() && canUseDOM && window.top === window.self && (-1 < navigator.userAgent.indexOf("Chrome") && -1 === navigator.userAgent.indexOf("Edge") || -1 < navigator.userAgent.indexOf("Firefox"))) {
        var protocol = window.location.protocol;
        /^(https?|file):$/.test(protocol) && console.info("%cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools" + ("file:" === protocol ? "\nYou might need to use a local HTTP server (instead of file://): https://react.dev/link/react-devtools-faq" : ""), "font-weight:bold");
    }
    exports.createRoot = function(container, options) {
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        var isStrictMode = !1, identifierPrefix = "", onUncaughtError = defaultOnUncaughtError, onCaughtError = defaultOnCaughtError, onRecoverableError = defaultOnRecoverableError, transitionCallbacks = null;
        null !== options && void 0 !== options && (options.hydrate ? console.warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : "object" === typeof options && null !== options && options.$$typeof === REACT_ELEMENT_TYPE && console.error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);"), !0 === options.unstable_strictMode && (isStrictMode = !0), void 0 !== options.identifierPrefix && (identifierPrefix = options.identifierPrefix), void 0 !== options.onUncaughtError && (onUncaughtError = options.onUncaughtError), void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError), void 0 !== options.onRecoverableError && (onRecoverableError = options.onRecoverableError), void 0 !== options.unstable_transitionCallbacks && (transitionCallbacks = options.unstable_transitionCallbacks));
        options = createFiberRoot(container, 1, !1, null, null, isStrictMode, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, transitionCallbacks, null);
        container[internalContainerInstanceKey] = options.current;
        listenToAllSupportedEvents(8 === container.nodeType ? container.parentNode : container);
        return new ReactDOMRoot(options);
    };
    exports.hydrateRoot = function(container, initialChildren, options) {
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        void 0 === initialChildren && console.error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
        var isStrictMode = !1, identifierPrefix = "", onUncaughtError = defaultOnUncaughtError, onCaughtError = defaultOnCaughtError, onRecoverableError = defaultOnRecoverableError, transitionCallbacks = null, formState = null;
        null !== options && void 0 !== options && (!0 === options.unstable_strictMode && (isStrictMode = !0), void 0 !== options.identifierPrefix && (identifierPrefix = options.identifierPrefix), void 0 !== options.onUncaughtError && (onUncaughtError = options.onUncaughtError), void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError), void 0 !== options.onRecoverableError && (onRecoverableError = options.onRecoverableError), void 0 !== options.unstable_transitionCallbacks && (transitionCallbacks = options.unstable_transitionCallbacks), void 0 !== options.formState && (formState = options.formState));
        initialChildren = createFiberRoot(container, 1, !0, initialChildren, null != options ? options : null, isStrictMode, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, transitionCallbacks, formState);
        initialChildren.context = getContextForSubtree(null);
        options = initialChildren.current;
        isStrictMode = requestUpdateLane(options);
        identifierPrefix = createUpdate(isStrictMode);
        identifierPrefix.callback = null;
        enqueueUpdate(options, identifierPrefix, isStrictMode);
        initialChildren.current.lanes = isStrictMode;
        markRootUpdated$1(initialChildren, isStrictMode);
        ensureRootIsScheduled(initialChildren);
        container[internalContainerInstanceKey] = initialChildren.current;
        listenToAllSupportedEvents(container);
        return new ReactDOMHydrationRoot(initialChildren);
    };
    exports.version = "19.0.0";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{"c31f9b99c1e288cf":"4OQ2m","c4c4bc2113e5c77f":"jMk1U","772d609564cfd8f6":"i4X7T"}],"4OQ2m":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ef03b89c8fe2794e");

},{"ef03b89c8fe2794e":"j5hep"}],"j5hep":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function performWorkUntilDeadline() {
        if (isMessageLoopRunning) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasMoreWork = !0;
            try {
                a: {
                    isHostCallbackScheduled = !1;
                    isHostTimeoutScheduled && (isHostTimeoutScheduled = !1, localClearTimeout(taskTimeoutID), taskTimeoutID = -1);
                    isPerformingWork = !0;
                    var previousPriorityLevel = currentPriorityLevel;
                    try {
                        b: {
                            advanceTimers(currentTime);
                            for(currentTask = peek(taskQueue); null !== currentTask && !(currentTask.expirationTime > currentTime && shouldYieldToHost());){
                                var callback = currentTask.callback;
                                if ("function" === typeof callback) {
                                    currentTask.callback = null;
                                    currentPriorityLevel = currentTask.priorityLevel;
                                    var continuationCallback = callback(currentTask.expirationTime <= currentTime);
                                    currentTime = exports.unstable_now();
                                    if ("function" === typeof continuationCallback) {
                                        currentTask.callback = continuationCallback;
                                        advanceTimers(currentTime);
                                        hasMoreWork = !0;
                                        break b;
                                    }
                                    currentTask === peek(taskQueue) && pop(taskQueue);
                                    advanceTimers(currentTime);
                                } else pop(taskQueue);
                                currentTask = peek(taskQueue);
                            }
                            if (null !== currentTask) hasMoreWork = !0;
                            else {
                                var firstTimer = peek(timerQueue);
                                null !== firstTimer && requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
                                hasMoreWork = !1;
                            }
                        }
                        break a;
                    } finally{
                        currentTask = null, currentPriorityLevel = previousPriorityLevel, isPerformingWork = !1;
                    }
                    hasMoreWork = void 0;
                }
            } finally{
                hasMoreWork ? schedulePerformWorkUntilDeadline() : isMessageLoopRunning = !1;
            }
        }
    }
    function push(heap, node) {
        var index = heap.length;
        heap.push(node);
        a: for(; 0 < index;){
            var parentIndex = index - 1 >>> 1, parent = heap[parentIndex];
            if (0 < compare(parent, node)) heap[parentIndex] = node, heap[index] = parent, index = parentIndex;
            else break a;
        }
    }
    function peek(heap) {
        return 0 === heap.length ? null : heap[0];
    }
    function pop(heap) {
        if (0 === heap.length) return null;
        var first = heap[0], last = heap.pop();
        if (last !== first) {
            heap[0] = last;
            a: for(var index = 0, length = heap.length, halfLength = length >>> 1; index < halfLength;){
                var leftIndex = 2 * (index + 1) - 1, left = heap[leftIndex], rightIndex = leftIndex + 1, right = heap[rightIndex];
                if (0 > compare(left, last)) rightIndex < length && 0 > compare(right, left) ? (heap[index] = right, heap[rightIndex] = last, index = rightIndex) : (heap[index] = left, heap[leftIndex] = last, index = leftIndex);
                else if (rightIndex < length && 0 > compare(right, last)) heap[index] = right, heap[rightIndex] = last, index = rightIndex;
                else break a;
            }
        }
        return first;
    }
    function compare(a, b) {
        var diff = a.sortIndex - b.sortIndex;
        return 0 !== diff ? diff : a.id - b.id;
    }
    function advanceTimers(currentTime) {
        for(var timer = peek(timerQueue); null !== timer;){
            if (null === timer.callback) pop(timerQueue);
            else if (timer.startTime <= currentTime) pop(timerQueue), timer.sortIndex = timer.expirationTime, push(taskQueue, timer);
            else break;
            timer = peek(timerQueue);
        }
    }
    function handleTimeout(currentTime) {
        isHostTimeoutScheduled = !1;
        advanceTimers(currentTime);
        if (!isHostCallbackScheduled) {
            if (null !== peek(taskQueue)) isHostCallbackScheduled = !0, requestHostCallback();
            else {
                var firstTimer = peek(timerQueue);
                null !== firstTimer && requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
        }
    }
    function shouldYieldToHost() {
        return exports.unstable_now() - startTime < frameInterval ? !1 : !0;
    }
    function requestHostCallback() {
        isMessageLoopRunning || (isMessageLoopRunning = !0, schedulePerformWorkUntilDeadline());
    }
    function requestHostTimeout(callback, ms) {
        taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
        }, ms);
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    exports.unstable_now = void 0;
    if ("object" === typeof performance && "function" === typeof performance.now) {
        var localPerformance = performance;
        exports.unstable_now = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date, initialTime = localDate.now();
        exports.unstable_now = function() {
            return localDate.now() - initialTime;
        };
    }
    var taskQueue = [], timerQueue = [], taskIdCounter = 1, currentTask = null, currentPriorityLevel = 3, isPerformingWork = !1, isHostCallbackScheduled = !1, isHostTimeoutScheduled = !1, localSetTimeout = "function" === typeof setTimeout ? setTimeout : null, localClearTimeout = "function" === typeof clearTimeout ? clearTimeout : null, localSetImmediate = "undefined" !== typeof setImmediate ? setImmediate : null, isMessageLoopRunning = !1, taskTimeoutID = -1, frameInterval = 5, startTime = -1;
    if ("function" === typeof localSetImmediate) var schedulePerformWorkUntilDeadline = function() {
        localSetImmediate(performWorkUntilDeadline);
    };
    else if ("undefined" !== typeof MessageChannel) {
        var channel = new MessageChannel(), port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline;
        schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
        };
    } else schedulePerformWorkUntilDeadline = function() {
        localSetTimeout(performWorkUntilDeadline, 0);
    };
    exports.unstable_IdlePriority = 5;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_LowPriority = 4;
    exports.unstable_NormalPriority = 3;
    exports.unstable_Profiling = null;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_cancelCallback = function(task) {
        task.callback = null;
    };
    exports.unstable_continueExecution = function() {
        isHostCallbackScheduled || isPerformingWork || (isHostCallbackScheduled = !0, requestHostCallback());
    };
    exports.unstable_forceFrameRate = function(fps) {
        0 > fps || 125 < fps ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5;
    };
    exports.unstable_getCurrentPriorityLevel = function() {
        return currentPriorityLevel;
    };
    exports.unstable_getFirstCallbackNode = function() {
        return peek(taskQueue);
    };
    exports.unstable_next = function(eventHandler) {
        switch(currentPriorityLevel){
            case 1:
            case 2:
            case 3:
                var priorityLevel = 3;
                break;
            default:
                priorityLevel = currentPriorityLevel;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    };
    exports.unstable_pauseExecution = function() {};
    exports.unstable_requestPaint = function() {};
    exports.unstable_runWithPriority = function(priorityLevel, eventHandler) {
        switch(priorityLevel){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                priorityLevel = 3;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    };
    exports.unstable_scheduleCallback = function(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now();
        "object" === typeof options && null !== options ? (options = options.delay, options = "number" === typeof options && 0 < options ? currentTime + options : currentTime) : options = currentTime;
        switch(priorityLevel){
            case 1:
                var timeout = -1;
                break;
            case 2:
                timeout = 250;
                break;
            case 5:
                timeout = 1073741823;
                break;
            case 4:
                timeout = 1e4;
                break;
            default:
                timeout = 5e3;
        }
        timeout = options + timeout;
        priorityLevel = {
            id: taskIdCounter++,
            callback: callback,
            priorityLevel: priorityLevel,
            startTime: options,
            expirationTime: timeout,
            sortIndex: -1
        };
        options > currentTime ? (priorityLevel.sortIndex = options, push(timerQueue, priorityLevel), null === peek(taskQueue) && priorityLevel === peek(timerQueue) && (isHostTimeoutScheduled ? (localClearTimeout(taskTimeoutID), taskTimeoutID = -1) : isHostTimeoutScheduled = !0, requestHostTimeout(handleTimeout, options - currentTime))) : (priorityLevel.sortIndex = timeout, push(taskQueue, priorityLevel), isHostCallbackScheduled || isPerformingWork || (isHostCallbackScheduled = !0, requestHostCallback()));
        return priorityLevel;
    };
    exports.unstable_shouldYield = shouldYieldToHost;
    exports.unstable_wrapCallback = function(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
                return callback.apply(this, arguments);
            } finally{
                currentPriorityLevel = previousPriorityLevel;
            }
        };
    };
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{}],"i4X7T":[function(require,module,exports,__globalThis) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require("b0f0e6b9e8349dac");

},{"b0f0e6b9e8349dac":"cLd8p"}],"cLd8p":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function noop() {}
    function testStringCoercion(value) {
        return "" + value;
    }
    function createPortal$1(children, containerInfo, implementation) {
        var key = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
        try {
            testStringCoercion(key);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        JSCompiler_inline_result && (console.error("The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", "function" === typeof Symbol && Symbol.toStringTag && key[Symbol.toStringTag] || key.constructor.name || "Object"), testStringCoercion(key));
        return {
            $$typeof: REACT_PORTAL_TYPE,
            key: null == key ? null : "" + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }
    function getCrossOriginStringAs(as, input) {
        if ("font" === as) return "";
        if ("string" === typeof input) return "use-credentials" === input ? input : "";
    }
    function getValueDescriptorExpectingObjectForWarning(thing) {
        return null === thing ? "`null`" : void 0 === thing ? "`undefined`" : "" === thing ? "an empty string" : 'something with type "' + typeof thing + '"';
    }
    function getValueDescriptorExpectingEnumForWarning(thing) {
        return null === thing ? "`null`" : void 0 === thing ? "`undefined`" : "" === thing ? "an empty string" : "string" === typeof thing ? JSON.stringify(thing) : "number" === typeof thing ? "`" + thing + "`" : 'something with type "' + typeof thing + '"';
    }
    function resolveDispatcher() {
        var dispatcher = ReactSharedInternals.H;
        null === dispatcher && console.error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
        return dispatcher;
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var React = require("6f0162e9ab224cd4"), Internals = {
        d: {
            f: noop,
            r: function() {
                throw Error("Invalid form element. requestFormReset must be passed a form that was rendered by React.");
            },
            D: noop,
            C: noop,
            L: noop,
            m: noop,
            X: noop,
            S: noop,
            M: noop
        },
        p: 0,
        findDOMNode: null
    }, REACT_PORTAL_TYPE = Symbol.for("react.portal"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    "function" === typeof Map && null != Map.prototype && "function" === typeof Map.prototype.forEach && "function" === typeof Set && null != Set.prototype && "function" === typeof Set.prototype.clear && "function" === typeof Set.prototype.forEach || console.error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    exports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = Internals;
    exports.createPortal = function(children, container) {
        var key = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
        if (!container || 1 !== container.nodeType && 9 !== container.nodeType && 11 !== container.nodeType) throw Error("Target container is not a DOM element.");
        return createPortal$1(children, container, null, key);
    };
    exports.flushSync = function(fn) {
        var previousTransition = ReactSharedInternals.T, previousUpdatePriority = Internals.p;
        try {
            if (ReactSharedInternals.T = null, Internals.p = 2, fn) return fn();
        } finally{
            ReactSharedInternals.T = previousTransition, Internals.p = previousUpdatePriority, Internals.d.f() && console.error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
        }
    };
    exports.preconnect = function(href, options) {
        "string" === typeof href && href ? null != options && "object" !== typeof options ? console.error("ReactDOM.preconnect(): Expected the `options` argument (second) to be an object but encountered %s instead. The only supported option at this time is `crossOrigin` which accepts a string.", getValueDescriptorExpectingEnumForWarning(options)) : null != options && "string" !== typeof options.crossOrigin && console.error("ReactDOM.preconnect(): Expected the `crossOrigin` option (second argument) to be a string but encountered %s instead. Try removing this option or passing a string value instead.", getValueDescriptorExpectingObjectForWarning(options.crossOrigin)) : console.error("ReactDOM.preconnect(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.", getValueDescriptorExpectingObjectForWarning(href));
        "string" === typeof href && (options ? (options = options.crossOrigin, options = "string" === typeof options ? "use-credentials" === options ? options : "" : void 0) : options = null, Internals.d.C(href, options));
    };
    exports.prefetchDNS = function(href) {
        if ("string" !== typeof href || !href) console.error("ReactDOM.prefetchDNS(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.", getValueDescriptorExpectingObjectForWarning(href));
        else if (1 < arguments.length) {
            var options = arguments[1];
            "object" === typeof options && options.hasOwnProperty("crossOrigin") ? console.error("ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. It looks like the you are attempting to set a crossOrigin property for this DNS lookup hint. Browsers do not perform DNS queries using CORS and setting this attribute on the resource hint has no effect. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.", getValueDescriptorExpectingEnumForWarning(options)) : console.error("ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.", getValueDescriptorExpectingEnumForWarning(options));
        }
        "string" === typeof href && Internals.d.D(href);
    };
    exports.preinit = function(href, options) {
        "string" === typeof href && href ? null == options || "object" !== typeof options ? console.error("ReactDOM.preinit(): Expected the `options` argument (second) to be an object with an `as` property describing the type of resource to be preinitialized but encountered %s instead.", getValueDescriptorExpectingEnumForWarning(options)) : "style" !== options.as && "script" !== options.as && console.error('ReactDOM.preinit(): Expected the `as` property in the `options` argument (second) to contain a valid value describing the type of resource to be preinitialized but encountered %s instead. Valid values for `as` are "style" and "script".', getValueDescriptorExpectingEnumForWarning(options.as)) : console.error("ReactDOM.preinit(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.", getValueDescriptorExpectingObjectForWarning(href));
        if ("string" === typeof href && options && "string" === typeof options.as) {
            var as = options.as, crossOrigin = getCrossOriginStringAs(as, options.crossOrigin), integrity = "string" === typeof options.integrity ? options.integrity : void 0, fetchPriority = "string" === typeof options.fetchPriority ? options.fetchPriority : void 0;
            "style" === as ? Internals.d.S(href, "string" === typeof options.precedence ? options.precedence : void 0, {
                crossOrigin: crossOrigin,
                integrity: integrity,
                fetchPriority: fetchPriority
            }) : "script" === as && Internals.d.X(href, {
                crossOrigin: crossOrigin,
                integrity: integrity,
                fetchPriority: fetchPriority,
                nonce: "string" === typeof options.nonce ? options.nonce : void 0
            });
        }
    };
    exports.preinitModule = function(href, options) {
        var encountered = "";
        "string" === typeof href && href || (encountered += " The `href` argument encountered was " + getValueDescriptorExpectingObjectForWarning(href) + ".");
        void 0 !== options && "object" !== typeof options ? encountered += " The `options` argument encountered was " + getValueDescriptorExpectingObjectForWarning(options) + "." : options && "as" in options && "script" !== options.as && (encountered += " The `as` option encountered was " + getValueDescriptorExpectingEnumForWarning(options.as) + ".");
        if (encountered) console.error("ReactDOM.preinitModule(): Expected up to two arguments, a non-empty `href` string and, optionally, an `options` object with a valid `as` property.%s", encountered);
        else switch(encountered = options && "string" === typeof options.as ? options.as : "script", encountered){
            case "script":
                break;
            default:
                encountered = getValueDescriptorExpectingEnumForWarning(encountered), console.error('ReactDOM.preinitModule(): Currently the only supported "as" type for this function is "script" but received "%s" instead. This warning was generated for `href` "%s". In the future other module types will be supported, aligning with the import-attributes proposal. Learn more here: (https://github.com/tc39/proposal-import-attributes)', encountered, href);
        }
        if ("string" === typeof href) {
            if ("object" === typeof options && null !== options) {
                if (null == options.as || "script" === options.as) encountered = getCrossOriginStringAs(options.as, options.crossOrigin), Internals.d.M(href, {
                    crossOrigin: encountered,
                    integrity: "string" === typeof options.integrity ? options.integrity : void 0,
                    nonce: "string" === typeof options.nonce ? options.nonce : void 0
                });
            } else null == options && Internals.d.M(href);
        }
    };
    exports.preload = function(href, options) {
        var encountered = "";
        "string" === typeof href && href || (encountered += " The `href` argument encountered was " + getValueDescriptorExpectingObjectForWarning(href) + ".");
        null == options || "object" !== typeof options ? encountered += " The `options` argument encountered was " + getValueDescriptorExpectingObjectForWarning(options) + "." : "string" === typeof options.as && options.as || (encountered += " The `as` option encountered was " + getValueDescriptorExpectingObjectForWarning(options.as) + ".");
        encountered && console.error('ReactDOM.preload(): Expected two arguments, a non-empty `href` string and an `options` object with an `as` property valid for a `<link rel="preload" as="..." />` tag.%s', encountered);
        if ("string" === typeof href && "object" === typeof options && null !== options && "string" === typeof options.as) {
            encountered = options.as;
            var crossOrigin = getCrossOriginStringAs(encountered, options.crossOrigin);
            Internals.d.L(href, encountered, {
                crossOrigin: crossOrigin,
                integrity: "string" === typeof options.integrity ? options.integrity : void 0,
                nonce: "string" === typeof options.nonce ? options.nonce : void 0,
                type: "string" === typeof options.type ? options.type : void 0,
                fetchPriority: "string" === typeof options.fetchPriority ? options.fetchPriority : void 0,
                referrerPolicy: "string" === typeof options.referrerPolicy ? options.referrerPolicy : void 0,
                imageSrcSet: "string" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,
                imageSizes: "string" === typeof options.imageSizes ? options.imageSizes : void 0,
                media: "string" === typeof options.media ? options.media : void 0
            });
        }
    };
    exports.preloadModule = function(href, options) {
        var encountered = "";
        "string" === typeof href && href || (encountered += " The `href` argument encountered was " + getValueDescriptorExpectingObjectForWarning(href) + ".");
        void 0 !== options && "object" !== typeof options ? encountered += " The `options` argument encountered was " + getValueDescriptorExpectingObjectForWarning(options) + "." : options && "as" in options && "string" !== typeof options.as && (encountered += " The `as` option encountered was " + getValueDescriptorExpectingObjectForWarning(options.as) + ".");
        encountered && console.error('ReactDOM.preloadModule(): Expected two arguments, a non-empty `href` string and, optionally, an `options` object with an `as` property valid for a `<link rel="modulepreload" as="..." />` tag.%s', encountered);
        "string" === typeof href && (options ? (encountered = getCrossOriginStringAs(options.as, options.crossOrigin), Internals.d.m(href, {
            as: "string" === typeof options.as && "script" !== options.as ? options.as : void 0,
            crossOrigin: encountered,
            integrity: "string" === typeof options.integrity ? options.integrity : void 0
        })) : Internals.d.m(href));
    };
    exports.requestFormReset = function(form) {
        Internals.d.r(form);
    };
    exports.unstable_batchedUpdates = function(fn, a) {
        return fn(a);
    };
    exports.useFormState = function(action, initialState, permalink) {
        return resolveDispatcher().useFormState(action, initialState, permalink);
    };
    exports.useFormStatus = function() {
        return resolveDispatcher().useHostTransitionStatus();
    };
    exports.version = "19.0.0";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{"6f0162e9ab224cd4":"jMk1U"}],"bhJkM":[function() {},{}],"hh6uc":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$4089 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$4089.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$4089.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _client = require("react-dom/client");
var _clientDefault = parcelHelpers.interopDefault(_client);
var _login = require("./components/Authentication/Login");
var _loginDefault = parcelHelpers.interopDefault(_login);
var _signup = require("./components/Authentication/Signup");
var _signupDefault = parcelHelpers.interopDefault(_signup);
var _dashboard = require("./components/Home/Dashboard");
var _dashboardDefault = parcelHelpers.interopDefault(_dashboard);
var _profile = require("./components/Authentication/Profile");
var _profileDefault = parcelHelpers.interopDefault(_profile);
var _reactRedux = require("react-redux");
var _appStore = require("./store/appStore");
var _appStoreDefault = parcelHelpers.interopDefault(_appStore);
var _reactRouter = require("react-router");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactCookie = require("react-cookie");
var _addCar = require("./components/Car/AddCar");
var _addCarDefault = parcelHelpers.interopDefault(_addCar);
var _navbar = require("./components/Navbar/Navbar");
var _navbarDefault = parcelHelpers.interopDefault(_navbar);
var _authSlice = require("./store/authSlice");
var _carDetails = require("./components/Car/CarDetails");
var _carDetailsDefault = parcelHelpers.interopDefault(_carDetails);
var _s = $RefreshSig$();
const AppLayout = ()=>{
    _s();
    const dispatch = (0, _reactRedux.useDispatch)();
    (0, _react.useEffect)(()=>{
        const storedUser = JSON.parse(localStorage.getItem('user'));
        console.log(storedUser);
        if (storedUser) dispatch((0, _authSlice.setUser)({
            name: storedUser.name,
            email: storedUser.email
        }));
    }, []);
    const isAuthPage = location.pathname === '/login' || location.pathname === '/register';
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "app",
        children: [
            !isAuthPage && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _navbarDefault.default), {}, void 0, false, {
                fileName: "src/App.js",
                lineNumber: 50,
                columnNumber: 23
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Outlet), {}, void 0, false, {
                fileName: "src/App.js",
                lineNumber: 51,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/App.js",
        lineNumber: 49,
        columnNumber: 5
    }, undefined);
};
_s(AppLayout, "rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=", false, function() {
    return [
        (0, _reactRedux.useDispatch)
    ];
});
_c = AppLayout;
const appRouter = (0, _reactRouter.createBrowserRouter)([
    {
        path: "/",
        element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(AppLayout, {}, void 0, false, {
            fileName: "src/App.js",
            lineNumber: 61,
            columnNumber: 14
        }, undefined),
        children: [
            {
                path: "/",
                element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _dashboardDefault.default), {}, void 0, false, {
                    fileName: "src/App.js",
                    lineNumber: 66,
                    columnNumber: 18
                }, undefined)
            },
            {
                path: "/profile",
                element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _profileDefault.default), {}, void 0, false, {
                    fileName: "src/App.js",
                    lineNumber: 74,
                    columnNumber: 18
                }, undefined)
            },
            {
                path: "/addCar",
                element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _addCarDefault.default), {}, void 0, false, {
                    fileName: "src/App.js",
                    lineNumber: 78,
                    columnNumber: 18
                }, undefined)
            },
            {
                path: "/car/:id",
                element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _carDetailsDefault.default), {}, void 0, false, {
                    fileName: "src/App.js",
                    lineNumber: 82,
                    columnNumber: 18
                }, undefined)
            },
            {
                path: "/login",
                element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _loginDefault.default), {}, void 0, false, {
                    fileName: "src/App.js",
                    lineNumber: 86,
                    columnNumber: 18
                }, undefined)
            },
            {
                path: "/register",
                element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _signupDefault.default), {}, void 0, false, {
                    fileName: "src/App.js",
                    lineNumber: 90,
                    columnNumber: 18
                }, undefined)
            }
        ]
    }
]);
const App = ()=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRedux.Provider), {
        store: (0, _appStoreDefault.default),
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.RouterProvider), {
            router: appRouter
        }, void 0, false, {
            fileName: "src/App.js",
            lineNumber: 108,
            columnNumber: 5
        }, undefined)
    }, void 0, false, {
        fileName: "src/App.js",
        lineNumber: 107,
        columnNumber: 5
    }, undefined);
};
_c1 = App;
exports.default = App;
var _c, _c1;
$RefreshReg$(_c, "AppLayout");
$RefreshReg$(_c1, "App");

  $parcel$ReactRefreshHelpers$4089.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-dom/client":"hrvwu","./components/Authentication/Login":"bTtAw","./components/Authentication/Signup":"4eCZY","./components/Home/Dashboard":"kju1t","./components/Authentication/Profile":"lodru","react-redux":"hbNxT","./store/appStore":"9I1ve","react-router":"2jawN","axios":"kooH4","react-cookie":"59JzK","./components/Car/AddCar":"fUJBo","./components/Navbar/Navbar":"8vx9L","./components/Car/CarDetails":"5kXS5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi","./store/authSlice":"9kBex"}],"bTtAw":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$3772 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$3772.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$3772.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactRedux = require("react-redux");
var _reactRouter = require("react-router");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactCookie = require("react-cookie");
var _authSlice = require("../../store/authSlice");
var _s = $RefreshSig$();
const Login = ()=>{
    _s();
    const [email, setEmail] = (0, _react.useState)("");
    const [password, setPassword] = (0, _react.useState)("");
    const [error, setError] = (0, _react.useState)("");
    const [cookie, setCookie] = (0, _reactCookie.useCookies)([
        'accessToken'
    ]);
    const dispatch = (0, _reactRedux.useDispatch)();
    const navigate = (0, _reactRouter.useNavigate)();
    const handleLogin = async (e)=>{
        e.preventDefault();
        setError('');
        try {
            const response = await (0, _axiosDefault.default).post('http://localhost:5000/user/login', {
                email,
                password
            }, {
                withCredentials: true
            }, {
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            if (response.status != 200) {
                const errorData = await response.json();
                setError(errorData.message || 'Login Failed');
                return;
            }
            const data = await response.data;
            setCookie('accessToken', data.accessToken, {
                path: '/',
                secure: true,
                sameSite: 'strict',
                maxAge: 259200 // expires in 1 hour
            });
            localStorage.setItem('user', data.user.name);
            localStorage.setItem('token', data.accessToken);
            dispatch((0, _authSlice.setUser)({
                name: data.user.name,
                email: data.user.email
            }));
            navigate("/");
        } catch (error) {
            console.log(error);
            setError(error.message || 'An Error Occurred');
        }
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "flex min-h-full flex-col justify-center px-6 py-12 lg:px-8",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "sm:mx-auto sm:w-full sm:max-w-sm",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                        className: "mx-auto h-10 w-auto",
                        src: "https://tailwindcss.com/plus-assets/img/logos/mark.svg?color=indigo&shade=600",
                        alt: "Your Company"
                    }, void 0, false, {
                        fileName: "src/components/Authentication/Login.js",
                        lineNumber: 65,
                        columnNumber: 7
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h2", {
                        className: "mt-10 text-center text-2xl/9 font-bold tracking-tight text-gray-900",
                        children: "Sign in to your account"
                    }, void 0, false, {
                        fileName: "src/components/Authentication/Login.js",
                        lineNumber: 66,
                        columnNumber: 7
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/components/Authentication/Login.js",
                lineNumber: 64,
                columnNumber: 5
            }, undefined),
            error && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                className: "text-red-500 mb-4 text-center",
                children: error
            }, void 0, false, {
                fileName: "src/components/Authentication/Login.js",
                lineNumber: 68,
                columnNumber: 15
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "mt-10 sm:mx-auto sm:w-full sm:max-w-sm",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("form", {
                        className: "space-y-6",
                        onSubmit: handleLogin,
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                        htmlFor: "email",
                                        className: "block text-sm/6 font-medium text-gray-900",
                                        children: "Email address"
                                    }, void 0, false, {
                                        fileName: "src/components/Authentication/Login.js",
                                        lineNumber: 72,
                                        columnNumber: 11
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "mt-2",
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "email",
                                            name: "email",
                                            id: "email",
                                            autoComplete: "email",
                                            placeholder: "Email",
                                            value: email,
                                            onChange: (e)=>setEmail(e.target.value),
                                            required: true,
                                            className: "block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6"
                                        }, void 0, false, {
                                            fileName: "src/components/Authentication/Login.js",
                                            lineNumber: 74,
                                            columnNumber: 13
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/components/Authentication/Login.js",
                                        lineNumber: 73,
                                        columnNumber: 11
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/Authentication/Login.js",
                                lineNumber: 71,
                                columnNumber: 9
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "flex items-center justify-between",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                                htmlFor: "password",
                                                className: "block text-sm/6 font-medium text-gray-900",
                                                children: "Password"
                                            }, void 0, false, {
                                                fileName: "src/components/Authentication/Login.js",
                                                lineNumber: 88,
                                                columnNumber: 13
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "text-sm",
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("a", {
                                                    href: "#",
                                                    className: "font-semibold text-indigo-600 hover:text-indigo-500",
                                                    children: "Forgot password?"
                                                }, void 0, false, {
                                                    fileName: "src/components/Authentication/Login.js",
                                                    lineNumber: 90,
                                                    columnNumber: 15
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/components/Authentication/Login.js",
                                                lineNumber: 89,
                                                columnNumber: 13
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/components/Authentication/Login.js",
                                        lineNumber: 87,
                                        columnNumber: 11
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "mt-2",
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "password",
                                            name: "Password",
                                            id: "password",
                                            placeholder: "Password",
                                            value: password,
                                            onChange: (e)=>setPassword(e.target.value),
                                            autoComplete: "current-password",
                                            required: true,
                                            className: "block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6"
                                        }, void 0, false, {
                                            fileName: "src/components/Authentication/Login.js",
                                            lineNumber: 94,
                                            columnNumber: 13
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/components/Authentication/Login.js",
                                        lineNumber: 93,
                                        columnNumber: 11
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/Authentication/Login.js",
                                lineNumber: 86,
                                columnNumber: 9
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    type: "submit",
                                    className: "flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-xs hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600",
                                    children: "Sign in"
                                }, void 0, false, {
                                    fileName: "src/components/Authentication/Login.js",
                                    lineNumber: 106,
                                    columnNumber: 11
                                }, undefined)
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Login.js",
                                lineNumber: 105,
                                columnNumber: 9
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Authentication/Login.js",
                        lineNumber: 70,
                        columnNumber: 7
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                        className: "mt-10 text-center text-sm/6 text-gray-500",
                        children: [
                            "Don't have an account?",
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                                to: "/register",
                                className: "font-semibold text-indigo-600 hover:text-indigo-500",
                                children: "Signup"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Login.js",
                                lineNumber: 115,
                                columnNumber: 9
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Authentication/Login.js",
                        lineNumber: 113,
                        columnNumber: 7
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/components/Authentication/Login.js",
                lineNumber: 69,
                columnNumber: 5
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/components/Authentication/Login.js",
        lineNumber: 63,
        columnNumber: 5
    }, undefined);
};
_s(Login, "5b7vsAcDim8JDGIUechdo6iw6KY=", false, function() {
    return [
        (0, _reactCookie.useCookies),
        (0, _reactRedux.useDispatch),
        (0, _reactRouter.useNavigate)
    ];
});
_c = Login;
exports.default = Login;
var _c;
$RefreshReg$(_c, "Login");

  $parcel$ReactRefreshHelpers$3772.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-redux":"hbNxT","react-router":"2jawN","axios":"kooH4","react-cookie":"59JzK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi","../../store/authSlice":"9kBex"}],"hbNxT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Provider", ()=>Provider_default);
parcelHelpers.export(exports, "ReactReduxContext", ()=>ReactReduxContext);
parcelHelpers.export(exports, "batch", ()=>batch);
parcelHelpers.export(exports, "connect", ()=>connect_default);
parcelHelpers.export(exports, "createDispatchHook", ()=>createDispatchHook);
parcelHelpers.export(exports, "createSelectorHook", ()=>createSelectorHook);
parcelHelpers.export(exports, "createStoreHook", ()=>createStoreHook);
parcelHelpers.export(exports, "shallowEqual", ()=>shallowEqual);
parcelHelpers.export(exports, "useDispatch", ()=>useDispatch);
parcelHelpers.export(exports, "useSelector", ()=>useSelector);
parcelHelpers.export(exports, "useStore", ()=>useStore);
// src/utils/react.ts
var _react = require("react");
// src/hooks/useSelector.ts
var _withSelectorJs = require("use-sync-external-store/with-selector.js");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {
        enumerable: true,
        configurable: true,
        writable: true,
        value
    }) : obj[key] = value;
var __spreadValues = (a, b)=>{
    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols) {
        for (var prop of __getOwnPropSymbols(b))if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    }
    return a;
};
var __spreadProps = (a, b)=>__defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude)=>{
    var target = {};
    for(var prop in source)if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
    if (source != null && __getOwnPropSymbols) {
        for (var prop of __getOwnPropSymbols(source))if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];
    }
    return target;
};
// src/utils/react-is.ts
var IS_REACT_19 = /* @__PURE__ */ _react.version.startsWith("19");
var REACT_ELEMENT_TYPE = /* @__PURE__ */ Symbol.for(IS_REACT_19 ? "react.transitional.element" : "react.element");
var REACT_PORTAL_TYPE = /* @__PURE__ */ Symbol.for("react.portal");
var REACT_FRAGMENT_TYPE = /* @__PURE__ */ Symbol.for("react.fragment");
var REACT_STRICT_MODE_TYPE = /* @__PURE__ */ Symbol.for("react.strict_mode");
var REACT_PROFILER_TYPE = /* @__PURE__ */ Symbol.for("react.profiler");
var REACT_CONSUMER_TYPE = /* @__PURE__ */ Symbol.for("react.consumer");
var REACT_CONTEXT_TYPE = /* @__PURE__ */ Symbol.for("react.context");
var REACT_FORWARD_REF_TYPE = /* @__PURE__ */ Symbol.for("react.forward_ref");
var REACT_SUSPENSE_TYPE = /* @__PURE__ */ Symbol.for("react.suspense");
var REACT_SUSPENSE_LIST_TYPE = /* @__PURE__ */ Symbol.for("react.suspense_list");
var REACT_MEMO_TYPE = /* @__PURE__ */ Symbol.for("react.memo");
var REACT_LAZY_TYPE = /* @__PURE__ */ Symbol.for("react.lazy");
var REACT_OFFSCREEN_TYPE = /* @__PURE__ */ Symbol.for("react.offscreen");
var REACT_CLIENT_REFERENCE = /* @__PURE__ */ Symbol.for("react.client.reference");
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Memo = REACT_MEMO_TYPE;
function isValidElementType(type) {
    return typeof type === "string" || typeof type === "function" || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_OFFSCREEN_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_CLIENT_REFERENCE || type.getModuleId !== void 0) ? true : false;
}
function typeOf(object) {
    if (typeof object === "object" && object !== null) {
        const { $$typeof } = object;
        switch($$typeof){
            case REACT_ELEMENT_TYPE:
                switch(object = object.type, object){
                    case REACT_FRAGMENT_TYPE:
                    case REACT_PROFILER_TYPE:
                    case REACT_STRICT_MODE_TYPE:
                    case REACT_SUSPENSE_TYPE:
                    case REACT_SUSPENSE_LIST_TYPE:
                        return object;
                    default:
                        switch(object = object && object.$$typeof, object){
                            case REACT_CONTEXT_TYPE:
                            case REACT_FORWARD_REF_TYPE:
                            case REACT_LAZY_TYPE:
                            case REACT_MEMO_TYPE:
                                return object;
                            case REACT_CONSUMER_TYPE:
                                return object;
                            default:
                                return $$typeof;
                        }
                }
            case REACT_PORTAL_TYPE:
                return $$typeof;
        }
    }
}
function isContextConsumer(object) {
    return IS_REACT_19 ? typeOf(object) === REACT_CONSUMER_TYPE : typeOf(object) === REACT_CONTEXT_TYPE;
}
function isMemo(object) {
    return typeOf(object) === REACT_MEMO_TYPE;
}
// src/utils/warning.ts
function warning(message) {
    if (typeof console !== "undefined" && typeof console.error === "function") console.error(message);
    try {
        throw new Error(message);
    } catch (e) {}
}
// src/connect/verifySubselectors.ts
function verify(selector, methodName) {
    if (!selector) throw new Error(`Unexpected value for ${methodName} in connect.`);
    else if (methodName === "mapStateToProps" || methodName === "mapDispatchToProps") {
        if (!Object.prototype.hasOwnProperty.call(selector, "dependsOnOwnProps")) warning(`The selector for ${methodName} of connect did not specify a value for dependsOnOwnProps.`);
    }
}
function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps) {
    verify(mapStateToProps, "mapStateToProps");
    verify(mapDispatchToProps, "mapDispatchToProps");
    verify(mergeProps, "mergeProps");
}
// src/connect/selectorFactory.ts
function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, { areStatesEqual, areOwnPropsEqual, areStatePropsEqual }) {
    let hasRunAtLeastOnce = false;
    let state;
    let ownProps;
    let stateProps;
    let dispatchProps;
    let mergedProps;
    function handleFirstCall(firstState, firstOwnProps) {
        state = firstState;
        ownProps = firstOwnProps;
        stateProps = mapStateToProps(state, ownProps);
        dispatchProps = mapDispatchToProps(dispatch, ownProps);
        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
        hasRunAtLeastOnce = true;
        return mergedProps;
    }
    function handleNewPropsAndNewState() {
        stateProps = mapStateToProps(state, ownProps);
        if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
        return mergedProps;
    }
    function handleNewProps() {
        if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
        if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
        return mergedProps;
    }
    function handleNewState() {
        const nextStateProps = mapStateToProps(state, ownProps);
        const statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
        stateProps = nextStateProps;
        if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
        return mergedProps;
    }
    function handleSubsequentCalls(nextState, nextOwnProps) {
        const propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
        const stateChanged = !areStatesEqual(nextState, state, nextOwnProps, ownProps);
        state = nextState;
        ownProps = nextOwnProps;
        if (propsChanged && stateChanged) return handleNewPropsAndNewState();
        if (propsChanged) return handleNewProps();
        if (stateChanged) return handleNewState();
        return mergedProps;
    }
    return function pureFinalPropsSelector(nextState, nextOwnProps) {
        return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
    };
}
function finalPropsSelectorFactory(dispatch, _a) {
    var _b = _a, { initMapStateToProps, initMapDispatchToProps, initMergeProps } = _b, options = __objRest(_b, [
        "initMapStateToProps",
        "initMapDispatchToProps",
        "initMergeProps"
    ]);
    const mapStateToProps = initMapStateToProps(dispatch, options);
    const mapDispatchToProps = initMapDispatchToProps(dispatch, options);
    const mergeProps = initMergeProps(dispatch, options);
    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps);
    return pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}
// src/utils/bindActionCreators.ts
function bindActionCreators(actionCreators, dispatch) {
    const boundActionCreators = {};
    for(const key in actionCreators){
        const actionCreator = actionCreators[key];
        if (typeof actionCreator === "function") boundActionCreators[key] = (...args)=>dispatch(actionCreator(...args));
    }
    return boundActionCreators;
}
// src/utils/isPlainObject.ts
function isPlainObject(obj) {
    if (typeof obj !== "object" || obj === null) return false;
    const proto = Object.getPrototypeOf(obj);
    if (proto === null) return true;
    let baseProto = proto;
    while(Object.getPrototypeOf(baseProto) !== null)baseProto = Object.getPrototypeOf(baseProto);
    return proto === baseProto;
}
// src/utils/verifyPlainObject.ts
function verifyPlainObject(value, displayName, methodName) {
    if (!isPlainObject(value)) warning(`${methodName}() in ${displayName} must return a plain object. Instead received ${value}.`);
}
// src/connect/wrapMapToProps.ts
function wrapMapToPropsConstant(getConstant) {
    return function initConstantSelector(dispatch) {
        const constant = getConstant(dispatch);
        function constantSelector() {
            return constant;
        }
        constantSelector.dependsOnOwnProps = false;
        return constantSelector;
    };
}
function getDependsOnOwnProps(mapToProps) {
    return mapToProps.dependsOnOwnProps ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
}
function wrapMapToPropsFunc(mapToProps, methodName) {
    return function initProxySelector(dispatch, { displayName }) {
        const proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
            return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch, void 0);
        };
        proxy.dependsOnOwnProps = true;
        proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
            proxy.mapToProps = mapToProps;
            proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
            let props = proxy(stateOrDispatch, ownProps);
            if (typeof props === "function") {
                proxy.mapToProps = props;
                proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
                props = proxy(stateOrDispatch, ownProps);
            }
            verifyPlainObject(props, displayName, methodName);
            return props;
        };
        return proxy;
    };
}
// src/connect/invalidArgFactory.ts
function createInvalidArgFactory(arg, name) {
    return (dispatch, options)=>{
        throw new Error(`Invalid value of type ${typeof arg} for ${name} argument when connecting component ${options.wrappedComponentName}.`);
    };
}
// src/connect/mapDispatchToProps.ts
function mapDispatchToPropsFactory(mapDispatchToProps) {
    return mapDispatchToProps && typeof mapDispatchToProps === "object" ? wrapMapToPropsConstant((dispatch)=>// @ts-ignore
        bindActionCreators(mapDispatchToProps, dispatch)) : !mapDispatchToProps ? wrapMapToPropsConstant((dispatch)=>({
            dispatch
        })) : typeof mapDispatchToProps === "function" ? // @ts-ignore
    wrapMapToPropsFunc(mapDispatchToProps, "mapDispatchToProps") : createInvalidArgFactory(mapDispatchToProps, "mapDispatchToProps");
}
// src/connect/mapStateToProps.ts
function mapStateToPropsFactory(mapStateToProps) {
    return !mapStateToProps ? wrapMapToPropsConstant(()=>({})) : typeof mapStateToProps === "function" ? // @ts-ignore
    wrapMapToPropsFunc(mapStateToProps, "mapStateToProps") : createInvalidArgFactory(mapStateToProps, "mapStateToProps");
}
// src/connect/mergeProps.ts
function defaultMergeProps(stateProps, dispatchProps, ownProps) {
    return __spreadValues(__spreadValues(__spreadValues({}, ownProps), stateProps), dispatchProps);
}
function wrapMergePropsFunc(mergeProps) {
    return function initMergePropsProxy(dispatch, { displayName, areMergedPropsEqual }) {
        let hasRunOnce = false;
        let mergedProps;
        return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
            const nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
            if (hasRunOnce) {
                if (!areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
            } else {
                hasRunOnce = true;
                mergedProps = nextMergedProps;
                verifyPlainObject(mergedProps, displayName, "mergeProps");
            }
            return mergedProps;
        };
    };
}
function mergePropsFactory(mergeProps) {
    return !mergeProps ? ()=>defaultMergeProps : typeof mergeProps === "function" ? wrapMergePropsFunc(mergeProps) : createInvalidArgFactory(mergeProps, "mergeProps");
}
// src/utils/batch.ts
function defaultNoopBatch(callback) {
    callback();
}
// src/utils/Subscription.ts
function createListenerCollection() {
    let first = null;
    let last = null;
    return {
        clear () {
            first = null;
            last = null;
        },
        notify () {
            defaultNoopBatch(()=>{
                let listener = first;
                while(listener){
                    listener.callback();
                    listener = listener.next;
                }
            });
        },
        get () {
            const listeners = [];
            let listener = first;
            while(listener){
                listeners.push(listener);
                listener = listener.next;
            }
            return listeners;
        },
        subscribe (callback) {
            let isSubscribed = true;
            const listener = last = {
                callback,
                next: null,
                prev: last
            };
            if (listener.prev) listener.prev.next = listener;
            else first = listener;
            return function unsubscribe() {
                if (!isSubscribed || first === null) return;
                isSubscribed = false;
                if (listener.next) listener.next.prev = listener.prev;
                else last = listener.prev;
                if (listener.prev) listener.prev.next = listener.next;
                else first = listener.next;
            };
        }
    };
}
var nullListeners = {
    notify () {},
    get: ()=>[]
};
function createSubscription(store, parentSub) {
    let unsubscribe;
    let listeners = nullListeners;
    let subscriptionsAmount = 0;
    let selfSubscribed = false;
    function addNestedSub(listener) {
        trySubscribe();
        const cleanupListener = listeners.subscribe(listener);
        let removed = false;
        return ()=>{
            if (!removed) {
                removed = true;
                cleanupListener();
                tryUnsubscribe();
            }
        };
    }
    function notifyNestedSubs() {
        listeners.notify();
    }
    function handleChangeWrapper() {
        if (subscription.onStateChange) subscription.onStateChange();
    }
    function isSubscribed() {
        return selfSubscribed;
    }
    function trySubscribe() {
        subscriptionsAmount++;
        if (!unsubscribe) {
            unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);
            listeners = createListenerCollection();
        }
    }
    function tryUnsubscribe() {
        subscriptionsAmount--;
        if (unsubscribe && subscriptionsAmount === 0) {
            unsubscribe();
            unsubscribe = void 0;
            listeners.clear();
            listeners = nullListeners;
        }
    }
    function trySubscribeSelf() {
        if (!selfSubscribed) {
            selfSubscribed = true;
            trySubscribe();
        }
    }
    function tryUnsubscribeSelf() {
        if (selfSubscribed) {
            selfSubscribed = false;
            tryUnsubscribe();
        }
    }
    const subscription = {
        addNestedSub,
        notifyNestedSubs,
        handleChangeWrapper,
        isSubscribed,
        trySubscribe: trySubscribeSelf,
        tryUnsubscribe: tryUnsubscribeSelf,
        getListeners: ()=>listeners
    };
    return subscription;
}
// src/utils/useIsomorphicLayoutEffect.ts
var canUseDOM = ()=>!!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
var isDOM = /* @__PURE__ */ canUseDOM();
var isRunningInReactNative = ()=>typeof navigator !== "undefined" && navigator.product === "ReactNative";
var isReactNative = /* @__PURE__ */ isRunningInReactNative();
var getUseIsomorphicLayoutEffect = ()=>isDOM || isReactNative ? _react.useLayoutEffect : _react.useEffect;
var useIsomorphicLayoutEffect = /* @__PURE__ */ getUseIsomorphicLayoutEffect();
// src/utils/shallowEqual.ts
function is(x, y) {
    if (x === y) return x !== 0 || y !== 0 || 1 / x === 1 / y;
    else return x !== x && y !== y;
}
function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) return false;
    const keysA = Object.keys(objA);
    const keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;
    for(let i = 0; i < keysA.length; i++){
        if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) return false;
    }
    return true;
}
// src/utils/hoistStatics.ts
var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
};
var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};
var FORWARD_REF_STATICS = {
    $$typeof: true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
};
var MEMO_STATICS = {
    $$typeof: true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
};
var TYPE_STATICS = {
    [ForwardRef]: FORWARD_REF_STATICS,
    [Memo]: MEMO_STATICS
};
function getStatics(component) {
    if (isMemo(component)) return MEMO_STATICS;
    return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
}
var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent) {
    if (typeof sourceComponent !== "string") {
        if (objectPrototype) {
            const inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) hoistNonReactStatics(targetComponent, inheritedComponent);
        }
        let keys = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        const targetStatics = getStatics(targetComponent);
        const sourceStatics = getStatics(sourceComponent);
        for(let i = 0; i < keys.length; ++i){
            const key = keys[i];
            if (!KNOWN_STATICS[key] && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
                const descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try {
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }
    }
    return targetComponent;
}
// src/components/Context.ts
var ContextKey = /* @__PURE__ */ Symbol.for(`react-redux-context`);
var gT = typeof globalThis !== "undefined" ? globalThis : /* fall back to a per-module scope (pre-8.1 behaviour) if `globalThis` is not available */ {};
function getContext() {
    var _a;
    if (!_react.createContext) return {};
    const contextMap = (_a = gT[ContextKey]) != null ? _a : gT[ContextKey] = /* @__PURE__ */ new Map();
    let realContext = contextMap.get(_react.createContext);
    if (!realContext) {
        realContext = _react.createContext(null);
        realContext.displayName = "ReactRedux";
        contextMap.set(_react.createContext, realContext);
    }
    return realContext;
}
var ReactReduxContext = /* @__PURE__ */ getContext();
// src/components/connect.tsx
var NO_SUBSCRIPTION_ARRAY = [
    null,
    null
];
var stringifyComponent = (Comp)=>{
    try {
        return JSON.stringify(Comp);
    } catch (err) {
        return String(Comp);
    }
};
function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
    useIsomorphicLayoutEffect(()=>effectFunc(...effectArgs), dependencies);
}
function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs) {
    lastWrapperProps.current = wrapperProps;
    renderIsScheduled.current = false;
    if (childPropsFromStoreUpdate.current) {
        childPropsFromStoreUpdate.current = null;
        notifyNestedSubs();
    }
}
function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, additionalSubscribeListener) {
    if (!shouldHandleStateChanges) return ()=>{};
    let didUnsubscribe = false;
    let lastThrownError = null;
    const checkForUpdates = ()=>{
        if (didUnsubscribe || !isMounted.current) return;
        const latestStoreState = store.getState();
        let newChildProps, error;
        try {
            newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
        } catch (e) {
            error = e;
            lastThrownError = e;
        }
        if (!error) lastThrownError = null;
        if (newChildProps === lastChildProps.current) {
            if (!renderIsScheduled.current) notifyNestedSubs();
        } else {
            lastChildProps.current = newChildProps;
            childPropsFromStoreUpdate.current = newChildProps;
            renderIsScheduled.current = true;
            additionalSubscribeListener();
        }
    };
    subscription.onStateChange = checkForUpdates;
    subscription.trySubscribe();
    checkForUpdates();
    const unsubscribeWrapper = ()=>{
        didUnsubscribe = true;
        subscription.tryUnsubscribe();
        subscription.onStateChange = null;
        if (lastThrownError) throw lastThrownError;
    };
    return unsubscribeWrapper;
}
function strictEqual(a, b) {
    return a === b;
}
var hasWarnedAboutDeprecatedPureOption = false;
function connect(mapStateToProps, mapDispatchToProps, mergeProps, { // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.
// @ts-ignore
pure, areStatesEqual = strictEqual, areOwnPropsEqual = shallowEqual, areStatePropsEqual = shallowEqual, areMergedPropsEqual = shallowEqual, // use React's forwardRef to expose a ref of the wrapped component
forwardRef = false, // the context consumer to use
context = ReactReduxContext } = {}) {
    if (pure !== void 0 && !hasWarnedAboutDeprecatedPureOption) {
        hasWarnedAboutDeprecatedPureOption = true;
        warning('The `pure` option has been removed. `connect` is now always a "pure/memoized" component');
    }
    const Context = context;
    const initMapStateToProps = mapStateToPropsFactory(mapStateToProps);
    const initMapDispatchToProps = mapDispatchToPropsFactory(mapDispatchToProps);
    const initMergeProps = mergePropsFactory(mergeProps);
    const shouldHandleStateChanges = Boolean(mapStateToProps);
    const wrapWithConnect = (WrappedComponent)=>{
        {
            const isValid = /* @__PURE__ */ isValidElementType(WrappedComponent);
            if (!isValid) throw new Error(`You must pass a component to the function returned by connect. Instead received ${stringifyComponent(WrappedComponent)}`);
        }
        const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || "Component";
        const displayName = `Connect(${wrappedComponentName})`;
        const selectorFactoryOptions = {
            shouldHandleStateChanges,
            displayName,
            wrappedComponentName,
            WrappedComponent,
            // @ts-ignore
            initMapStateToProps,
            initMapDispatchToProps,
            initMergeProps,
            areStatesEqual,
            areStatePropsEqual,
            areOwnPropsEqual,
            areMergedPropsEqual
        };
        function ConnectFunction(props) {
            const [propsContext, reactReduxForwardedRef, wrapperProps] = _react.useMemo(()=>{
                const _a = props, { reactReduxForwardedRef: reactReduxForwardedRef2 } = _a, wrapperProps2 = __objRest(_a, [
                    "reactReduxForwardedRef"
                ]);
                return [
                    props.context,
                    reactReduxForwardedRef2,
                    wrapperProps2
                ];
            }, [
                props
            ]);
            const ContextToUse = _react.useMemo(()=>{
                let ResultContext = Context;
                if (propsContext == null ? void 0 : propsContext.Consumer) {
                    const isValid = /* @__PURE__ */ isContextConsumer(// @ts-ignore
                    /* @__PURE__ */ _react.createElement(propsContext.Consumer, null));
                    if (!isValid) throw new Error("You must pass a valid React context consumer as `props.context`");
                    ResultContext = propsContext;
                }
                return ResultContext;
            }, [
                propsContext,
                Context
            ]);
            const contextValue = _react.useContext(ContextToUse);
            const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
            const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);
            if (!didStoreComeFromProps && !didStoreComeFromContext) throw new Error(`Could not find "store" in the context of "${displayName}". Either wrap the root component in a <Provider>, or pass a custom React context provider to <Provider> and the corresponding React context consumer to ${displayName} in connect options.`);
            const store = didStoreComeFromProps ? props.store : contextValue.store;
            const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;
            const childPropsSelector = _react.useMemo(()=>{
                return finalPropsSelectorFactory(store.dispatch, selectorFactoryOptions);
            }, [
                store
            ]);
            const [subscription, notifyNestedSubs] = _react.useMemo(()=>{
                if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY;
                const subscription2 = createSubscription(store, didStoreComeFromProps ? void 0 : contextValue.subscription);
                const notifyNestedSubs2 = subscription2.notifyNestedSubs.bind(subscription2);
                return [
                    subscription2,
                    notifyNestedSubs2
                ];
            }, [
                store,
                didStoreComeFromProps,
                contextValue
            ]);
            const overriddenContextValue = _react.useMemo(()=>{
                if (didStoreComeFromProps) return contextValue;
                return __spreadProps(__spreadValues({}, contextValue), {
                    subscription
                });
            }, [
                didStoreComeFromProps,
                contextValue,
                subscription
            ]);
            const lastChildProps = _react.useRef(void 0);
            const lastWrapperProps = _react.useRef(wrapperProps);
            const childPropsFromStoreUpdate = _react.useRef(void 0);
            const renderIsScheduled = _react.useRef(false);
            const isMounted = _react.useRef(false);
            const latestSubscriptionCallbackError = _react.useRef(void 0);
            useIsomorphicLayoutEffect(()=>{
                isMounted.current = true;
                return ()=>{
                    isMounted.current = false;
                };
            }, []);
            const actualChildPropsSelector = _react.useMemo(()=>{
                const selector = ()=>{
                    if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) return childPropsFromStoreUpdate.current;
                    return childPropsSelector(store.getState(), wrapperProps);
                };
                return selector;
            }, [
                store,
                wrapperProps
            ]);
            const subscribeForReact = _react.useMemo(()=>{
                const subscribe = (reactListener)=>{
                    if (!subscription) return ()=>{};
                    return subscribeUpdates(shouldHandleStateChanges, store, subscription, // @ts-ignore
                    childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);
                };
                return subscribe;
            }, [
                subscription
            ]);
            useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [
                lastWrapperProps,
                lastChildProps,
                renderIsScheduled,
                wrapperProps,
                childPropsFromStoreUpdate,
                notifyNestedSubs
            ]);
            let actualChildProps;
            try {
                actualChildProps = _react.useSyncExternalStore(// TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing
                subscribeForReact, // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,
                // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.
                actualChildPropsSelector, getServerState ? ()=>childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector);
            } catch (err) {
                if (latestSubscriptionCallbackError.current) err.message += `
The error may be correlated with this previous error:
${latestSubscriptionCallbackError.current.stack}

`;
                throw err;
            }
            useIsomorphicLayoutEffect(()=>{
                latestSubscriptionCallbackError.current = void 0;
                childPropsFromStoreUpdate.current = void 0;
                lastChildProps.current = actualChildProps;
            });
            const renderedWrappedComponent = _react.useMemo(()=>{
                return(// @ts-ignore
                /* @__PURE__ */ _react.createElement(WrappedComponent, __spreadProps(__spreadValues({}, actualChildProps), {
                    ref: reactReduxForwardedRef
                })));
            }, [
                reactReduxForwardedRef,
                WrappedComponent,
                actualChildProps
            ]);
            const renderedChild = _react.useMemo(()=>{
                if (shouldHandleStateChanges) return /* @__PURE__ */ _react.createElement(ContextToUse.Provider, {
                    value: overriddenContextValue
                }, renderedWrappedComponent);
                return renderedWrappedComponent;
            }, [
                ContextToUse,
                renderedWrappedComponent,
                overriddenContextValue
            ]);
            return renderedChild;
        }
        const _Connect = _react.memo(ConnectFunction);
        const Connect = _Connect;
        Connect.WrappedComponent = WrappedComponent;
        Connect.displayName = ConnectFunction.displayName = displayName;
        if (forwardRef) {
            const _forwarded = _react.forwardRef(function forwardConnectRef(props, ref) {
                return /* @__PURE__ */ _react.createElement(Connect, __spreadProps(__spreadValues({}, props), {
                    reactReduxForwardedRef: ref
                }));
            });
            const forwarded = _forwarded;
            forwarded.displayName = displayName;
            forwarded.WrappedComponent = WrappedComponent;
            return /* @__PURE__ */ hoistNonReactStatics(forwarded, WrappedComponent);
        }
        return /* @__PURE__ */ hoistNonReactStatics(Connect, WrappedComponent);
    };
    return wrapWithConnect;
}
var connect_default = connect;
// src/components/Provider.tsx
function Provider(providerProps) {
    const { children, context, serverState, store } = providerProps;
    const contextValue = _react.useMemo(()=>{
        const subscription = createSubscription(store);
        const baseContextValue = {
            store,
            subscription,
            getServerState: serverState ? ()=>serverState : void 0
        };
        {
            const { identityFunctionCheck = "once", stabilityCheck = "once" } = providerProps;
            return /* @__PURE__ */ Object.assign(baseContextValue, {
                stabilityCheck,
                identityFunctionCheck
            });
        }
    }, [
        store,
        serverState
    ]);
    const previousState = _react.useMemo(()=>store.getState(), [
        store
    ]);
    useIsomorphicLayoutEffect(()=>{
        const { subscription } = contextValue;
        subscription.onStateChange = subscription.notifyNestedSubs;
        subscription.trySubscribe();
        if (previousState !== store.getState()) subscription.notifyNestedSubs();
        return ()=>{
            subscription.tryUnsubscribe();
            subscription.onStateChange = void 0;
        };
    }, [
        contextValue,
        previousState
    ]);
    const Context = context || ReactReduxContext;
    return /* @__PURE__ */ _react.createElement(Context.Provider, {
        value: contextValue
    }, children);
}
var Provider_default = Provider;
// src/hooks/useReduxContext.ts
function createReduxContextHook(context = ReactReduxContext) {
    return function useReduxContext2() {
        const contextValue = _react.useContext(context);
        if (!contextValue) throw new Error("could not find react-redux context value; please ensure the component is wrapped in a <Provider>");
        return contextValue;
    };
}
var useReduxContext = /* @__PURE__ */ createReduxContextHook();
// src/hooks/useStore.ts
function createStoreHook(context = ReactReduxContext) {
    const useReduxContext2 = context === ReactReduxContext ? useReduxContext : // @ts-ignore
    createReduxContextHook(context);
    const useStore2 = ()=>{
        const { store } = useReduxContext2();
        return store;
    };
    Object.assign(useStore2, {
        withTypes: ()=>useStore2
    });
    return useStore2;
}
var useStore = /* @__PURE__ */ createStoreHook();
// src/hooks/useDispatch.ts
function createDispatchHook(context = ReactReduxContext) {
    const useStore2 = context === ReactReduxContext ? useStore : createStoreHook(context);
    const useDispatch2 = ()=>{
        const store = useStore2();
        return store.dispatch;
    };
    Object.assign(useDispatch2, {
        withTypes: ()=>useDispatch2
    });
    return useDispatch2;
}
var useDispatch = /* @__PURE__ */ createDispatchHook();
var refEquality = (a, b)=>a === b;
function createSelectorHook(context = ReactReduxContext) {
    const useReduxContext2 = context === ReactReduxContext ? useReduxContext : createReduxContextHook(context);
    const useSelector2 = (selector, equalityFnOrOptions = {})=>{
        const { equalityFn = refEquality } = typeof equalityFnOrOptions === "function" ? {
            equalityFn: equalityFnOrOptions
        } : equalityFnOrOptions;
        if (!selector) throw new Error(`You must pass a selector to useSelector`);
        if (typeof selector !== "function") throw new Error(`You must pass a function as a selector to useSelector`);
        if (typeof equalityFn !== "function") throw new Error(`You must pass a function as an equality function to useSelector`);
        const reduxContext = useReduxContext2();
        const { store, subscription, getServerState } = reduxContext;
        const firstRun = _react.useRef(true);
        const wrappedSelector = _react.useCallback({
            [selector.name] (state) {
                const selected = selector(state);
                {
                    const { devModeChecks = {} } = typeof equalityFnOrOptions === "function" ? {} : equalityFnOrOptions;
                    const { identityFunctionCheck, stabilityCheck } = reduxContext;
                    const { identityFunctionCheck: finalIdentityFunctionCheck, stabilityCheck: finalStabilityCheck } = __spreadValues({
                        stabilityCheck,
                        identityFunctionCheck
                    }, devModeChecks);
                    if (finalStabilityCheck === "always" || finalStabilityCheck === "once" && firstRun.current) {
                        const toCompare = selector(state);
                        if (!equalityFn(selected, toCompare)) {
                            let stack = void 0;
                            try {
                                throw new Error();
                            } catch (e) {
                                ({ stack } = e);
                            }
                            console.warn("Selector " + (selector.name || "unknown") + " returned a different result when called with the same parameters. This can lead to unnecessary rerenders.\nSelectors that return a new reference (such as an object or an array) should be memoized: https://redux.js.org/usage/deriving-data-selectors#optimizing-selectors-with-memoization", {
                                state,
                                selected,
                                selected2: toCompare,
                                stack
                            });
                        }
                    }
                    if (finalIdentityFunctionCheck === "always" || finalIdentityFunctionCheck === "once" && firstRun.current) {
                        if (selected === state) {
                            let stack = void 0;
                            try {
                                throw new Error();
                            } catch (e) {
                                ({ stack } = e);
                            }
                            console.warn("Selector " + (selector.name || "unknown") + " returned the root state when called. This can lead to unnecessary rerenders.\nSelectors that return the entire state are almost certainly a mistake, as they will cause a rerender whenever *anything* in state changes.", {
                                stack
                            });
                        }
                    }
                    if (firstRun.current) firstRun.current = false;
                }
                return selected;
            }
        }[selector.name], [
            selector
        ]);
        const selectedState = (0, _withSelectorJs.useSyncExternalStoreWithSelector)(subscription.addNestedSub, store.getState, getServerState || store.getState, wrappedSelector, equalityFn);
        _react.useDebugValue(selectedState);
        return selectedState;
    };
    Object.assign(useSelector2, {
        withTypes: ()=>useSelector2
    });
    return useSelector2;
}
var useSelector = /* @__PURE__ */ createSelectorHook();
// src/exports.ts
var batch = defaultNoopBatch;

},{"react":"jMk1U","use-sync-external-store/with-selector.js":"hQIeG","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hQIeG":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("374a059340689e89");

},{"374a059340689e89":"diPwR"}],"diPwR":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * use-sync-external-store-with-selector.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function is(x, y) {
        return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var React = require("8b38fc6c74f16e20"), objectIs = "function" === typeof Object.is ? Object.is : is, useSyncExternalStore = React.useSyncExternalStore, useRef = React.useRef, useEffect = React.useEffect, useMemo = React.useMemo, useDebugValue = React.useDebugValue;
    exports.useSyncExternalStoreWithSelector = function(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {
        var instRef = useRef(null);
        if (null === instRef.current) {
            var inst = {
                hasValue: !1,
                value: null
            };
            instRef.current = inst;
        } else inst = instRef.current;
        instRef = useMemo(function() {
            function memoizedSelector(nextSnapshot) {
                if (!hasMemo) {
                    hasMemo = !0;
                    memoizedSnapshot = nextSnapshot;
                    nextSnapshot = selector(nextSnapshot);
                    if (void 0 !== isEqual && inst.hasValue) {
                        var currentSelection = inst.value;
                        if (isEqual(currentSelection, nextSnapshot)) return memoizedSelection = currentSelection;
                    }
                    return memoizedSelection = nextSnapshot;
                }
                currentSelection = memoizedSelection;
                if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;
                var nextSelection = selector(nextSnapshot);
                if (void 0 !== isEqual && isEqual(currentSelection, nextSelection)) return memoizedSnapshot = nextSnapshot, currentSelection;
                memoizedSnapshot = nextSnapshot;
                return memoizedSelection = nextSelection;
            }
            var hasMemo = !1, memoizedSnapshot, memoizedSelection, maybeGetServerSnapshot = void 0 === getServerSnapshot ? null : getServerSnapshot;
            return [
                function() {
                    return memoizedSelector(getSnapshot());
                },
                null === maybeGetServerSnapshot ? void 0 : function() {
                    return memoizedSelector(maybeGetServerSnapshot());
                }
            ];
        }, [
            getSnapshot,
            getServerSnapshot,
            selector,
            isEqual
        ]);
        var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);
        useEffect(function() {
            inst.hasValue = !0;
            inst.value = value;
        }, [
            value
        ]);
        useDebugValue(value);
        return value;
    };
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{"8b38fc6c74f16e20":"jMk1U"}],"jnFvT":[function(require,module,exports,__globalThis) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, '__esModule', {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"2jawN":[function(require,module,exports,__globalThis) {
/**
 * react-router v7.4.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Await", ()=>(0, _chunkXJI4KG32Mjs.Await));
parcelHelpers.export(exports, "BrowserRouter", ()=>(0, _chunkXJI4KG32Mjs.BrowserRouter));
parcelHelpers.export(exports, "Form", ()=>(0, _chunkXJI4KG32Mjs.Form));
parcelHelpers.export(exports, "HashRouter", ()=>(0, _chunkXJI4KG32Mjs.HashRouter));
parcelHelpers.export(exports, "IDLE_BLOCKER", ()=>(0, _chunkXJI4KG32Mjs.IDLE_BLOCKER));
parcelHelpers.export(exports, "IDLE_FETCHER", ()=>(0, _chunkXJI4KG32Mjs.IDLE_FETCHER));
parcelHelpers.export(exports, "IDLE_NAVIGATION", ()=>(0, _chunkXJI4KG32Mjs.IDLE_NAVIGATION));
parcelHelpers.export(exports, "Link", ()=>(0, _chunkXJI4KG32Mjs.Link));
parcelHelpers.export(exports, "Links", ()=>(0, _chunkXJI4KG32Mjs.Links));
parcelHelpers.export(exports, "MemoryRouter", ()=>(0, _chunkXJI4KG32Mjs.MemoryRouter));
parcelHelpers.export(exports, "Meta", ()=>(0, _chunkXJI4KG32Mjs.Meta));
parcelHelpers.export(exports, "NavLink", ()=>(0, _chunkXJI4KG32Mjs.NavLink));
parcelHelpers.export(exports, "Navigate", ()=>(0, _chunkXJI4KG32Mjs.Navigate));
parcelHelpers.export(exports, "NavigationType", ()=>(0, _chunkXJI4KG32Mjs.Action));
parcelHelpers.export(exports, "Outlet", ()=>(0, _chunkXJI4KG32Mjs.Outlet));
parcelHelpers.export(exports, "PrefetchPageLinks", ()=>(0, _chunkXJI4KG32Mjs.PrefetchPageLinks));
parcelHelpers.export(exports, "Route", ()=>(0, _chunkXJI4KG32Mjs.Route));
parcelHelpers.export(exports, "Router", ()=>(0, _chunkXJI4KG32Mjs.Router));
parcelHelpers.export(exports, "RouterProvider", ()=>(0, _chunkXJI4KG32Mjs.RouterProvider));
parcelHelpers.export(exports, "Routes", ()=>(0, _chunkXJI4KG32Mjs.Routes));
parcelHelpers.export(exports, "Scripts", ()=>(0, _chunkXJI4KG32Mjs.Scripts));
parcelHelpers.export(exports, "ScrollRestoration", ()=>(0, _chunkXJI4KG32Mjs.ScrollRestoration));
parcelHelpers.export(exports, "ServerRouter", ()=>(0, _chunkXJI4KG32Mjs.ServerRouter));
parcelHelpers.export(exports, "StaticRouter", ()=>(0, _chunkXJI4KG32Mjs.StaticRouter));
parcelHelpers.export(exports, "StaticRouterProvider", ()=>(0, _chunkXJI4KG32Mjs.StaticRouterProvider));
parcelHelpers.export(exports, "UNSAFE_DataRouterContext", ()=>(0, _chunkXJI4KG32Mjs.DataRouterContext));
parcelHelpers.export(exports, "UNSAFE_DataRouterStateContext", ()=>(0, _chunkXJI4KG32Mjs.DataRouterStateContext));
parcelHelpers.export(exports, "UNSAFE_ErrorResponseImpl", ()=>(0, _chunkXJI4KG32Mjs.ErrorResponseImpl));
parcelHelpers.export(exports, "UNSAFE_FetchersContext", ()=>(0, _chunkXJI4KG32Mjs.FetchersContext));
parcelHelpers.export(exports, "UNSAFE_FrameworkContext", ()=>(0, _chunkXJI4KG32Mjs.FrameworkContext));
parcelHelpers.export(exports, "UNSAFE_LocationContext", ()=>(0, _chunkXJI4KG32Mjs.LocationContext));
parcelHelpers.export(exports, "UNSAFE_NavigationContext", ()=>(0, _chunkXJI4KG32Mjs.NavigationContext));
parcelHelpers.export(exports, "UNSAFE_RemixErrorBoundary", ()=>(0, _chunkXJI4KG32Mjs.RemixErrorBoundary));
parcelHelpers.export(exports, "UNSAFE_RouteContext", ()=>(0, _chunkXJI4KG32Mjs.RouteContext));
parcelHelpers.export(exports, "UNSAFE_ServerMode", ()=>(0, _chunkXJI4KG32Mjs.ServerMode));
parcelHelpers.export(exports, "UNSAFE_SingleFetchRedirectSymbol", ()=>(0, _chunkXJI4KG32Mjs.SingleFetchRedirectSymbol));
parcelHelpers.export(exports, "UNSAFE_ViewTransitionContext", ()=>(0, _chunkXJI4KG32Mjs.ViewTransitionContext));
parcelHelpers.export(exports, "UNSAFE_createBrowserHistory", ()=>(0, _chunkXJI4KG32Mjs.createBrowserHistory));
parcelHelpers.export(exports, "UNSAFE_createClientRoutes", ()=>(0, _chunkXJI4KG32Mjs.createClientRoutes));
parcelHelpers.export(exports, "UNSAFE_createClientRoutesWithHMRRevalidationOptOut", ()=>(0, _chunkXJI4KG32Mjs.createClientRoutesWithHMRRevalidationOptOut));
parcelHelpers.export(exports, "UNSAFE_createRouter", ()=>(0, _chunkXJI4KG32Mjs.createRouter));
parcelHelpers.export(exports, "UNSAFE_decodeViaTurboStream", ()=>(0, _chunkXJI4KG32Mjs.decodeViaTurboStream));
parcelHelpers.export(exports, "UNSAFE_deserializeErrors", ()=>(0, _chunkXJI4KG32Mjs.deserializeErrors));
parcelHelpers.export(exports, "UNSAFE_getPatchRoutesOnNavigationFunction", ()=>(0, _chunkXJI4KG32Mjs.getPatchRoutesOnNavigationFunction));
parcelHelpers.export(exports, "UNSAFE_getSingleFetchDataStrategy", ()=>(0, _chunkXJI4KG32Mjs.getSingleFetchDataStrategy));
parcelHelpers.export(exports, "UNSAFE_invariant", ()=>(0, _chunkXJI4KG32Mjs.invariant));
parcelHelpers.export(exports, "UNSAFE_mapRouteProperties", ()=>(0, _chunkXJI4KG32Mjs.mapRouteProperties));
parcelHelpers.export(exports, "UNSAFE_shouldHydrateRouteLoader", ()=>(0, _chunkXJI4KG32Mjs.shouldHydrateRouteLoader));
parcelHelpers.export(exports, "UNSAFE_useFogOFWarDiscovery", ()=>(0, _chunkXJI4KG32Mjs.useFogOFWarDiscovery));
parcelHelpers.export(exports, "UNSAFE_useScrollRestoration", ()=>(0, _chunkXJI4KG32Mjs.useScrollRestoration));
parcelHelpers.export(exports, "createBrowserRouter", ()=>(0, _chunkXJI4KG32Mjs.createBrowserRouter));
parcelHelpers.export(exports, "createCookie", ()=>(0, _chunkXJI4KG32Mjs.createCookie));
parcelHelpers.export(exports, "createCookieSessionStorage", ()=>(0, _chunkXJI4KG32Mjs.createCookieSessionStorage));
parcelHelpers.export(exports, "createHashRouter", ()=>(0, _chunkXJI4KG32Mjs.createHashRouter));
parcelHelpers.export(exports, "createMemoryRouter", ()=>(0, _chunkXJI4KG32Mjs.createMemoryRouter));
parcelHelpers.export(exports, "createMemorySessionStorage", ()=>(0, _chunkXJI4KG32Mjs.createMemorySessionStorage));
parcelHelpers.export(exports, "createPath", ()=>(0, _chunkXJI4KG32Mjs.createPath));
parcelHelpers.export(exports, "createRequestHandler", ()=>(0, _chunkXJI4KG32Mjs.createRequestHandler));
parcelHelpers.export(exports, "createRoutesFromChildren", ()=>(0, _chunkXJI4KG32Mjs.createRoutesFromChildren));
parcelHelpers.export(exports, "createRoutesFromElements", ()=>(0, _chunkXJI4KG32Mjs.createRoutesFromElements));
parcelHelpers.export(exports, "createRoutesStub", ()=>(0, _chunkXJI4KG32Mjs.createRoutesStub));
parcelHelpers.export(exports, "createSearchParams", ()=>(0, _chunkXJI4KG32Mjs.createSearchParams));
parcelHelpers.export(exports, "createSession", ()=>(0, _chunkXJI4KG32Mjs.createSession));
parcelHelpers.export(exports, "createSessionStorage", ()=>(0, _chunkXJI4KG32Mjs.createSessionStorage));
parcelHelpers.export(exports, "createStaticHandler", ()=>(0, _chunkXJI4KG32Mjs.createStaticHandler));
parcelHelpers.export(exports, "createStaticRouter", ()=>(0, _chunkXJI4KG32Mjs.createStaticRouter));
parcelHelpers.export(exports, "data", ()=>(0, _chunkXJI4KG32Mjs.data));
parcelHelpers.export(exports, "generatePath", ()=>(0, _chunkXJI4KG32Mjs.generatePath));
parcelHelpers.export(exports, "href", ()=>(0, _chunkXJI4KG32Mjs.href));
parcelHelpers.export(exports, "isCookie", ()=>(0, _chunkXJI4KG32Mjs.isCookie));
parcelHelpers.export(exports, "isRouteErrorResponse", ()=>(0, _chunkXJI4KG32Mjs.isRouteErrorResponse));
parcelHelpers.export(exports, "isSession", ()=>(0, _chunkXJI4KG32Mjs.isSession));
parcelHelpers.export(exports, "matchPath", ()=>(0, _chunkXJI4KG32Mjs.matchPath));
parcelHelpers.export(exports, "matchRoutes", ()=>(0, _chunkXJI4KG32Mjs.matchRoutes));
parcelHelpers.export(exports, "parsePath", ()=>(0, _chunkXJI4KG32Mjs.parsePath));
parcelHelpers.export(exports, "redirect", ()=>(0, _chunkXJI4KG32Mjs.redirect));
parcelHelpers.export(exports, "redirectDocument", ()=>(0, _chunkXJI4KG32Mjs.redirectDocument));
parcelHelpers.export(exports, "renderMatches", ()=>(0, _chunkXJI4KG32Mjs.renderMatches));
parcelHelpers.export(exports, "replace", ()=>(0, _chunkXJI4KG32Mjs.replace));
parcelHelpers.export(exports, "resolvePath", ()=>(0, _chunkXJI4KG32Mjs.resolvePath));
parcelHelpers.export(exports, "unstable_HistoryRouter", ()=>(0, _chunkXJI4KG32Mjs.HistoryRouter));
parcelHelpers.export(exports, "unstable_RouterContextProvider", ()=>(0, _chunkXJI4KG32Mjs.unstable_RouterContextProvider));
parcelHelpers.export(exports, "unstable_createContext", ()=>(0, _chunkXJI4KG32Mjs.unstable_createContext));
parcelHelpers.export(exports, "unstable_setDevServerHooks", ()=>(0, _chunkXJI4KG32Mjs.setDevServerHooks));
parcelHelpers.export(exports, "unstable_usePrompt", ()=>(0, _chunkXJI4KG32Mjs.usePrompt));
parcelHelpers.export(exports, "useActionData", ()=>(0, _chunkXJI4KG32Mjs.useActionData));
parcelHelpers.export(exports, "useAsyncError", ()=>(0, _chunkXJI4KG32Mjs.useAsyncError));
parcelHelpers.export(exports, "useAsyncValue", ()=>(0, _chunkXJI4KG32Mjs.useAsyncValue));
parcelHelpers.export(exports, "useBeforeUnload", ()=>(0, _chunkXJI4KG32Mjs.useBeforeUnload));
parcelHelpers.export(exports, "useBlocker", ()=>(0, _chunkXJI4KG32Mjs.useBlocker));
parcelHelpers.export(exports, "useFetcher", ()=>(0, _chunkXJI4KG32Mjs.useFetcher));
parcelHelpers.export(exports, "useFetchers", ()=>(0, _chunkXJI4KG32Mjs.useFetchers));
parcelHelpers.export(exports, "useFormAction", ()=>(0, _chunkXJI4KG32Mjs.useFormAction));
parcelHelpers.export(exports, "useHref", ()=>(0, _chunkXJI4KG32Mjs.useHref));
parcelHelpers.export(exports, "useInRouterContext", ()=>(0, _chunkXJI4KG32Mjs.useInRouterContext));
parcelHelpers.export(exports, "useLinkClickHandler", ()=>(0, _chunkXJI4KG32Mjs.useLinkClickHandler));
parcelHelpers.export(exports, "useLoaderData", ()=>(0, _chunkXJI4KG32Mjs.useLoaderData));
parcelHelpers.export(exports, "useLocation", ()=>(0, _chunkXJI4KG32Mjs.useLocation));
parcelHelpers.export(exports, "useMatch", ()=>(0, _chunkXJI4KG32Mjs.useMatch));
parcelHelpers.export(exports, "useMatches", ()=>(0, _chunkXJI4KG32Mjs.useMatches));
parcelHelpers.export(exports, "useNavigate", ()=>(0, _chunkXJI4KG32Mjs.useNavigate));
parcelHelpers.export(exports, "useNavigation", ()=>(0, _chunkXJI4KG32Mjs.useNavigation));
parcelHelpers.export(exports, "useNavigationType", ()=>(0, _chunkXJI4KG32Mjs.useNavigationType));
parcelHelpers.export(exports, "useOutlet", ()=>(0, _chunkXJI4KG32Mjs.useOutlet));
parcelHelpers.export(exports, "useOutletContext", ()=>(0, _chunkXJI4KG32Mjs.useOutletContext));
parcelHelpers.export(exports, "useParams", ()=>(0, _chunkXJI4KG32Mjs.useParams));
parcelHelpers.export(exports, "useResolvedPath", ()=>(0, _chunkXJI4KG32Mjs.useResolvedPath));
parcelHelpers.export(exports, "useRevalidator", ()=>(0, _chunkXJI4KG32Mjs.useRevalidator));
parcelHelpers.export(exports, "useRouteError", ()=>(0, _chunkXJI4KG32Mjs.useRouteError));
parcelHelpers.export(exports, "useRouteLoaderData", ()=>(0, _chunkXJI4KG32Mjs.useRouteLoaderData));
parcelHelpers.export(exports, "useRoutes", ()=>(0, _chunkXJI4KG32Mjs.useRoutes));
parcelHelpers.export(exports, "useSearchParams", ()=>(0, _chunkXJI4KG32Mjs.useSearchParams));
parcelHelpers.export(exports, "useSubmit", ()=>(0, _chunkXJI4KG32Mjs.useSubmit));
parcelHelpers.export(exports, "useViewTransitionState", ()=>(0, _chunkXJI4KG32Mjs.useViewTransitionState));
var _chunkXJI4KG32Mjs = require("./chunk-XJI4KG32.mjs");

},{"./chunk-XJI4KG32.mjs":"aQYso","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aQYso":[function(require,module,exports,__globalThis) {
/**
 * react-router v7.4.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Action", ()=>Action);
parcelHelpers.export(exports, "createBrowserHistory", ()=>createBrowserHistory);
parcelHelpers.export(exports, "invariant", ()=>invariant);
parcelHelpers.export(exports, "createPath", ()=>createPath);
parcelHelpers.export(exports, "parsePath", ()=>parsePath);
parcelHelpers.export(exports, "unstable_createContext", ()=>unstable_createContext);
parcelHelpers.export(exports, "unstable_RouterContextProvider", ()=>unstable_RouterContextProvider);
parcelHelpers.export(exports, "matchRoutes", ()=>matchRoutes);
parcelHelpers.export(exports, "generatePath", ()=>generatePath);
parcelHelpers.export(exports, "matchPath", ()=>matchPath);
parcelHelpers.export(exports, "resolvePath", ()=>resolvePath);
parcelHelpers.export(exports, "data", ()=>data);
parcelHelpers.export(exports, "redirect", ()=>redirect);
parcelHelpers.export(exports, "redirectDocument", ()=>redirectDocument);
parcelHelpers.export(exports, "replace", ()=>replace);
parcelHelpers.export(exports, "ErrorResponseImpl", ()=>ErrorResponseImpl);
parcelHelpers.export(exports, "isRouteErrorResponse", ()=>isRouteErrorResponse);
parcelHelpers.export(exports, "IDLE_NAVIGATION", ()=>IDLE_NAVIGATION);
parcelHelpers.export(exports, "IDLE_FETCHER", ()=>IDLE_FETCHER);
parcelHelpers.export(exports, "IDLE_BLOCKER", ()=>IDLE_BLOCKER);
parcelHelpers.export(exports, "createRouter", ()=>createRouter);
parcelHelpers.export(exports, "DataRouterContext", ()=>DataRouterContext);
parcelHelpers.export(exports, "DataRouterStateContext", ()=>DataRouterStateContext);
parcelHelpers.export(exports, "ViewTransitionContext", ()=>ViewTransitionContext);
parcelHelpers.export(exports, "FetchersContext", ()=>FetchersContext);
parcelHelpers.export(exports, "NavigationContext", ()=>NavigationContext);
parcelHelpers.export(exports, "LocationContext", ()=>LocationContext);
parcelHelpers.export(exports, "RouteContext", ()=>RouteContext);
parcelHelpers.export(exports, "useHref", ()=>useHref);
parcelHelpers.export(exports, "useInRouterContext", ()=>useInRouterContext);
parcelHelpers.export(exports, "useLocation", ()=>useLocation);
parcelHelpers.export(exports, "useNavigationType", ()=>useNavigationType);
parcelHelpers.export(exports, "useMatch", ()=>useMatch);
parcelHelpers.export(exports, "useNavigate", ()=>useNavigate);
parcelHelpers.export(exports, "useOutletContext", ()=>useOutletContext);
parcelHelpers.export(exports, "useOutlet", ()=>useOutlet);
parcelHelpers.export(exports, "useParams", ()=>useParams);
parcelHelpers.export(exports, "useResolvedPath", ()=>useResolvedPath);
parcelHelpers.export(exports, "useRoutes", ()=>useRoutes);
parcelHelpers.export(exports, "useNavigation", ()=>useNavigation);
parcelHelpers.export(exports, "useRevalidator", ()=>useRevalidator);
parcelHelpers.export(exports, "useMatches", ()=>useMatches);
parcelHelpers.export(exports, "useLoaderData", ()=>useLoaderData);
parcelHelpers.export(exports, "useRouteLoaderData", ()=>useRouteLoaderData);
parcelHelpers.export(exports, "useActionData", ()=>useActionData);
parcelHelpers.export(exports, "useRouteError", ()=>useRouteError);
parcelHelpers.export(exports, "useAsyncValue", ()=>useAsyncValue);
parcelHelpers.export(exports, "useAsyncError", ()=>useAsyncError);
parcelHelpers.export(exports, "useBlocker", ()=>useBlocker);
parcelHelpers.export(exports, "mapRouteProperties", ()=>mapRouteProperties);
parcelHelpers.export(exports, "createMemoryRouter", ()=>createMemoryRouter);
parcelHelpers.export(exports, "RouterProvider", ()=>RouterProvider);
parcelHelpers.export(exports, "MemoryRouter", ()=>MemoryRouter);
parcelHelpers.export(exports, "Navigate", ()=>Navigate);
parcelHelpers.export(exports, "Outlet", ()=>Outlet);
parcelHelpers.export(exports, "Route", ()=>Route);
parcelHelpers.export(exports, "Router", ()=>Router);
parcelHelpers.export(exports, "Routes", ()=>Routes);
parcelHelpers.export(exports, "Await", ()=>Await);
parcelHelpers.export(exports, "createRoutesFromChildren", ()=>createRoutesFromChildren);
parcelHelpers.export(exports, "createRoutesFromElements", ()=>createRoutesFromElements);
parcelHelpers.export(exports, "renderMatches", ()=>renderMatches);
parcelHelpers.export(exports, "createSearchParams", ()=>createSearchParams);
parcelHelpers.export(exports, "SingleFetchRedirectSymbol", ()=>SingleFetchRedirectSymbol);
parcelHelpers.export(exports, "getSingleFetchDataStrategy", ()=>getSingleFetchDataStrategy);
parcelHelpers.export(exports, "decodeViaTurboStream", ()=>decodeViaTurboStream);
parcelHelpers.export(exports, "RemixErrorBoundary", ()=>RemixErrorBoundary);
parcelHelpers.export(exports, "createClientRoutesWithHMRRevalidationOptOut", ()=>createClientRoutesWithHMRRevalidationOptOut);
parcelHelpers.export(exports, "createClientRoutes", ()=>createClientRoutes);
parcelHelpers.export(exports, "shouldHydrateRouteLoader", ()=>shouldHydrateRouteLoader);
parcelHelpers.export(exports, "getPatchRoutesOnNavigationFunction", ()=>getPatchRoutesOnNavigationFunction);
parcelHelpers.export(exports, "useFogOFWarDiscovery", ()=>useFogOFWarDiscovery);
parcelHelpers.export(exports, "FrameworkContext", ()=>FrameworkContext);
parcelHelpers.export(exports, "Links", ()=>Links);
parcelHelpers.export(exports, "PrefetchPageLinks", ()=>PrefetchPageLinks);
parcelHelpers.export(exports, "Meta", ()=>Meta);
parcelHelpers.export(exports, "Scripts", ()=>Scripts);
parcelHelpers.export(exports, "createBrowserRouter", ()=>createBrowserRouter);
parcelHelpers.export(exports, "createHashRouter", ()=>createHashRouter);
parcelHelpers.export(exports, "BrowserRouter", ()=>BrowserRouter);
parcelHelpers.export(exports, "HashRouter", ()=>HashRouter);
parcelHelpers.export(exports, "HistoryRouter", ()=>HistoryRouter);
parcelHelpers.export(exports, "Link", ()=>Link);
parcelHelpers.export(exports, "NavLink", ()=>NavLink);
parcelHelpers.export(exports, "Form", ()=>Form);
parcelHelpers.export(exports, "ScrollRestoration", ()=>ScrollRestoration);
parcelHelpers.export(exports, "useLinkClickHandler", ()=>useLinkClickHandler);
parcelHelpers.export(exports, "useSearchParams", ()=>useSearchParams);
parcelHelpers.export(exports, "useSubmit", ()=>useSubmit);
parcelHelpers.export(exports, "useFormAction", ()=>useFormAction);
parcelHelpers.export(exports, "useFetcher", ()=>useFetcher);
parcelHelpers.export(exports, "useFetchers", ()=>useFetchers);
parcelHelpers.export(exports, "useScrollRestoration", ()=>useScrollRestoration);
parcelHelpers.export(exports, "useBeforeUnload", ()=>useBeforeUnload);
parcelHelpers.export(exports, "usePrompt", ()=>usePrompt);
parcelHelpers.export(exports, "useViewTransitionState", ()=>useViewTransitionState);
parcelHelpers.export(exports, "StaticRouter", ()=>StaticRouter);
parcelHelpers.export(exports, "StaticRouterProvider", ()=>StaticRouterProvider);
parcelHelpers.export(exports, "createStaticHandler", ()=>createStaticHandler2);
parcelHelpers.export(exports, "createStaticRouter", ()=>createStaticRouter);
parcelHelpers.export(exports, "ServerRouter", ()=>ServerRouter);
parcelHelpers.export(exports, "createRoutesStub", ()=>createRoutesStub);
parcelHelpers.export(exports, "createCookie", ()=>createCookie);
parcelHelpers.export(exports, "isCookie", ()=>isCookie);
parcelHelpers.export(exports, "ServerMode", ()=>ServerMode);
parcelHelpers.export(exports, "setDevServerHooks", ()=>setDevServerHooks);
parcelHelpers.export(exports, "createRequestHandler", ()=>createRequestHandler);
parcelHelpers.export(exports, "createSession", ()=>createSession);
parcelHelpers.export(exports, "isSession", ()=>isSession);
parcelHelpers.export(exports, "createSessionStorage", ()=>createSessionStorage);
parcelHelpers.export(exports, "createCookieSessionStorage", ()=>createCookieSessionStorage);
parcelHelpers.export(exports, "createMemorySessionStorage", ()=>createMemorySessionStorage);
parcelHelpers.export(exports, "href", ()=>href);
parcelHelpers.export(exports, "deserializeErrors", ()=>deserializeErrors2);
// lib/components.tsx
var _react = require("react");
var _turboStream = require("turbo-stream");
// lib/server-runtime/cookies.ts
var _cookie = require("cookie");
// lib/server-runtime/headers.ts
var _setCookieParser = require("set-cookie-parser");
var $c5635dc078d5faa6$import_meta = Object.assign(Object.create(null), {
    url: "file:///node_modules/react-router/dist/development/chunk-XJI4KG32.mjs"
});
var global = arguments[3];
var __typeError = (msg)=>{
    throw TypeError(msg);
};
var __accessCheck = (obj, member, msg)=>member.has(obj) || __typeError("Cannot " + msg);
var __privateGet = (obj, member, getter)=>(__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value)=>member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
// lib/router/history.ts
var Action = /* @__PURE__ */ ((Action2)=>{
    Action2["Pop"] = "POP";
    Action2["Push"] = "PUSH";
    Action2["Replace"] = "REPLACE";
    return Action2;
})(Action || {});
var PopStateEventType = "popstate";
function createMemoryHistory(options = {}) {
    let { initialEntries = [
        "/"
    ], initialIndex, v5Compat = false } = options;
    let entries;
    entries = initialEntries.map((entry, index2)=>createMemoryLocation(entry, typeof entry === "string" ? null : entry.state, index2 === 0 ? "default" : void 0));
    let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);
    let action = "POP" /* Pop */ ;
    let listener = null;
    function clampIndex(n) {
        return Math.min(Math.max(n, 0), entries.length - 1);
    }
    function getCurrentLocation() {
        return entries[index];
    }
    function createMemoryLocation(to, state = null, key) {
        let location = createLocation(entries ? getCurrentLocation().pathname : "/", to, state, key);
        warning(location.pathname.charAt(0) === "/", `relative pathnames are not supported in memory history: ${JSON.stringify(to)}`);
        return location;
    }
    function createHref2(to) {
        return typeof to === "string" ? to : createPath(to);
    }
    let history = {
        get index () {
            return index;
        },
        get action () {
            return action;
        },
        get location () {
            return getCurrentLocation();
        },
        createHref: createHref2,
        createURL (to) {
            return new URL(createHref2(to), "http://localhost");
        },
        encodeLocation (to) {
            let path = typeof to === "string" ? parsePath(to) : to;
            return {
                pathname: path.pathname || "",
                search: path.search || "",
                hash: path.hash || ""
            };
        },
        push (to, state) {
            action = "PUSH" /* Push */ ;
            let nextLocation = createMemoryLocation(to, state);
            index += 1;
            entries.splice(index, entries.length, nextLocation);
            if (v5Compat && listener) listener({
                action,
                location: nextLocation,
                delta: 1
            });
        },
        replace (to, state) {
            action = "REPLACE" /* Replace */ ;
            let nextLocation = createMemoryLocation(to, state);
            entries[index] = nextLocation;
            if (v5Compat && listener) listener({
                action,
                location: nextLocation,
                delta: 0
            });
        },
        go (delta) {
            action = "POP" /* Pop */ ;
            let nextIndex = clampIndex(index + delta);
            let nextLocation = entries[nextIndex];
            index = nextIndex;
            if (listener) listener({
                action,
                location: nextLocation,
                delta
            });
        },
        listen (fn) {
            listener = fn;
            return ()=>{
                listener = null;
            };
        }
    };
    return history;
}
function createBrowserHistory(options = {}) {
    function createBrowserLocation(window2, globalHistory) {
        let { pathname, search, hash } = window2.location;
        return createLocation("", {
            pathname,
            search,
            hash
        }, // state defaults to `null` because `window.history.state` does
        globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
    }
    function createBrowserHref(window2, to) {
        return typeof to === "string" ? to : createPath(to);
    }
    return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
function createHashHistory(options = {}) {
    function createHashLocation(window2, globalHistory) {
        let { pathname = "/", search = "", hash = "" } = parsePath(window2.location.hash.substring(1));
        if (!pathname.startsWith("/") && !pathname.startsWith(".")) pathname = "/" + pathname;
        return createLocation("", {
            pathname,
            search,
            hash
        }, // state defaults to `null` because `window.history.state` does
        globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
    }
    function createHashHref(window2, to) {
        let base = window2.document.querySelector("base");
        let href2 = "";
        if (base && base.getAttribute("href")) {
            let url = window2.location.href;
            let hashIndex = url.indexOf("#");
            href2 = hashIndex === -1 ? url : url.slice(0, hashIndex);
        }
        return href2 + "#" + (typeof to === "string" ? to : createPath(to));
    }
    function validateHashLocation(location, to) {
        warning(location.pathname.charAt(0) === "/", `relative pathnames are not supported in hash history.push(${JSON.stringify(to)})`);
    }
    return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);
}
function invariant(value, message) {
    if (value === false || value === null || typeof value === "undefined") throw new Error(message);
}
function warning(cond, message) {
    if (!cond) {
        if (typeof console !== "undefined") console.warn(message);
        try {
            throw new Error(message);
        } catch (e) {}
    }
}
function createKey() {
    return Math.random().toString(36).substring(2, 10);
}
function getHistoryState(location, index) {
    return {
        usr: location.state,
        key: location.key,
        idx: index
    };
}
function createLocation(current, to, state = null, key) {
    let location = {
        pathname: typeof current === "string" ? current : current.pathname,
        search: "",
        hash: "",
        ...typeof to === "string" ? parsePath(to) : to,
        state,
        // TODO: This could be cleaned up.  push/replace should probably just take
        // full Locations now and avoid the need to run through this flow at all
        // But that's a pretty big refactor to the current test suite so going to
        // keep as is for the time being and just let any incoming keys take precedence
        key: to && to.key || key || createKey()
    };
    return location;
}
function createPath({ pathname = "/", search = "", hash = "" }) {
    if (search && search !== "?") pathname += search.charAt(0) === "?" ? search : "?" + search;
    if (hash && hash !== "#") pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
    return pathname;
}
function parsePath(path) {
    let parsedPath = {};
    if (path) {
        let hashIndex = path.indexOf("#");
        if (hashIndex >= 0) {
            parsedPath.hash = path.substring(hashIndex);
            path = path.substring(0, hashIndex);
        }
        let searchIndex = path.indexOf("?");
        if (searchIndex >= 0) {
            parsedPath.search = path.substring(searchIndex);
            path = path.substring(0, searchIndex);
        }
        if (path) parsedPath.pathname = path;
    }
    return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {
    let { window: window2 = document.defaultView, v5Compat = false } = options;
    let globalHistory = window2.history;
    let action = "POP" /* Pop */ ;
    let listener = null;
    let index = getIndex();
    if (index == null) {
        index = 0;
        globalHistory.replaceState({
            ...globalHistory.state,
            idx: index
        }, "");
    }
    function getIndex() {
        let state = globalHistory.state || {
            idx: null
        };
        return state.idx;
    }
    function handlePop() {
        action = "POP" /* Pop */ ;
        let nextIndex = getIndex();
        let delta = nextIndex == null ? null : nextIndex - index;
        index = nextIndex;
        if (listener) listener({
            action,
            location: history.location,
            delta
        });
    }
    function push(to, state) {
        action = "PUSH" /* Push */ ;
        let location = createLocation(history.location, to, state);
        if (validateLocation) validateLocation(location, to);
        index = getIndex() + 1;
        let historyState = getHistoryState(location, index);
        let url = history.createHref(location);
        try {
            globalHistory.pushState(historyState, "", url);
        } catch (error) {
            if (error instanceof DOMException && error.name === "DataCloneError") throw error;
            window2.location.assign(url);
        }
        if (v5Compat && listener) listener({
            action,
            location: history.location,
            delta: 1
        });
    }
    function replace2(to, state) {
        action = "REPLACE" /* Replace */ ;
        let location = createLocation(history.location, to, state);
        if (validateLocation) validateLocation(location, to);
        index = getIndex();
        let historyState = getHistoryState(location, index);
        let url = history.createHref(location);
        globalHistory.replaceState(historyState, "", url);
        if (v5Compat && listener) listener({
            action,
            location: history.location,
            delta: 0
        });
    }
    function createURL(to) {
        let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href;
        let href2 = typeof to === "string" ? to : createPath(to);
        href2 = href2.replace(/ $/, "%20");
        invariant(base, `No window.location.(origin|href) available to create URL for href: ${href2}`);
        return new URL(href2, base);
    }
    let history = {
        get action () {
            return action;
        },
        get location () {
            return getLocation(window2, globalHistory);
        },
        listen (fn) {
            if (listener) throw new Error("A history only accepts one active listener");
            window2.addEventListener(PopStateEventType, handlePop);
            listener = fn;
            return ()=>{
                window2.removeEventListener(PopStateEventType, handlePop);
                listener = null;
            };
        },
        createHref (to) {
            return createHref2(window2, to);
        },
        createURL,
        encodeLocation (to) {
            let url = createURL(to);
            return {
                pathname: url.pathname,
                search: url.search,
                hash: url.hash
            };
        },
        push,
        replace: replace2,
        go (n) {
            return globalHistory.go(n);
        }
    };
    return history;
}
// lib/router/utils.ts
function unstable_createContext(defaultValue) {
    return {
        defaultValue
    };
}
var _map;
var unstable_RouterContextProvider = class {
    constructor(init){
        __privateAdd(this, _map, /* @__PURE__ */ new Map());
        if (init) for (let [context, value] of init)this.set(context, value);
    }
    get(context) {
        if (__privateGet(this, _map).has(context)) return __privateGet(this, _map).get(context);
        if (context.defaultValue !== void 0) return context.defaultValue;
        throw new Error("No value found for context");
    }
    set(context, value) {
        __privateGet(this, _map).set(context, value);
    }
};
_map = new WeakMap();
var unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([
    "lazy",
    "caseSensitive",
    "path",
    "id",
    "index",
    "unstable_middleware",
    "unstable_lazyMiddleware",
    "children"
]);
function isIndexRoute(route) {
    return route.index === true;
}
function convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {
    return routes.map((route, index)=>{
        let treePath = [
            ...parentPath,
            String(index)
        ];
        let id = typeof route.id === "string" ? route.id : treePath.join("-");
        invariant(route.index !== true || !route.children, `Cannot specify children on an index route`);
        invariant(!manifest[id], `Found a route id collision on id "${id}".  Route id's must be globally unique within Data Router usages`);
        if (isIndexRoute(route)) {
            let indexRoute = {
                ...route,
                ...mapRouteProperties2(route),
                id
            };
            manifest[id] = indexRoute;
            return indexRoute;
        } else {
            let pathOrLayoutRoute = {
                ...route,
                ...mapRouteProperties2(route),
                id,
                children: void 0
            };
            manifest[id] = pathOrLayoutRoute;
            if (route.children) pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties2, treePath, manifest);
            return pathOrLayoutRoute;
        }
    });
}
function matchRoutes(routes, locationArg, basename = "/") {
    return matchRoutesImpl(routes, locationArg, basename, false);
}
function matchRoutesImpl(routes, locationArg, basename, allowPartial) {
    let location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    let pathname = stripBasename(location.pathname || "/", basename);
    if (pathname == null) return null;
    let branches = flattenRoutes(routes);
    rankRouteBranches(branches);
    let matches = null;
    for(let i = 0; matches == null && i < branches.length; ++i){
        let decoded = decodePath(pathname);
        matches = matchRouteBranch(branches[i], decoded, allowPartial);
    }
    return matches;
}
function convertRouteMatchToUiMatch(match, loaderData) {
    let { route, pathname, params } = match;
    return {
        id: route.id,
        pathname,
        params,
        data: loaderData[route.id],
        handle: route.handle
    };
}
function flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = "") {
    let flattenRoute = (route, index, relativePath)=>{
        let meta = {
            relativePath: relativePath === void 0 ? route.path || "" : relativePath,
            caseSensitive: route.caseSensitive === true,
            childrenIndex: index,
            route
        };
        if (meta.relativePath.startsWith("/")) {
            invariant(meta.relativePath.startsWith(parentPath), `Absolute route path "${meta.relativePath}" nested under path "${parentPath}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`);
            meta.relativePath = meta.relativePath.slice(parentPath.length);
        }
        let path = joinPaths([
            parentPath,
            meta.relativePath
        ]);
        let routesMeta = parentsMeta.concat(meta);
        if (route.children && route.children.length > 0) {
            invariant(// Our types know better, but runtime JS may not!
            // @ts-expect-error
            route.index !== true, `Index routes must not have child routes. Please remove all child routes from route path "${path}".`);
            flattenRoutes(route.children, branches, routesMeta, path);
        }
        if (route.path == null && !route.index) return;
        branches.push({
            path,
            score: computeScore(path, route.index),
            routesMeta
        });
    };
    routes.forEach((route, index)=>{
        if (route.path === "" || !route.path?.includes("?")) flattenRoute(route, index);
        else for (let exploded of explodeOptionalSegments(route.path))flattenRoute(route, index, exploded);
    });
    return branches;
}
function explodeOptionalSegments(path) {
    let segments = path.split("/");
    if (segments.length === 0) return [];
    let [first, ...rest] = segments;
    let isOptional = first.endsWith("?");
    let required = first.replace(/\?$/, "");
    if (rest.length === 0) return isOptional ? [
        required,
        ""
    ] : [
        required
    ];
    let restExploded = explodeOptionalSegments(rest.join("/"));
    let result = [];
    result.push(...restExploded.map((subpath)=>subpath === "" ? required : [
            required,
            subpath
        ].join("/")));
    if (isOptional) result.push(...restExploded);
    return result.map((exploded)=>path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
    branches.sort((a, b)=>a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map((meta)=>meta.childrenIndex), b.routesMeta.map((meta)=>meta.childrenIndex)));
}
var paramRe = /^:[\w-]+$/;
var dynamicSegmentValue = 3;
var indexRouteValue = 2;
var emptySegmentValue = 1;
var staticSegmentValue = 10;
var splatPenalty = -2;
var isSplat = (s)=>s === "*";
function computeScore(path, index) {
    let segments = path.split("/");
    let initialScore = segments.length;
    if (segments.some(isSplat)) initialScore += splatPenalty;
    if (index) initialScore += indexRouteValue;
    return segments.filter((s)=>!isSplat(s)).reduce((score, segment)=>score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a, b) {
    let siblings = a.length === b.length && a.slice(0, -1).every((n, i)=>n === b[i]);
    return siblings ? // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0;
}
function matchRouteBranch(branch, pathname, allowPartial = false) {
    let { routesMeta } = branch;
    let matchedParams = {};
    let matchedPathname = "/";
    let matches = [];
    for(let i = 0; i < routesMeta.length; ++i){
        let meta = routesMeta[i];
        let end = i === routesMeta.length - 1;
        let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
        let match = matchPath({
            path: meta.relativePath,
            caseSensitive: meta.caseSensitive,
            end
        }, remainingPathname);
        let route = meta.route;
        if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) match = matchPath({
            path: meta.relativePath,
            caseSensitive: meta.caseSensitive,
            end: false
        }, remainingPathname);
        if (!match) return null;
        Object.assign(matchedParams, match.params);
        matches.push({
            // TODO: Can this as be avoided?
            params: matchedParams,
            pathname: joinPaths([
                matchedPathname,
                match.pathname
            ]),
            pathnameBase: normalizePathname(joinPaths([
                matchedPathname,
                match.pathnameBase
            ])),
            route
        });
        if (match.pathnameBase !== "/") matchedPathname = joinPaths([
            matchedPathname,
            match.pathnameBase
        ]);
    }
    return matches;
}
function generatePath(originalPath, params = {}) {
    let path = originalPath;
    if (path.endsWith("*") && path !== "*" && !path.endsWith("/*")) {
        warning(false, `Route path "${path}" will be treated as if it were "${path.replace(/\*$/, "/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${path.replace(/\*$/, "/*")}".`);
        path = path.replace(/\*$/, "/*");
    }
    const prefix = path.startsWith("/") ? "/" : "";
    const stringify = (p)=>p == null ? "" : typeof p === "string" ? p : String(p);
    const segments = path.split(/\/+/).map((segment, index, array)=>{
        const isLastSegment = index === array.length - 1;
        if (isLastSegment && segment === "*") {
            const star = "*";
            return stringify(params[star]);
        }
        const keyMatch = segment.match(/^:([\w-]+)(\??)$/);
        if (keyMatch) {
            const [, key, optional] = keyMatch;
            let param = params[key];
            invariant(optional === "?" || param != null, `Missing ":${key}" param`);
            return stringify(param);
        }
        return segment.replace(/\?$/g, "");
    }).filter((segment)=>!!segment);
    return prefix + segments.join("/");
}
function matchPath(pattern, pathname) {
    if (typeof pattern === "string") pattern = {
        path: pattern,
        caseSensitive: false,
        end: true
    };
    let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
    let match = pathname.match(matcher);
    if (!match) return null;
    let matchedPathname = match[0];
    let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
    let captureGroups = match.slice(1);
    let params = compiledParams.reduce((memo2, { paramName, isOptional }, index)=>{
        if (paramName === "*") {
            let splatValue = captureGroups[index] || "";
            pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
        }
        const value = captureGroups[index];
        if (isOptional && !value) memo2[paramName] = void 0;
        else memo2[paramName] = (value || "").replace(/%2F/g, "/");
        return memo2;
    }, {});
    return {
        params,
        pathname: matchedPathname,
        pathnameBase,
        pattern
    };
}
function compilePath(path, caseSensitive = false, end = true) {
    warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), `Route path "${path}" will be treated as if it were "${path.replace(/\*$/, "/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${path.replace(/\*$/, "/*")}".`);
    let params = [];
    let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (_, paramName, isOptional)=>{
        params.push({
            paramName,
            isOptional: isOptional != null
        });
        return isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)";
    });
    if (path.endsWith("*")) {
        params.push({
            paramName: "*"
        });
        regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
    } else if (end) regexpSource += "\\/*$";
    else if (path !== "" && path !== "/") regexpSource += "(?:(?=\\/|$))";
    let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
    return [
        matcher,
        params
    ];
}
function decodePath(value) {
    try {
        return value.split("/").map((v)=>decodeURIComponent(v).replace(/\//g, "%2F")).join("/");
    } catch (error) {
        warning(false, `The URL path "${value}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`);
        return value;
    }
}
function stripBasename(pathname, basename) {
    if (basename === "/") return pathname;
    if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) return null;
    let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
    let nextChar = pathname.charAt(startIndex);
    if (nextChar && nextChar !== "/") return null;
    return pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname = "/") {
    let { pathname: toPathname, search = "", hash = "" } = typeof to === "string" ? parsePath(to) : to;
    let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
    return {
        pathname,
        search: normalizeSearch(search),
        hash: normalizeHash(hash)
    };
}
function resolvePathname(relativePath, fromPathname) {
    let segments = fromPathname.replace(/\/+$/, "").split("/");
    let relativeSegments = relativePath.split("/");
    relativeSegments.forEach((segment)=>{
        if (segment === "..") {
            if (segments.length > 1) segments.pop();
        } else if (segment !== ".") segments.push(segment);
    });
    return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
    return `Cannot include a '${char}' character in a manually specified \`to.${field}\` field [${JSON.stringify(path)}].  Please separate it out to the \`to.${dest}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`;
}
function getPathContributingMatches(matches) {
    return matches.filter((match, index)=>index === 0 || match.route.path && match.route.path.length > 0);
}
function getResolveToMatches(matches) {
    let pathMatches = getPathContributingMatches(matches);
    return pathMatches.map((match, idx)=>idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {
    let to;
    if (typeof toArg === "string") to = parsePath(toArg);
    else {
        to = {
            ...toArg
        };
        invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));
        invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));
        invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));
    }
    let isEmptyPath = toArg === "" || to.pathname === "";
    let toPathname = isEmptyPath ? "/" : to.pathname;
    let from;
    if (toPathname == null) from = locationPathname;
    else {
        let routePathnameIndex = routePathnames.length - 1;
        if (!isPathRelative && toPathname.startsWith("..")) {
            let toSegments = toPathname.split("/");
            while(toSegments[0] === ".."){
                toSegments.shift();
                routePathnameIndex -= 1;
            }
            to.pathname = toSegments.join("/");
        }
        from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
    }
    let path = resolvePath(to, from);
    let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
    let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
    if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) path.pathname += "/";
    return path;
}
var joinPaths = (paths)=>paths.join("/").replace(/\/\/+/g, "/");
var normalizePathname = (pathname)=>pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
var normalizeSearch = (search)=>!search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
var normalizeHash = (hash)=>!hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
var DataWithResponseInit = class {
    constructor(data2, init){
        this.type = "DataWithResponseInit";
        this.data = data2;
        this.init = init || null;
    }
};
function data(data2, init) {
    return new DataWithResponseInit(data2, typeof init === "number" ? {
        status: init
    } : init);
}
var redirect = (url, init = 302)=>{
    let responseInit = init;
    if (typeof responseInit === "number") responseInit = {
        status: responseInit
    };
    else if (typeof responseInit.status === "undefined") responseInit.status = 302;
    let headers = new Headers(responseInit.headers);
    headers.set("Location", url);
    return new Response(null, {
        ...responseInit,
        headers
    });
};
var redirectDocument = (url, init)=>{
    let response = redirect(url, init);
    response.headers.set("X-Remix-Reload-Document", "true");
    return response;
};
var replace = (url, init)=>{
    let response = redirect(url, init);
    response.headers.set("X-Remix-Replace", "true");
    return response;
};
var ErrorResponseImpl = class {
    constructor(status, statusText, data2, internal = false){
        this.status = status;
        this.statusText = statusText || "";
        this.internal = internal;
        if (data2 instanceof Error) {
            this.data = data2.toString();
            this.error = data2;
        } else this.data = data2;
    }
};
function isRouteErrorResponse(error) {
    return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}
// lib/router/router.ts
var validMutationMethodsArr = [
    "POST",
    "PUT",
    "PATCH",
    "DELETE"
];
var validMutationMethods = new Set(validMutationMethodsArr);
var validRequestMethodsArr = [
    "GET",
    ...validMutationMethodsArr
];
var validRequestMethods = new Set(validRequestMethodsArr);
var redirectStatusCodes = /* @__PURE__ */ new Set([
    301,
    302,
    303,
    307,
    308
]);
var redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([
    307,
    308
]);
var IDLE_NAVIGATION = {
    state: "idle",
    location: void 0,
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0
};
var IDLE_FETCHER = {
    state: "idle",
    data: void 0,
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0
};
var IDLE_BLOCKER = {
    state: "unblocked",
    proceed: void 0,
    reset: void 0,
    location: void 0
};
var ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var defaultMapRouteProperties = (route)=>({
        hasErrorBoundary: Boolean(route.hasErrorBoundary)
    });
var TRANSITIONS_STORAGE_KEY = "remix-router-transitions";
var ResetLoaderDataSymbol = Symbol("ResetLoaderData");
function createRouter(init) {
    const routerWindow = init.window ? init.window : typeof window !== "undefined" ? window : void 0;
    const isBrowser2 = typeof routerWindow !== "undefined" && typeof routerWindow.document !== "undefined" && typeof routerWindow.document.createElement !== "undefined";
    invariant(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
    let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;
    let manifest = {};
    let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties2, void 0, manifest);
    let inFlightDataRoutes;
    let basename = init.basename || "/";
    let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;
    let future = {
        unstable_middleware: false,
        ...init.future
    };
    let unlistenHistory = null;
    let subscribers = /* @__PURE__ */ new Set();
    let savedScrollPositions2 = null;
    let getScrollRestorationKey2 = null;
    let getScrollPosition = null;
    let initialScrollRestored = init.hydrationData != null;
    let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);
    let initialMatchesIsFOW = false;
    let initialErrors = null;
    if (initialMatches == null && !init.patchRoutesOnNavigation) {
        let error = getInternalRouterError(404, {
            pathname: init.history.location.pathname
        });
        let { matches, route } = getShortCircuitMatches(dataRoutes);
        initialMatches = matches;
        initialErrors = {
            [route.id]: error
        };
    }
    if (initialMatches && !init.hydrationData) {
        let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);
        if (fogOfWar.active) initialMatches = null;
    }
    let initialized;
    if (!initialMatches) {
        initialized = false;
        initialMatches = [];
        let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);
        if (fogOfWar.active && fogOfWar.matches) {
            initialMatchesIsFOW = true;
            initialMatches = fogOfWar.matches;
        }
    } else if (initialMatches.some((m)=>m.route.lazy)) initialized = false;
    else if (!initialMatches.some((m)=>m.route.loader)) initialized = true;
    else {
        let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;
        let errors = init.hydrationData ? init.hydrationData.errors : null;
        if (errors) {
            let idx = initialMatches.findIndex((m)=>errors[m.route.id] !== void 0);
            initialized = initialMatches.slice(0, idx + 1).every((m)=>!shouldLoadRouteOnHydration(m.route, loaderData, errors));
        } else initialized = initialMatches.every((m)=>!shouldLoadRouteOnHydration(m.route, loaderData, errors));
    }
    let router;
    let state = {
        historyAction: init.history.action,
        location: init.history.location,
        matches: initialMatches,
        initialized,
        navigation: IDLE_NAVIGATION,
        // Don't restore on initial updateState() if we were SSR'd
        restoreScrollPosition: init.hydrationData != null ? false : null,
        preventScrollReset: false,
        revalidation: "idle",
        loaderData: init.hydrationData && init.hydrationData.loaderData || {},
        actionData: init.hydrationData && init.hydrationData.actionData || null,
        errors: init.hydrationData && init.hydrationData.errors || initialErrors,
        fetchers: /* @__PURE__ */ new Map(),
        blockers: /* @__PURE__ */ new Map()
    };
    let pendingAction = "POP" /* Pop */ ;
    let pendingPreventScrollReset = false;
    let pendingNavigationController;
    let pendingViewTransitionEnabled = false;
    let appliedViewTransitions = /* @__PURE__ */ new Map();
    let removePageHideEventListener = null;
    let isUninterruptedRevalidation = false;
    let isRevalidationRequired = false;
    let cancelledFetcherLoads = /* @__PURE__ */ new Set();
    let fetchControllers = /* @__PURE__ */ new Map();
    let incrementingLoadId = 0;
    let pendingNavigationLoadId = -1;
    let fetchReloadIds = /* @__PURE__ */ new Map();
    let fetchRedirectIds = /* @__PURE__ */ new Set();
    let fetchLoadMatches = /* @__PURE__ */ new Map();
    let activeFetchers = /* @__PURE__ */ new Map();
    let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();
    let blockerFunctions = /* @__PURE__ */ new Map();
    let unblockBlockerHistoryUpdate = void 0;
    let pendingRevalidationDfd = null;
    function initialize() {
        unlistenHistory = init.history.listen(({ action: historyAction, location, delta })=>{
            if (unblockBlockerHistoryUpdate) {
                unblockBlockerHistoryUpdate();
                unblockBlockerHistoryUpdate = void 0;
                return;
            }
            warning(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
            let blockerKey = shouldBlockNavigation({
                currentLocation: state.location,
                nextLocation: location,
                historyAction
            });
            if (blockerKey && delta != null) {
                let nextHistoryUpdatePromise = new Promise((resolve)=>{
                    unblockBlockerHistoryUpdate = resolve;
                });
                init.history.go(delta * -1);
                updateBlocker(blockerKey, {
                    state: "blocked",
                    location,
                    proceed () {
                        updateBlocker(blockerKey, {
                            state: "proceeding",
                            proceed: void 0,
                            reset: void 0,
                            location
                        });
                        nextHistoryUpdatePromise.then(()=>init.history.go(delta));
                    },
                    reset () {
                        let blockers = new Map(state.blockers);
                        blockers.set(blockerKey, IDLE_BLOCKER);
                        updateState({
                            blockers
                        });
                    }
                });
                return;
            }
            return startNavigation(historyAction, location);
        });
        if (isBrowser2) {
            restoreAppliedTransitions(routerWindow, appliedViewTransitions);
            let _saveAppliedTransitions = ()=>persistAppliedTransitions(routerWindow, appliedViewTransitions);
            routerWindow.addEventListener("pagehide", _saveAppliedTransitions);
            removePageHideEventListener = ()=>routerWindow.removeEventListener("pagehide", _saveAppliedTransitions);
        }
        if (!state.initialized) startNavigation("POP" /* Pop */ , state.location, {
            initialHydration: true
        });
        return router;
    }
    function dispose() {
        if (unlistenHistory) unlistenHistory();
        if (removePageHideEventListener) removePageHideEventListener();
        subscribers.clear();
        pendingNavigationController && pendingNavigationController.abort();
        state.fetchers.forEach((_, key)=>deleteFetcher(key));
        state.blockers.forEach((_, key)=>deleteBlocker(key));
    }
    function subscribe(fn) {
        subscribers.add(fn);
        return ()=>subscribers.delete(fn);
    }
    function updateState(newState, opts = {}) {
        state = {
            ...state,
            ...newState
        };
        let unmountedFetchers = [];
        let mountedFetchers = [];
        state.fetchers.forEach((fetcher, key)=>{
            if (fetcher.state === "idle") {
                if (fetchersQueuedForDeletion.has(key)) unmountedFetchers.push(key);
                else mountedFetchers.push(key);
            }
        });
        fetchersQueuedForDeletion.forEach((key)=>{
            if (!state.fetchers.has(key) && !fetchControllers.has(key)) unmountedFetchers.push(key);
        });
        [
            ...subscribers
        ].forEach((subscriber)=>subscriber(state, {
                deletedFetchers: unmountedFetchers,
                viewTransitionOpts: opts.viewTransitionOpts,
                flushSync: opts.flushSync === true
            }));
        unmountedFetchers.forEach((key)=>deleteFetcher(key));
        mountedFetchers.forEach((key)=>state.fetchers.delete(key));
    }
    function completeNavigation(location, newState, { flushSync } = {}) {
        let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && location.state?._isRedirect !== true;
        let actionData;
        if (newState.actionData) {
            if (Object.keys(newState.actionData).length > 0) actionData = newState.actionData;
            else actionData = null;
        } else if (isActionReload) actionData = state.actionData;
        else actionData = null;
        let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;
        let blockers = state.blockers;
        if (blockers.size > 0) {
            blockers = new Map(blockers);
            blockers.forEach((_, k)=>blockers.set(k, IDLE_BLOCKER));
        }
        let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;
        if (inFlightDataRoutes) {
            dataRoutes = inFlightDataRoutes;
            inFlightDataRoutes = void 0;
        }
        if (isUninterruptedRevalidation) ;
        else if (pendingAction === "POP" /* Pop */ ) ;
        else if (pendingAction === "PUSH" /* Push */ ) init.history.push(location, location.state);
        else if (pendingAction === "REPLACE" /* Replace */ ) init.history.replace(location, location.state);
        let viewTransitionOpts;
        if (pendingAction === "POP" /* Pop */ ) {
            let priorPaths = appliedViewTransitions.get(state.location.pathname);
            if (priorPaths && priorPaths.has(location.pathname)) viewTransitionOpts = {
                currentLocation: state.location,
                nextLocation: location
            };
            else if (appliedViewTransitions.has(location.pathname)) viewTransitionOpts = {
                currentLocation: location,
                nextLocation: state.location
            };
        } else if (pendingViewTransitionEnabled) {
            let toPaths = appliedViewTransitions.get(state.location.pathname);
            if (toPaths) toPaths.add(location.pathname);
            else {
                toPaths = /* @__PURE__ */ new Set([
                    location.pathname
                ]);
                appliedViewTransitions.set(state.location.pathname, toPaths);
            }
            viewTransitionOpts = {
                currentLocation: state.location,
                nextLocation: location
            };
        }
        updateState({
            ...newState,
            // matches, errors, fetchers go through as-is
            actionData,
            loaderData,
            historyAction: pendingAction,
            location,
            initialized: true,
            navigation: IDLE_NAVIGATION,
            revalidation: "idle",
            restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),
            preventScrollReset,
            blockers
        }, {
            viewTransitionOpts,
            flushSync: flushSync === true
        });
        pendingAction = "POP" /* Pop */ ;
        pendingPreventScrollReset = false;
        pendingViewTransitionEnabled = false;
        isUninterruptedRevalidation = false;
        isRevalidationRequired = false;
        pendingRevalidationDfd?.resolve();
        pendingRevalidationDfd = null;
    }
    async function navigate(to, opts) {
        if (typeof to === "number") {
            init.history.go(to);
            return;
        }
        let normalizedPath = normalizeTo(state.location, state.matches, basename, to, opts?.fromRouteId, opts?.relative);
        let { path, submission, error } = normalizeNavigateOptions(false, normalizedPath, opts);
        let currentLocation = state.location;
        let nextLocation = createLocation(state.location, path, opts && opts.state);
        nextLocation = {
            ...nextLocation,
            ...init.history.encodeLocation(nextLocation)
        };
        let userReplace = opts && opts.replace != null ? opts.replace : void 0;
        let historyAction = "PUSH" /* Push */ ;
        if (userReplace === true) historyAction = "REPLACE" /* Replace */ ;
        else if (userReplace === false) ;
        else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) historyAction = "REPLACE" /* Replace */ ;
        let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === true : void 0;
        let flushSync = (opts && opts.flushSync) === true;
        let blockerKey = shouldBlockNavigation({
            currentLocation,
            nextLocation,
            historyAction
        });
        if (blockerKey) {
            updateBlocker(blockerKey, {
                state: "blocked",
                location: nextLocation,
                proceed () {
                    updateBlocker(blockerKey, {
                        state: "proceeding",
                        proceed: void 0,
                        reset: void 0,
                        location: nextLocation
                    });
                    navigate(to, opts);
                },
                reset () {
                    let blockers = new Map(state.blockers);
                    blockers.set(blockerKey, IDLE_BLOCKER);
                    updateState({
                        blockers
                    });
                }
            });
            return;
        }
        await startNavigation(historyAction, nextLocation, {
            submission,
            // Send through the formData serialization error if we have one so we can
            // render at the right error boundary after we match routes
            pendingError: error,
            preventScrollReset,
            replace: opts && opts.replace,
            enableViewTransition: opts && opts.viewTransition,
            flushSync
        });
    }
    function revalidate() {
        if (!pendingRevalidationDfd) pendingRevalidationDfd = createDeferred();
        interruptActiveLoads();
        updateState({
            revalidation: "loading"
        });
        let promise = pendingRevalidationDfd.promise;
        if (state.navigation.state === "submitting") return promise;
        if (state.navigation.state === "idle") {
            startNavigation(state.historyAction, state.location, {
                startUninterruptedRevalidation: true
            });
            return promise;
        }
        startNavigation(pendingAction || state.historyAction, state.navigation.location, {
            overrideNavigation: state.navigation,
            // Proxy through any rending view transition
            enableViewTransition: pendingViewTransitionEnabled === true
        });
        return promise;
    }
    async function startNavigation(historyAction, location, opts) {
        pendingNavigationController && pendingNavigationController.abort();
        pendingNavigationController = null;
        pendingAction = historyAction;
        isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;
        saveScrollPosition(state.location, state.matches);
        pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
        pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let loadingNavigation = opts && opts.overrideNavigation;
        let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? // `matchRoutes()` has already been called if we're in here via `router.initialize()`
        state.matches : matchRoutes(routesToUse, location, basename);
        let flushSync = (opts && opts.flushSync) === true;
        if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
            completeNavigation(location, {
                matches
            }, {
                flushSync
            });
            return;
        }
        let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);
        if (fogOfWar.active && fogOfWar.matches) matches = fogOfWar.matches;
        if (!matches) {
            let { error, notFoundMatches, route } = handleNavigational404(location.pathname);
            completeNavigation(location, {
                matches: notFoundMatches,
                loaderData: {},
                errors: {
                    [route.id]: error
                }
            }, {
                flushSync
            });
            return;
        }
        pendingNavigationController = new AbortController();
        let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);
        let scopedContext = new unstable_RouterContextProvider(init.unstable_getContext ? await init.unstable_getContext() : void 0);
        let pendingActionResult;
        if (opts && opts.pendingError) pendingActionResult = [
            findNearestBoundary(matches).route.id,
            {
                type: "error" /* error */ ,
                error: opts.pendingError
            }
        ];
        else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
            let actionResult = await handleAction(request, location, opts.submission, matches, scopedContext, fogOfWar.active, {
                replace: opts.replace,
                flushSync
            });
            if (actionResult.shortCircuited) return;
            if (actionResult.pendingActionResult) {
                let [routeId, result] = actionResult.pendingActionResult;
                if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {
                    pendingNavigationController = null;
                    completeNavigation(location, {
                        matches: actionResult.matches,
                        loaderData: {},
                        errors: {
                            [routeId]: result.error
                        }
                    });
                    return;
                }
            }
            matches = actionResult.matches || matches;
            pendingActionResult = actionResult.pendingActionResult;
            loadingNavigation = getLoadingNavigation(location, opts.submission);
            flushSync = false;
            fogOfWar.active = false;
            request = createClientSideRequest(init.history, request.url, request.signal);
        }
        let { shortCircuited, matches: updatedMatches, loaderData, errors } = await handleLoaders(request, location, matches, scopedContext, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);
        if (shortCircuited) return;
        pendingNavigationController = null;
        completeNavigation(location, {
            matches: updatedMatches || matches,
            ...getActionDataForCommit(pendingActionResult),
            loaderData,
            errors
        });
    }
    async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, opts = {}) {
        interruptActiveLoads();
        let navigation = getSubmittingNavigation(location, submission);
        updateState({
            navigation
        }, {
            flushSync: opts.flushSync === true
        });
        if (isFogOfWar) {
            let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);
            if (discoverResult.type === "aborted") return {
                shortCircuited: true
            };
            else if (discoverResult.type === "error") {
                let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;
                return {
                    matches: discoverResult.partialMatches,
                    pendingActionResult: [
                        boundaryId,
                        {
                            type: "error" /* error */ ,
                            error: discoverResult.error
                        }
                    ]
                };
            } else if (!discoverResult.matches) {
                let { notFoundMatches, error, route } = handleNavigational404(location.pathname);
                return {
                    matches: notFoundMatches,
                    pendingActionResult: [
                        route.id,
                        {
                            type: "error" /* error */ ,
                            error
                        }
                    ]
                };
            } else matches = discoverResult.matches;
        }
        let result;
        let actionMatch = getTargetMatch(matches, location);
        if (!actionMatch.route.action && !actionMatch.route.lazy) result = {
            type: "error" /* error */ ,
            error: getInternalRouterError(405, {
                method: request.method,
                pathname: location.pathname,
                routeId: actionMatch.route.id
            })
        };
        else {
            let results = await callDataStrategy("action", request, [
                actionMatch
            ], matches, scopedContext, null);
            result = results[actionMatch.route.id];
            if (!result) {
                for (let match of matches)if (results[match.route.id]) {
                    result = results[match.route.id];
                    break;
                }
            }
            if (request.signal.aborted) return {
                shortCircuited: true
            };
        }
        if (isRedirectResult(result)) {
            let replace2;
            if (opts && opts.replace != null) replace2 = opts.replace;
            else {
                let location2 = normalizeRedirectLocation(result.response.headers.get("Location"), new URL(request.url), basename);
                replace2 = location2 === state.location.pathname + state.location.search;
            }
            await startRedirectNavigation(request, result, true, {
                submission,
                replace: replace2
            });
            return {
                shortCircuited: true
            };
        }
        if (isErrorResult(result)) {
            let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
            if ((opts && opts.replace) !== true) pendingAction = "PUSH" /* Push */ ;
            return {
                matches,
                pendingActionResult: [
                    boundaryMatch.route.id,
                    result
                ]
            };
        }
        return {
            matches,
            pendingActionResult: [
                actionMatch.route.id,
                result
            ]
        };
    }
    async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {
        let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);
        let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);
        let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;
        if (isFogOfWar) {
            if (shouldUpdateNavigationState) {
                let actionData = getUpdatedActionData(pendingActionResult);
                updateState({
                    navigation: loadingNavigation,
                    ...actionData !== void 0 ? {
                        actionData
                    } : {}
                }, {
                    flushSync
                });
            }
            let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);
            if (discoverResult.type === "aborted") return {
                shortCircuited: true
            };
            else if (discoverResult.type === "error") {
                let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;
                return {
                    matches: discoverResult.partialMatches,
                    loaderData: {},
                    errors: {
                        [boundaryId]: discoverResult.error
                    }
                };
            } else if (!discoverResult.matches) {
                let { error, notFoundMatches, route } = handleNavigational404(location.pathname);
                return {
                    matches: notFoundMatches,
                    loaderData: {},
                    errors: {
                        [route.id]: error
                    }
                };
            } else matches = discoverResult.matches;
        }
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, initialHydration === true, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);
        pendingNavigationLoadId = ++incrementingLoadId;
        if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {
            let updatedFetchers2 = markFetchRedirectsDone();
            completeNavigation(location, {
                matches,
                loaderData: {},
                // Commit pending error if we're short circuiting
                errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {
                    [pendingActionResult[0]]: pendingActionResult[1].error
                } : null,
                ...getActionDataForCommit(pendingActionResult),
                ...updatedFetchers2 ? {
                    fetchers: new Map(state.fetchers)
                } : {}
            }, {
                flushSync
            });
            return {
                shortCircuited: true
            };
        }
        if (shouldUpdateNavigationState) {
            let updates = {};
            if (!isFogOfWar) {
                updates.navigation = loadingNavigation;
                let actionData = getUpdatedActionData(pendingActionResult);
                if (actionData !== void 0) updates.actionData = actionData;
            }
            if (revalidatingFetchers.length > 0) updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);
            updateState(updates, {
                flushSync
            });
        }
        revalidatingFetchers.forEach((rf)=>{
            abortFetcher(rf.key);
            if (rf.controller) fetchControllers.set(rf.key, rf.controller);
        });
        let abortPendingFetchRevalidations = ()=>revalidatingFetchers.forEach((f)=>abortFetcher(f.key));
        if (pendingNavigationController) pendingNavigationController.signal.addEventListener("abort", abortPendingFetchRevalidations);
        let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(matches, matchesToLoad, revalidatingFetchers, request, scopedContext);
        if (request.signal.aborted) return {
            shortCircuited: true
        };
        if (pendingNavigationController) pendingNavigationController.signal.removeEventListener("abort", abortPendingFetchRevalidations);
        revalidatingFetchers.forEach((rf)=>fetchControllers.delete(rf.key));
        let redirect2 = findRedirect(loaderResults);
        if (redirect2) {
            await startRedirectNavigation(request, redirect2.result, true, {
                replace: replace2
            });
            return {
                shortCircuited: true
            };
        }
        redirect2 = findRedirect(fetcherResults);
        if (redirect2) {
            fetchRedirectIds.add(redirect2.key);
            await startRedirectNavigation(request, redirect2.result, true, {
                replace: replace2
            });
            return {
                shortCircuited: true
            };
        }
        let { loaderData, errors } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults);
        if (initialHydration && state.errors) errors = {
            ...state.errors,
            ...errors
        };
        let updatedFetchers = markFetchRedirectsDone();
        let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);
        let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
        return {
            matches,
            loaderData,
            errors,
            ...shouldUpdateFetchers ? {
                fetchers: new Map(state.fetchers)
            } : {}
        };
    }
    function getUpdatedActionData(pendingActionResult) {
        if (pendingActionResult && !isErrorResult(pendingActionResult[1])) return {
            [pendingActionResult[0]]: pendingActionResult[1].data
        };
        else if (state.actionData) {
            if (Object.keys(state.actionData).length === 0) return null;
            else return state.actionData;
        }
    }
    function getUpdatedRevalidatingFetchers(revalidatingFetchers) {
        revalidatingFetchers.forEach((rf)=>{
            let fetcher = state.fetchers.get(rf.key);
            let revalidatingFetcher = getLoadingFetcher(void 0, fetcher ? fetcher.data : void 0);
            state.fetchers.set(rf.key, revalidatingFetcher);
        });
        return new Map(state.fetchers);
    }
    async function fetch2(key, routeId, href2, opts) {
        abortFetcher(key);
        let flushSync = (opts && opts.flushSync) === true;
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let normalizedPath = normalizeTo(state.location, state.matches, basename, href2, routeId, opts?.relative);
        let matches = matchRoutes(routesToUse, normalizedPath, basename);
        let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);
        if (fogOfWar.active && fogOfWar.matches) matches = fogOfWar.matches;
        if (!matches) {
            setFetcherError(key, routeId, getInternalRouterError(404, {
                pathname: normalizedPath
            }), {
                flushSync
            });
            return;
        }
        let { path, submission, error } = normalizeNavigateOptions(true, normalizedPath, opts);
        if (error) {
            setFetcherError(key, routeId, error, {
                flushSync
            });
            return;
        }
        let match = getTargetMatch(matches, path);
        let scopedContext = new unstable_RouterContextProvider(init.unstable_getContext ? await init.unstable_getContext() : void 0);
        let preventScrollReset = (opts && opts.preventScrollReset) === true;
        if (submission && isMutationMethod(submission.formMethod)) {
            await handleFetcherAction(key, routeId, path, match, matches, scopedContext, fogOfWar.active, flushSync, preventScrollReset, submission);
            return;
        }
        fetchLoadMatches.set(key, {
            routeId,
            path
        });
        await handleFetcherLoader(key, routeId, path, match, matches, scopedContext, fogOfWar.active, flushSync, preventScrollReset, submission);
    }
    async function handleFetcherAction(key, routeId, path, match, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {
        interruptActiveLoads();
        fetchLoadMatches.delete(key);
        function detectAndHandle405Error(m) {
            if (!m.route.action && !m.route.lazy) {
                let error = getInternalRouterError(405, {
                    method: submission.formMethod,
                    pathname: path,
                    routeId
                });
                setFetcherError(key, routeId, error, {
                    flushSync
                });
                return true;
            }
            return false;
        }
        if (!isFogOfWar && detectAndHandle405Error(match)) return;
        let existingFetcher = state.fetchers.get(key);
        updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {
            flushSync
        });
        let abortController = new AbortController();
        let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);
        if (isFogOfWar) {
            let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal, key);
            if (discoverResult.type === "aborted") return;
            else if (discoverResult.type === "error") {
                setFetcherError(key, routeId, discoverResult.error, {
                    flushSync
                });
                return;
            } else if (!discoverResult.matches) {
                setFetcherError(key, routeId, getInternalRouterError(404, {
                    pathname: path
                }), {
                    flushSync
                });
                return;
            } else {
                requestMatches = discoverResult.matches;
                match = getTargetMatch(requestMatches, path);
                if (detectAndHandle405Error(match)) return;
            }
        }
        fetchControllers.set(key, abortController);
        let originatingLoadId = incrementingLoadId;
        let actionResults = await callDataStrategy("action", fetchRequest, [
            match
        ], requestMatches, scopedContext, key);
        let actionResult = actionResults[match.route.id];
        if (fetchRequest.signal.aborted) {
            if (fetchControllers.get(key) === abortController) fetchControllers.delete(key);
            return;
        }
        if (fetchersQueuedForDeletion.has(key)) {
            if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {
                updateFetcherState(key, getDoneFetcher(void 0));
                return;
            }
        } else {
            if (isRedirectResult(actionResult)) {
                fetchControllers.delete(key);
                if (pendingNavigationLoadId > originatingLoadId) {
                    updateFetcherState(key, getDoneFetcher(void 0));
                    return;
                } else {
                    fetchRedirectIds.add(key);
                    updateFetcherState(key, getLoadingFetcher(submission));
                    return startRedirectNavigation(fetchRequest, actionResult, false, {
                        fetcherSubmission: submission,
                        preventScrollReset
                    });
                }
            }
            if (isErrorResult(actionResult)) {
                setFetcherError(key, routeId, actionResult.error);
                return;
            }
        }
        let nextLocation = state.navigation.location || state.location;
        let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;
        invariant(matches, "Didn't find any matches after fetcher action");
        let loadId = ++incrementingLoadId;
        fetchReloadIds.set(key, loadId);
        let loadFetcher = getLoadingFetcher(submission, actionResult.data);
        state.fetchers.set(key, loadFetcher);
        let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [
            match.route.id,
            actionResult
        ]);
        revalidatingFetchers.filter((rf)=>rf.key !== key).forEach((rf)=>{
            let staleKey = rf.key;
            let existingFetcher2 = state.fetchers.get(staleKey);
            let revalidatingFetcher = getLoadingFetcher(void 0, existingFetcher2 ? existingFetcher2.data : void 0);
            state.fetchers.set(staleKey, revalidatingFetcher);
            abortFetcher(staleKey);
            if (rf.controller) fetchControllers.set(staleKey, rf.controller);
        });
        updateState({
            fetchers: new Map(state.fetchers)
        });
        let abortPendingFetchRevalidations = ()=>revalidatingFetchers.forEach((rf)=>abortFetcher(rf.key));
        abortController.signal.addEventListener("abort", abortPendingFetchRevalidations);
        let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(matches, matchesToLoad, revalidatingFetchers, revalidationRequest, scopedContext);
        if (abortController.signal.aborted) return;
        abortController.signal.removeEventListener("abort", abortPendingFetchRevalidations);
        fetchReloadIds.delete(key);
        fetchControllers.delete(key);
        revalidatingFetchers.forEach((r)=>fetchControllers.delete(r.key));
        let redirect2 = findRedirect(loaderResults);
        if (redirect2) return startRedirectNavigation(revalidationRequest, redirect2.result, false, {
            preventScrollReset
        });
        redirect2 = findRedirect(fetcherResults);
        if (redirect2) {
            fetchRedirectIds.add(redirect2.key);
            return startRedirectNavigation(revalidationRequest, redirect2.result, false, {
                preventScrollReset
            });
        }
        let { loaderData, errors } = processLoaderData(state, matches, loaderResults, void 0, revalidatingFetchers, fetcherResults);
        if (state.fetchers.has(key)) {
            let doneFetcher = getDoneFetcher(actionResult.data);
            state.fetchers.set(key, doneFetcher);
        }
        abortStaleFetchLoads(loadId);
        if (state.navigation.state === "loading" && loadId > pendingNavigationLoadId) {
            invariant(pendingAction, "Expected pending action");
            pendingNavigationController && pendingNavigationController.abort();
            completeNavigation(state.navigation.location, {
                matches,
                loaderData,
                errors,
                fetchers: new Map(state.fetchers)
            });
        } else {
            updateState({
                errors,
                loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),
                fetchers: new Map(state.fetchers)
            });
            isRevalidationRequired = false;
        }
    }
    async function handleFetcherLoader(key, routeId, path, match, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {
        let existingFetcher = state.fetchers.get(key);
        updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : void 0), {
            flushSync
        });
        let abortController = new AbortController();
        let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);
        if (isFogOfWar) {
            let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal, key);
            if (discoverResult.type === "aborted") return;
            else if (discoverResult.type === "error") {
                setFetcherError(key, routeId, discoverResult.error, {
                    flushSync
                });
                return;
            } else if (!discoverResult.matches) {
                setFetcherError(key, routeId, getInternalRouterError(404, {
                    pathname: path
                }), {
                    flushSync
                });
                return;
            } else {
                matches = discoverResult.matches;
                match = getTargetMatch(matches, path);
            }
        }
        fetchControllers.set(key, abortController);
        let originatingLoadId = incrementingLoadId;
        let results = await callDataStrategy("loader", fetchRequest, [
            match
        ], matches, scopedContext, key);
        let result = results[match.route.id];
        if (fetchControllers.get(key) === abortController) fetchControllers.delete(key);
        if (fetchRequest.signal.aborted) return;
        if (fetchersQueuedForDeletion.has(key)) {
            updateFetcherState(key, getDoneFetcher(void 0));
            return;
        }
        if (isRedirectResult(result)) {
            if (pendingNavigationLoadId > originatingLoadId) {
                updateFetcherState(key, getDoneFetcher(void 0));
                return;
            } else {
                fetchRedirectIds.add(key);
                await startRedirectNavigation(fetchRequest, result, false, {
                    preventScrollReset
                });
                return;
            }
        }
        if (isErrorResult(result)) {
            setFetcherError(key, routeId, result.error);
            return;
        }
        updateFetcherState(key, getDoneFetcher(result.data));
    }
    async function startRedirectNavigation(request, redirect2, isNavigation, { submission, fetcherSubmission, preventScrollReset, replace: replace2 } = {}) {
        if (redirect2.response.headers.has("X-Remix-Revalidate")) isRevalidationRequired = true;
        let location = redirect2.response.headers.get("Location");
        invariant(location, "Expected a Location header on the redirect Response");
        location = normalizeRedirectLocation(location, new URL(request.url), basename);
        let redirectLocation = createLocation(state.location, location, {
            _isRedirect: true
        });
        if (isBrowser2) {
            let isDocumentReload = false;
            if (redirect2.response.headers.has("X-Remix-Reload-Document")) isDocumentReload = true;
            else if (ABSOLUTE_URL_REGEX.test(location)) {
                const url = init.history.createURL(location);
                isDocumentReload = url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename
                stripBasename(url.pathname, basename) == null;
            }
            if (isDocumentReload) {
                if (replace2) routerWindow.location.replace(location);
                else routerWindow.location.assign(location);
                return;
            }
        }
        pendingNavigationController = null;
        let redirectNavigationType = replace2 === true || redirect2.response.headers.has("X-Remix-Replace") ? "REPLACE" /* Replace */  : "PUSH" /* Push */ ;
        let { formMethod, formAction, formEncType } = state.navigation;
        if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) submission = getSubmissionFromNavigation(state.navigation);
        let activeSubmission = submission || fetcherSubmission;
        if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) await startNavigation(redirectNavigationType, redirectLocation, {
            submission: {
                ...activeSubmission,
                formAction: location
            },
            // Preserve these flags across redirects
            preventScrollReset: preventScrollReset || pendingPreventScrollReset,
            enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0
        });
        else {
            let overrideNavigation = getLoadingNavigation(redirectLocation, submission);
            await startNavigation(redirectNavigationType, redirectLocation, {
                overrideNavigation,
                // Send fetcher submissions through for shouldRevalidate
                fetcherSubmission,
                // Preserve these flags across redirects
                preventScrollReset: preventScrollReset || pendingPreventScrollReset,
                enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0
            });
        }
    }
    async function callDataStrategy(type, request, matchesToLoad, matches, scopedContext, fetcherKey) {
        let results;
        let dataResults = {};
        try {
            results = await callDataStrategyImpl(dataStrategyImpl, type, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2, scopedContext);
        } catch (e) {
            matchesToLoad.forEach((m)=>{
                dataResults[m.route.id] = {
                    type: "error" /* error */ ,
                    error: e
                };
            });
            return dataResults;
        }
        for (let [routeId, result] of Object.entries(results))if (isRedirectDataStrategyResult(result)) {
            let response = result.result;
            dataResults[routeId] = {
                type: "redirect" /* redirect */ ,
                response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename)
            };
        } else dataResults[routeId] = await convertDataStrategyResultToDataResult(result);
        return dataResults;
    }
    async function callLoadersAndMaybeResolveData(matches, matchesToLoad, fetchersToLoad, request, scopedContext) {
        let loaderResultsPromise = callDataStrategy("loader", request, matchesToLoad, matches, scopedContext, null);
        let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async (f)=>{
            if (f.matches && f.match && f.controller) {
                let results = await callDataStrategy("loader", createClientSideRequest(init.history, f.path, f.controller.signal), [
                    f.match
                ], f.matches, scopedContext, f.key);
                let result = results[f.match.route.id];
                return {
                    [f.key]: result
                };
            } else return Promise.resolve({
                [f.key]: {
                    type: "error" /* error */ ,
                    error: getInternalRouterError(404, {
                        pathname: f.path
                    })
                }
            });
        }));
        let loaderResults = await loaderResultsPromise;
        let fetcherResults = (await fetcherResultsPromise).reduce((acc, r)=>Object.assign(acc, r), {});
        return {
            loaderResults,
            fetcherResults
        };
    }
    function interruptActiveLoads() {
        isRevalidationRequired = true;
        fetchLoadMatches.forEach((_, key)=>{
            if (fetchControllers.has(key)) cancelledFetcherLoads.add(key);
            abortFetcher(key);
        });
    }
    function updateFetcherState(key, fetcher, opts = {}) {
        state.fetchers.set(key, fetcher);
        updateState({
            fetchers: new Map(state.fetchers)
        }, {
            flushSync: (opts && opts.flushSync) === true
        });
    }
    function setFetcherError(key, routeId, error, opts = {}) {
        let boundaryMatch = findNearestBoundary(state.matches, routeId);
        deleteFetcher(key);
        updateState({
            errors: {
                [boundaryMatch.route.id]: error
            },
            fetchers: new Map(state.fetchers)
        }, {
            flushSync: (opts && opts.flushSync) === true
        });
    }
    function getFetcher(key) {
        activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);
        if (fetchersQueuedForDeletion.has(key)) fetchersQueuedForDeletion.delete(key);
        return state.fetchers.get(key) || IDLE_FETCHER;
    }
    function deleteFetcher(key) {
        let fetcher = state.fetchers.get(key);
        if (fetchControllers.has(key) && !(fetcher && fetcher.state === "loading" && fetchReloadIds.has(key))) abortFetcher(key);
        fetchLoadMatches.delete(key);
        fetchReloadIds.delete(key);
        fetchRedirectIds.delete(key);
        fetchersQueuedForDeletion.delete(key);
        cancelledFetcherLoads.delete(key);
        state.fetchers.delete(key);
    }
    function queueFetcherForDeletion(key) {
        let count = (activeFetchers.get(key) || 0) - 1;
        if (count <= 0) {
            activeFetchers.delete(key);
            fetchersQueuedForDeletion.add(key);
        } else activeFetchers.set(key, count);
        updateState({
            fetchers: new Map(state.fetchers)
        });
    }
    function abortFetcher(key) {
        let controller = fetchControllers.get(key);
        if (controller) {
            controller.abort();
            fetchControllers.delete(key);
        }
    }
    function markFetchersDone(keys) {
        for (let key of keys){
            let fetcher = getFetcher(key);
            let doneFetcher = getDoneFetcher(fetcher.data);
            state.fetchers.set(key, doneFetcher);
        }
    }
    function markFetchRedirectsDone() {
        let doneKeys = [];
        let updatedFetchers = false;
        for (let key of fetchRedirectIds){
            let fetcher = state.fetchers.get(key);
            invariant(fetcher, `Expected fetcher: ${key}`);
            if (fetcher.state === "loading") {
                fetchRedirectIds.delete(key);
                doneKeys.push(key);
                updatedFetchers = true;
            }
        }
        markFetchersDone(doneKeys);
        return updatedFetchers;
    }
    function abortStaleFetchLoads(landedId) {
        let yeetedKeys = [];
        for (let [key, id] of fetchReloadIds)if (id < landedId) {
            let fetcher = state.fetchers.get(key);
            invariant(fetcher, `Expected fetcher: ${key}`);
            if (fetcher.state === "loading") {
                abortFetcher(key);
                fetchReloadIds.delete(key);
                yeetedKeys.push(key);
            }
        }
        markFetchersDone(yeetedKeys);
        return yeetedKeys.length > 0;
    }
    function getBlocker(key, fn) {
        let blocker = state.blockers.get(key) || IDLE_BLOCKER;
        if (blockerFunctions.get(key) !== fn) blockerFunctions.set(key, fn);
        return blocker;
    }
    function deleteBlocker(key) {
        state.blockers.delete(key);
        blockerFunctions.delete(key);
    }
    function updateBlocker(key, newBlocker) {
        let blocker = state.blockers.get(key) || IDLE_BLOCKER;
        invariant(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`);
        let blockers = new Map(state.blockers);
        blockers.set(key, newBlocker);
        updateState({
            blockers
        });
    }
    function shouldBlockNavigation({ currentLocation, nextLocation, historyAction }) {
        if (blockerFunctions.size === 0) return;
        if (blockerFunctions.size > 1) warning(false, "A router only supports one blocker at a time");
        let entries = Array.from(blockerFunctions.entries());
        let [blockerKey, blockerFunction] = entries[entries.length - 1];
        let blocker = state.blockers.get(blockerKey);
        if (blocker && blocker.state === "proceeding") return;
        if (blockerFunction({
            currentLocation,
            nextLocation,
            historyAction
        })) return blockerKey;
    }
    function handleNavigational404(pathname) {
        let error = getInternalRouterError(404, {
            pathname
        });
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let { matches, route } = getShortCircuitMatches(routesToUse);
        return {
            notFoundMatches: matches,
            route,
            error
        };
    }
    function enableScrollRestoration(positions, getPosition, getKey) {
        savedScrollPositions2 = positions;
        getScrollPosition = getPosition;
        getScrollRestorationKey2 = getKey || null;
        if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
            initialScrollRestored = true;
            let y = getSavedScrollPosition(state.location, state.matches);
            if (y != null) updateState({
                restoreScrollPosition: y
            });
        }
        return ()=>{
            savedScrollPositions2 = null;
            getScrollPosition = null;
            getScrollRestorationKey2 = null;
        };
    }
    function getScrollKey(location, matches) {
        if (getScrollRestorationKey2) {
            let key = getScrollRestorationKey2(location, matches.map((m)=>convertRouteMatchToUiMatch(m, state.loaderData)));
            return key || location.key;
        }
        return location.key;
    }
    function saveScrollPosition(location, matches) {
        if (savedScrollPositions2 && getScrollPosition) {
            let key = getScrollKey(location, matches);
            savedScrollPositions2[key] = getScrollPosition();
        }
    }
    function getSavedScrollPosition(location, matches) {
        if (savedScrollPositions2) {
            let key = getScrollKey(location, matches);
            let y = savedScrollPositions2[key];
            if (typeof y === "number") return y;
        }
        return null;
    }
    function checkFogOfWar(matches, routesToUse, pathname) {
        if (init.patchRoutesOnNavigation) {
            if (!matches) {
                let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);
                return {
                    active: true,
                    matches: fogMatches || []
                };
            } else if (Object.keys(matches[0].params).length > 0) {
                let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);
                return {
                    active: true,
                    matches: partialMatches
                };
            }
        }
        return {
            active: false,
            matches: null
        };
    }
    async function discoverRoutes(matches, pathname, signal, fetcherKey) {
        if (!init.patchRoutesOnNavigation) return {
            type: "success",
            matches
        };
        let partialMatches = matches;
        while(true){
            let isNonHMR = inFlightDataRoutes == null;
            let routesToUse = inFlightDataRoutes || dataRoutes;
            let localManifest = manifest;
            try {
                await init.patchRoutesOnNavigation({
                    signal,
                    path: pathname,
                    matches: partialMatches,
                    fetcherKey,
                    patch: (routeId, children)=>{
                        if (signal.aborted) return;
                        patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties2);
                    }
                });
            } catch (e) {
                return {
                    type: "error",
                    error: e,
                    partialMatches
                };
            } finally{
                if (isNonHMR && !signal.aborted) dataRoutes = [
                    ...dataRoutes
                ];
            }
            if (signal.aborted) return {
                type: "aborted"
            };
            let newMatches = matchRoutes(routesToUse, pathname, basename);
            if (newMatches) return {
                type: "success",
                matches: newMatches
            };
            let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);
            if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i)=>m.route.id === newPartialMatches[i].route.id)) return {
                type: "success",
                matches: null
            };
            partialMatches = newPartialMatches;
        }
    }
    function _internalSetRoutes(newRoutes) {
        manifest = {};
        inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties2, void 0, manifest);
    }
    function patchRoutes(routeId, children) {
        let isNonHMR = inFlightDataRoutes == null;
        let routesToUse = inFlightDataRoutes || dataRoutes;
        patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2);
        if (isNonHMR) {
            dataRoutes = [
                ...dataRoutes
            ];
            updateState({});
        }
    }
    router = {
        get basename () {
            return basename;
        },
        get future () {
            return future;
        },
        get state () {
            return state;
        },
        get routes () {
            return dataRoutes;
        },
        get window () {
            return routerWindow;
        },
        initialize,
        subscribe,
        enableScrollRestoration,
        navigate,
        fetch: fetch2,
        revalidate,
        // Passthrough to history-aware createHref used by useHref so we get proper
        // hash-aware URLs in DOM paths
        createHref: (to)=>init.history.createHref(to),
        encodeLocation: (to)=>init.history.encodeLocation(to),
        getFetcher,
        deleteFetcher: queueFetcherForDeletion,
        dispose,
        getBlocker,
        deleteBlocker,
        patchRoutes,
        _internalFetchControllers: fetchControllers,
        // TODO: Remove setRoutes, it's temporary to avoid dealing with
        // updating the tree while validating the update algorithm.
        _internalSetRoutes
    };
    return router;
}
function createStaticHandler(routes, opts) {
    invariant(routes.length > 0, "You must provide a non-empty routes array to createStaticHandler");
    let manifest = {};
    let basename = (opts ? opts.basename : null) || "/";
    let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;
    let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties2, void 0, manifest);
    async function query(request, { requestContext, filterMatchesToLoad, skipLoaderErrorBubbling, skipRevalidation, dataStrategy, unstable_respond: respond } = {}) {
        let url = new URL(request.url);
        let method = request.method;
        let location = createLocation("", createPath(url), null, "default");
        let matches = matchRoutes(dataRoutes, location, basename);
        requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();
        if (!isValidMethod(method) && method !== "HEAD") {
            let error = getInternalRouterError(405, {
                method
            });
            let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);
            let staticContext = {
                basename,
                location,
                matches: methodNotAllowedMatches,
                loaderData: {},
                actionData: null,
                errors: {
                    [route.id]: error
                },
                statusCode: error.status,
                loaderHeaders: {},
                actionHeaders: {}
            };
            return respond ? respond(staticContext) : staticContext;
        } else if (!matches) {
            let error = getInternalRouterError(404, {
                pathname: location.pathname
            });
            let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);
            let staticContext = {
                basename,
                location,
                matches: notFoundMatches,
                loaderData: {},
                actionData: null,
                errors: {
                    [route.id]: error
                },
                statusCode: error.status,
                loaderHeaders: {},
                actionHeaders: {}
            };
            return respond ? respond(staticContext) : staticContext;
        }
        if (respond && matches.some((m)=>m.route.unstable_middleware || m.route.unstable_lazyMiddleware)) {
            invariant(requestContext instanceof unstable_RouterContextProvider, "When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`");
            try {
                await loadLazyMiddlewareForMatches(matches, manifest);
                let renderedStaticContext;
                let response = await runMiddlewarePipeline({
                    request,
                    matches,
                    params: matches[0].params,
                    // If we're calling middleware then it must be enabled so we can cast
                    // this to the proper type knowing it's not an `AppLoadContext`
                    context: requestContext
                }, true, async ()=>{
                    let result2 = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null, filterMatchesToLoad || null, skipRevalidation === true);
                    if (isResponse(result2)) return result2;
                    renderedStaticContext = {
                        location,
                        basename,
                        ...result2
                    };
                    let res = await respond(renderedStaticContext);
                    return res;
                }, async (error, routeId)=>{
                    if (isResponse(error)) return error;
                    if (renderedStaticContext) {
                        if (routeId in renderedStaticContext.loaderData) renderedStaticContext.loaderData[routeId] = void 0;
                        return respond(getStaticContextFromError(dataRoutes, renderedStaticContext, error, findNearestBoundary(matches, routeId).route.id));
                    } else {
                        let loaderIdx = matches.findIndex((m)=>m.route.loader);
                        let boundary = loaderIdx >= 0 ? findNearestBoundary(matches, matches[loaderIdx].route.id) : findNearestBoundary(matches);
                        return respond({
                            matches,
                            location,
                            basename,
                            loaderData: {},
                            actionData: null,
                            errors: {
                                [boundary.route.id]: error
                            },
                            statusCode: isRouteErrorResponse(error) ? error.status : 500,
                            actionHeaders: {},
                            loaderHeaders: {}
                        });
                    }
                });
                invariant(isResponse(response), "Expected a response in query()");
                return response;
            } catch (e) {
                if (isResponse(e)) return e;
                throw e;
            }
        }
        let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null, filterMatchesToLoad || null, skipRevalidation === true);
        if (isResponse(result)) return result;
        return {
            location,
            basename,
            ...result
        };
    }
    async function queryRoute(request, { routeId, requestContext, dataStrategy, unstable_respond: respond } = {}) {
        let url = new URL(request.url);
        let method = request.method;
        let location = createLocation("", createPath(url), null, "default");
        let matches = matchRoutes(dataRoutes, location, basename);
        requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();
        if (!isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS") throw getInternalRouterError(405, {
            method
        });
        else if (!matches) throw getInternalRouterError(404, {
            pathname: location.pathname
        });
        let match = routeId ? matches.find((m)=>m.route.id === routeId) : getTargetMatch(matches, location);
        if (routeId && !match) throw getInternalRouterError(403, {
            pathname: location.pathname,
            routeId
        });
        else if (!match) throw getInternalRouterError(404, {
            pathname: location.pathname
        });
        if (respond && matches.some((m)=>m.route.unstable_middleware || m.route.unstable_lazyMiddleware)) {
            invariant(requestContext instanceof unstable_RouterContextProvider, "When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`");
            await loadLazyMiddlewareForMatches(matches, manifest);
            let response = await runMiddlewarePipeline({
                request,
                matches,
                params: matches[0].params,
                // If we're calling middleware then it must be enabled so we can cast
                // this to the proper type knowing it's not an `AppLoadContext`
                context: requestContext
            }, true, async ()=>{
                let result2 = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match, null, false);
                if (isResponse(result2)) return respond(result2);
                let error2 = result2.errors ? Object.values(result2.errors)[0] : void 0;
                if (error2 !== void 0) throw error2;
                let value = result2.actionData ? Object.values(result2.actionData)[0] : Object.values(result2.loaderData)[0];
                return typeof value === "string" ? new Response(value) : Response.json(value);
            }, (error2)=>{
                if (isResponse(error2)) return respond(error2);
                return new Response(String(error2), {
                    status: 500,
                    statusText: "Unexpected Server Error"
                });
            });
            return response;
        }
        let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match, null, false);
        if (isResponse(result)) return result;
        let error = result.errors ? Object.values(result.errors)[0] : void 0;
        if (error !== void 0) throw error;
        if (result.actionData) return Object.values(result.actionData)[0];
        if (result.loaderData) return Object.values(result.loaderData)[0];
        return void 0;
    }
    async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {
        invariant(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
        try {
            if (isMutationMethod(request.method)) {
                let result2 = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null, filterMatchesToLoad, skipRevalidation);
                return result2;
            }
            let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad);
            return isResponse(result) ? result : {
                ...result,
                actionData: null,
                actionHeaders: {}
            };
        } catch (e) {
            if (isDataStrategyResult(e) && isResponse(e.result)) {
                if (e.type === "error" /* error */ ) throw e.result;
                return e.result;
            }
            if (isRedirectResponse(e)) return e;
            throw e;
        }
    }
    async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {
        let result;
        if (!actionMatch.route.action && !actionMatch.route.lazy) {
            let error = getInternalRouterError(405, {
                method: request.method,
                pathname: new URL(request.url).pathname,
                routeId: actionMatch.route.id
            });
            if (isRouteRequest) throw error;
            result = {
                type: "error" /* error */ ,
                error
            };
        } else {
            let results = await callDataStrategy("action", request, [
                actionMatch
            ], matches, isRouteRequest, requestContext, dataStrategy);
            result = results[actionMatch.route.id];
            if (request.signal.aborted) throwStaticHandlerAbortedError(request, isRouteRequest);
        }
        if (isRedirectResult(result)) throw new Response(null, {
            status: result.response.status,
            headers: {
                Location: result.response.headers.get("Location")
            }
        });
        if (isRouteRequest) {
            if (isErrorResult(result)) throw result.error;
            return {
                matches: [
                    actionMatch
                ],
                loaderData: {},
                actionData: {
                    [actionMatch.route.id]: result.data
                },
                errors: null,
                // Note: statusCode + headers are unused here since queryRoute will
                // return the raw Response or value
                statusCode: 200,
                loaderHeaders: {},
                actionHeaders: {}
            };
        }
        if (skipRevalidation) {
            if (isErrorResult(result)) {
                let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);
                return {
                    statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,
                    actionData: null,
                    actionHeaders: {
                        ...result.headers ? {
                            [actionMatch.route.id]: result.headers
                        } : {}
                    },
                    matches,
                    loaderData: {},
                    errors: {
                        [boundaryMatch.route.id]: result.error
                    },
                    loaderHeaders: {}
                };
            } else return {
                actionData: {
                    [actionMatch.route.id]: result.data
                },
                actionHeaders: result.headers ? {
                    [actionMatch.route.id]: result.headers
                } : {},
                matches,
                loaderData: {},
                errors: null,
                statusCode: result.statusCode || 200,
                loaderHeaders: {}
            };
        }
        let loaderRequest = new Request(request.url, {
            headers: request.headers,
            redirect: request.redirect,
            signal: request.signal
        });
        if (isErrorResult(result)) {
            let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);
            let handlerContext2 = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, filterMatchesToLoad, [
                boundaryMatch.route.id,
                result
            ]);
            return {
                ...handlerContext2,
                statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,
                actionData: null,
                actionHeaders: {
                    ...result.headers ? {
                        [actionMatch.route.id]: result.headers
                    } : {}
                }
            };
        }
        let handlerContext = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, filterMatchesToLoad);
        return {
            ...handlerContext,
            actionData: {
                [actionMatch.route.id]: result.data
            },
            // action status codes take precedence over loader status codes
            ...result.statusCode ? {
                statusCode: result.statusCode
            } : {},
            actionHeaders: result.headers ? {
                [actionMatch.route.id]: result.headers
            } : {}
        };
    }
    async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {
        let isRouteRequest = routeMatch != null;
        if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) throw getInternalRouterError(400, {
            method: request.method,
            pathname: new URL(request.url).pathname,
            routeId: routeMatch?.route.id
        });
        let requestMatches = routeMatch ? [
            routeMatch
        ] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;
        let matchesToLoad = requestMatches.filter((m)=>(m.route.loader || m.route.lazy) && (!filterMatchesToLoad || filterMatchesToLoad(m)));
        if (matchesToLoad.length === 0) return {
            matches,
            // Add a null for all matched routes for proper revalidation on the client
            loaderData: matches.reduce((acc, m)=>Object.assign(acc, {
                    [m.route.id]: null
                }), {}),
            errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {
                [pendingActionResult[0]]: pendingActionResult[1].error
            } : null,
            statusCode: 200,
            loaderHeaders: {}
        };
        let results = await callDataStrategy("loader", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);
        if (request.signal.aborted) throwStaticHandlerAbortedError(request, isRouteRequest);
        let handlerContext = processRouteLoaderData(matches, results, pendingActionResult, true, skipLoaderErrorBubbling);
        let executedLoaders = new Set(matchesToLoad.map((match)=>match.route.id));
        matches.forEach((match)=>{
            if (!executedLoaders.has(match.route.id)) handlerContext.loaderData[match.route.id] = null;
        });
        return {
            ...handlerContext,
            matches
        };
    }
    async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {
        let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, request, matchesToLoad, matches, null, manifest, mapRouteProperties2, requestContext);
        let dataResults = {};
        await Promise.all(matches.map(async (match)=>{
            if (!(match.route.id in results)) return;
            let result = results[match.route.id];
            if (isRedirectDataStrategyResult(result)) {
                let response = result.result;
                throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename);
            }
            if (isResponse(result.result) && isRouteRequest) throw result;
            dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);
        }));
        return dataResults;
    }
    return {
        dataRoutes,
        query,
        queryRoute
    };
}
function getStaticContextFromError(routes, handlerContext, error, boundaryId) {
    let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;
    return {
        ...handlerContext,
        statusCode: isRouteErrorResponse(error) ? error.status : 500,
        errors: {
            [errorBoundaryId]: error
        }
    };
}
function throwStaticHandlerAbortedError(request, isRouteRequest) {
    if (request.signal.reason !== void 0) throw request.signal.reason;
    let method = isRouteRequest ? "queryRoute" : "query";
    throw new Error(`${method}() call aborted without an \`AbortSignal.reason\`: ${request.method} ${request.url}`);
}
function isSubmissionNavigation(opts) {
    return opts != null && ("formData" in opts && opts.formData != null || "body" in opts && opts.body !== void 0);
}
function normalizeTo(location, matches, basename, to, fromRouteId, relative) {
    let contextualMatches;
    let activeRouteMatch;
    if (fromRouteId) {
        contextualMatches = [];
        for (let match of matches){
            contextualMatches.push(match);
            if (match.route.id === fromRouteId) {
                activeRouteMatch = match;
                break;
            }
        }
    } else {
        contextualMatches = matches;
        activeRouteMatch = matches[matches.length - 1];
    }
    let path = resolveTo(to ? to : ".", getResolveToMatches(contextualMatches), stripBasename(location.pathname, basename) || location.pathname, relative === "path");
    if (to == null) {
        path.search = location.search;
        path.hash = location.hash;
    }
    if ((to == null || to === "" || to === ".") && activeRouteMatch) {
        let nakedIndex = hasNakedIndexQuery(path.search);
        if (activeRouteMatch.route.index && !nakedIndex) path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
        else if (!activeRouteMatch.route.index && nakedIndex) {
            let params = new URLSearchParams(path.search);
            let indexValues = params.getAll("index");
            params.delete("index");
            indexValues.filter((v)=>v).forEach((v)=>params.append("index", v));
            let qs = params.toString();
            path.search = qs ? `?${qs}` : "";
        }
    }
    if (basename !== "/") path.pathname = path.pathname === "/" ? basename : joinPaths([
        basename,
        path.pathname
    ]);
    return createPath(path);
}
function normalizeNavigateOptions(isFetcher, path, opts) {
    if (!opts || !isSubmissionNavigation(opts)) return {
        path
    };
    if (opts.formMethod && !isValidMethod(opts.formMethod)) return {
        path,
        error: getInternalRouterError(405, {
            method: opts.formMethod
        })
    };
    let getInvalidBodyError = ()=>({
            path,
            error: getInternalRouterError(400, {
                type: "invalid-body"
            })
        });
    let rawFormMethod = opts.formMethod || "get";
    let formMethod = rawFormMethod.toUpperCase();
    let formAction = stripHashFromPath(path);
    if (opts.body !== void 0) {
        if (opts.formEncType === "text/plain") {
            if (!isMutationMethod(formMethod)) return getInvalidBodyError();
            let text = typeof opts.body === "string" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data
            Array.from(opts.body.entries()).reduce((acc, [name, value])=>`${acc}${name}=${value}
`, "") : String(opts.body);
            return {
                path,
                submission: {
                    formMethod,
                    formAction,
                    formEncType: opts.formEncType,
                    formData: void 0,
                    json: void 0,
                    text
                }
            };
        } else if (opts.formEncType === "application/json") {
            if (!isMutationMethod(formMethod)) return getInvalidBodyError();
            try {
                let json = typeof opts.body === "string" ? JSON.parse(opts.body) : opts.body;
                return {
                    path,
                    submission: {
                        formMethod,
                        formAction,
                        formEncType: opts.formEncType,
                        formData: void 0,
                        json,
                        text: void 0
                    }
                };
            } catch (e) {
                return getInvalidBodyError();
            }
        }
    }
    invariant(typeof FormData === "function", "FormData is not available in this environment");
    let searchParams;
    let formData;
    if (opts.formData) {
        searchParams = convertFormDataToSearchParams(opts.formData);
        formData = opts.formData;
    } else if (opts.body instanceof FormData) {
        searchParams = convertFormDataToSearchParams(opts.body);
        formData = opts.body;
    } else if (opts.body instanceof URLSearchParams) {
        searchParams = opts.body;
        formData = convertSearchParamsToFormData(searchParams);
    } else if (opts.body == null) {
        searchParams = new URLSearchParams();
        formData = new FormData();
    } else try {
        searchParams = new URLSearchParams(opts.body);
        formData = convertSearchParamsToFormData(searchParams);
    } catch (e) {
        return getInvalidBodyError();
    }
    let submission = {
        formMethod,
        formAction,
        formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
        formData,
        json: void 0,
        text: void 0
    };
    if (isMutationMethod(submission.formMethod)) return {
        path,
        submission
    };
    let parsedPath = parsePath(path);
    if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) searchParams.append("index", "");
    parsedPath.search = `?${searchParams}`;
    return {
        path: createPath(parsedPath),
        submission
    };
}
function getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary = false) {
    let index = matches.findIndex((m)=>m.route.id === boundaryId);
    if (index >= 0) return matches.slice(0, includeBoundary ? index + 1 : index);
    return matches;
}
function getMatchesToLoad(history, state, matches, submission, location, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {
    let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;
    let currentUrl = history.createURL(state.location);
    let nextUrl = history.createURL(location);
    let boundaryMatches = matches;
    if (initialHydration && state.errors) boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);
    else if (pendingActionResult && isErrorResult(pendingActionResult[1])) boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);
    let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;
    let shouldSkipRevalidation = actionStatus && actionStatus >= 400;
    let navigationMatches = boundaryMatches.filter((match, index)=>{
        let { route } = match;
        if (route.lazy) return true;
        if (route.loader == null) return false;
        if (initialHydration) return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);
        if (isNewLoader(state.loaderData, state.matches[index], match)) return true;
        let currentRouteMatch = state.matches[index];
        let nextRouteMatch = match;
        return shouldRevalidateLoader(match, {
            currentUrl,
            currentParams: currentRouteMatch.params,
            nextUrl,
            nextParams: nextRouteMatch.params,
            ...submission,
            actionResult,
            actionStatus,
            defaultShouldRevalidate: shouldSkipRevalidation ? false : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
            isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
            currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)
        });
    });
    let revalidatingFetchers = [];
    fetchLoadMatches.forEach((f, key)=>{
        if (initialHydration || !matches.some((m)=>m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) return;
        let fetcherMatches = matchRoutes(routesToUse, f.path, basename);
        if (!fetcherMatches) {
            revalidatingFetchers.push({
                key,
                routeId: f.routeId,
                path: f.path,
                matches: null,
                match: null,
                controller: null
            });
            return;
        }
        let fetcher = state.fetchers.get(key);
        let fetcherMatch = getTargetMatch(fetcherMatches, f.path);
        let shouldRevalidate = false;
        if (fetchRedirectIds.has(key)) shouldRevalidate = false;
        else if (cancelledFetcherLoads.has(key)) {
            cancelledFetcherLoads.delete(key);
            shouldRevalidate = true;
        } else if (fetcher && fetcher.state !== "idle" && fetcher.data === void 0) shouldRevalidate = isRevalidationRequired;
        else shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {
            currentUrl,
            currentParams: state.matches[state.matches.length - 1].params,
            nextUrl,
            nextParams: matches[matches.length - 1].params,
            ...submission,
            actionResult,
            actionStatus,
            defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired
        });
        if (shouldRevalidate) revalidatingFetchers.push({
            key,
            routeId: f.routeId,
            path: f.path,
            matches: fetcherMatches,
            match: fetcherMatch,
            controller: new AbortController()
        });
    });
    return [
        navigationMatches,
        revalidatingFetchers
    ];
}
function shouldLoadRouteOnHydration(route, loaderData, errors) {
    if (route.lazy) return true;
    if (!route.loader) return false;
    let hasData = loaderData != null && loaderData[route.id] !== void 0;
    let hasError = errors != null && errors[route.id] !== void 0;
    if (!hasData && hasError) return false;
    if (typeof route.loader === "function" && route.loader.hydrate === true) return true;
    return !hasData && !hasError;
}
function isNewLoader(currentLoaderData, currentMatch, match) {
    let isNew = // [a] -> [a, b]
    !currentMatch || // [a, b] -> [a, c]
    match.route.id !== currentMatch.route.id;
    let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);
    return isNew || isMissingData;
}
function isNewRouteInstance(currentMatch, match) {
    let currentPath = currentMatch.route.path;
    return(// param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]);
}
function shouldRevalidateLoader(loaderMatch, arg) {
    if (loaderMatch.route.shouldRevalidate) {
        let routeChoice = loaderMatch.route.shouldRevalidate(arg);
        if (typeof routeChoice === "boolean") return routeChoice;
    }
    return arg.defaultShouldRevalidate;
}
function patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {
    let childrenToPatch;
    if (routeId) {
        let route = manifest[routeId];
        invariant(route, `No route found to patch children into: routeId = ${routeId}`);
        if (!route.children) route.children = [];
        childrenToPatch = route.children;
    } else childrenToPatch = routesToUse;
    let uniqueChildren = children.filter((newRoute)=>!childrenToPatch.some((existingRoute)=>isSameRoute(newRoute, existingRoute)));
    let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties2, [
        routeId || "_",
        "patch",
        String(childrenToPatch?.length || "0")
    ], manifest);
    childrenToPatch.push(...newRoutes);
}
function isSameRoute(newRoute, existingRoute) {
    if ("id" in newRoute && "id" in existingRoute && newRoute.id === existingRoute.id) return true;
    if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) return false;
    if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) return true;
    return newRoute.children.every((aChild, i)=>existingRoute.children?.some((bChild)=>isSameRoute(aChild, bChild)));
}
var lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();
async function loadLazyRouteModule(route, mapRouteProperties2, manifest) {
    let routeToUpdate = manifest[route.id];
    invariant(routeToUpdate, "No route found in manifest");
    if (!route.lazy) return;
    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);
    if (cachedPromise) {
        await cachedPromise;
        return;
    }
    let lazyRoutePromise = route.lazy().then((lazyRoute)=>{
        let routeUpdates = {};
        for(let lazyRouteProperty in lazyRoute){
            let staticRouteValue = routeToUpdate[lazyRouteProperty];
            let isPropertyStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based
            // on the route updates
            lazyRouteProperty !== "hasErrorBoundary";
            warning(!isPropertyStaticallyDefined, `Route "${routeToUpdate.id}" has a static property "${lazyRouteProperty}" defined but its lazy function is also returning a value for this property. The lazy route property "${lazyRouteProperty}" will be ignored.`);
            warning(!unsupportedLazyRouteFunctionKeys.has(lazyRouteProperty), "Route property " + lazyRouteProperty + " is not a supported property to be returned from a lazy route function. This property will be ignored.");
            if (!isPropertyStaticallyDefined && !unsupportedLazyRouteFunctionKeys.has(lazyRouteProperty)) routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];
        }
        Object.assign(routeToUpdate, routeUpdates);
        Object.assign(routeToUpdate, {
            // To keep things framework agnostic, we use the provided `mapRouteProperties`
            // function to set the framework-aware properties (`element`/`hasErrorBoundary`)
            // since the logic will differ between frameworks.
            ...mapRouteProperties2(routeToUpdate),
            lazy: void 0
        });
    });
    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise);
    await lazyRoutePromise;
}
async function loadLazyMiddleware(route, manifest) {
    if (!route.unstable_lazyMiddleware) return;
    let routeToUpdate = manifest[route.id];
    invariant(routeToUpdate, "No route found in manifest");
    if (routeToUpdate.unstable_middleware) warning(false, `Route "${routeToUpdate.id}" has a static property "unstable_middleware" defined. The "unstable_lazyMiddleware" function will be ignored.`);
    else {
        let middleware = await route.unstable_lazyMiddleware();
        if (!route.unstable_lazyMiddleware) return;
        if (!routeToUpdate.unstable_middleware) routeToUpdate.unstable_middleware = middleware;
    }
    routeToUpdate.unstable_lazyMiddleware = void 0;
}
function loadLazyMiddlewareForMatches(matches, manifest) {
    let promises = matches.map((m)=>m.route.unstable_lazyMiddleware ? loadLazyMiddleware(m.route, manifest) : void 0).filter(Boolean);
    return promises.length > 0 ? Promise.all(promises) : void 0;
}
async function defaultDataStrategy(args) {
    let matchesToLoad = args.matches.filter((m)=>m.shouldLoad);
    let keyedResults = {};
    let results = await Promise.all(matchesToLoad.map((m)=>m.resolve()));
    results.forEach((result, i)=>{
        keyedResults[matchesToLoad[i].route.id] = result;
    });
    return keyedResults;
}
async function defaultDataStrategyWithMiddleware(args) {
    if (!args.matches.some((m)=>m.route.unstable_middleware)) return defaultDataStrategy(args);
    return runMiddlewarePipeline(args, false, ()=>defaultDataStrategy(args), (error, routeId)=>({
            [routeId]: {
                type: "error",
                result: error
            }
        }));
}
async function runMiddlewarePipeline(args, propagateResult, handler, errorHandler) {
    let { matches, request, params, context } = args;
    let middlewareState = {
        handlerResult: void 0
    };
    try {
        let tuples = matches.flatMap((m)=>m.route.unstable_middleware ? m.route.unstable_middleware.map((fn)=>[
                    m.route.id,
                    fn
                ]) : []);
        let result = await callRouteMiddleware({
            request,
            params,
            context
        }, tuples, propagateResult, middlewareState, handler);
        return propagateResult ? result : middlewareState.handlerResult;
    } catch (e) {
        if (!middlewareState.middlewareError) throw e;
        let result = await errorHandler(middlewareState.middlewareError.error, middlewareState.middlewareError.routeId);
        if (propagateResult || !middlewareState.handlerResult) return result;
        return Object.assign(middlewareState.handlerResult, result);
    }
}
async function callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx = 0) {
    let { request } = args;
    if (request.signal.aborted) {
        if (request.signal.reason) throw request.signal.reason;
        throw new Error(`Request aborted without an \`AbortSignal.reason\`: ${request.method} ${request.url}`);
    }
    let tuple = middlewares[idx];
    if (!tuple) {
        middlewareState.handlerResult = await handler();
        return middlewareState.handlerResult;
    }
    let [routeId, middleware] = tuple;
    let nextCalled = false;
    let nextResult = void 0;
    let next = async ()=>{
        if (nextCalled) throw new Error("You may only call `next()` once per middleware");
        nextCalled = true;
        let result = await callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx + 1);
        if (propagateResult) {
            nextResult = result;
            return nextResult;
        }
    };
    try {
        let result = await middleware({
            request: args.request,
            params: args.params,
            context: args.context
        }, next);
        if (nextCalled) {
            if (result === void 0) return nextResult;
            else return result;
        } else return next();
    } catch (error) {
        if (!middlewareState.middlewareError) middlewareState.middlewareError = {
            routeId,
            error
        };
        else if (middlewareState.middlewareError.error !== error) middlewareState.middlewareError = {
            routeId,
            error
        };
        throw error;
    }
}
async function callDataStrategyImpl(dataStrategyImpl, type, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2, scopedContext) {
    let loadMiddlewarePromise = loadLazyMiddlewareForMatches(matches, manifest);
    let loadRouteDefinitionsPromises = matches.map((m)=>m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties2, manifest) : void 0);
    if (loadMiddlewarePromise) await loadMiddlewarePromise;
    let dsMatches = matches.map((match, i)=>{
        let loadRoutePromise = loadRouteDefinitionsPromises[i];
        let shouldLoad = matchesToLoad.some((m)=>m.route.id === match.route.id);
        let resolve = async (handlerOverride)=>{
            if (handlerOverride && request.method === "GET" && (match.route.lazy || match.route.loader)) shouldLoad = true;
            return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, scopedContext) : Promise.resolve({
                type: "data" /* data */ ,
                result: void 0
            });
        };
        return {
            ...match,
            shouldLoad,
            resolve
        };
    });
    let results = await dataStrategyImpl({
        matches: dsMatches,
        request,
        params: matches[0].params,
        fetcherKey,
        context: scopedContext
    });
    try {
        await Promise.all(loadRouteDefinitionsPromises);
    } catch (e) {}
    return results;
}
async function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, scopedContext) {
    let result;
    let onReject;
    let runHandler = (handler)=>{
        let reject;
        let abortPromise = new Promise((_, r)=>reject = r);
        onReject = ()=>reject();
        request.signal.addEventListener("abort", onReject);
        let actualHandler = (ctx)=>{
            if (typeof handler !== "function") return Promise.reject(new Error(`You cannot call the handler for a route which defines a boolean "${type}" [routeId: ${match.route.id}]`));
            return handler({
                request,
                params: match.params,
                context: scopedContext
            }, ...ctx !== void 0 ? [
                ctx
            ] : []);
        };
        let handlerPromise = (async ()=>{
            try {
                let val = await (handlerOverride ? handlerOverride((ctx)=>actualHandler(ctx)) : actualHandler());
                return {
                    type: "data",
                    result: val
                };
            } catch (e) {
                return {
                    type: "error",
                    result: e
                };
            }
        })();
        return Promise.race([
            handlerPromise,
            abortPromise
        ]);
    };
    try {
        let handler = match.route[type];
        if (loadRoutePromise) {
            if (handler) {
                let handlerError;
                let [value] = await Promise.all([
                    // If the handler throws, don't let it immediately bubble out,
                    // since we need to let the lazy() execution finish so we know if this
                    // route has a boundary that can handle the error
                    runHandler(handler).catch((e)=>{
                        handlerError = e;
                    }),
                    loadRoutePromise
                ]);
                if (handlerError !== void 0) throw handlerError;
                result = value;
            } else {
                await loadRoutePromise;
                handler = match.route[type];
                if (handler) result = await runHandler(handler);
                else if (type === "action") {
                    let url = new URL(request.url);
                    let pathname = url.pathname + url.search;
                    throw getInternalRouterError(405, {
                        method: request.method,
                        pathname,
                        routeId: match.route.id
                    });
                } else return {
                    type: "data" /* data */ ,
                    result: void 0
                };
            }
        } else if (!handler) {
            let url = new URL(request.url);
            let pathname = url.pathname + url.search;
            throw getInternalRouterError(404, {
                pathname
            });
        } else result = await runHandler(handler);
    } catch (e) {
        return {
            type: "error" /* error */ ,
            result: e
        };
    } finally{
        if (onReject) request.signal.removeEventListener("abort", onReject);
    }
    return result;
}
async function convertDataStrategyResultToDataResult(dataStrategyResult) {
    let { result, type } = dataStrategyResult;
    if (isResponse(result)) {
        let data2;
        try {
            let contentType = result.headers.get("Content-Type");
            if (contentType && /\bapplication\/json\b/.test(contentType)) {
                if (result.body == null) data2 = null;
                else data2 = await result.json();
            } else data2 = await result.text();
        } catch (e) {
            return {
                type: "error" /* error */ ,
                error: e
            };
        }
        if (type === "error" /* error */ ) return {
            type: "error" /* error */ ,
            error: new ErrorResponseImpl(result.status, result.statusText, data2),
            statusCode: result.status,
            headers: result.headers
        };
        return {
            type: "data" /* data */ ,
            data: data2,
            statusCode: result.status,
            headers: result.headers
        };
    }
    if (type === "error" /* error */ ) {
        if (isDataWithResponseInit(result)) {
            if (result.data instanceof Error) return {
                type: "error" /* error */ ,
                error: result.data,
                statusCode: result.init?.status,
                headers: result.init?.headers ? new Headers(result.init.headers) : void 0
            };
            return {
                type: "error" /* error */ ,
                error: new ErrorResponseImpl(result.init?.status || 500, void 0, result.data),
                statusCode: isRouteErrorResponse(result) ? result.status : void 0,
                headers: result.init?.headers ? new Headers(result.init.headers) : void 0
            };
        }
        return {
            type: "error" /* error */ ,
            error: result,
            statusCode: isRouteErrorResponse(result) ? result.status : void 0
        };
    }
    if (isDataWithResponseInit(result)) return {
        type: "data" /* data */ ,
        data: result.data,
        statusCode: result.init?.status,
        headers: result.init?.headers ? new Headers(result.init.headers) : void 0
    };
    return {
        type: "data" /* data */ ,
        data: result
    };
}
function normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {
    let location = response.headers.get("Location");
    invariant(location, "Redirects returned/thrown from loaders/actions must have a Location header");
    if (!ABSOLUTE_URL_REGEX.test(location)) {
        let trimmedMatches = matches.slice(0, matches.findIndex((m)=>m.route.id === routeId) + 1);
        location = normalizeTo(new URL(request.url), trimmedMatches, basename, location);
        response.headers.set("Location", location);
    }
    return response;
}
function normalizeRedirectLocation(location, currentUrl, basename) {
    if (ABSOLUTE_URL_REGEX.test(location)) {
        let normalizedLocation = location;
        let url = normalizedLocation.startsWith("//") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);
        let isSameBasename = stripBasename(url.pathname, basename) != null;
        if (url.origin === currentUrl.origin && isSameBasename) return url.pathname + url.search + url.hash;
    }
    return location;
}
function createClientSideRequest(history, location, signal, submission) {
    let url = history.createURL(stripHashFromPath(location)).toString();
    let init = {
        signal
    };
    if (submission && isMutationMethod(submission.formMethod)) {
        let { formMethod, formEncType } = submission;
        init.method = formMethod.toUpperCase();
        if (formEncType === "application/json") {
            init.headers = new Headers({
                "Content-Type": formEncType
            });
            init.body = JSON.stringify(submission.json);
        } else if (formEncType === "text/plain") init.body = submission.text;
        else if (formEncType === "application/x-www-form-urlencoded" && submission.formData) init.body = convertFormDataToSearchParams(submission.formData);
        else init.body = submission.formData;
    }
    return new Request(url, init);
}
function convertFormDataToSearchParams(formData) {
    let searchParams = new URLSearchParams();
    for (let [key, value] of formData.entries())searchParams.append(key, typeof value === "string" ? value : value.name);
    return searchParams;
}
function convertSearchParamsToFormData(searchParams) {
    let formData = new FormData();
    for (let [key, value] of searchParams.entries())formData.append(key, value);
    return formData;
}
function processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {
    let loaderData = {};
    let errors = null;
    let statusCode;
    let foundError = false;
    let loaderHeaders = {};
    let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;
    matches.forEach((match)=>{
        if (!(match.route.id in results)) return;
        let id = match.route.id;
        let result = results[id];
        invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData");
        if (isErrorResult(result)) {
            let error = result.error;
            if (pendingError !== void 0) {
                error = pendingError;
                pendingError = void 0;
            }
            errors = errors || {};
            if (skipLoaderErrorBubbling) errors[id] = error;
            else {
                let boundaryMatch = findNearestBoundary(matches, id);
                if (errors[boundaryMatch.route.id] == null) errors[boundaryMatch.route.id] = error;
            }
            if (!isStaticHandler) loaderData[id] = ResetLoaderDataSymbol;
            if (!foundError) {
                foundError = true;
                statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;
            }
            if (result.headers) loaderHeaders[id] = result.headers;
        } else {
            loaderData[id] = result.data;
            if (result.statusCode && result.statusCode !== 200 && !foundError) statusCode = result.statusCode;
            if (result.headers) loaderHeaders[id] = result.headers;
        }
    });
    if (pendingError !== void 0 && pendingActionResult) {
        errors = {
            [pendingActionResult[0]]: pendingError
        };
        loaderData[pendingActionResult[0]] = void 0;
    }
    return {
        loaderData,
        errors,
        statusCode: statusCode || 200,
        loaderHeaders
    };
}
function processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {
    let { loaderData, errors } = processRouteLoaderData(matches, results, pendingActionResult);
    revalidatingFetchers.forEach((rf)=>{
        let { key, match, controller } = rf;
        let result = fetcherResults[key];
        invariant(result, "Did not find corresponding fetcher result");
        if (controller && controller.signal.aborted) return;
        else if (isErrorResult(result)) {
            let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);
            if (!(errors && errors[boundaryMatch.route.id])) errors = {
                ...errors,
                [boundaryMatch.route.id]: result.error
            };
            state.fetchers.delete(key);
        } else if (isRedirectResult(result)) invariant(false, "Unhandled fetcher revalidation redirect");
        else {
            let doneFetcher = getDoneFetcher(result.data);
            state.fetchers.set(key, doneFetcher);
        }
    });
    return {
        loaderData,
        errors
    };
}
function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
    let mergedLoaderData = Object.entries(newLoaderData).filter(([, v])=>v !== ResetLoaderDataSymbol).reduce((merged, [k, v])=>{
        merged[k] = v;
        return merged;
    }, {});
    for (let match of matches){
        let id = match.route.id;
        if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) mergedLoaderData[id] = loaderData[id];
        if (errors && errors.hasOwnProperty(id)) break;
    }
    return mergedLoaderData;
}
function getActionDataForCommit(pendingActionResult) {
    if (!pendingActionResult) return {};
    return isErrorResult(pendingActionResult[1]) ? {
        // Clear out prior actionData on errors
        actionData: {}
    } : {
        actionData: {
            [pendingActionResult[0]]: pendingActionResult[1].data
        }
    };
}
function findNearestBoundary(matches, routeId) {
    let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m)=>m.route.id === routeId) + 1) : [
        ...matches
    ];
    return eligibleMatches.reverse().find((m)=>m.route.hasErrorBoundary === true) || matches[0];
}
function getShortCircuitMatches(routes) {
    let route = routes.length === 1 ? routes[0] : routes.find((r)=>r.index || !r.path || r.path === "/") || {
        id: `__shim-error-route__`
    };
    return {
        matches: [
            {
                params: {},
                pathname: "",
                pathnameBase: "",
                route
            }
        ],
        route
    };
}
function getInternalRouterError(status, { pathname, routeId, method, type, message } = {}) {
    let statusText = "Unknown Server Error";
    let errorMessage = "Unknown @remix-run/router error";
    if (status === 400) {
        statusText = "Bad Request";
        if (method && pathname && routeId) errorMessage = `You made a ${method} request to "${pathname}" but did not provide a \`loader\` for route "${routeId}", so there is no way to handle the request.`;
        else if (type === "invalid-body") errorMessage = "Unable to encode submission body";
    } else if (status === 403) {
        statusText = "Forbidden";
        errorMessage = `Route "${routeId}" does not match URL "${pathname}"`;
    } else if (status === 404) {
        statusText = "Not Found";
        errorMessage = `No route matches URL "${pathname}"`;
    } else if (status === 405) {
        statusText = "Method Not Allowed";
        if (method && pathname && routeId) errorMessage = `You made a ${method.toUpperCase()} request to "${pathname}" but did not provide an \`action\` for route "${routeId}", so there is no way to handle the request.`;
        else if (method) errorMessage = `Invalid request method "${method.toUpperCase()}"`;
    }
    return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);
}
function findRedirect(results) {
    let entries = Object.entries(results);
    for(let i = entries.length - 1; i >= 0; i--){
        let [key, result] = entries[i];
        if (isRedirectResult(result)) return {
            key,
            result
        };
    }
}
function stripHashFromPath(path) {
    let parsedPath = typeof path === "string" ? parsePath(path) : path;
    return createPath({
        ...parsedPath,
        hash: ""
    });
}
function isHashChangeOnly(a, b) {
    if (a.pathname !== b.pathname || a.search !== b.search) return false;
    if (a.hash === "") return b.hash !== "";
    else if (a.hash === b.hash) return true;
    else if (b.hash !== "") return true;
    return false;
}
function isDataStrategyResult(result) {
    return result != null && typeof result === "object" && "type" in result && "result" in result && (result.type === "data" /* data */  || result.type === "error" /* error */ );
}
function isRedirectDataStrategyResult(result) {
    return isResponse(result.result) && redirectStatusCodes.has(result.result.status);
}
function isErrorResult(result) {
    return result.type === "error" /* error */ ;
}
function isRedirectResult(result) {
    return (result && result.type) === "redirect" /* redirect */ ;
}
function isDataWithResponseInit(value) {
    return typeof value === "object" && value != null && "type" in value && "data" in value && "init" in value && value.type === "DataWithResponseInit";
}
function isResponse(value) {
    return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";
}
function isRedirectStatusCode(statusCode) {
    return redirectStatusCodes.has(statusCode);
}
function isRedirectResponse(result) {
    return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has("Location");
}
function isValidMethod(method) {
    return validRequestMethods.has(method.toUpperCase());
}
function isMutationMethod(method) {
    return validMutationMethods.has(method.toUpperCase());
}
function hasNakedIndexQuery(search) {
    return new URLSearchParams(search).getAll("index").some((v)=>v === "");
}
function getTargetMatch(matches, location) {
    let search = typeof location === "string" ? parsePath(location).search : location.search;
    if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || "")) return matches[matches.length - 1];
    let pathMatches = getPathContributingMatches(matches);
    return pathMatches[pathMatches.length - 1];
}
function getSubmissionFromNavigation(navigation) {
    let { formMethod, formAction, formEncType, text, formData, json } = navigation;
    if (!formMethod || !formAction || !formEncType) return;
    if (text != null) return {
        formMethod,
        formAction,
        formEncType,
        formData: void 0,
        json: void 0,
        text
    };
    else if (formData != null) return {
        formMethod,
        formAction,
        formEncType,
        formData,
        json: void 0,
        text: void 0
    };
    else if (json !== void 0) return {
        formMethod,
        formAction,
        formEncType,
        formData: void 0,
        json,
        text: void 0
    };
}
function getLoadingNavigation(location, submission) {
    if (submission) {
        let navigation = {
            state: "loading",
            location,
            formMethod: submission.formMethod,
            formAction: submission.formAction,
            formEncType: submission.formEncType,
            formData: submission.formData,
            json: submission.json,
            text: submission.text
        };
        return navigation;
    } else {
        let navigation = {
            state: "loading",
            location,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            json: void 0,
            text: void 0
        };
        return navigation;
    }
}
function getSubmittingNavigation(location, submission) {
    let navigation = {
        state: "submitting",
        location,
        formMethod: submission.formMethod,
        formAction: submission.formAction,
        formEncType: submission.formEncType,
        formData: submission.formData,
        json: submission.json,
        text: submission.text
    };
    return navigation;
}
function getLoadingFetcher(submission, data2) {
    if (submission) {
        let fetcher = {
            state: "loading",
            formMethod: submission.formMethod,
            formAction: submission.formAction,
            formEncType: submission.formEncType,
            formData: submission.formData,
            json: submission.json,
            text: submission.text,
            data: data2
        };
        return fetcher;
    } else {
        let fetcher = {
            state: "loading",
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            json: void 0,
            text: void 0,
            data: data2
        };
        return fetcher;
    }
}
function getSubmittingFetcher(submission, existingFetcher) {
    let fetcher = {
        state: "submitting",
        formMethod: submission.formMethod,
        formAction: submission.formAction,
        formEncType: submission.formEncType,
        formData: submission.formData,
        json: submission.json,
        text: submission.text,
        data: existingFetcher ? existingFetcher.data : void 0
    };
    return fetcher;
}
function getDoneFetcher(data2) {
    let fetcher = {
        state: "idle",
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0,
        json: void 0,
        text: void 0,
        data: data2
    };
    return fetcher;
}
function restoreAppliedTransitions(_window, transitions) {
    try {
        let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);
        if (sessionPositions) {
            let json = JSON.parse(sessionPositions);
            for (let [k, v] of Object.entries(json || {}))if (v && Array.isArray(v)) transitions.set(k, new Set(v || []));
        }
    } catch (e) {}
}
function persistAppliedTransitions(_window, transitions) {
    if (transitions.size > 0) {
        let json = {};
        for (let [k, v] of transitions)json[k] = [
            ...v
        ];
        try {
            _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));
        } catch (error) {
            warning(false, `Failed to save applied view transitions in sessionStorage (${error}).`);
        }
    }
}
function createDeferred() {
    let resolve;
    let reject;
    let promise = new Promise((res, rej)=>{
        resolve = async (val)=>{
            res(val);
            try {
                await promise;
            } catch (e) {}
        };
        reject = async (error)=>{
            rej(error);
            try {
                await promise;
            } catch (e) {}
        };
    });
    return {
        promise,
        //@ts-ignore
        resolve,
        //@ts-ignore
        reject
    };
}
var DataRouterContext = _react.createContext(null);
DataRouterContext.displayName = "DataRouter";
var DataRouterStateContext = _react.createContext(null);
DataRouterStateContext.displayName = "DataRouterState";
var ViewTransitionContext = _react.createContext({
    isTransitioning: false
});
ViewTransitionContext.displayName = "ViewTransition";
var FetchersContext = _react.createContext(/* @__PURE__ */ new Map());
FetchersContext.displayName = "Fetchers";
var AwaitContext = _react.createContext(null);
AwaitContext.displayName = "Await";
var NavigationContext = _react.createContext(null);
NavigationContext.displayName = "Navigation";
var LocationContext = _react.createContext(null);
LocationContext.displayName = "Location";
var RouteContext = _react.createContext({
    outlet: null,
    matches: [],
    isDataRoute: false
});
RouteContext.displayName = "Route";
var RouteErrorContext = _react.createContext(null);
RouteErrorContext.displayName = "RouteError";
var ENABLE_DEV_WARNINGS = true;
function useHref(to, { relative } = {}) {
    invariant(useInRouterContext(), // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useHref() may be used only in the context of a <Router> component.`);
    let { basename, navigator: navigator2 } = _react.useContext(NavigationContext);
    let { hash, pathname, search } = useResolvedPath(to, {
        relative
    });
    let joinedPathname = pathname;
    if (basename !== "/") joinedPathname = pathname === "/" ? basename : joinPaths([
        basename,
        pathname
    ]);
    return navigator2.createHref({
        pathname: joinedPathname,
        search,
        hash
    });
}
function useInRouterContext() {
    return _react.useContext(LocationContext) != null;
}
function useLocation() {
    invariant(useInRouterContext(), // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useLocation() may be used only in the context of a <Router> component.`);
    return _react.useContext(LocationContext).location;
}
function useNavigationType() {
    return _react.useContext(LocationContext).navigationType;
}
function useMatch(pattern) {
    invariant(useInRouterContext(), // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useMatch() may be used only in the context of a <Router> component.`);
    let { pathname } = useLocation();
    return _react.useMemo(()=>matchPath(pattern, decodePath(pathname)), [
        pathname,
        pattern
    ]);
}
var navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;
function useIsomorphicLayoutEffect(cb) {
    let isStatic = _react.useContext(NavigationContext).static;
    if (!isStatic) _react.useLayoutEffect(cb);
}
function useNavigate() {
    let { isDataRoute } = _react.useContext(RouteContext);
    return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
    invariant(useInRouterContext(), // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useNavigate() may be used only in the context of a <Router> component.`);
    let dataRouterContext = _react.useContext(DataRouterContext);
    let { basename, navigator: navigator2 } = _react.useContext(NavigationContext);
    let { matches } = _react.useContext(RouteContext);
    let { pathname: locationPathname } = useLocation();
    let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));
    let activeRef = _react.useRef(false);
    useIsomorphicLayoutEffect(()=>{
        activeRef.current = true;
    });
    let navigate = _react.useCallback((to, options = {})=>{
        warning(activeRef.current, navigateEffectWarning);
        if (!activeRef.current) return;
        if (typeof to === "number") {
            navigator2.go(to);
            return;
        }
        let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");
        if (dataRouterContext == null && basename !== "/") path.pathname = path.pathname === "/" ? basename : joinPaths([
            basename,
            path.pathname
        ]);
        (!!options.replace ? navigator2.replace : navigator2.push)(path, options.state, options);
    }, [
        basename,
        navigator2,
        routePathnamesJson,
        locationPathname,
        dataRouterContext
    ]);
    return navigate;
}
var OutletContext = _react.createContext(null);
function useOutletContext() {
    return _react.useContext(OutletContext);
}
function useOutlet(context) {
    let outlet = _react.useContext(RouteContext).outlet;
    if (outlet) return /* @__PURE__ */ _react.createElement(OutletContext.Provider, {
        value: context
    }, outlet);
    return outlet;
}
function useParams() {
    let { matches } = _react.useContext(RouteContext);
    let routeMatch = matches[matches.length - 1];
    return routeMatch ? routeMatch.params : {};
}
function useResolvedPath(to, { relative } = {}) {
    let { matches } = _react.useContext(RouteContext);
    let { pathname: locationPathname } = useLocation();
    let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));
    return _react.useMemo(()=>resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [
        to,
        routePathnamesJson,
        locationPathname,
        relative
    ]);
}
function useRoutes(routes, locationArg) {
    return useRoutesImpl(routes, locationArg);
}
function useRoutesImpl(routes, locationArg, dataRouterState, future) {
    invariant(useInRouterContext(), // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useRoutes() may be used only in the context of a <Router> component.`);
    let { navigator: navigator2, static: isStatic } = _react.useContext(NavigationContext);
    let { matches: parentMatches } = _react.useContext(RouteContext);
    let routeMatch = parentMatches[parentMatches.length - 1];
    let parentParams = routeMatch ? routeMatch.params : {};
    let parentPathname = routeMatch ? routeMatch.pathname : "/";
    let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
    let parentRoute = routeMatch && routeMatch.route;
    if (ENABLE_DEV_WARNINGS) {
        let parentPath = parentRoute && parentRoute.path || "";
        warningOnce(parentPathname, !parentRoute || parentPath.endsWith("*") || parentPath.endsWith("*?"), `You rendered descendant <Routes> (or called \`useRoutes()\`) at "${parentPathname}" (under <Route path="${parentPath}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${parentPath}"> to <Route path="${parentPath === "/" ? "*" : `${parentPath}/*`}">.`);
    }
    let locationFromContext = useLocation();
    let location;
    if (locationArg) {
        let parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
        invariant(parentPathnameBase === "/" || parsedLocationArg.pathname?.startsWith(parentPathnameBase), `When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${parentPathnameBase}" but pathname "${parsedLocationArg.pathname}" was given in the \`location\` prop.`);
        location = parsedLocationArg;
    } else location = locationFromContext;
    let pathname = location.pathname || "/";
    let remainingPathname = pathname;
    if (parentPathnameBase !== "/") {
        let parentSegments = parentPathnameBase.replace(/^\//, "").split("/");
        let segments = pathname.replace(/^\//, "").split("/");
        remainingPathname = "/" + segments.slice(parentSegments.length).join("/");
    }
    let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, {
        pathname: remainingPathname
    });
    if (ENABLE_DEV_WARNINGS) {
        warning(parentRoute || matches != null, `No routes matched location "${location.pathname}${location.search}${location.hash}" `);
        warning(matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0, `Matched leaf route at location "${location.pathname}${location.search}${location.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`);
    }
    let renderedMatches = _renderMatches(matches && matches.map((match)=>Object.assign({}, match, {
            params: Object.assign({}, parentParams, match.params),
            pathname: joinPaths([
                parentPathnameBase,
                // Re-encode pathnames that were decoded inside matchRoutes
                navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname
            ]),
            pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
                parentPathnameBase,
                // Re-encode pathnames that were decoded inside matchRoutes
                navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase
            ])
        })), parentMatches, dataRouterState, future);
    if (locationArg && renderedMatches) return /* @__PURE__ */ _react.createElement(LocationContext.Provider, {
        value: {
            location: {
                pathname: "/",
                search: "",
                hash: "",
                state: null,
                key: "default",
                ...location
            },
            navigationType: "POP" /* Pop */ 
        }
    }, renderedMatches);
    return renderedMatches;
}
function DefaultErrorComponent() {
    let error = useRouteError();
    let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);
    let stack = error instanceof Error ? error.stack : null;
    let lightgrey = "rgba(200,200,200, 0.5)";
    let preStyles = {
        padding: "0.5rem",
        backgroundColor: lightgrey
    };
    let codeStyles = {
        padding: "2px 4px",
        backgroundColor: lightgrey
    };
    let devInfo = null;
    if (ENABLE_DEV_WARNINGS) {
        console.error("Error handled by React Router default ErrorBoundary:", error);
        devInfo = /* @__PURE__ */ _react.createElement(_react.Fragment, null, /* @__PURE__ */ _react.createElement("p", null, "\u{1F4BF} Hey developer \u{1F44B}"), /* @__PURE__ */ _react.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", /* @__PURE__ */ _react.createElement("code", {
            style: codeStyles
        }, "ErrorBoundary"), " or", " ", /* @__PURE__ */ _react.createElement("code", {
            style: codeStyles
        }, "errorElement"), " prop on your route."));
    }
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, /* @__PURE__ */ _react.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ _react.createElement("h3", {
        style: {
            fontStyle: "italic"
        }
    }, message), stack ? /* @__PURE__ */ _react.createElement("pre", {
        style: preStyles
    }, stack) : null, devInfo);
}
var defaultErrorElement = /* @__PURE__ */ _react.createElement(DefaultErrorComponent, null);
var RenderErrorBoundary = class extends _react.Component {
    constructor(props){
        super(props);
        this.state = {
            location: props.location,
            revalidation: props.revalidation,
            error: props.error
        };
    }
    static getDerivedStateFromError(error) {
        return {
            error
        };
    }
    static getDerivedStateFromProps(props, state) {
        if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") return {
            error: props.error,
            location: props.location,
            revalidation: props.revalidation
        };
        return {
            error: props.error !== void 0 ? props.error : state.error,
            location: state.location,
            revalidation: props.revalidation || state.revalidation
        };
    }
    componentDidCatch(error, errorInfo) {
        console.error("React Router caught the following error during render", error, errorInfo);
    }
    render() {
        return this.state.error !== void 0 ? /* @__PURE__ */ _react.createElement(RouteContext.Provider, {
            value: this.props.routeContext
        }, /* @__PURE__ */ _react.createElement(RouteErrorContext.Provider, {
            value: this.state.error,
            children: this.props.component
        })) : this.props.children;
    }
};
function RenderedRoute({ routeContext, match, children }) {
    let dataRouterContext = _react.useContext(DataRouterContext);
    if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
    return /* @__PURE__ */ _react.createElement(RouteContext.Provider, {
        value: routeContext
    }, children);
}
function _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {
    if (matches == null) {
        if (!dataRouterState) return null;
        if (dataRouterState.errors) matches = dataRouterState.matches;
        else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) matches = dataRouterState.matches;
        else return null;
    }
    let renderedMatches = matches;
    let errors = dataRouterState?.errors;
    if (errors != null) {
        let errorIndex = renderedMatches.findIndex((m)=>m.route.id && errors?.[m.route.id] !== void 0);
        invariant(errorIndex >= 0, `Could not find a matching route for errors on route IDs: ${Object.keys(errors).join(",")}`);
        renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
    }
    let renderFallback = false;
    let fallbackIndex = -1;
    if (dataRouterState) for(let i = 0; i < renderedMatches.length; i++){
        let match = renderedMatches[i];
        if (match.route.HydrateFallback || match.route.hydrateFallbackElement) fallbackIndex = i;
        if (match.route.id) {
            let { loaderData, errors: errors2 } = dataRouterState;
            let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);
            if (match.route.lazy || needsToRunLoader) {
                renderFallback = true;
                if (fallbackIndex >= 0) renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);
                else renderedMatches = [
                    renderedMatches[0]
                ];
                break;
            }
        }
    }
    return renderedMatches.reduceRight((outlet, match, index)=>{
        let error;
        let shouldRenderHydrateFallback = false;
        let errorElement = null;
        let hydrateFallbackElement = null;
        if (dataRouterState) {
            error = errors && match.route.id ? errors[match.route.id] : void 0;
            errorElement = match.route.errorElement || defaultErrorElement;
            if (renderFallback) {
                if (fallbackIndex < 0 && index === 0) {
                    warningOnce("route-fallback", false, "No `HydrateFallback` element provided to render during initial hydration");
                    shouldRenderHydrateFallback = true;
                    hydrateFallbackElement = null;
                } else if (fallbackIndex === index) {
                    shouldRenderHydrateFallback = true;
                    hydrateFallbackElement = match.route.hydrateFallbackElement || null;
                }
            }
        }
        let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));
        let getChildren = ()=>{
            let children;
            if (error) children = errorElement;
            else if (shouldRenderHydrateFallback) children = hydrateFallbackElement;
            else if (match.route.Component) children = /* @__PURE__ */ _react.createElement(match.route.Component, null);
            else if (match.route.element) children = match.route.element;
            else children = outlet;
            return /* @__PURE__ */ _react.createElement(RenderedRoute, {
                match,
                routeContext: {
                    outlet,
                    matches: matches2,
                    isDataRoute: dataRouterState != null
                },
                children
            });
        };
        return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ _react.createElement(RenderErrorBoundary, {
            location: dataRouterState.location,
            revalidation: dataRouterState.revalidation,
            component: errorElement,
            error,
            children: getChildren(),
            routeContext: {
                outlet: null,
                matches: matches2,
                isDataRoute: true
            }
        }) : getChildren();
    }, null);
}
function getDataRouterConsoleError(hookName) {
    return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function useDataRouterContext(hookName) {
    let ctx = _react.useContext(DataRouterContext);
    invariant(ctx, getDataRouterConsoleError(hookName));
    return ctx;
}
function useDataRouterState(hookName) {
    let state = _react.useContext(DataRouterStateContext);
    invariant(state, getDataRouterConsoleError(hookName));
    return state;
}
function useRouteContext(hookName) {
    let route = _react.useContext(RouteContext);
    invariant(route, getDataRouterConsoleError(hookName));
    return route;
}
function useCurrentRouteId(hookName) {
    let route = useRouteContext(hookName);
    let thisRoute = route.matches[route.matches.length - 1];
    invariant(thisRoute.route.id, `${hookName} can only be used on routes that contain a unique "id"`);
    return thisRoute.route.id;
}
function useRouteId() {
    return useCurrentRouteId("useRouteId" /* UseRouteId */ );
}
function useNavigation() {
    let state = useDataRouterState("useNavigation" /* UseNavigation */ );
    return state.navigation;
}
function useRevalidator() {
    let dataRouterContext = useDataRouterContext("useRevalidator" /* UseRevalidator */ );
    let state = useDataRouterState("useRevalidator" /* UseRevalidator */ );
    return _react.useMemo(()=>({
            async revalidate () {
                await dataRouterContext.router.revalidate();
            },
            state: state.revalidation
        }), [
        dataRouterContext.router,
        state.revalidation
    ]);
}
function useMatches() {
    let { matches, loaderData } = useDataRouterState("useMatches" /* UseMatches */ );
    return _react.useMemo(()=>matches.map((m)=>convertRouteMatchToUiMatch(m, loaderData)), [
        matches,
        loaderData
    ]);
}
function useLoaderData() {
    let state = useDataRouterState("useLoaderData" /* UseLoaderData */ );
    let routeId = useCurrentRouteId("useLoaderData" /* UseLoaderData */ );
    return state.loaderData[routeId];
}
function useRouteLoaderData(routeId) {
    let state = useDataRouterState("useRouteLoaderData" /* UseRouteLoaderData */ );
    return state.loaderData[routeId];
}
function useActionData() {
    let state = useDataRouterState("useActionData" /* UseActionData */ );
    let routeId = useCurrentRouteId("useLoaderData" /* UseLoaderData */ );
    return state.actionData ? state.actionData[routeId] : void 0;
}
function useRouteError() {
    let error = _react.useContext(RouteErrorContext);
    let state = useDataRouterState("useRouteError" /* UseRouteError */ );
    let routeId = useCurrentRouteId("useRouteError" /* UseRouteError */ );
    if (error !== void 0) return error;
    return state.errors?.[routeId];
}
function useAsyncValue() {
    let value = _react.useContext(AwaitContext);
    return value?._data;
}
function useAsyncError() {
    let value = _react.useContext(AwaitContext);
    return value?._error;
}
var blockerId = 0;
function useBlocker(shouldBlock) {
    let { router, basename } = useDataRouterContext("useBlocker" /* UseBlocker */ );
    let state = useDataRouterState("useBlocker" /* UseBlocker */ );
    let [blockerKey, setBlockerKey] = _react.useState("");
    let blockerFunction = _react.useCallback((arg)=>{
        if (typeof shouldBlock !== "function") return !!shouldBlock;
        if (basename === "/") return shouldBlock(arg);
        let { currentLocation, nextLocation, historyAction } = arg;
        return shouldBlock({
            currentLocation: {
                ...currentLocation,
                pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname
            },
            nextLocation: {
                ...nextLocation,
                pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname
            },
            historyAction
        });
    }, [
        basename,
        shouldBlock
    ]);
    _react.useEffect(()=>{
        let key = String(++blockerId);
        setBlockerKey(key);
        return ()=>router.deleteBlocker(key);
    }, [
        router
    ]);
    _react.useEffect(()=>{
        if (blockerKey !== "") router.getBlocker(blockerKey, blockerFunction);
    }, [
        router,
        blockerKey,
        blockerFunction
    ]);
    return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;
}
function useNavigateStable() {
    let { router } = useDataRouterContext("useNavigate" /* UseNavigateStable */ );
    let id = useCurrentRouteId("useNavigate" /* UseNavigateStable */ );
    let activeRef = _react.useRef(false);
    useIsomorphicLayoutEffect(()=>{
        activeRef.current = true;
    });
    let navigate = _react.useCallback(async (to, options = {})=>{
        warning(activeRef.current, navigateEffectWarning);
        if (!activeRef.current) return;
        if (typeof to === "number") router.navigate(to);
        else await router.navigate(to, {
            fromRouteId: id,
            ...options
        });
    }, [
        router,
        id
    ]);
    return navigate;
}
var alreadyWarned = {};
function warningOnce(key, cond, message) {
    if (!cond && !alreadyWarned[key]) {
        alreadyWarned[key] = true;
        warning(false, message);
    }
}
// lib/server-runtime/warnings.ts
var alreadyWarned2 = {};
function warnOnce(condition, message) {
    if (!condition && !alreadyWarned2[message]) {
        alreadyWarned2[message] = true;
        console.warn(message);
    }
}
// lib/components.tsx
var ENABLE_DEV_WARNINGS2 = true;
function mapRouteProperties(route) {
    let updates = {
        // Note: this check also occurs in createRoutesFromChildren so update
        // there if you change this -- please and thank you!
        hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null
    };
    if (route.Component) {
        if (ENABLE_DEV_WARNINGS2) {
            if (route.element) warning(false, "You should not include both `Component` and `element` on your route - `Component` will be used.");
        }
        Object.assign(updates, {
            element: _react.createElement(route.Component),
            Component: void 0
        });
    }
    if (route.HydrateFallback) {
        if (ENABLE_DEV_WARNINGS2) {
            if (route.hydrateFallbackElement) warning(false, "You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.");
        }
        Object.assign(updates, {
            hydrateFallbackElement: _react.createElement(route.HydrateFallback),
            HydrateFallback: void 0
        });
    }
    if (route.ErrorBoundary) {
        if (ENABLE_DEV_WARNINGS2) {
            if (route.errorElement) warning(false, "You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.");
        }
        Object.assign(updates, {
            errorElement: _react.createElement(route.ErrorBoundary),
            ErrorBoundary: void 0
        });
    }
    return updates;
}
function createMemoryRouter(routes, opts) {
    return createRouter({
        basename: opts?.basename,
        unstable_getContext: opts?.unstable_getContext,
        future: opts?.future,
        history: createMemoryHistory({
            initialEntries: opts?.initialEntries,
            initialIndex: opts?.initialIndex
        }),
        hydrationData: opts?.hydrationData,
        routes,
        mapRouteProperties,
        dataStrategy: opts?.dataStrategy,
        patchRoutesOnNavigation: opts?.patchRoutesOnNavigation
    }).initialize();
}
var Deferred = class {
    constructor(){
        this.status = "pending";
        this.promise = new Promise((resolve, reject)=>{
            this.resolve = (value)=>{
                if (this.status === "pending") {
                    this.status = "resolved";
                    resolve(value);
                }
            };
            this.reject = (reason)=>{
                if (this.status === "pending") {
                    this.status = "rejected";
                    reject(reason);
                }
            };
        });
    }
};
function RouterProvider({ router, flushSync: reactDomFlushSyncImpl }) {
    let [state, setStateImpl] = _react.useState(router.state);
    let [pendingState, setPendingState] = _react.useState();
    let [vtContext, setVtContext] = _react.useState({
        isTransitioning: false
    });
    let [renderDfd, setRenderDfd] = _react.useState();
    let [transition, setTransition] = _react.useState();
    let [interruption, setInterruption] = _react.useState();
    let fetcherData = _react.useRef(/* @__PURE__ */ new Map());
    let setState = _react.useCallback((newState, { deletedFetchers, flushSync, viewTransitionOpts })=>{
        newState.fetchers.forEach((fetcher, key)=>{
            if (fetcher.data !== void 0) fetcherData.current.set(key, fetcher.data);
        });
        deletedFetchers.forEach((key)=>fetcherData.current.delete(key));
        warnOnce(flushSync === false || reactDomFlushSyncImpl != null, 'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from "react-router/dom"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.');
        let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === "function";
        warnOnce(viewTransitionOpts == null || isViewTransitionAvailable, "You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.");
        if (!viewTransitionOpts || !isViewTransitionAvailable) {
            if (reactDomFlushSyncImpl && flushSync) reactDomFlushSyncImpl(()=>setStateImpl(newState));
            else _react.startTransition(()=>setStateImpl(newState));
            return;
        }
        if (reactDomFlushSyncImpl && flushSync) {
            reactDomFlushSyncImpl(()=>{
                if (transition) {
                    renderDfd && renderDfd.resolve();
                    transition.skipTransition();
                }
                setVtContext({
                    isTransitioning: true,
                    flushSync: true,
                    currentLocation: viewTransitionOpts.currentLocation,
                    nextLocation: viewTransitionOpts.nextLocation
                });
            });
            let t = router.window.document.startViewTransition(()=>{
                reactDomFlushSyncImpl(()=>setStateImpl(newState));
            });
            t.finished.finally(()=>{
                reactDomFlushSyncImpl(()=>{
                    setRenderDfd(void 0);
                    setTransition(void 0);
                    setPendingState(void 0);
                    setVtContext({
                        isTransitioning: false
                    });
                });
            });
            reactDomFlushSyncImpl(()=>setTransition(t));
            return;
        }
        if (transition) {
            renderDfd && renderDfd.resolve();
            transition.skipTransition();
            setInterruption({
                state: newState,
                currentLocation: viewTransitionOpts.currentLocation,
                nextLocation: viewTransitionOpts.nextLocation
            });
        } else {
            setPendingState(newState);
            setVtContext({
                isTransitioning: true,
                flushSync: false,
                currentLocation: viewTransitionOpts.currentLocation,
                nextLocation: viewTransitionOpts.nextLocation
            });
        }
    }, [
        router.window,
        reactDomFlushSyncImpl,
        transition,
        renderDfd
    ]);
    _react.useLayoutEffect(()=>router.subscribe(setState), [
        router,
        setState
    ]);
    _react.useEffect(()=>{
        if (vtContext.isTransitioning && !vtContext.flushSync) setRenderDfd(new Deferred());
    }, [
        vtContext
    ]);
    _react.useEffect(()=>{
        if (renderDfd && pendingState && router.window) {
            let newState = pendingState;
            let renderPromise = renderDfd.promise;
            let transition2 = router.window.document.startViewTransition(async ()=>{
                _react.startTransition(()=>setStateImpl(newState));
                await renderPromise;
            });
            transition2.finished.finally(()=>{
                setRenderDfd(void 0);
                setTransition(void 0);
                setPendingState(void 0);
                setVtContext({
                    isTransitioning: false
                });
            });
            setTransition(transition2);
        }
    }, [
        pendingState,
        renderDfd,
        router.window
    ]);
    _react.useEffect(()=>{
        if (renderDfd && pendingState && state.location.key === pendingState.location.key) renderDfd.resolve();
    }, [
        renderDfd,
        transition,
        state.location,
        pendingState
    ]);
    _react.useEffect(()=>{
        if (!vtContext.isTransitioning && interruption) {
            setPendingState(interruption.state);
            setVtContext({
                isTransitioning: true,
                flushSync: false,
                currentLocation: interruption.currentLocation,
                nextLocation: interruption.nextLocation
            });
            setInterruption(void 0);
        }
    }, [
        vtContext.isTransitioning,
        interruption
    ]);
    let navigator2 = _react.useMemo(()=>{
        return {
            createHref: router.createHref,
            encodeLocation: router.encodeLocation,
            go: (n)=>router.navigate(n),
            push: (to, state2, opts)=>router.navigate(to, {
                    state: state2,
                    preventScrollReset: opts?.preventScrollReset
                }),
            replace: (to, state2, opts)=>router.navigate(to, {
                    replace: true,
                    state: state2,
                    preventScrollReset: opts?.preventScrollReset
                })
        };
    }, [
        router
    ]);
    let basename = router.basename || "/";
    let dataRouterContext = _react.useMemo(()=>({
            router,
            navigator: navigator2,
            static: false,
            basename
        }), [
        router,
        navigator2,
        basename
    ]);
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, /* @__PURE__ */ _react.createElement(DataRouterContext.Provider, {
        value: dataRouterContext
    }, /* @__PURE__ */ _react.createElement(DataRouterStateContext.Provider, {
        value: state
    }, /* @__PURE__ */ _react.createElement(FetchersContext.Provider, {
        value: fetcherData.current
    }, /* @__PURE__ */ _react.createElement(ViewTransitionContext.Provider, {
        value: vtContext
    }, /* @__PURE__ */ _react.createElement(Router, {
        basename,
        location: state.location,
        navigationType: state.historyAction,
        navigator: navigator2
    }, /* @__PURE__ */ _react.createElement(MemoizedDataRoutes, {
        routes: router.routes,
        future: router.future,
        state
    })))))), null);
}
var MemoizedDataRoutes = _react.memo(DataRoutes);
function DataRoutes({ routes, future, state }) {
    return useRoutesImpl(routes, void 0, state, future);
}
function MemoryRouter({ basename, children, initialEntries, initialIndex }) {
    let historyRef = _react.useRef();
    if (historyRef.current == null) historyRef.current = createMemoryHistory({
        initialEntries,
        initialIndex,
        v5Compat: true
    });
    let history = historyRef.current;
    let [state, setStateImpl] = _react.useState({
        action: history.action,
        location: history.location
    });
    let setState = _react.useCallback((newState)=>{
        _react.startTransition(()=>setStateImpl(newState));
    }, [
        setStateImpl
    ]);
    _react.useLayoutEffect(()=>history.listen(setState), [
        history,
        setState
    ]);
    return /* @__PURE__ */ _react.createElement(Router, {
        basename,
        children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    });
}
function Navigate({ to, replace: replace2, state, relative }) {
    invariant(useInRouterContext(), // TODO: This error is probably because they somehow have 2 versions of
    // the router loaded. We can help them understand how to avoid that.
    `<Navigate> may be used only in the context of a <Router> component.`);
    let { static: isStatic } = _react.useContext(NavigationContext);
    warning(!isStatic, `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`);
    let { matches } = _react.useContext(RouteContext);
    let { pathname: locationPathname } = useLocation();
    let navigate = useNavigate();
    let path = resolveTo(to, getResolveToMatches(matches), locationPathname, relative === "path");
    let jsonPath = JSON.stringify(path);
    _react.useEffect(()=>{
        navigate(JSON.parse(jsonPath), {
            replace: replace2,
            state,
            relative
        });
    }, [
        navigate,
        jsonPath,
        relative,
        replace2,
        state
    ]);
    return null;
}
function Outlet(props) {
    return useOutlet(props.context);
}
function Route(_props) {
    invariant(false, `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`);
}
function Router({ basename: basenameProp = "/", children = null, location: locationProp, navigationType = "POP" /* Pop */ , navigator: navigator2, static: staticProp = false }) {
    invariant(!useInRouterContext(), `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`);
    let basename = basenameProp.replace(/^\/*/, "/");
    let navigationContext = _react.useMemo(()=>({
            basename,
            navigator: navigator2,
            static: staticProp,
            future: {}
        }), [
        basename,
        navigator2,
        staticProp
    ]);
    if (typeof locationProp === "string") locationProp = parsePath(locationProp);
    let { pathname = "/", search = "", hash = "", state = null, key = "default" } = locationProp;
    let locationContext = _react.useMemo(()=>{
        let trailingPathname = stripBasename(pathname, basename);
        if (trailingPathname == null) return null;
        return {
            location: {
                pathname: trailingPathname,
                search,
                hash,
                state,
                key
            },
            navigationType
        };
    }, [
        basename,
        pathname,
        search,
        hash,
        state,
        key,
        navigationType
    ]);
    warning(locationContext != null, `<Router basename="${basename}"> is not able to match the URL "${pathname}${search}${hash}" because it does not start with the basename, so the <Router> won't render anything.`);
    if (locationContext == null) return null;
    return /* @__PURE__ */ _react.createElement(NavigationContext.Provider, {
        value: navigationContext
    }, /* @__PURE__ */ _react.createElement(LocationContext.Provider, {
        children,
        value: locationContext
    }));
}
function Routes({ children, location }) {
    return useRoutes(createRoutesFromChildren(children), location);
}
function Await({ children, errorElement, resolve }) {
    return /* @__PURE__ */ _react.createElement(AwaitErrorBoundary, {
        resolve,
        errorElement
    }, /* @__PURE__ */ _react.createElement(ResolveAwait, null, children));
}
var AwaitErrorBoundary = class extends _react.Component {
    constructor(props){
        super(props);
        this.state = {
            error: null
        };
    }
    static getDerivedStateFromError(error) {
        return {
            error
        };
    }
    componentDidCatch(error, errorInfo) {
        console.error("<Await> caught the following error during render", error, errorInfo);
    }
    render() {
        let { children, errorElement, resolve } = this.props;
        let promise = null;
        let status = 0 /* pending */ ;
        if (!(resolve instanceof Promise)) {
            status = 1 /* success */ ;
            promise = Promise.resolve();
            Object.defineProperty(promise, "_tracked", {
                get: ()=>true
            });
            Object.defineProperty(promise, "_data", {
                get: ()=>resolve
            });
        } else if (this.state.error) {
            status = 2 /* error */ ;
            let renderError = this.state.error;
            promise = Promise.reject().catch(()=>{});
            Object.defineProperty(promise, "_tracked", {
                get: ()=>true
            });
            Object.defineProperty(promise, "_error", {
                get: ()=>renderError
            });
        } else if (resolve._tracked) {
            promise = resolve;
            status = "_error" in promise ? 2 /* error */  : "_data" in promise ? 1 /* success */  : 0 /* pending */ ;
        } else {
            status = 0 /* pending */ ;
            Object.defineProperty(resolve, "_tracked", {
                get: ()=>true
            });
            promise = resolve.then((data2)=>Object.defineProperty(resolve, "_data", {
                    get: ()=>data2
                }), (error)=>Object.defineProperty(resolve, "_error", {
                    get: ()=>error
                }));
        }
        if (status === 2 /* error */  && !errorElement) throw promise._error;
        if (status === 2 /* error */ ) return /* @__PURE__ */ _react.createElement(AwaitContext.Provider, {
            value: promise,
            children: errorElement
        });
        if (status === 1 /* success */ ) return /* @__PURE__ */ _react.createElement(AwaitContext.Provider, {
            value: promise,
            children
        });
        throw promise;
    }
};
function ResolveAwait({ children }) {
    let data2 = useAsyncValue();
    let toRender = typeof children === "function" ? children(data2) : children;
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, toRender);
}
function createRoutesFromChildren(children, parentPath = []) {
    let routes = [];
    _react.Children.forEach(children, (element, index)=>{
        if (!_react.isValidElement(element)) return;
        let treePath = [
            ...parentPath,
            index
        ];
        if (element.type === _react.Fragment) {
            routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));
            return;
        }
        invariant(element.type === Route, `[${typeof element.type === "string" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`);
        invariant(!element.props.index || !element.props.children, "An index route cannot have child routes.");
        let route = {
            id: element.props.id || treePath.join("-"),
            caseSensitive: element.props.caseSensitive,
            element: element.props.element,
            Component: element.props.Component,
            index: element.props.index,
            path: element.props.path,
            loader: element.props.loader,
            action: element.props.action,
            hydrateFallbackElement: element.props.hydrateFallbackElement,
            HydrateFallback: element.props.HydrateFallback,
            errorElement: element.props.errorElement,
            ErrorBoundary: element.props.ErrorBoundary,
            hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,
            shouldRevalidate: element.props.shouldRevalidate,
            handle: element.props.handle,
            lazy: element.props.lazy
        };
        if (element.props.children) route.children = createRoutesFromChildren(element.props.children, treePath);
        routes.push(route);
    });
    return routes;
}
var createRoutesFromElements = createRoutesFromChildren;
function renderMatches(matches) {
    return _renderMatches(matches);
}
// lib/dom/dom.ts
var defaultMethod = "get";
var defaultEncType = "application/x-www-form-urlencoded";
function isHtmlElement(object) {
    return object != null && typeof object.tagName === "string";
}
function isButtonElement(object) {
    return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function isFormElement(object) {
    return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function isInputElement(object) {
    return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}
function isModifiedEvent(event) {
    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
    return event.button === 0 && // Ignore everything but left clicks
    (!target || target === "_self") && // Let browser handle "target=_blank" etc.
    !isModifiedEvent(event);
}
function createSearchParams(init = "") {
    return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key)=>{
        let value = init[key];
        return memo2.concat(Array.isArray(value) ? value.map((v)=>[
                key,
                v
            ]) : [
            [
                key,
                value
            ]
        ]);
    }, []));
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
    let searchParams = createSearchParams(locationSearch);
    if (defaultSearchParams) defaultSearchParams.forEach((_, key)=>{
        if (!searchParams.has(key)) defaultSearchParams.getAll(key).forEach((value)=>{
            searchParams.append(key, value);
        });
    });
    return searchParams;
}
var _formDataSupportsSubmitter = null;
function isFormDataSubmitterSupported() {
    if (_formDataSupportsSubmitter === null) try {
        new FormData(document.createElement("form"), // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0);
        _formDataSupportsSubmitter = false;
    } catch (e) {
        _formDataSupportsSubmitter = true;
    }
    return _formDataSupportsSubmitter;
}
var supportedFormEncTypes = /* @__PURE__ */ new Set([
    "application/x-www-form-urlencoded",
    "multipart/form-data",
    "text/plain"
]);
function getFormEncType(encType) {
    if (encType != null && !supportedFormEncTypes.has(encType)) {
        warning(false, `"${encType}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${defaultEncType}"`);
        return null;
    }
    return encType;
}
function getFormSubmissionInfo(target, basename) {
    let method;
    let action;
    let encType;
    let formData;
    let body;
    if (isFormElement(target)) {
        let attr = target.getAttribute("action");
        action = attr ? stripBasename(attr, basename) : null;
        method = target.getAttribute("method") || defaultMethod;
        encType = getFormEncType(target.getAttribute("enctype")) || defaultEncType;
        formData = new FormData(target);
    } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
        let form = target.form;
        if (form == null) throw new Error(`Cannot submit a <button> or <input type="submit"> without a <form>`);
        let attr = target.getAttribute("formaction") || form.getAttribute("action");
        action = attr ? stripBasename(attr, basename) : null;
        method = target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod;
        encType = getFormEncType(target.getAttribute("formenctype")) || getFormEncType(form.getAttribute("enctype")) || defaultEncType;
        formData = new FormData(form, target);
        if (!isFormDataSubmitterSupported()) {
            let { name, type, value } = target;
            if (type === "image") {
                let prefix = name ? `${name}.` : "";
                formData.append(`${prefix}x`, "0");
                formData.append(`${prefix}y`, "0");
            } else if (name) formData.append(name, value);
        }
    } else if (isHtmlElement(target)) throw new Error(`Cannot submit element that is not <form>, <button>, or <input type="submit|image">`);
    else {
        method = defaultMethod;
        action = null;
        encType = defaultEncType;
        body = target;
    }
    if (formData && encType === "text/plain") {
        body = formData;
        formData = void 0;
    }
    return {
        action,
        method: method.toLowerCase(),
        encType,
        formData,
        body
    };
}
// lib/dom/ssr/invariant.ts
function invariant2(value, message) {
    if (value === false || value === null || typeof value === "undefined") throw new Error(message);
}
// lib/dom/ssr/routeModules.ts
async function loadRouteModule(route, routeModulesCache) {
    if (route.id in routeModulesCache) return routeModulesCache[route.id];
    try {
        let routeModule = await import(/* @vite-ignore */ /* webpackIgnore: true */ route.module);
        routeModulesCache[route.id] = routeModule;
        return routeModule;
    } catch (error) {
        console.error(`Error loading route module \`${route.module}\`, reloading page...`);
        console.error(error);
        if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error
        $c5635dc078d5faa6$import_meta.hot) throw error;
        window.location.reload();
        return new Promise(()=>{});
    }
}
// lib/dom/ssr/links.ts
function getKeyedLinksForMatches(matches, routeModules, manifest) {
    let descriptors = matches.map((match)=>{
        let module = routeModules[match.route.id];
        let route = manifest.routes[match.route.id];
        return [
            route && route.css ? route.css.map((href2)=>({
                    rel: "stylesheet",
                    href: href2
                })) : [],
            module?.links?.() || []
        ];
    }).flat(2);
    let preloads = getModuleLinkHrefs(matches, manifest);
    return dedupeLinkDescriptors(descriptors, preloads);
}
function getRouteCssDescriptors(route) {
    if (!route.css) return [];
    return route.css.map((href2)=>({
            rel: "stylesheet",
            href: href2
        }));
}
async function prefetchRouteCss(route) {
    if (!route.css) return;
    let descriptors = getRouteCssDescriptors(route);
    await Promise.all(descriptors.map(prefetchStyleLink));
}
async function prefetchStyleLinks(route, routeModule) {
    if (!route.css && !routeModule.links || !isPreloadSupported()) return;
    let descriptors = [];
    if (route.css) descriptors.push(...getRouteCssDescriptors(route));
    if (routeModule.links) descriptors.push(...routeModule.links());
    if (descriptors.length === 0) return;
    let styleLinks = [];
    for (let descriptor of descriptors)if (!isPageLinkDescriptor(descriptor) && descriptor.rel === "stylesheet") styleLinks.push({
        ...descriptor,
        rel: "preload",
        as: "style"
    });
    await Promise.all(styleLinks.map(prefetchStyleLink));
}
async function prefetchStyleLink(descriptor) {
    return new Promise((resolve)=>{
        if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(`link[rel="stylesheet"][href="${descriptor.href}"]`)) return resolve();
        let link = document.createElement("link");
        Object.assign(link, descriptor);
        function removeLink() {
            if (document.head.contains(link)) document.head.removeChild(link);
        }
        link.onload = ()=>{
            removeLink();
            resolve();
        };
        link.onerror = ()=>{
            removeLink();
            resolve();
        };
        document.head.appendChild(link);
    });
}
function isPageLinkDescriptor(object) {
    return object != null && typeof object.page === "string";
}
function isHtmlLinkDescriptor(object) {
    if (object == null) return false;
    if (object.href == null) return object.rel === "preload" && typeof object.imageSrcSet === "string" && typeof object.imageSizes === "string";
    return typeof object.rel === "string" && typeof object.href === "string";
}
async function getKeyedPrefetchLinks(matches, manifest, routeModules) {
    let links = await Promise.all(matches.map(async (match)=>{
        let route = manifest.routes[match.route.id];
        if (route) {
            let mod = await loadRouteModule(route, routeModules);
            return mod.links ? mod.links() : [];
        }
        return [];
    }));
    return dedupeLinkDescriptors(links.flat(1).filter(isHtmlLinkDescriptor).filter((link)=>link.rel === "stylesheet" || link.rel === "preload").map((link)=>link.rel === "stylesheet" ? {
            ...link,
            rel: "prefetch",
            as: "style"
        } : {
            ...link,
            rel: "prefetch"
        }));
}
function getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {
    let isNew = (match, index)=>{
        if (!currentMatches[index]) return true;
        return match.route.id !== currentMatches[index].route.id;
    };
    let matchPathChanged = (match, index)=>{
        return(// param change, /users/123 -> /users/456
        currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path
        // e.g. /files/images/avatar.jpg -> files/finances.xls
        currentMatches[index].route.path?.endsWith("*") && currentMatches[index].params["*"] !== match.params["*"]);
    };
    if (mode === "assets") return nextMatches.filter((match, index)=>isNew(match, index) || matchPathChanged(match, index));
    if (mode === "data") return nextMatches.filter((match, index)=>{
        let manifestRoute = manifest.routes[match.route.id];
        if (!manifestRoute || !manifestRoute.hasLoader) return false;
        if (isNew(match, index) || matchPathChanged(match, index)) return true;
        if (match.route.shouldRevalidate) {
            let routeChoice = match.route.shouldRevalidate({
                currentUrl: new URL(location.pathname + location.search + location.hash, window.origin),
                currentParams: currentMatches[0]?.params || {},
                nextUrl: new URL(page, window.origin),
                nextParams: match.params,
                defaultShouldRevalidate: true
            });
            if (typeof routeChoice === "boolean") return routeChoice;
        }
        return true;
    });
    return [];
}
function getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {
    return dedupeHrefs(matches.map((match)=>{
        let route = manifest.routes[match.route.id];
        if (!route) return [];
        let hrefs = [
            route.module
        ];
        if (route.clientActionModule) hrefs = hrefs.concat(route.clientActionModule);
        if (route.clientLoaderModule) hrefs = hrefs.concat(route.clientLoaderModule);
        if (includeHydrateFallback && route.hydrateFallbackModule) hrefs = hrefs.concat(route.hydrateFallbackModule);
        if (route.imports) hrefs = hrefs.concat(route.imports);
        return hrefs;
    }).flat(1));
}
function dedupeHrefs(hrefs) {
    return [
        ...new Set(hrefs)
    ];
}
function sortKeys(obj) {
    let sorted = {};
    let keys = Object.keys(obj).sort();
    for (let key of keys)sorted[key] = obj[key];
    return sorted;
}
function dedupeLinkDescriptors(descriptors, preloads) {
    let set = /* @__PURE__ */ new Set();
    let preloadsSet = new Set(preloads);
    return descriptors.reduce((deduped, descriptor)=>{
        let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === "script" && descriptor.href && preloadsSet.has(descriptor.href);
        if (alreadyModulePreload) return deduped;
        let key = JSON.stringify(sortKeys(descriptor));
        if (!set.has(key)) {
            set.add(key);
            deduped.push({
                key,
                link: descriptor
            });
        }
        return deduped;
    }, []);
}
var _isPreloadSupported;
function isPreloadSupported() {
    if (_isPreloadSupported !== void 0) return _isPreloadSupported;
    let el = document.createElement("link");
    _isPreloadSupported = el.relList.supports("preload");
    el = null;
    return _isPreloadSupported;
}
// lib/dom/ssr/markup.ts
var ESCAPE_LOOKUP = {
    "&": "\\u0026",
    ">": "\\u003e",
    "<": "\\u003c",
    "\u2028": "\\u2028",
    "\u2029": "\\u2029"
};
var ESCAPE_REGEX = /[&><\u2028\u2029]/g;
function escapeHtml(html) {
    return html.replace(ESCAPE_REGEX, (match)=>ESCAPE_LOOKUP[match]);
}
function createHtml(html) {
    return {
        __html: html
    };
}
// lib/dom/ssr/data.ts
async function createRequestInit(request) {
    let init = {
        signal: request.signal
    };
    if (request.method !== "GET") {
        init.method = request.method;
        let contentType = request.headers.get("Content-Type");
        if (contentType && /\bapplication\/json\b/.test(contentType)) {
            init.headers = {
                "Content-Type": contentType
            };
            init.body = JSON.stringify(await request.json());
        } else if (contentType && /\btext\/plain\b/.test(contentType)) {
            init.headers = {
                "Content-Type": contentType
            };
            init.body = await request.text();
        } else if (contentType && /\bapplication\/x-www-form-urlencoded\b/.test(contentType)) init.body = new URLSearchParams(await request.text());
        else init.body = await request.formData();
    }
    return init;
}
// lib/dom/ssr/single-fetch.tsx
var SingleFetchRedirectSymbol = Symbol("SingleFetchRedirect");
function StreamTransfer({ context, identifier, reader, textDecoder, nonce }) {
    if (!context.renderMeta || !context.renderMeta.didRenderScripts) return null;
    if (!context.renderMeta.streamCache) context.renderMeta.streamCache = {};
    let { streamCache } = context.renderMeta;
    let promise = streamCache[identifier];
    if (!promise) promise = streamCache[identifier] = reader.read().then((result)=>{
        streamCache[identifier].result = {
            done: result.done,
            value: textDecoder.decode(result.value, {
                stream: true
            })
        };
    }).catch((e)=>{
        streamCache[identifier].error = e;
    });
    if (promise.error) throw promise.error;
    if (promise.result === void 0) throw promise;
    let { done, value } = promise.result;
    let scriptTag = value ? /* @__PURE__ */ _react.createElement("script", {
        nonce,
        dangerouslySetInnerHTML: {
            __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(JSON.stringify(value))});`
        }
    }) : null;
    if (done) return /* @__PURE__ */ _react.createElement(_react.Fragment, null, scriptTag, /* @__PURE__ */ _react.createElement("script", {
        nonce,
        dangerouslySetInnerHTML: {
            __html: `window.__reactRouterContext.streamController.close();`
        }
    }));
    else return /* @__PURE__ */ _react.createElement(_react.Fragment, null, scriptTag, /* @__PURE__ */ _react.createElement(_react.Suspense, null, /* @__PURE__ */ _react.createElement(StreamTransfer, {
        context,
        identifier: identifier + 1,
        reader,
        textDecoder,
        nonce
    })));
}
function handleMiddlewareError(error, routeId) {
    return {
        [routeId]: {
            type: "error",
            result: error
        }
    };
}
function getSingleFetchDataStrategy(manifest, routeModules, ssr, basename, getRouter) {
    return async (args)=>{
        let { request, matches, fetcherKey } = args;
        if (request.method !== "GET") return runMiddlewarePipeline(args, false, ()=>singleFetchActionStrategy(request, matches, basename), handleMiddlewareError);
        if (!ssr) {
            let foundRevalidatingServerLoader = matches.some((m)=>m.shouldLoad && manifest.routes[m.route.id]?.hasLoader && !manifest.routes[m.route.id]?.hasClientLoader);
            if (!foundRevalidatingServerLoader) return runMiddlewarePipeline(args, false, ()=>nonSsrStrategy(manifest, request, matches, basename), handleMiddlewareError);
        }
        if (fetcherKey) return runMiddlewarePipeline(args, false, ()=>singleFetchLoaderFetcherStrategy(request, matches, basename), handleMiddlewareError);
        return runMiddlewarePipeline(args, false, ()=>singleFetchLoaderNavigationStrategy(manifest, routeModules, ssr, getRouter(), request, matches, basename), handleMiddlewareError);
    };
}
async function singleFetchActionStrategy(request, matches, basename) {
    let actionMatch = matches.find((m)=>m.shouldLoad);
    invariant2(actionMatch, "No action match found");
    let actionStatus = void 0;
    let result = await actionMatch.resolve(async (handler)=>{
        let result2 = await handler(async ()=>{
            let url = singleFetchUrl(request.url, basename);
            let init = await createRequestInit(request);
            let { data: data2, status } = await fetchAndDecode(url, init);
            actionStatus = status;
            return unwrapSingleFetchResult(data2, actionMatch.route.id);
        });
        return result2;
    });
    if (isResponse(result.result) || isRouteErrorResponse(result.result)) return {
        [actionMatch.route.id]: result
    };
    return {
        [actionMatch.route.id]: {
            type: result.type,
            result: data(result.result, actionStatus)
        }
    };
}
async function nonSsrStrategy(manifest, request, matches, basename) {
    let matchesToLoad = matches.filter((m)=>m.shouldLoad);
    let url = stripIndexParam(singleFetchUrl(request.url, basename));
    let init = await createRequestInit(request);
    let results = {};
    await Promise.all(matchesToLoad.map((m)=>m.resolve(async (handler)=>{
            try {
                let result = manifest.routes[m.route.id]?.hasClientLoader ? await fetchSingleLoader(handler, url, init, m.route.id) : await handler();
                results[m.route.id] = {
                    type: "data",
                    result
                };
            } catch (e) {
                results[m.route.id] = {
                    type: "error",
                    result: e
                };
            }
        })));
    return results;
}
async function singleFetchLoaderNavigationStrategy(manifest, routeModules, ssr, router, request, matches, basename) {
    let routesParams = /* @__PURE__ */ new Set();
    let foundOptOutRoute = false;
    let routeDfds = matches.map(()=>createDeferred2());
    let routesLoadedPromise = Promise.all(routeDfds.map((d)=>d.promise));
    let singleFetchDfd = createDeferred2();
    let url = stripIndexParam(singleFetchUrl(request.url, basename));
    let init = await createRequestInit(request);
    let results = {};
    let resolvePromise = Promise.all(matches.map(async (m, i)=>m.resolve(async (handler)=>{
            routeDfds[i].resolve();
            let manifestRoute = manifest.routes[m.route.id];
            if (!m.shouldLoad) {
                if (!router.state.initialized) return;
                if (m.route.id in router.state.loaderData && manifestRoute && m.route.shouldRevalidate) {
                    if (manifestRoute.hasLoader) foundOptOutRoute = true;
                    return;
                }
            }
            if (manifestRoute && manifestRoute.hasClientLoader) {
                if (manifestRoute.hasLoader) foundOptOutRoute = true;
                try {
                    let result = await fetchSingleLoader(handler, url, init, m.route.id);
                    results[m.route.id] = {
                        type: "data",
                        result
                    };
                } catch (e) {
                    results[m.route.id] = {
                        type: "error",
                        result: e
                    };
                }
                return;
            }
            if (manifestRoute && manifestRoute.hasLoader) routesParams.add(m.route.id);
            try {
                let result = await handler(async ()=>{
                    let data2 = await singleFetchDfd.promise;
                    return unwrapSingleFetchResults(data2, m.route.id);
                });
                results[m.route.id] = {
                    type: "data",
                    result
                };
            } catch (e) {
                results[m.route.id] = {
                    type: "error",
                    result: e
                };
            }
        })));
    await routesLoadedPromise;
    if ((!router.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) singleFetchDfd.resolve({});
    else try {
        if (ssr && foundOptOutRoute && routesParams.size > 0) url.searchParams.set("_routes", matches.filter((m)=>routesParams.has(m.route.id)).map((m)=>m.route.id).join(","));
        let data2 = await fetchAndDecode(url, init);
        singleFetchDfd.resolve(data2.data);
    } catch (e) {
        singleFetchDfd.reject(e);
    }
    await resolvePromise;
    return results;
}
async function singleFetchLoaderFetcherStrategy(request, matches, basename) {
    let fetcherMatch = matches.find((m)=>m.shouldLoad);
    invariant2(fetcherMatch, "No fetcher match found");
    let result = await fetcherMatch.resolve(async (handler)=>{
        let url = stripIndexParam(singleFetchUrl(request.url, basename));
        let init = await createRequestInit(request);
        return fetchSingleLoader(handler, url, init, fetcherMatch.route.id);
    });
    return {
        [fetcherMatch.route.id]: result
    };
}
function fetchSingleLoader(handler, url, init, routeId) {
    return handler(async ()=>{
        let singleLoaderUrl = new URL(url);
        singleLoaderUrl.searchParams.set("_routes", routeId);
        let { data: data2 } = await fetchAndDecode(singleLoaderUrl, init);
        return unwrapSingleFetchResults(data2, routeId);
    });
}
function stripIndexParam(url) {
    let indexValues = url.searchParams.getAll("index");
    url.searchParams.delete("index");
    let indexValuesToKeep = [];
    for (let indexValue of indexValues)if (indexValue) indexValuesToKeep.push(indexValue);
    for (let toKeep of indexValuesToKeep)url.searchParams.append("index", toKeep);
    return url;
}
function singleFetchUrl(reqUrl, basename) {
    let url = typeof reqUrl === "string" ? new URL(reqUrl, // This can be called during the SSR flow via PrefetchPageLinksImpl so
    // don't assume window is available
    typeof window === "undefined" ? "server://singlefetch/" : window.location.origin) : reqUrl;
    if (url.pathname === "/") url.pathname = "_root.data";
    else if (basename && stripBasename(url.pathname, basename) === "/") url.pathname = `${basename.replace(/\/$/, "")}/_root.data`;
    else url.pathname = `${url.pathname.replace(/\/$/, "")}.data`;
    return url;
}
async function fetchAndDecode(url, init) {
    let res = await fetch(url, init);
    if (res.status === 404 && !res.headers.has("X-Remix-Response")) throw new ErrorResponseImpl(404, "Not Found", true);
    const NO_BODY_STATUS_CODES2 = /* @__PURE__ */ new Set([
        100,
        101,
        204,
        205
    ]);
    if (NO_BODY_STATUS_CODES2.has(res.status)) {
        if (!init.method || init.method === "GET") return {
            status: res.status,
            data: {}
        };
        else return {
            status: res.status,
            data: {
                data: void 0
            }
        };
    }
    invariant2(res.body, "No response body to decode");
    try {
        let decoded = await decodeViaTurboStream(res.body, window);
        return {
            status: res.status,
            data: decoded.value
        };
    } catch (e) {
        throw new Error("Unable to decode turbo-stream response");
    }
}
function decodeViaTurboStream(body, global2) {
    return (0, _turboStream.decode)(body, {
        plugins: [
            (type, ...rest)=>{
                if (type === "SanitizedError") {
                    let [name, message, stack] = rest;
                    let Constructor = Error;
                    if (name && name in global2 && typeof global2[name] === "function") Constructor = global2[name];
                    let error = new Constructor(message);
                    error.stack = stack;
                    return {
                        value: error
                    };
                }
                if (type === "ErrorResponse") {
                    let [data2, status, statusText] = rest;
                    return {
                        value: new ErrorResponseImpl(status, statusText, data2)
                    };
                }
                if (type === "SingleFetchRedirect") return {
                    value: {
                        [SingleFetchRedirectSymbol]: rest[0]
                    }
                };
                if (type === "SingleFetchClassInstance") return {
                    value: rest[0]
                };
                if (type === "SingleFetchFallback") return {
                    value: void 0
                };
            }
        ]
    });
}
function unwrapSingleFetchResults(results, routeId) {
    let redirect2 = results[SingleFetchRedirectSymbol];
    if (redirect2) return unwrapSingleFetchResult(redirect2, routeId);
    return results[routeId] !== void 0 ? unwrapSingleFetchResult(results[routeId], routeId) : null;
}
function unwrapSingleFetchResult(result, routeId) {
    if ("error" in result) throw result.error;
    else if ("redirect" in result) {
        let headers = {};
        if (result.revalidate) headers["X-Remix-Revalidate"] = "yes";
        if (result.reload) headers["X-Remix-Reload-Document"] = "yes";
        if (result.replace) headers["X-Remix-Replace"] = "yes";
        throw redirect(result.redirect, {
            status: result.status,
            headers
        });
    } else if ("data" in result) return result.data;
    else throw new Error(`No response found for routeId "${routeId}"`);
}
function createDeferred2() {
    let resolve;
    let reject;
    let promise = new Promise((res, rej)=>{
        resolve = async (val)=>{
            res(val);
            try {
                await promise;
            } catch (e) {}
        };
        reject = async (error)=>{
            rej(error);
            try {
                await promise;
            } catch (e) {}
        };
    });
    return {
        promise,
        //@ts-ignore
        resolve,
        //@ts-ignore
        reject
    };
}
var RemixErrorBoundary = class extends _react.Component {
    constructor(props){
        super(props);
        this.state = {
            error: props.error || null,
            location: props.location
        };
    }
    static getDerivedStateFromError(error) {
        return {
            error
        };
    }
    static getDerivedStateFromProps(props, state) {
        if (state.location !== props.location) return {
            error: props.error || null,
            location: props.location
        };
        return {
            error: props.error || state.error,
            location: state.location
        };
    }
    render() {
        if (this.state.error) return /* @__PURE__ */ _react.createElement(RemixRootDefaultErrorBoundary, {
            error: this.state.error,
            isOutsideRemixApp: true
        });
        else return this.props.children;
    }
};
function RemixRootDefaultErrorBoundary({ error, isOutsideRemixApp }) {
    console.error(error);
    let heyDeveloper = /* @__PURE__ */ _react.createElement("script", {
        dangerouslySetInnerHTML: {
            __html: `
        console.log(
          "\u{1F4BF} Hey developer \u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information."
        );
      `
        }
    });
    if (isRouteErrorResponse(error)) return /* @__PURE__ */ _react.createElement(BoundaryShell, {
        title: "Unhandled Thrown Response!"
    }, /* @__PURE__ */ _react.createElement("h1", {
        style: {
            fontSize: "24px"
        }
    }, error.status, " ", error.statusText), heyDeveloper);
    let errorInstance;
    if (error instanceof Error) errorInstance = error;
    else {
        let errorString = error == null ? "Unknown Error" : typeof error === "object" && "toString" in error ? error.toString() : JSON.stringify(error);
        errorInstance = new Error(errorString);
    }
    return /* @__PURE__ */ _react.createElement(BoundaryShell, {
        title: "Application Error!",
        isOutsideRemixApp
    }, /* @__PURE__ */ _react.createElement("h1", {
        style: {
            fontSize: "24px"
        }
    }, "Application Error"), /* @__PURE__ */ _react.createElement("pre", {
        style: {
            padding: "2rem",
            background: "hsla(10, 50%, 50%, 0.1)",
            color: "red",
            overflow: "auto"
        }
    }, errorInstance.stack), heyDeveloper);
}
function BoundaryShell({ title, renderScripts, isOutsideRemixApp, children }) {
    let { routeModules } = useFrameworkContext();
    if (routeModules.root?.Layout && !isOutsideRemixApp) return children;
    return /* @__PURE__ */ _react.createElement("html", {
        lang: "en"
    }, /* @__PURE__ */ _react.createElement("head", null, /* @__PURE__ */ _react.createElement("meta", {
        charSet: "utf-8"
    }), /* @__PURE__ */ _react.createElement("meta", {
        name: "viewport",
        content: "width=device-width,initial-scale=1,viewport-fit=cover"
    }), /* @__PURE__ */ _react.createElement("title", null, title)), /* @__PURE__ */ _react.createElement("body", null, /* @__PURE__ */ _react.createElement("main", {
        style: {
            fontFamily: "system-ui, sans-serif",
            padding: "2rem"
        }
    }, children, renderScripts ? /* @__PURE__ */ _react.createElement(Scripts, null) : null)));
}
function RemixRootDefaultHydrateFallback() {
    return /* @__PURE__ */ _react.createElement(BoundaryShell, {
        title: "Loading...",
        renderScripts: true
    }, /* @__PURE__ */ _react.createElement("script", {
        dangerouslySetInnerHTML: {
            __html: `
              console.log(
                "\u{1F4BF} Hey developer \u{1F44B}. You can provide a way better UX than this " +
                "when your app is loading JS modules and/or running \`clientLoader\` " +
                "functions. Check out https://remix.run/route/hydrate-fallback " +
                "for more information."
              );
            `
        }
    }));
}
// lib/dom/ssr/routes.tsx
function groupRoutesByParentId(manifest) {
    let routes = {};
    Object.values(manifest).forEach((route)=>{
        if (route) {
            let parentId = route.parentId || "";
            if (!routes[parentId]) routes[parentId] = [];
            routes[parentId].push(route);
        }
    });
    return routes;
}
function getRouteComponents(route, routeModule, isSpaMode) {
    let Component4 = getRouteModuleComponent(routeModule);
    let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === "root") ? routeModule.HydrateFallback : route.id === "root" ? RemixRootDefaultHydrateFallback : void 0;
    let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === "root" ? ()=>/* @__PURE__ */ _react.createElement(RemixRootDefaultErrorBoundary, {
            error: useRouteError()
        }) : void 0;
    if (route.id === "root" && routeModule.Layout) return {
        ...Component4 ? {
            element: /* @__PURE__ */ _react.createElement(routeModule.Layout, null, /* @__PURE__ */ _react.createElement(Component4, null))
        } : {
            Component: Component4
        },
        ...ErrorBoundary ? {
            errorElement: /* @__PURE__ */ _react.createElement(routeModule.Layout, null, /* @__PURE__ */ _react.createElement(ErrorBoundary, null))
        } : {
            ErrorBoundary
        },
        ...HydrateFallback ? {
            hydrateFallbackElement: /* @__PURE__ */ _react.createElement(routeModule.Layout, null, /* @__PURE__ */ _react.createElement(HydrateFallback, null))
        } : {
            HydrateFallback
        }
    };
    return {
        Component: Component4,
        ErrorBoundary,
        HydrateFallback
    };
}
function createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = "", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({
    Component: ()=>null
})) {
    return (routesByParentId[parentId] || []).map((route)=>{
        let routeModule = routeModules[route.id];
        invariant2(routeModule, "No `routeModule` available to create server routes");
        let dataRoute = {
            ...getRouteComponents(route, routeModule, isSpaMode),
            caseSensitive: route.caseSensitive,
            id: route.id,
            index: route.index,
            path: route.path,
            handle: routeModule.handle,
            // For SPA Mode, all routes are lazy except root.  However we tell the
            // router root is also lazy here too since we don't need a full
            // implementation - we just need a `lazy` prop to tell the RR rendering
            // where to stop which is always at the root route in SPA mode
            lazy: isSpaMode ? ()=>spaModeLazyPromise : void 0,
            // For partial hydration rendering, we need to indicate when the route
            // has a loader/clientLoader, but it won't ever be called during the static
            // render, so just give it a no-op function so we can render down to the
            // proper fallback
            loader: route.hasLoader || route.hasClientLoader ? ()=>null : void 0
        };
        let children = createServerRoutes(manifest, routeModules, future, isSpaMode, route.id, routesByParentId, spaModeLazyPromise);
        if (children.length > 0) dataRoute.children = children;
        return dataRoute;
    });
}
function createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {
    return createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, "", groupRoutesByParentId(manifest), needsRevalidation);
}
function preventInvalidServerHandlerCall(type, route) {
    if (type === "loader" && !route.hasLoader || type === "action" && !route.hasAction) {
        let fn = type === "action" ? "serverAction()" : "serverLoader()";
        let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: "${route.id}")`;
        console.error(msg);
        throw new ErrorResponseImpl(400, "Bad Request", new Error(msg), true);
    }
}
function noActionDefinedError(type, routeId) {
    let article = type === "clientAction" ? "a" : "an";
    let msg = `Route "${routeId}" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \`${type}\` function to the route`;
    console.error(msg);
    throw new ErrorResponseImpl(405, "Method Not Allowed", new Error(msg), true);
}
function createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = "", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {
    return (routesByParentId[parentId] || []).map((route)=>{
        let routeModule = routeModulesCache[route.id];
        function fetchServerHandler(singleFetch) {
            invariant2(typeof singleFetch === "function", "No single fetch function available for route handler");
            return singleFetch();
        }
        function fetchServerLoader(singleFetch) {
            if (!route.hasLoader) return Promise.resolve(null);
            return fetchServerHandler(singleFetch);
        }
        function fetchServerAction(singleFetch) {
            if (!route.hasAction) throw noActionDefinedError("action", route.id);
            return fetchServerHandler(singleFetch);
        }
        function prefetchModule(modulePath) {
            import(/* @vite-ignore */ /* webpackIgnore: true */ modulePath);
        }
        function prefetchRouteModuleChunks(route2) {
            if (route2.clientActionModule) prefetchModule(route2.clientActionModule);
            if (route2.clientLoaderModule) prefetchModule(route2.clientLoaderModule);
        }
        async function prefetchStylesAndCallHandler(handler) {
            let cachedModule = routeModulesCache[route.id];
            let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();
            try {
                return handler();
            } finally{
                await linkPrefetchPromise;
            }
        }
        let dataRoute = {
            id: route.id,
            index: route.index,
            path: route.path
        };
        if (routeModule) {
            Object.assign(dataRoute, {
                ...dataRoute,
                ...getRouteComponents(route, routeModule, isSpaMode),
                unstable_middleware: routeModule.unstable_clientMiddleware,
                handle: routeModule.handle,
                shouldRevalidate: getShouldRevalidateFunction(routeModule, route, ssr, needsRevalidation)
            });
            let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;
            let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;
            let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;
            let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;
            let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);
            dataRoute.loader = async ({ request, params, context }, singleFetch)=>{
                try {
                    let result = await prefetchStylesAndCallHandler(async ()=>{
                        invariant2(routeModule, "No `routeModule` available for critical-route loader");
                        if (!routeModule.clientLoader) return fetchServerLoader(singleFetch);
                        return routeModule.clientLoader({
                            request,
                            params,
                            context,
                            async serverLoader () {
                                preventInvalidServerHandlerCall("loader", route);
                                if (isHydrationRequest) {
                                    if (hasInitialData) return initialData;
                                    if (hasInitialError) throw initialError;
                                }
                                return fetchServerLoader(singleFetch);
                            }
                        });
                    });
                    return result;
                } finally{
                    isHydrationRequest = false;
                }
            };
            dataRoute.loader.hydrate = shouldHydrateRouteLoader(route, routeModule, isSpaMode);
            dataRoute.action = ({ request, params, context }, singleFetch)=>{
                return prefetchStylesAndCallHandler(async ()=>{
                    invariant2(routeModule, "No `routeModule` available for critical-route action");
                    if (!routeModule.clientAction) {
                        if (isSpaMode) throw noActionDefinedError("clientAction", route.id);
                        return fetchServerAction(singleFetch);
                    }
                    return routeModule.clientAction({
                        request,
                        params,
                        context,
                        async serverAction () {
                            preventInvalidServerHandlerCall("action", route);
                            return fetchServerAction(singleFetch);
                        }
                    });
                });
            };
        } else {
            if (!route.hasClientLoader) dataRoute.loader = (_, singleFetch)=>prefetchStylesAndCallHandler(()=>{
                    return fetchServerLoader(singleFetch);
                });
            else if (route.clientLoaderModule) dataRoute.loader = async (args, singleFetch)=>{
                invariant2(route.clientLoaderModule);
                let { clientLoader } = await import(/* @vite-ignore */ /* webpackIgnore: true */ route.clientLoaderModule);
                return clientLoader({
                    ...args,
                    async serverLoader () {
                        preventInvalidServerHandlerCall("loader", route);
                        return fetchServerLoader(singleFetch);
                    }
                });
            };
            if (!route.hasClientAction) dataRoute.action = (_, singleFetch)=>prefetchStylesAndCallHandler(()=>{
                    if (isSpaMode) throw noActionDefinedError("clientAction", route.id);
                    return fetchServerAction(singleFetch);
                });
            else if (route.clientActionModule) dataRoute.action = async (args, singleFetch)=>{
                invariant2(route.clientActionModule);
                prefetchRouteModuleChunks(route);
                let { clientAction } = await import(/* @vite-ignore */ /* webpackIgnore: true */ route.clientActionModule);
                return clientAction({
                    ...args,
                    async serverAction () {
                        preventInvalidServerHandlerCall("action", route);
                        return fetchServerAction(singleFetch);
                    }
                });
            };
            if (route.hasClientMiddleware) dataRoute.unstable_lazyMiddleware = async ()=>{
                invariant2(route);
                let clientMiddlewareModule = await import(/* @vite-ignore */ /* webpackIgnore: true */ route.clientMiddlewareModule || route.module);
                invariant2(clientMiddlewareModule?.unstable_clientMiddleware, "No `unstable_clientMiddleware` export in chunk");
                return clientMiddlewareModule.unstable_clientMiddleware;
            };
            dataRoute.lazy = async ()=>{
                if (route.clientLoaderModule || route.clientActionModule) await new Promise((resolve)=>setTimeout(resolve, 0));
                let modPromise = loadRouteModuleWithBlockingLinks(route, routeModulesCache);
                prefetchRouteModuleChunks(route);
                let mod = await modPromise;
                let lazyRoute = {
                    ...mod
                };
                if (mod.clientLoader) {
                    let clientLoader = mod.clientLoader;
                    lazyRoute.loader = (args, singleFetch)=>clientLoader({
                            ...args,
                            async serverLoader () {
                                preventInvalidServerHandlerCall("loader", route);
                                return fetchServerLoader(singleFetch);
                            }
                        });
                }
                if (mod.clientAction) {
                    let clientAction = mod.clientAction;
                    lazyRoute.action = (args, singleFetch)=>clientAction({
                            ...args,
                            async serverAction () {
                                preventInvalidServerHandlerCall("action", route);
                                return fetchServerAction(singleFetch);
                            }
                        });
                }
                return {
                    ...lazyRoute.loader ? {
                        loader: lazyRoute.loader
                    } : {},
                    ...lazyRoute.action ? {
                        action: lazyRoute.action
                    } : {},
                    hasErrorBoundary: lazyRoute.hasErrorBoundary,
                    shouldRevalidate: getShouldRevalidateFunction(lazyRoute, route, ssr, needsRevalidation),
                    handle: lazyRoute.handle,
                    // No need to wrap these in layout since the root route is never
                    // loaded via route.lazy()
                    Component: lazyRoute.Component,
                    ErrorBoundary: lazyRoute.ErrorBoundary
                };
            };
        }
        let children = createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, route.id, routesByParentId, needsRevalidation);
        if (children.length > 0) dataRoute.children = children;
        return dataRoute;
    });
}
function getShouldRevalidateFunction(route, manifestRoute, ssr, needsRevalidation) {
    if (needsRevalidation) return wrapShouldRevalidateForHdr(manifestRoute.id, route.shouldRevalidate, needsRevalidation);
    if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {
        if (route.shouldRevalidate) {
            let fn = route.shouldRevalidate;
            return (opts)=>fn({
                    ...opts,
                    defaultShouldRevalidate: false
                });
        } else return ()=>false;
    }
    if (ssr && route.shouldRevalidate) {
        let fn = route.shouldRevalidate;
        return (opts)=>fn({
                ...opts,
                defaultShouldRevalidate: true
            });
    }
    return route.shouldRevalidate;
}
function wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {
    let handledRevalidation = false;
    return (arg)=>{
        if (!handledRevalidation) {
            handledRevalidation = true;
            return needsRevalidation.has(routeId);
        }
        return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;
    };
}
async function loadRouteModuleWithBlockingLinks(route, routeModules) {
    let routeModulePromise = loadRouteModule(route, routeModules);
    let prefetchRouteCssPromise = prefetchRouteCss(route);
    let routeModule = await routeModulePromise;
    await Promise.all([
        prefetchRouteCssPromise,
        prefetchStyleLinks(route, routeModule)
    ]);
    return {
        Component: getRouteModuleComponent(routeModule),
        ErrorBoundary: routeModule.ErrorBoundary,
        unstable_clientMiddleware: routeModule.unstable_clientMiddleware,
        clientAction: routeModule.clientAction,
        clientLoader: routeModule.clientLoader,
        handle: routeModule.handle,
        links: routeModule.links,
        meta: routeModule.meta,
        shouldRevalidate: routeModule.shouldRevalidate
    };
}
function getRouteModuleComponent(routeModule) {
    if (routeModule.default == null) return void 0;
    let isEmptyObject = typeof routeModule.default === "object" && Object.keys(routeModule.default).length === 0;
    if (!isEmptyObject) return routeModule.default;
}
function shouldHydrateRouteLoader(route, routeModule, isSpaMode) {
    return isSpaMode && route.id !== "root" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);
}
// lib/dom/ssr/fog-of-war.ts
var nextPaths = /* @__PURE__ */ new Set();
var discoveredPathsMaxSize = 1e3;
var discoveredPaths = /* @__PURE__ */ new Set();
var URL_LIMIT = 7680;
function isFogOfWarEnabled(ssr) {
    return ssr === true;
}
function getPartialManifest(manifest, router) {
    let routeIds = new Set(router.state.matches.map((m)=>m.route.id));
    let segments = router.state.location.pathname.split("/").filter(Boolean);
    let paths = [
        "/"
    ];
    segments.pop();
    while(segments.length > 0){
        paths.push(`/${segments.join("/")}`);
        segments.pop();
    }
    paths.forEach((path)=>{
        let matches = matchRoutes(router.routes, path, router.basename);
        if (matches) matches.forEach((m)=>routeIds.add(m.route.id));
    });
    let initialRoutes = [
        ...routeIds
    ].reduce((acc, id)=>Object.assign(acc, {
            [id]: manifest.routes[id]
        }), {});
    return {
        ...manifest,
        routes: initialRoutes
    };
}
function getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, isSpaMode, basename) {
    if (!isFogOfWarEnabled(ssr)) return void 0;
    return async ({ path, patch, signal, fetcherKey })=>{
        if (discoveredPaths.has(path)) return;
        await fetchAndApplyManifestPatches([
            path
        ], fetcherKey ? window.location.href : path, manifest, routeModules, ssr, isSpaMode, basename, patch, signal);
    };
}
function useFogOFWarDiscovery(router, manifest, routeModules, ssr, isSpaMode) {
    _react.useEffect(()=>{
        if (!isFogOfWarEnabled(ssr) || navigator.connection?.saveData === true) return;
        function registerElement(el) {
            let path = el.tagName === "FORM" ? el.getAttribute("action") : el.getAttribute("href");
            if (!path) return;
            let pathname = el.tagName === "A" ? el.pathname : new URL(path, window.location.origin).pathname;
            if (!discoveredPaths.has(pathname)) nextPaths.add(pathname);
        }
        async function fetchPatches() {
            document.querySelectorAll("a[data-discover], form[data-discover]").forEach(registerElement);
            let lazyPaths = Array.from(nextPaths.keys()).filter((path)=>{
                if (discoveredPaths.has(path)) {
                    nextPaths.delete(path);
                    return false;
                }
                return true;
            });
            if (lazyPaths.length === 0) return;
            try {
                await fetchAndApplyManifestPatches(lazyPaths, null, manifest, routeModules, ssr, isSpaMode, router.basename, router.patchRoutes);
            } catch (e) {
                console.error("Failed to fetch manifest patches", e);
            }
        }
        let debouncedFetchPatches = debounce(fetchPatches, 100);
        fetchPatches();
        let observer = new MutationObserver(()=>debouncedFetchPatches());
        observer.observe(document.documentElement, {
            subtree: true,
            childList: true,
            attributes: true,
            attributeFilter: [
                "data-discover",
                "href",
                "action"
            ]
        });
        return ()=>observer.disconnect();
    }, [
        ssr,
        isSpaMode,
        manifest,
        routeModules,
        router
    ]);
}
var MANIFEST_VERSION_STORAGE_KEY = "react-router-manifest-version";
async function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, patchRoutes, signal) {
    let manifestPath = `${basename != null ? basename : "/"}/__manifest`.replace(/\/+/g, "/");
    let url = new URL(manifestPath, window.location.origin);
    paths.sort().forEach((path)=>url.searchParams.append("p", path));
    url.searchParams.set("version", manifest.version);
    if (url.toString().length > URL_LIMIT) {
        nextPaths.clear();
        return;
    }
    let serverPatches;
    try {
        let res = await fetch(url, {
            signal
        });
        if (!res.ok) throw new Error(`${res.status} ${res.statusText}`);
        else if (res.status === 204 && res.headers.has("X-Remix-Reload-Document")) {
            if (!errorReloadPath) {
                console.warn("Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.");
                return;
            }
            if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {
                console.error("Unable to discover routes due to manifest version mismatch.");
                return;
            }
            sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);
            window.location.href = errorReloadPath;
            throw new Error("Detected manifest version mismatch, reloading...");
        } else if (res.status >= 400) throw new Error(await res.text());
        sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);
        serverPatches = await res.json();
    } catch (e) {
        if (signal?.aborted) return;
        throw e;
    }
    let knownRoutes = new Set(Object.keys(manifest.routes));
    let patches = Object.values(serverPatches).reduce((acc, route)=>{
        if (route && !knownRoutes.has(route.id)) acc[route.id] = route;
        return acc;
    }, {});
    Object.assign(manifest.routes, patches);
    paths.forEach((p)=>addToFifoQueue(p, discoveredPaths));
    let parentIds = /* @__PURE__ */ new Set();
    Object.values(patches).forEach((patch)=>{
        if (patch && (!patch.parentId || !patches[patch.parentId])) parentIds.add(patch.parentId);
    });
    parentIds.forEach((parentId)=>patchRoutes(parentId || null, createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)));
}
function addToFifoQueue(path, queue) {
    if (queue.size >= discoveredPathsMaxSize) {
        let first = queue.values().next().value;
        queue.delete(first);
    }
    queue.add(path);
}
function debounce(callback, wait) {
    let timeoutId;
    return (...args)=>{
        window.clearTimeout(timeoutId);
        timeoutId = window.setTimeout(()=>callback(...args), wait);
    };
}
// lib/dom/ssr/components.tsx
function useDataRouterContext2() {
    let context = _react.useContext(DataRouterContext);
    invariant2(context, "You must render this element inside a <DataRouterContext.Provider> element");
    return context;
}
function useDataRouterStateContext() {
    let context = _react.useContext(DataRouterStateContext);
    invariant2(context, "You must render this element inside a <DataRouterStateContext.Provider> element");
    return context;
}
var FrameworkContext = _react.createContext(void 0);
FrameworkContext.displayName = "FrameworkContext";
function useFrameworkContext() {
    let context = _react.useContext(FrameworkContext);
    invariant2(context, "You must render this element inside a <HydratedRouter> element");
    return context;
}
function usePrefetchBehavior(prefetch, theirElementProps) {
    let frameworkContext = _react.useContext(FrameworkContext);
    let [maybePrefetch, setMaybePrefetch] = _react.useState(false);
    let [shouldPrefetch, setShouldPrefetch] = _react.useState(false);
    let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;
    let ref = _react.useRef(null);
    _react.useEffect(()=>{
        if (prefetch === "render") setShouldPrefetch(true);
        if (prefetch === "viewport") {
            let callback = (entries)=>{
                entries.forEach((entry)=>{
                    setShouldPrefetch(entry.isIntersecting);
                });
            };
            let observer = new IntersectionObserver(callback, {
                threshold: 0.5
            });
            if (ref.current) observer.observe(ref.current);
            return ()=>{
                observer.disconnect();
            };
        }
    }, [
        prefetch
    ]);
    _react.useEffect(()=>{
        if (maybePrefetch) {
            let id = setTimeout(()=>{
                setShouldPrefetch(true);
            }, 100);
            return ()=>{
                clearTimeout(id);
            };
        }
    }, [
        maybePrefetch
    ]);
    let setIntent = ()=>{
        setMaybePrefetch(true);
    };
    let cancelIntent = ()=>{
        setMaybePrefetch(false);
        setShouldPrefetch(false);
    };
    if (!frameworkContext) return [
        false,
        ref,
        {}
    ];
    if (prefetch !== "intent") return [
        shouldPrefetch,
        ref,
        {}
    ];
    return [
        shouldPrefetch,
        ref,
        {
            onFocus: composeEventHandlers(onFocus, setIntent),
            onBlur: composeEventHandlers(onBlur, cancelIntent),
            onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),
            onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),
            onTouchStart: composeEventHandlers(onTouchStart, setIntent)
        }
    ];
}
function composeEventHandlers(theirHandler, ourHandler) {
    return (event)=>{
        theirHandler && theirHandler(event);
        if (!event.defaultPrevented) ourHandler(event);
    };
}
function getActiveMatches(matches, errors, isSpaMode) {
    if (isSpaMode && !isHydrated) return [
        matches[0]
    ];
    if (errors) {
        let errorIdx = matches.findIndex((m)=>errors[m.route.id] !== void 0);
        return matches.slice(0, errorIdx + 1);
    }
    return matches;
}
function Links() {
    let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();
    let { errors, matches: routerMatches } = useDataRouterStateContext();
    let matches = getActiveMatches(routerMatches, errors, isSpaMode);
    let keyedLinks = _react.useMemo(()=>getKeyedLinksForMatches(matches, routeModules, manifest), [
        matches,
        routeModules,
        manifest
    ]);
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, typeof criticalCss === "string" ? /* @__PURE__ */ _react.createElement("style", {
        dangerouslySetInnerHTML: {
            __html: criticalCss
        }
    }) : null, typeof criticalCss === "object" ? /* @__PURE__ */ _react.createElement("link", {
        rel: "stylesheet",
        href: criticalCss.href
    }) : null, keyedLinks.map(({ key, link })=>isPageLinkDescriptor(link) ? /* @__PURE__ */ _react.createElement(PrefetchPageLinks, {
            key,
            ...link
        }) : /* @__PURE__ */ _react.createElement("link", {
            key,
            ...link
        })));
}
function PrefetchPageLinks({ page, ...dataLinkProps }) {
    let { router } = useDataRouterContext2();
    let matches = _react.useMemo(()=>matchRoutes(router.routes, page, router.basename), [
        router.routes,
        page,
        router.basename
    ]);
    if (!matches) return null;
    return /* @__PURE__ */ _react.createElement(PrefetchPageLinksImpl, {
        page,
        matches,
        ...dataLinkProps
    });
}
function useKeyedPrefetchLinks(matches) {
    let { manifest, routeModules } = useFrameworkContext();
    let [keyedPrefetchLinks, setKeyedPrefetchLinks] = _react.useState([]);
    _react.useEffect(()=>{
        let interrupted = false;
        getKeyedPrefetchLinks(matches, manifest, routeModules).then((links)=>{
            if (!interrupted) setKeyedPrefetchLinks(links);
        });
        return ()=>{
            interrupted = true;
        };
    }, [
        matches,
        manifest,
        routeModules
    ]);
    return keyedPrefetchLinks;
}
function PrefetchPageLinksImpl({ page, matches: nextMatches, ...linkProps }) {
    let location = useLocation();
    let { manifest, routeModules } = useFrameworkContext();
    let { basename } = useDataRouterContext2();
    let { loaderData, matches } = useDataRouterStateContext();
    let newMatchesForData = _react.useMemo(()=>getNewMatchesForLinks(page, nextMatches, matches, manifest, location, "data"), [
        page,
        nextMatches,
        matches,
        manifest,
        location
    ]);
    let newMatchesForAssets = _react.useMemo(()=>getNewMatchesForLinks(page, nextMatches, matches, manifest, location, "assets"), [
        page,
        nextMatches,
        matches,
        manifest,
        location
    ]);
    let dataHrefs = _react.useMemo(()=>{
        if (page === location.pathname + location.search + location.hash) return [];
        let routesParams = /* @__PURE__ */ new Set();
        let foundOptOutRoute = false;
        nextMatches.forEach((m)=>{
            let manifestRoute = manifest.routes[m.route.id];
            if (!manifestRoute || !manifestRoute.hasLoader) return;
            if (!newMatchesForData.some((m2)=>m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) foundOptOutRoute = true;
            else if (manifestRoute.hasClientLoader) foundOptOutRoute = true;
            else routesParams.add(m.route.id);
        });
        if (routesParams.size === 0) return [];
        let url = singleFetchUrl(page, basename);
        if (foundOptOutRoute && routesParams.size > 0) url.searchParams.set("_routes", nextMatches.filter((m)=>routesParams.has(m.route.id)).map((m)=>m.route.id).join(","));
        return [
            url.pathname + url.search
        ];
    }, [
        basename,
        loaderData,
        location,
        manifest,
        newMatchesForData,
        nextMatches,
        page,
        routeModules
    ]);
    let moduleHrefs = _react.useMemo(()=>getModuleLinkHrefs(newMatchesForAssets, manifest), [
        newMatchesForAssets,
        manifest
    ]);
    let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, dataHrefs.map((href2)=>/* @__PURE__ */ _react.createElement("link", {
            key: href2,
            rel: "prefetch",
            as: "fetch",
            href: href2,
            ...linkProps
        })), moduleHrefs.map((href2)=>/* @__PURE__ */ _react.createElement("link", {
            key: href2,
            rel: "modulepreload",
            href: href2,
            ...linkProps
        })), keyedPrefetchLinks.map(({ key, link })=>// these don't spread `linkProps` because they are full link descriptors
        // already with their own props
        /* @__PURE__ */ _react.createElement("link", {
            key,
            ...link
        })));
}
function Meta() {
    let { isSpaMode, routeModules } = useFrameworkContext();
    let { errors, matches: routerMatches, loaderData } = useDataRouterStateContext();
    let location = useLocation();
    let _matches = getActiveMatches(routerMatches, errors, isSpaMode);
    let error = null;
    if (errors) error = errors[_matches[_matches.length - 1].route.id];
    let meta = [];
    let leafMeta = null;
    let matches = [];
    for(let i = 0; i < _matches.length; i++){
        let _match = _matches[i];
        let routeId = _match.route.id;
        let data2 = loaderData[routeId];
        let params = _match.params;
        let routeModule = routeModules[routeId];
        let routeMeta = [];
        let match = {
            id: routeId,
            data: data2,
            meta: [],
            params: _match.params,
            pathname: _match.pathname,
            handle: _match.route.handle,
            error
        };
        matches[i] = match;
        if (routeModule?.meta) routeMeta = typeof routeModule.meta === "function" ? routeModule.meta({
            data: data2,
            params,
            location,
            matches,
            error
        }) : Array.isArray(routeModule.meta) ? [
            ...routeModule.meta
        ] : routeModule.meta;
        else if (leafMeta) routeMeta = [
            ...leafMeta
        ];
        routeMeta = routeMeta || [];
        if (!Array.isArray(routeMeta)) throw new Error("The route at " + _match.route.path + " returns an invalid value. All route meta functions must return an array of meta objects.\n\nTo reference the meta function API, see https://remix.run/route/meta");
        match.meta = routeMeta;
        matches[i] = match;
        meta = [
            ...routeMeta
        ];
        leafMeta = meta;
    }
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, meta.flat().map((metaProps)=>{
        if (!metaProps) return null;
        if ("tagName" in metaProps) {
            let { tagName, ...rest } = metaProps;
            if (!isValidMetaTag(tagName)) {
                console.warn(`A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`);
                return null;
            }
            let Comp = tagName;
            return /* @__PURE__ */ _react.createElement(Comp, {
                key: JSON.stringify(rest),
                ...rest
            });
        }
        if ("title" in metaProps) return /* @__PURE__ */ _react.createElement("title", {
            key: "title"
        }, String(metaProps.title));
        if ("charset" in metaProps) {
            metaProps.charSet ?? (metaProps.charSet = metaProps.charset);
            delete metaProps.charset;
        }
        if ("charSet" in metaProps && metaProps.charSet != null) return typeof metaProps.charSet === "string" ? /* @__PURE__ */ _react.createElement("meta", {
            key: "charSet",
            charSet: metaProps.charSet
        }) : null;
        if ("script:ld+json" in metaProps) try {
            let json = JSON.stringify(metaProps["script:ld+json"]);
            return /* @__PURE__ */ _react.createElement("script", {
                key: `script:ld+json:${json}`,
                type: "application/ld+json",
                dangerouslySetInnerHTML: {
                    __html: json
                }
            });
        } catch (err) {
            return null;
        }
        return /* @__PURE__ */ _react.createElement("meta", {
            key: JSON.stringify(metaProps),
            ...metaProps
        });
    }));
}
function isValidMetaTag(tagName) {
    return typeof tagName === "string" && /^(meta|link)$/.test(tagName);
}
var isHydrated = false;
function Scripts(props) {
    let { manifest, serverHandoffString, isSpaMode, ssr, renderMeta } = useFrameworkContext();
    let { router, static: isStatic, staticContext } = useDataRouterContext2();
    let { matches: routerMatches } = useDataRouterStateContext();
    let enableFogOfWar = isFogOfWarEnabled(ssr);
    if (renderMeta) renderMeta.didRenderScripts = true;
    let matches = getActiveMatches(routerMatches, null, isSpaMode);
    _react.useEffect(()=>{
        isHydrated = true;
    }, []);
    let initialScripts = _react.useMemo(()=>{
        let streamScript = "window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());";
        let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : " ";
        let routeModulesScript = !isStatic ? " " : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : ""}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : ""};
${matches.map((match, routeIndex)=>{
            let routeVarName = `route${routeIndex}`;
            let manifestEntry = manifest.routes[match.route.id];
            invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);
            let { clientActionModule, clientLoaderModule, clientMiddlewareModule, hydrateFallbackModule, module } = manifestEntry;
            let chunks = [
                ...clientActionModule ? [
                    {
                        module: clientActionModule,
                        varName: `${routeVarName}_clientAction`
                    }
                ] : [],
                ...clientLoaderModule ? [
                    {
                        module: clientLoaderModule,
                        varName: `${routeVarName}_clientLoader`
                    }
                ] : [],
                ...clientMiddlewareModule ? [
                    {
                        module: clientMiddlewareModule,
                        varName: `${routeVarName}_clientMiddleware`
                    }
                ] : [],
                ...hydrateFallbackModule ? [
                    {
                        module: hydrateFallbackModule,
                        varName: `${routeVarName}_HydrateFallback`
                    }
                ] : [],
                {
                    module,
                    varName: `${routeVarName}_main`
                }
            ];
            if (chunks.length === 1) return `import * as ${routeVarName} from ${JSON.stringify(module)};`;
            let chunkImportsSnippet = chunks.map((chunk)=>`import * as ${chunk.varName} from "${chunk.module}";`).join("\n");
            let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk)=>`...${chunk.varName}`).join(",")}};`;
            return [
                chunkImportsSnippet,
                mergedChunksSnippet
            ].join("\n");
        }).join("\n")}
  ${enableFogOfWar ? // Inline a minimal manifest with the SSR matches
        `window.__reactRouterManifest = ${JSON.stringify(getPartialManifest(manifest, router), null, 2)};` : ""}
  window.__reactRouterRouteModules = {${matches.map((match, index)=>`${JSON.stringify(match.route.id)}:route${index}`).join(",")}};

import(${JSON.stringify(manifest.entry.module)});`;
        return /* @__PURE__ */ _react.createElement(_react.Fragment, null, /* @__PURE__ */ _react.createElement("script", {
            ...props,
            suppressHydrationWarning: true,
            dangerouslySetInnerHTML: createHtml(contextScript),
            type: void 0
        }), /* @__PURE__ */ _react.createElement("script", {
            ...props,
            suppressHydrationWarning: true,
            dangerouslySetInnerHTML: createHtml(routeModulesScript),
            type: "module",
            async: true
        }));
    }, []);
    let preloads = isHydrated ? [] : manifest.entry.imports.concat(getModuleLinkHrefs(matches, manifest, {
        includeHydrateFallback: true
    }));
    return isHydrated ? null : /* @__PURE__ */ _react.createElement(_react.Fragment, null, !enableFogOfWar ? /* @__PURE__ */ _react.createElement("link", {
        rel: "modulepreload",
        href: manifest.url,
        crossOrigin: props.crossOrigin
    }) : null, /* @__PURE__ */ _react.createElement("link", {
        rel: "modulepreload",
        href: manifest.entry.module,
        crossOrigin: props.crossOrigin
    }), dedupe(preloads).map((path)=>/* @__PURE__ */ _react.createElement("link", {
            key: path,
            rel: "modulepreload",
            href: path,
            crossOrigin: props.crossOrigin
        })), initialScripts);
}
function dedupe(array) {
    return [
        ...new Set(array)
    ];
}
function mergeRefs(...refs) {
    return (value)=>{
        refs.forEach((ref)=>{
            if (typeof ref === "function") ref(value);
            else if (ref != null) ref.current = value;
        });
    };
}
// lib/dom/lib.tsx
var isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
try {
    if (isBrowser) window.__reactRouterVersion = "7.4.1";
} catch (e) {}
function createBrowserRouter(routes, opts) {
    return createRouter({
        basename: opts?.basename,
        unstable_getContext: opts?.unstable_getContext,
        future: opts?.future,
        history: createBrowserHistory({
            window: opts?.window
        }),
        hydrationData: opts?.hydrationData || parseHydrationData(),
        routes,
        mapRouteProperties,
        dataStrategy: opts?.dataStrategy,
        patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,
        window: opts?.window
    }).initialize();
}
function createHashRouter(routes, opts) {
    return createRouter({
        basename: opts?.basename,
        unstable_getContext: opts?.unstable_getContext,
        future: opts?.future,
        history: createHashHistory({
            window: opts?.window
        }),
        hydrationData: opts?.hydrationData || parseHydrationData(),
        routes,
        mapRouteProperties,
        dataStrategy: opts?.dataStrategy,
        patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,
        window: opts?.window
    }).initialize();
}
function parseHydrationData() {
    let state = window?.__staticRouterHydrationData;
    if (state && state.errors) state = {
        ...state,
        errors: deserializeErrors(state.errors)
    };
    return state;
}
function deserializeErrors(errors) {
    if (!errors) return null;
    let entries = Object.entries(errors);
    let serialized = {};
    for (let [key, val] of entries){
        if (val && val.__type === "RouteErrorResponse") serialized[key] = new ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);
        else if (val && val.__type === "Error") {
            if (val.__subType) {
                let ErrorConstructor = window[val.__subType];
                if (typeof ErrorConstructor === "function") try {
                    let error = new ErrorConstructor(val.message);
                    error.stack = "";
                    serialized[key] = error;
                } catch (e) {}
            }
            if (serialized[key] == null) {
                let error = new Error(val.message);
                error.stack = "";
                serialized[key] = error;
            }
        } else serialized[key] = val;
    }
    return serialized;
}
function BrowserRouter({ basename, children, window: window2 }) {
    let historyRef = _react.useRef();
    if (historyRef.current == null) historyRef.current = createBrowserHistory({
        window: window2,
        v5Compat: true
    });
    let history = historyRef.current;
    let [state, setStateImpl] = _react.useState({
        action: history.action,
        location: history.location
    });
    let setState = _react.useCallback((newState)=>{
        _react.startTransition(()=>setStateImpl(newState));
    }, [
        setStateImpl
    ]);
    _react.useLayoutEffect(()=>history.listen(setState), [
        history,
        setState
    ]);
    return /* @__PURE__ */ _react.createElement(Router, {
        basename,
        children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    });
}
function HashRouter({ basename, children, window: window2 }) {
    let historyRef = _react.useRef();
    if (historyRef.current == null) historyRef.current = createHashHistory({
        window: window2,
        v5Compat: true
    });
    let history = historyRef.current;
    let [state, setStateImpl] = _react.useState({
        action: history.action,
        location: history.location
    });
    let setState = _react.useCallback((newState)=>{
        _react.startTransition(()=>setStateImpl(newState));
    }, [
        setStateImpl
    ]);
    _react.useLayoutEffect(()=>history.listen(setState), [
        history,
        setState
    ]);
    return /* @__PURE__ */ _react.createElement(Router, {
        basename,
        children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    });
}
function HistoryRouter({ basename, children, history }) {
    let [state, setStateImpl] = _react.useState({
        action: history.action,
        location: history.location
    });
    let setState = _react.useCallback((newState)=>{
        _react.startTransition(()=>setStateImpl(newState));
    }, [
        setStateImpl
    ]);
    _react.useLayoutEffect(()=>history.listen(setState), [
        history,
        setState
    ]);
    return /* @__PURE__ */ _react.createElement(Router, {
        basename,
        children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    });
}
HistoryRouter.displayName = "unstable_HistoryRouter";
var ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var Link = _react.forwardRef(function LinkWithRef({ onClick, discover = "render", prefetch = "none", relative, reloadDocument, replace: replace2, state, target, to, preventScrollReset, viewTransition, ...rest }, forwardedRef) {
    let { basename } = _react.useContext(NavigationContext);
    let isAbsolute = typeof to === "string" && ABSOLUTE_URL_REGEX2.test(to);
    let absoluteHref;
    let isExternal = false;
    if (typeof to === "string" && isAbsolute) {
        absoluteHref = to;
        if (isBrowser) try {
            let currentUrl = new URL(window.location.href);
            let targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to);
            let path = stripBasename(targetUrl.pathname, basename);
            if (targetUrl.origin === currentUrl.origin && path != null) to = path + targetUrl.search + targetUrl.hash;
            else isExternal = true;
        } catch (e) {
            warning(false, `<Link to="${to}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`);
        }
    }
    let href2 = useHref(to, {
        relative
    });
    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(prefetch, rest);
    let internalOnClick = useLinkClickHandler(to, {
        replace: replace2,
        state,
        target,
        preventScrollReset,
        relative,
        viewTransition
    });
    function handleClick(event) {
        if (onClick) onClick(event);
        if (!event.defaultPrevented) internalOnClick(event);
    }
    let link = // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ _react.createElement("a", {
        ...rest,
        ...prefetchHandlers,
        href: absoluteHref || href2,
        onClick: isExternal || reloadDocument ? onClick : handleClick,
        ref: mergeRefs(forwardedRef, prefetchRef),
        target,
        "data-discover": !isAbsolute && discover === "render" ? "true" : void 0
    });
    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ _react.createElement(_react.Fragment, null, link, /* @__PURE__ */ _react.createElement(PrefetchPageLinks, {
        page: href2
    })) : link;
});
Link.displayName = "Link";
var NavLink = _react.forwardRef(function NavLinkWithRef({ "aria-current": ariaCurrentProp = "page", caseSensitive = false, className: classNameProp = "", end = false, style: styleProp, to, viewTransition, children, ...rest }, ref) {
    let path = useResolvedPath(to, {
        relative: rest.relative
    });
    let location = useLocation();
    let routerState = _react.useContext(DataRouterStateContext);
    let { navigator: navigator2, basename } = _react.useContext(NavigationContext);
    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static
    // eslint-disable-next-line react-hooks/rules-of-hooks
    useViewTransitionState(path) && viewTransition === true;
    let toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname;
    let locationPathname = location.pathname;
    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;
    if (!caseSensitive) {
        locationPathname = locationPathname.toLowerCase();
        nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;
        toPathname = toPathname.toLowerCase();
    }
    if (nextLocationPathname && basename) nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;
    const endSlashPosition = toPathname !== "/" && toPathname.endsWith("/") ? toPathname.length - 1 : toPathname.length;
    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === "/";
    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/");
    let renderProps = {
        isActive,
        isPending,
        isTransitioning
    };
    let ariaCurrent = isActive ? ariaCurrentProp : void 0;
    let className;
    if (typeof classNameProp === "function") className = classNameProp(renderProps);
    else className = [
        classNameProp,
        isActive ? "active" : null,
        isPending ? "pending" : null,
        isTransitioning ? "transitioning" : null
    ].filter(Boolean).join(" ");
    let style = typeof styleProp === "function" ? styleProp(renderProps) : styleProp;
    return /* @__PURE__ */ _react.createElement(Link, {
        ...rest,
        "aria-current": ariaCurrent,
        className,
        ref,
        style,
        to,
        viewTransition
    }, typeof children === "function" ? children(renderProps) : children);
});
NavLink.displayName = "NavLink";
var Form = _react.forwardRef(({ discover = "render", fetcherKey, navigate, reloadDocument, replace: replace2, state, method = defaultMethod, action, onSubmit, relative, preventScrollReset, viewTransition, ...props }, forwardedRef)=>{
    let submit = useSubmit();
    let formAction = useFormAction(action, {
        relative
    });
    let formMethod = method.toLowerCase() === "get" ? "get" : "post";
    let isAbsolute = typeof action === "string" && ABSOLUTE_URL_REGEX2.test(action);
    let submitHandler = (event)=>{
        onSubmit && onSubmit(event);
        if (event.defaultPrevented) return;
        event.preventDefault();
        let submitter = event.nativeEvent.submitter;
        let submitMethod = submitter?.getAttribute("formmethod") || method;
        submit(submitter || event.currentTarget, {
            fetcherKey,
            method: submitMethod,
            navigate,
            replace: replace2,
            state,
            relative,
            preventScrollReset,
            viewTransition
        });
    };
    return /* @__PURE__ */ _react.createElement("form", {
        ref: forwardedRef,
        method: formMethod,
        action: formAction,
        onSubmit: reloadDocument ? onSubmit : submitHandler,
        ...props,
        "data-discover": !isAbsolute && discover === "render" ? "true" : void 0
    });
});
Form.displayName = "Form";
function ScrollRestoration({ getKey, storageKey, ...props }) {
    let remixContext = _react.useContext(FrameworkContext);
    let { basename } = _react.useContext(NavigationContext);
    let location = useLocation();
    let matches = useMatches();
    useScrollRestoration({
        getKey,
        storageKey
    });
    let ssrKey = _react.useMemo(()=>{
        if (!remixContext || !getKey) return null;
        let userKey = getScrollRestorationKey(location, matches, basename, getKey);
        return userKey !== location.key ? userKey : null;
    }, // Nah, we only need this the first time for the SSR render
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []);
    if (!remixContext || remixContext.isSpaMode) return null;
    let restoreScroll = ((storageKey2, restoreKey)=>{
        if (!window.history.state || !window.history.state.key) {
            let key = Math.random().toString(32).slice(2);
            window.history.replaceState({
                key
            }, "");
        }
        try {
            let positions = JSON.parse(sessionStorage.getItem(storageKey2) || "{}");
            let storedY = positions[restoreKey || window.history.state.key];
            if (typeof storedY === "number") window.scrollTo(0, storedY);
        } catch (error) {
            console.error(error);
            sessionStorage.removeItem(storageKey2);
        }
    }).toString();
    return /* @__PURE__ */ _react.createElement("script", {
        ...props,
        suppressHydrationWarning: true,
        dangerouslySetInnerHTML: {
            __html: `(${restoreScroll})(${JSON.stringify(storageKey || SCROLL_RESTORATION_STORAGE_KEY)}, ${JSON.stringify(ssrKey)})`
        }
    });
}
ScrollRestoration.displayName = "ScrollRestoration";
function getDataRouterConsoleError2(hookName) {
    return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function useDataRouterContext3(hookName) {
    let ctx = _react.useContext(DataRouterContext);
    invariant(ctx, getDataRouterConsoleError2(hookName));
    return ctx;
}
function useDataRouterState2(hookName) {
    let state = _react.useContext(DataRouterStateContext);
    invariant(state, getDataRouterConsoleError2(hookName));
    return state;
}
function useLinkClickHandler(to, { target, replace: replaceProp, state, preventScrollReset, relative, viewTransition } = {}) {
    let navigate = useNavigate();
    let location = useLocation();
    let path = useResolvedPath(to, {
        relative
    });
    return _react.useCallback((event)=>{
        if (shouldProcessLinkClick(event, target)) {
            event.preventDefault();
            let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);
            navigate(to, {
                replace: replace2,
                state,
                preventScrollReset,
                relative,
                viewTransition
            });
        }
    }, [
        location,
        navigate,
        path,
        replaceProp,
        state,
        target,
        to,
        preventScrollReset,
        relative,
        viewTransition
    ]);
}
function useSearchParams(defaultInit) {
    warning(typeof URLSearchParams !== "undefined", `You cannot use the \`useSearchParams\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`);
    let defaultSearchParamsRef = _react.useRef(createSearchParams(defaultInit));
    let hasSetSearchParamsRef = _react.useRef(false);
    let location = useLocation();
    let searchParams = _react.useMemo(()=>// Only merge in the defaults if we haven't yet called setSearchParams.
        // Once we call that we want those to take precedence, otherwise you can't
        // remove a param with setSearchParams({}) if it has an initial value
        getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [
        location.search
    ]);
    let navigate = useNavigate();
    let setSearchParams = _react.useCallback((nextInit, navigateOptions)=>{
        const newSearchParams = createSearchParams(typeof nextInit === "function" ? nextInit(searchParams) : nextInit);
        hasSetSearchParamsRef.current = true;
        navigate("?" + newSearchParams, navigateOptions);
    }, [
        navigate,
        searchParams
    ]);
    return [
        searchParams,
        setSearchParams
    ];
}
var fetcherId = 0;
var getUniqueFetcherId = ()=>`__${String(++fetcherId)}__`;
function useSubmit() {
    let { router } = useDataRouterContext3("useSubmit" /* UseSubmit */ );
    let { basename } = _react.useContext(NavigationContext);
    let currentRouteId = useRouteId();
    return _react.useCallback(async (target, options = {})=>{
        let { action, method, encType, formData, body } = getFormSubmissionInfo(target, basename);
        if (options.navigate === false) {
            let key = options.fetcherKey || getUniqueFetcherId();
            await router.fetch(key, currentRouteId, options.action || action, {
                preventScrollReset: options.preventScrollReset,
                formData,
                body,
                formMethod: options.method || method,
                formEncType: options.encType || encType,
                flushSync: options.flushSync
            });
        } else await router.navigate(options.action || action, {
            preventScrollReset: options.preventScrollReset,
            formData,
            body,
            formMethod: options.method || method,
            formEncType: options.encType || encType,
            replace: options.replace,
            state: options.state,
            fromRouteId: currentRouteId,
            flushSync: options.flushSync,
            viewTransition: options.viewTransition
        });
    }, [
        router,
        basename,
        currentRouteId
    ]);
}
function useFormAction(action, { relative } = {}) {
    let { basename } = _react.useContext(NavigationContext);
    let routeContext = _react.useContext(RouteContext);
    invariant(routeContext, "useFormAction must be used inside a RouteContext");
    let [match] = routeContext.matches.slice(-1);
    let path = {
        ...useResolvedPath(action ? action : ".", {
            relative
        })
    };
    let location = useLocation();
    if (action == null) {
        path.search = location.search;
        let params = new URLSearchParams(path.search);
        let indexValues = params.getAll("index");
        let hasNakedIndexParam = indexValues.some((v)=>v === "");
        if (hasNakedIndexParam) {
            params.delete("index");
            indexValues.filter((v)=>v).forEach((v)=>params.append("index", v));
            let qs = params.toString();
            path.search = qs ? `?${qs}` : "";
        }
    }
    if ((!action || action === ".") && match.route.index) path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
    if (basename !== "/") path.pathname = path.pathname === "/" ? basename : joinPaths([
        basename,
        path.pathname
    ]);
    return createPath(path);
}
function useFetcher({ key } = {}) {
    let { router } = useDataRouterContext3("useFetcher" /* UseFetcher */ );
    let state = useDataRouterState2("useFetcher" /* UseFetcher */ );
    let fetcherData = _react.useContext(FetchersContext);
    let route = _react.useContext(RouteContext);
    let routeId = route.matches[route.matches.length - 1]?.route.id;
    invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);
    invariant(route, `useFetcher must be used inside a RouteContext`);
    invariant(routeId != null, `useFetcher can only be used on routes that contain a unique "id"`);
    let defaultKey = _react.useId();
    let [fetcherKey, setFetcherKey] = _react.useState(key || defaultKey);
    if (key && key !== fetcherKey) setFetcherKey(key);
    _react.useEffect(()=>{
        router.getFetcher(fetcherKey);
        return ()=>router.deleteFetcher(fetcherKey);
    }, [
        router,
        fetcherKey
    ]);
    let load = _react.useCallback(async (href2, opts)=>{
        invariant(routeId, "No routeId available for fetcher.load()");
        await router.fetch(fetcherKey, routeId, href2, opts);
    }, [
        fetcherKey,
        routeId,
        router
    ]);
    let submitImpl = useSubmit();
    let submit = _react.useCallback(async (target, opts)=>{
        await submitImpl(target, {
            ...opts,
            navigate: false,
            fetcherKey
        });
    }, [
        fetcherKey,
        submitImpl
    ]);
    let FetcherForm = _react.useMemo(()=>{
        let FetcherForm2 = _react.forwardRef((props, ref)=>{
            return /* @__PURE__ */ _react.createElement(Form, {
                ...props,
                navigate: false,
                fetcherKey,
                ref
            });
        });
        FetcherForm2.displayName = "fetcher.Form";
        return FetcherForm2;
    }, [
        fetcherKey
    ]);
    let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;
    let data2 = fetcherData.get(fetcherKey);
    let fetcherWithComponents = _react.useMemo(()=>({
            Form: FetcherForm,
            submit,
            load,
            ...fetcher,
            data: data2
        }), [
        FetcherForm,
        submit,
        load,
        fetcher,
        data2
    ]);
    return fetcherWithComponents;
}
function useFetchers() {
    let state = useDataRouterState2("useFetchers" /* UseFetchers */ );
    return Array.from(state.fetchers.entries()).map(([key, fetcher])=>({
            ...fetcher,
            key
        }));
}
var SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions";
var savedScrollPositions = {};
function getScrollRestorationKey(location, matches, basename, getKey) {
    let key = null;
    if (getKey) {
        if (basename !== "/") key = getKey({
            ...location,
            pathname: stripBasename(location.pathname, basename) || location.pathname
        }, matches);
        else key = getKey(location, matches);
    }
    if (key == null) key = location.key;
    return key;
}
function useScrollRestoration({ getKey, storageKey } = {}) {
    let { router } = useDataRouterContext3("useScrollRestoration" /* UseScrollRestoration */ );
    let { restoreScrollPosition, preventScrollReset } = useDataRouterState2("useScrollRestoration" /* UseScrollRestoration */ );
    let { basename } = _react.useContext(NavigationContext);
    let location = useLocation();
    let matches = useMatches();
    let navigation = useNavigation();
    _react.useEffect(()=>{
        window.history.scrollRestoration = "manual";
        return ()=>{
            window.history.scrollRestoration = "auto";
        };
    }, []);
    usePageHide(_react.useCallback(()=>{
        if (navigation.state === "idle") {
            let key = getScrollRestorationKey(location, matches, basename, getKey);
            savedScrollPositions[key] = window.scrollY;
        }
        try {
            sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));
        } catch (error) {
            warning(false, `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`);
        }
        window.history.scrollRestoration = "auto";
    }, [
        navigation.state,
        getKey,
        basename,
        location,
        matches,
        storageKey
    ]));
    if (typeof document !== "undefined") {
        _react.useLayoutEffect(()=>{
            try {
                let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);
                if (sessionPositions) savedScrollPositions = JSON.parse(sessionPositions);
            } catch (e) {}
        }, [
            storageKey
        ]);
        _react.useLayoutEffect(()=>{
            let disableScrollRestoration = router?.enableScrollRestoration(savedScrollPositions, ()=>window.scrollY, getKey ? (location2, matches2)=>getScrollRestorationKey(location2, matches2, basename, getKey) : void 0);
            return ()=>disableScrollRestoration && disableScrollRestoration();
        }, [
            router,
            basename,
            getKey
        ]);
        _react.useLayoutEffect(()=>{
            if (restoreScrollPosition === false) return;
            if (typeof restoreScrollPosition === "number") {
                window.scrollTo(0, restoreScrollPosition);
                return;
            }
            if (location.hash) {
                let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));
                if (el) {
                    el.scrollIntoView();
                    return;
                }
            }
            if (preventScrollReset === true) return;
            window.scrollTo(0, 0);
        }, [
            location,
            restoreScrollPosition,
            preventScrollReset
        ]);
    }
}
function useBeforeUnload(callback, options) {
    let { capture } = options || {};
    _react.useEffect(()=>{
        let opts = capture != null ? {
            capture
        } : void 0;
        window.addEventListener("beforeunload", callback, opts);
        return ()=>{
            window.removeEventListener("beforeunload", callback, opts);
        };
    }, [
        callback,
        capture
    ]);
}
function usePageHide(callback, options) {
    let { capture } = options || {};
    _react.useEffect(()=>{
        let opts = capture != null ? {
            capture
        } : void 0;
        window.addEventListener("pagehide", callback, opts);
        return ()=>{
            window.removeEventListener("pagehide", callback, opts);
        };
    }, [
        callback,
        capture
    ]);
}
function usePrompt({ when, message }) {
    let blocker = useBlocker(when);
    _react.useEffect(()=>{
        if (blocker.state === "blocked") {
            let proceed = window.confirm(message);
            if (proceed) setTimeout(blocker.proceed, 0);
            else blocker.reset();
        }
    }, [
        blocker,
        message
    ]);
    _react.useEffect(()=>{
        if (blocker.state === "blocked" && !when) blocker.reset();
    }, [
        blocker,
        when
    ]);
}
function useViewTransitionState(to, opts = {}) {
    let vtContext = _react.useContext(ViewTransitionContext);
    invariant(vtContext != null, "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?");
    let { basename } = useDataRouterContext3("useViewTransitionState" /* useViewTransitionState */ );
    let path = useResolvedPath(to, {
        relative: opts.relative
    });
    if (!vtContext.isTransitioning) return false;
    let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;
    let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;
    return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;
}
function StaticRouter({ basename, children, location: locationProp = "/" }) {
    if (typeof locationProp === "string") locationProp = parsePath(locationProp);
    let action = "POP" /* Pop */ ;
    let location = {
        pathname: locationProp.pathname || "/",
        search: locationProp.search || "",
        hash: locationProp.hash || "",
        state: locationProp.state != null ? locationProp.state : null,
        key: locationProp.key || "default"
    };
    let staticNavigator = getStatelessNavigator();
    return /* @__PURE__ */ _react.createElement(Router, {
        basename,
        children,
        location,
        navigationType: action,
        navigator: staticNavigator,
        static: true
    });
}
function StaticRouterProvider({ context, router, hydrate = true, nonce }) {
    invariant(router && context, "You must provide `router` and `context` to <StaticRouterProvider>");
    let dataRouterContext = {
        router,
        navigator: getStatelessNavigator(),
        static: true,
        staticContext: context,
        basename: context.basename || "/"
    };
    let fetchersContext = /* @__PURE__ */ new Map();
    let hydrateScript = "";
    if (hydrate !== false) {
        let data2 = {
            loaderData: context.loaderData,
            actionData: context.actionData,
            errors: serializeErrors(context.errors)
        };
        let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));
        hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;
    }
    let { state } = dataRouterContext.router;
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, /* @__PURE__ */ _react.createElement(DataRouterContext.Provider, {
        value: dataRouterContext
    }, /* @__PURE__ */ _react.createElement(DataRouterStateContext.Provider, {
        value: state
    }, /* @__PURE__ */ _react.createElement(FetchersContext.Provider, {
        value: fetchersContext
    }, /* @__PURE__ */ _react.createElement(ViewTransitionContext.Provider, {
        value: {
            isTransitioning: false
        }
    }, /* @__PURE__ */ _react.createElement(Router, {
        basename: dataRouterContext.basename,
        location: state.location,
        navigationType: state.historyAction,
        navigator: dataRouterContext.navigator,
        static: dataRouterContext.static
    }, /* @__PURE__ */ _react.createElement(DataRoutes2, {
        routes: router.routes,
        future: router.future,
        state
    })))))), hydrateScript ? /* @__PURE__ */ _react.createElement("script", {
        suppressHydrationWarning: true,
        nonce,
        dangerouslySetInnerHTML: {
            __html: hydrateScript
        }
    }) : null);
}
function DataRoutes2({ routes, future, state }) {
    return useRoutesImpl(routes, void 0, state, future);
}
function serializeErrors(errors) {
    if (!errors) return null;
    let entries = Object.entries(errors);
    let serialized = {};
    for (let [key, val] of entries){
        if (isRouteErrorResponse(val)) serialized[key] = {
            ...val,
            __type: "RouteErrorResponse"
        };
        else if (val instanceof Error) serialized[key] = {
            message: val.message,
            __type: "Error",
            // If this is a subclass (i.e., ReferenceError), send up the type so we
            // can re-create the same type during hydration.
            ...val.name !== "Error" ? {
                __subType: val.name
            } : {}
        };
        else serialized[key] = val;
    }
    return serialized;
}
function getStatelessNavigator() {
    return {
        createHref,
        encodeLocation,
        push (to) {
            throw new Error(`You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)})\` somewhere in your app.`);
        },
        replace (to) {
            throw new Error(`You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)}, { replace: true })\` somewhere in your app.`);
        },
        go (delta) {
            throw new Error(`You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${delta})\` somewhere in your app.`);
        },
        back () {
            throw new Error(`You cannot use navigator.back() on the server because it is a stateless environment.`);
        },
        forward () {
            throw new Error(`You cannot use navigator.forward() on the server because it is a stateless environment.`);
        }
    };
}
function createStaticHandler2(routes, opts) {
    return createStaticHandler(routes, {
        ...opts,
        mapRouteProperties
    });
}
function createStaticRouter(routes, context, opts = {}) {
    let manifest = {};
    let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, void 0, manifest);
    let matches = context.matches.map((match)=>{
        let route = manifest[match.route.id] || match.route;
        return {
            ...match,
            route
        };
    });
    let msg = (method)=>`You cannot use router.${method}() on the server because it is a stateless environment`;
    return {
        get basename () {
            return context.basename;
        },
        get future () {
            return {
                unstable_middleware: false,
                ...opts?.future
            };
        },
        get state () {
            return {
                historyAction: "POP" /* Pop */ ,
                location: context.location,
                matches,
                loaderData: context.loaderData,
                actionData: context.actionData,
                errors: context.errors,
                initialized: true,
                navigation: IDLE_NAVIGATION,
                restoreScrollPosition: null,
                preventScrollReset: false,
                revalidation: "idle",
                fetchers: /* @__PURE__ */ new Map(),
                blockers: /* @__PURE__ */ new Map()
            };
        },
        get routes () {
            return dataRoutes;
        },
        get window () {
            return void 0;
        },
        initialize () {
            throw msg("initialize");
        },
        subscribe () {
            throw msg("subscribe");
        },
        enableScrollRestoration () {
            throw msg("enableScrollRestoration");
        },
        navigate () {
            throw msg("navigate");
        },
        fetch () {
            throw msg("fetch");
        },
        revalidate () {
            throw msg("revalidate");
        },
        createHref,
        encodeLocation,
        getFetcher () {
            return IDLE_FETCHER;
        },
        deleteFetcher () {
            throw msg("deleteFetcher");
        },
        dispose () {
            throw msg("dispose");
        },
        getBlocker () {
            return IDLE_BLOCKER;
        },
        deleteBlocker () {
            throw msg("deleteBlocker");
        },
        patchRoutes () {
            throw msg("patchRoutes");
        },
        _internalFetchControllers: /* @__PURE__ */ new Map(),
        _internalSetRoutes () {
            throw msg("_internalSetRoutes");
        }
    };
}
function createHref(to) {
    return typeof to === "string" ? to : createPath(to);
}
function encodeLocation(to) {
    let href2 = typeof to === "string" ? to : createPath(to);
    href2 = href2.replace(/ $/, "%20");
    let encoded = ABSOLUTE_URL_REGEX3.test(href2) ? new URL(href2) : new URL(href2, "http://localhost");
    return {
        pathname: encoded.pathname,
        search: encoded.search,
        hash: encoded.hash
    };
}
var ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var ESCAPE_LOOKUP2 = {
    "&": "\\u0026",
    ">": "\\u003e",
    "<": "\\u003c",
    "\u2028": "\\u2028",
    "\u2029": "\\u2029"
};
var ESCAPE_REGEX2 = /[&><\u2028\u2029]/g;
function htmlEscape(str) {
    return str.replace(ESCAPE_REGEX2, (match)=>ESCAPE_LOOKUP2[match]);
}
function ServerRouter({ context, url, nonce }) {
    if (typeof url === "string") url = new URL(url);
    let { manifest, routeModules, criticalCss, serverHandoffString } = context;
    let routes = createServerRoutes(manifest.routes, routeModules, context.future, context.isSpaMode);
    context.staticHandlerContext.loaderData = {
        ...context.staticHandlerContext.loaderData
    };
    for (let match of context.staticHandlerContext.matches){
        let routeId = match.route.id;
        let route = routeModules[routeId];
        let manifestRoute = context.manifest.routes[routeId];
        if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) delete context.staticHandlerContext.loaderData[routeId];
    }
    let router = createStaticRouter(routes, context.staticHandlerContext);
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, /* @__PURE__ */ _react.createElement(FrameworkContext.Provider, {
        value: {
            manifest,
            routeModules,
            criticalCss,
            serverHandoffString,
            future: context.future,
            ssr: context.ssr,
            isSpaMode: context.isSpaMode,
            serializeError: context.serializeError,
            renderMeta: context.renderMeta
        }
    }, /* @__PURE__ */ _react.createElement(RemixErrorBoundary, {
        location: router.state.location
    }, /* @__PURE__ */ _react.createElement(StaticRouterProvider, {
        router,
        context: context.staticHandlerContext,
        hydrate: false
    }))), context.serverHandoffStream ? /* @__PURE__ */ _react.createElement(_react.Suspense, null, /* @__PURE__ */ _react.createElement(StreamTransfer, {
        context,
        identifier: 0,
        reader: context.serverHandoffStream.getReader(),
        textDecoder: new TextDecoder(),
        nonce
    })) : null);
}
function createRoutesStub(routes, unstable_getContext) {
    return function RoutesTestStub({ initialEntries, initialIndex, hydrationData, future }) {
        let routerRef = _react.useRef();
        let remixContextRef = _react.useRef();
        if (routerRef.current == null) {
            remixContextRef.current = {
                future: {
                    unstable_middleware: future?.unstable_middleware === true
                },
                manifest: {
                    routes: {},
                    entry: {
                        imports: [],
                        module: ""
                    },
                    url: "",
                    version: ""
                },
                routeModules: {},
                ssr: false,
                isSpaMode: false
            };
            let patched = processRoutes(// @ts-expect-error `StubRouteObject` is stricter about `loader`/`action`
            // types compared to `AgnosticRouteObject`
            convertRoutesToDataRoutes(routes, (r)=>r), remixContextRef.current.manifest, remixContextRef.current.routeModules);
            routerRef.current = createMemoryRouter(patched, {
                unstable_getContext,
                initialEntries,
                initialIndex,
                hydrationData
            });
        }
        return /* @__PURE__ */ _react.createElement(FrameworkContext.Provider, {
            value: remixContextRef.current
        }, /* @__PURE__ */ _react.createElement(RouterProvider, {
            router: routerRef.current
        }));
    };
}
function processRoutes(routes, manifest, routeModules, parentId) {
    return routes.map((route)=>{
        if (!route.id) throw new Error("Expected a route.id in @remix-run/testing processRoutes() function");
        let newRoute = {
            id: route.id,
            path: route.path,
            index: route.index,
            Component: route.Component,
            HydrateFallback: route.HydrateFallback,
            ErrorBoundary: route.ErrorBoundary,
            action: route.action,
            loader: route.loader,
            handle: route.handle,
            shouldRevalidate: route.shouldRevalidate
        };
        let entryRoute = {
            id: route.id,
            path: route.path,
            index: route.index,
            parentId,
            hasAction: route.action != null,
            hasLoader: route.loader != null,
            // When testing routes, you should be stubbing loader/action/middleware,
            // not trying to re-implement the full loader/clientLoader/SSR/hydration
            // flow. That is better tested via E2E tests.
            hasClientAction: false,
            hasClientLoader: false,
            hasClientMiddleware: false,
            hasErrorBoundary: route.ErrorBoundary != null,
            // any need for these?
            module: "build/stub-path-to-module.js",
            clientActionModule: void 0,
            clientLoaderModule: void 0,
            clientMiddlewareModule: void 0,
            hydrateFallbackModule: void 0
        };
        manifest.routes[newRoute.id] = entryRoute;
        routeModules[route.id] = {
            default: route.Component || Outlet,
            ErrorBoundary: route.ErrorBoundary || void 0,
            handle: route.handle,
            links: route.links,
            meta: route.meta,
            shouldRevalidate: route.shouldRevalidate
        };
        if (route.children) newRoute.children = processRoutes(route.children, manifest, routeModules, newRoute.id);
        return newRoute;
    });
}
// lib/server-runtime/crypto.ts
var encoder = new TextEncoder();
var sign = async (value, secret)=>{
    let data2 = encoder.encode(value);
    let key = await createKey2(secret, [
        "sign"
    ]);
    let signature = await crypto.subtle.sign("HMAC", key, data2);
    let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(/=+$/, "");
    return value + "." + hash;
};
var unsign = async (cookie, secret)=>{
    let index = cookie.lastIndexOf(".");
    let value = cookie.slice(0, index);
    let hash = cookie.slice(index + 1);
    let data2 = encoder.encode(value);
    let key = await createKey2(secret, [
        "verify"
    ]);
    let signature = byteStringToUint8Array(atob(hash));
    let valid = await crypto.subtle.verify("HMAC", key, signature, data2);
    return valid ? value : false;
};
var createKey2 = async (secret, usages)=>crypto.subtle.importKey("raw", encoder.encode(secret), {
        name: "HMAC",
        hash: "SHA-256"
    }, false, usages);
function byteStringToUint8Array(byteString) {
    let array = new Uint8Array(byteString.length);
    for(let i = 0; i < byteString.length; i++)array[i] = byteString.charCodeAt(i);
    return array;
}
// lib/server-runtime/cookies.ts
var createCookie = (name, cookieOptions = {})=>{
    let { secrets = [], ...options } = {
        path: "/",
        sameSite: "lax",
        ...cookieOptions
    };
    warnOnceAboutExpiresCookie(name, options.expires);
    return {
        get name () {
            return name;
        },
        get isSigned () {
            return secrets.length > 0;
        },
        get expires () {
            return typeof options.maxAge !== "undefined" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;
        },
        async parse (cookieHeader, parseOptions) {
            if (!cookieHeader) return null;
            let cookies = (0, _cookie.parse)(cookieHeader, {
                ...options,
                ...parseOptions
            });
            if (name in cookies) {
                let value = cookies[name];
                if (typeof value === "string" && value !== "") {
                    let decoded = await decodeCookieValue(value, secrets);
                    return decoded;
                } else return "";
            } else return null;
        },
        async serialize (value, serializeOptions) {
            return (0, _cookie.serialize)(name, value === "" ? "" : await encodeCookieValue(value, secrets), {
                ...options,
                ...serializeOptions
            });
        }
    };
};
var isCookie = (object)=>{
    return object != null && typeof object.name === "string" && typeof object.isSigned === "boolean" && typeof object.parse === "function" && typeof object.serialize === "function";
};
async function encodeCookieValue(value, secrets) {
    let encoded = encodeData(value);
    if (secrets.length > 0) encoded = await sign(encoded, secrets[0]);
    return encoded;
}
async function decodeCookieValue(value, secrets) {
    if (secrets.length > 0) {
        for (let secret of secrets){
            let unsignedValue = await unsign(value, secret);
            if (unsignedValue !== false) return decodeData(unsignedValue);
        }
        return null;
    }
    return decodeData(value);
}
function encodeData(value) {
    return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));
}
function decodeData(value) {
    try {
        return JSON.parse(decodeURIComponent(myEscape(atob(value))));
    } catch (error) {
        return {};
    }
}
function myEscape(value) {
    let str = value.toString();
    let result = "";
    let index = 0;
    let chr, code;
    while(index < str.length){
        chr = str.charAt(index++);
        if (/[\w*+\-./@]/.exec(chr)) result += chr;
        else {
            code = chr.charCodeAt(0);
            if (code < 256) result += "%" + hex(code, 2);
            else result += "%u" + hex(code, 4).toUpperCase();
        }
    }
    return result;
}
function hex(code, length) {
    let result = code.toString(16);
    while(result.length < length)result = "0" + result;
    return result;
}
function myUnescape(value) {
    let str = value.toString();
    let result = "";
    let index = 0;
    let chr, part;
    while(index < str.length){
        chr = str.charAt(index++);
        if (chr === "%") {
            if (str.charAt(index) === "u") {
                part = str.slice(index + 1, index + 5);
                if (/^[\da-f]{4}$/i.exec(part)) {
                    result += String.fromCharCode(parseInt(part, 16));
                    index += 5;
                    continue;
                }
            } else {
                part = str.slice(index, index + 2);
                if (/^[\da-f]{2}$/i.exec(part)) {
                    result += String.fromCharCode(parseInt(part, 16));
                    index += 2;
                    continue;
                }
            }
        }
        result += chr;
    }
    return result;
}
function warnOnceAboutExpiresCookie(name, expires) {
    warnOnce(!expires, `The "${name}" cookie has an "expires" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \`commitSession(session, { expires })\` if using a session storage object, or \`cookie.serialize("value", { expires })\` if you're using the cookie directly.`);
}
// lib/server-runtime/entry.ts
function createEntryRouteModules(manifest) {
    return Object.keys(manifest).reduce((memo2, routeId)=>{
        let route = manifest[routeId];
        if (route) memo2[routeId] = route.module;
        return memo2;
    }, {});
}
// lib/server-runtime/mode.ts
var ServerMode = /* @__PURE__ */ ((ServerMode2)=>{
    ServerMode2["Development"] = "development";
    ServerMode2["Production"] = "production";
    ServerMode2["Test"] = "test";
    return ServerMode2;
})(ServerMode || {});
function isServerMode(value) {
    return value === "development" /* Development */  || value === "production" /* Production */  || value === "test" /* Test */ ;
}
// lib/server-runtime/errors.ts
function sanitizeError(error, serverMode) {
    if (error instanceof Error && serverMode !== "development" /* Development */ ) {
        let sanitized = new Error("Unexpected Server Error");
        sanitized.stack = void 0;
        return sanitized;
    }
    return error;
}
function sanitizeErrors(errors, serverMode) {
    return Object.entries(errors).reduce((acc, [routeId, error])=>{
        return Object.assign(acc, {
            [routeId]: sanitizeError(error, serverMode)
        });
    }, {});
}
function serializeError(error, serverMode) {
    let sanitized = sanitizeError(error, serverMode);
    return {
        message: sanitized.message,
        stack: sanitized.stack
    };
}
function serializeErrors2(errors, serverMode) {
    if (!errors) return null;
    let entries = Object.entries(errors);
    let serialized = {};
    for (let [key, val] of entries){
        if (isRouteErrorResponse(val)) serialized[key] = {
            ...val,
            __type: "RouteErrorResponse"
        };
        else if (val instanceof Error) {
            let sanitized = sanitizeError(val, serverMode);
            serialized[key] = {
                message: sanitized.message,
                stack: sanitized.stack,
                __type: "Error",
                // If this is a subclass (i.e., ReferenceError), send up the type so we
                // can re-create the same type during hydration.  This will only apply
                // in dev mode since all production errors are sanitized to normal
                // Error instances
                ...sanitized.name !== "Error" ? {
                    __subType: sanitized.name
                } : {}
            };
        } else serialized[key] = val;
    }
    return serialized;
}
// lib/server-runtime/routeMatching.ts
function matchServerRoutes(routes, pathname, basename) {
    let matches = matchRoutes(routes, pathname, basename);
    if (!matches) return null;
    return matches.map((match)=>({
            params: match.params,
            pathname: match.pathname,
            route: match.route
        }));
}
// lib/server-runtime/data.ts
async function callRouteHandler(handler, args) {
    let result = await handler({
        request: stripRoutesParam(stripIndexParam2(args.request)),
        params: args.params,
        context: args.context
    });
    if (isDataWithResponseInit(result) && result.init && result.init.status && isRedirectStatusCode(result.init.status)) throw new Response(null, result.init);
    return result;
}
function stripIndexParam2(request) {
    let url = new URL(request.url);
    let indexValues = url.searchParams.getAll("index");
    url.searchParams.delete("index");
    let indexValuesToKeep = [];
    for (let indexValue of indexValues)if (indexValue) indexValuesToKeep.push(indexValue);
    for (let toKeep of indexValuesToKeep)url.searchParams.append("index", toKeep);
    let init = {
        method: request.method,
        body: request.body,
        headers: request.headers,
        signal: request.signal
    };
    if (init.body) init.duplex = "half";
    return new Request(url.href, init);
}
function stripRoutesParam(request) {
    let url = new URL(request.url);
    url.searchParams.delete("_routes");
    let init = {
        method: request.method,
        body: request.body,
        headers: request.headers,
        signal: request.signal
    };
    if (init.body) init.duplex = "half";
    return new Request(url.href, init);
}
// lib/server-runtime/invariant.ts
function invariant3(value, message) {
    if (value === false || value === null || typeof value === "undefined") {
        console.error("The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose");
        throw new Error(message);
    }
}
// lib/server-runtime/routes.ts
function groupRoutesByParentId2(manifest) {
    let routes = {};
    Object.values(manifest).forEach((route)=>{
        if (route) {
            let parentId = route.parentId || "";
            if (!routes[parentId]) routes[parentId] = [];
            routes[parentId].push(route);
        }
    });
    return routes;
}
function createRoutes(manifest, parentId = "", routesByParentId = groupRoutesByParentId2(manifest)) {
    return (routesByParentId[parentId] || []).map((route)=>({
            ...route,
            children: createRoutes(manifest, route.id, routesByParentId)
        }));
}
function createStaticHandlerDataRoutes(manifest, future, parentId = "", routesByParentId = groupRoutesByParentId2(manifest)) {
    return (routesByParentId[parentId] || []).map((route)=>{
        let commonRoute = {
            // Always include root due to default boundaries
            hasErrorBoundary: route.id === "root" || route.module.ErrorBoundary != null,
            id: route.id,
            path: route.path,
            unstable_middleware: route.module.unstable_middleware,
            // Need to use RR's version in the param typed here to permit the optional
            // context even though we know it'll always be provided in remix
            loader: route.module.loader ? async (args)=>{
                if (args.request.headers.has("X-React-Router-Prerender-Data")) {
                    const preRenderedData = args.request.headers.get("X-React-Router-Prerender-Data");
                    let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;
                    invariant3(encoded, "Missing prerendered data for route");
                    let uint8array = new TextEncoder().encode(encoded);
                    let stream = new ReadableStream({
                        start (controller) {
                            controller.enqueue(uint8array);
                            controller.close();
                        }
                    });
                    let decoded = await decodeViaTurboStream(stream, global);
                    let data2 = decoded.value;
                    invariant3(data2 && route.id in data2, "Unable to decode prerendered data");
                    let result = data2[route.id];
                    invariant3("data" in result, "Unable to process prerendered data");
                    return result.data;
                }
                let val = await callRouteHandler(route.module.loader, args);
                return val;
            } : void 0,
            action: route.module.action ? (args)=>callRouteHandler(route.module.action, args) : void 0,
            handle: route.module.handle
        };
        return route.index ? {
            index: true,
            ...commonRoute
        } : {
            caseSensitive: route.caseSensitive,
            children: createStaticHandlerDataRoutes(manifest, future, route.id, routesByParentId),
            ...commonRoute
        };
    });
}
// lib/server-runtime/markup.ts
var ESCAPE_LOOKUP3 = {
    "&": "\\u0026",
    ">": "\\u003e",
    "<": "\\u003c",
    "\u2028": "\\u2028",
    "\u2029": "\\u2029"
};
var ESCAPE_REGEX3 = /[&><\u2028\u2029]/g;
function escapeHtml2(html) {
    return html.replace(ESCAPE_REGEX3, (match)=>ESCAPE_LOOKUP3[match]);
}
// lib/server-runtime/serverHandoff.ts
function createServerHandoffString(serverHandoff) {
    return escapeHtml2(JSON.stringify(serverHandoff));
}
// lib/server-runtime/dev.ts
var globalDevServerHooksKey = "__reactRouterDevServerHooks";
function setDevServerHooks(devServerHooks) {
    globalThis[globalDevServerHooksKey] = devServerHooks;
}
function getDevServerHooks() {
    return globalThis[globalDevServerHooksKey];
}
function getDocumentHeaders(build, context) {
    let boundaryIdx = context.errors ? context.matches.findIndex((m)=>context.errors[m.route.id]) : -1;
    let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;
    let errorHeaders;
    if (boundaryIdx >= 0) {
        let { actionHeaders, actionData, loaderHeaders, loaderData } = context;
        context.matches.slice(boundaryIdx).some((match)=>{
            let id = match.route.id;
            if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) errorHeaders = actionHeaders[id];
            else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) errorHeaders = loaderHeaders[id];
            return errorHeaders != null;
        });
    }
    return matches.reduce((parentHeaders, match, idx)=>{
        let { id } = match.route;
        let route = build.routes[id];
        invariant3(route, `Route with id "${id}" not found in build`);
        let routeModule = route.module;
        let loaderHeaders = context.loaderHeaders[id] || new Headers();
        let actionHeaders = context.actionHeaders[id] || new Headers();
        let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;
        let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;
        if (routeModule.headers == null) {
            let headers2 = new Headers(parentHeaders);
            if (includeErrorCookies) prependCookies(errorHeaders, headers2);
            prependCookies(actionHeaders, headers2);
            prependCookies(loaderHeaders, headers2);
            return headers2;
        }
        let headers = new Headers(routeModule.headers ? typeof routeModule.headers === "function" ? routeModule.headers({
            loaderHeaders,
            parentHeaders,
            actionHeaders,
            errorHeaders: includeErrorHeaders ? errorHeaders : void 0
        }) : routeModule.headers : void 0);
        if (includeErrorCookies) prependCookies(errorHeaders, headers);
        prependCookies(actionHeaders, headers);
        prependCookies(loaderHeaders, headers);
        prependCookies(parentHeaders, headers);
        return headers;
    }, new Headers());
}
function prependCookies(parentHeaders, childHeaders) {
    let parentSetCookieString = parentHeaders.get("Set-Cookie");
    if (parentSetCookieString) {
        let cookies = (0, _setCookieParser.splitCookiesString)(parentSetCookieString);
        let childCookies = new Set(childHeaders.getSetCookie());
        cookies.forEach((cookie)=>{
            if (!childCookies.has(cookie)) childHeaders.append("Set-Cookie", cookie);
        });
    }
}
// lib/server-runtime/single-fetch.ts
var NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([
    100,
    101,
    204,
    205,
    304
]);
var SINGLE_FETCH_REDIRECT_STATUS = 202;
async function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {
    try {
        let respond2 = function(context) {
            let headers = getDocumentHeaders(build, context);
            if (isRedirectStatusCode(context.statusCode) && headers.has("Location")) return generateSingleFetchResponse(request, build, serverMode, {
                result: getSingleFetchRedirect(context.statusCode, headers, build.basename),
                headers,
                status: SINGLE_FETCH_REDIRECT_STATUS
            });
            if (context.errors) {
                Object.values(context.errors).forEach((err)=>{
                    if (!isRouteErrorResponse(err) || err.error) handleError(err);
                });
                context.errors = sanitizeErrors(context.errors, serverMode);
            }
            let singleFetchResult;
            if (context.errors) singleFetchResult = {
                error: Object.values(context.errors)[0]
            };
            else singleFetchResult = {
                data: Object.values(context.actionData || {})[0]
            };
            return generateSingleFetchResponse(request, build, serverMode, {
                result: singleFetchResult,
                headers,
                status: context.statusCode
            });
        };
        var respond = respond2;
        let handlerRequest = new Request(handlerUrl, {
            method: request.method,
            body: request.body,
            headers: request.headers,
            signal: request.signal,
            ...request.body ? {
                duplex: "half"
            } : void 0
        });
        let result = await staticHandler.query(handlerRequest, {
            requestContext: loadContext,
            skipLoaderErrorBubbling: true,
            skipRevalidation: true,
            unstable_respond: respond2
        });
        if (!isResponse(result)) result = respond2(result);
        if (isRedirectResponse(result)) return generateSingleFetchResponse(request, build, serverMode, {
            result: getSingleFetchRedirect(result.status, result.headers, build.basename),
            headers: result.headers,
            status: SINGLE_FETCH_REDIRECT_STATUS
        });
        return result;
    } catch (error) {
        handleError(error);
        return generateSingleFetchResponse(request, build, serverMode, {
            result: {
                error
            },
            headers: new Headers(),
            status: 500
        });
    }
}
async function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {
    try {
        let respond2 = function(context) {
            let headers = getDocumentHeaders(build, context);
            if (isRedirectStatusCode(context.statusCode) && headers.has("Location")) return generateSingleFetchResponse(request, build, serverMode, {
                result: {
                    [SingleFetchRedirectSymbol]: getSingleFetchRedirect(context.statusCode, headers, build.basename)
                },
                headers,
                status: SINGLE_FETCH_REDIRECT_STATUS
            });
            if (context.errors) {
                Object.values(context.errors).forEach((err)=>{
                    if (!isRouteErrorResponse(err) || err.error) handleError(err);
                });
                context.errors = sanitizeErrors(context.errors, serverMode);
            }
            let results = {};
            let loadedMatches = new Set(context.matches.filter((m)=>loadRouteIds ? loadRouteIds.has(m.route.id) : m.route.loader != null).map((m)=>m.route.id));
            if (context.errors) for (let [id, error] of Object.entries(context.errors))results[id] = {
                error
            };
            for (let [id, data2] of Object.entries(context.loaderData))if (!(id in results) && loadedMatches.has(id)) results[id] = {
                data: data2
            };
            return generateSingleFetchResponse(request, build, serverMode, {
                result: results,
                headers,
                status: context.statusCode
            });
        };
        var respond = respond2;
        let handlerRequest = new Request(handlerUrl, {
            headers: request.headers,
            signal: request.signal
        });
        let routesParam = new URL(request.url).searchParams.get("_routes");
        let loadRouteIds = routesParam ? new Set(routesParam.split(",")) : null;
        let result = await staticHandler.query(handlerRequest, {
            requestContext: loadContext,
            filterMatchesToLoad: (m)=>!loadRouteIds || loadRouteIds.has(m.route.id),
            skipLoaderErrorBubbling: true,
            unstable_respond: respond2
        });
        if (!isResponse(result)) result = respond2(result);
        if (isRedirectResponse(result)) return generateSingleFetchResponse(request, build, serverMode, {
            result: {
                [SingleFetchRedirectSymbol]: getSingleFetchRedirect(result.status, result.headers, build.basename)
            },
            headers: result.headers,
            status: SINGLE_FETCH_REDIRECT_STATUS
        });
        return result;
    } catch (error) {
        handleError(error);
        return generateSingleFetchResponse(request, build, serverMode, {
            result: {
                root: {
                    error
                }
            },
            headers: new Headers(),
            status: 500
        });
    }
}
function generateSingleFetchResponse(request, build, serverMode, { result, headers, status }) {
    let resultHeaders = new Headers(headers);
    resultHeaders.set("X-Remix-Response", "yes");
    if (NO_BODY_STATUS_CODES.has(status)) return new Response(null, {
        status,
        headers: resultHeaders
    });
    resultHeaders.set("Content-Type", "text/x-script");
    return new Response(encodeViaTurboStream(result, request.signal, build.entry.module.streamTimeout, serverMode), {
        status: status || 200,
        headers: resultHeaders
    });
}
function getSingleFetchRedirect(status, headers, basename) {
    let redirect2 = headers.get("Location");
    if (basename) redirect2 = stripBasename(redirect2, basename) || redirect2;
    return {
        redirect: redirect2,
        status,
        revalidate: // Technically X-Remix-Revalidate isn't needed here - that was an implementation
        // detail of ?_data requests as our way to tell the front end to revalidate when
        // we didn't have a response body to include that information in.
        // With single fetch, we tell the front end via this revalidate boolean field.
        // However, we're respecting it for now because it may be something folks have
        // used in their own responses
        // TODO(v3): Consider removing or making this official public API
        headers.has("X-Remix-Revalidate") || headers.has("Set-Cookie"),
        reload: headers.has("X-Remix-Reload-Document"),
        replace: headers.has("X-Remix-Replace")
    };
}
function encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {
    let controller = new AbortController();
    let timeoutId = setTimeout(()=>controller.abort(new Error("Server Timeout")), typeof streamTimeout === "number" ? streamTimeout : 4950);
    requestSignal.addEventListener("abort", ()=>clearTimeout(timeoutId));
    return (0, _turboStream.encode)(data2, {
        signal: controller.signal,
        plugins: [
            (value)=>{
                if (value instanceof Error) {
                    let { name, message, stack } = serverMode === "production" /* Production */  ? sanitizeError(value, serverMode) : value;
                    return [
                        "SanitizedError",
                        name,
                        message,
                        stack
                    ];
                }
                if (value instanceof ErrorResponseImpl) {
                    let { data: data3, status, statusText } = value;
                    return [
                        "ErrorResponse",
                        data3,
                        status,
                        statusText
                    ];
                }
                if (value && typeof value === "object" && SingleFetchRedirectSymbol in value) return [
                    "SingleFetchRedirect",
                    value[SingleFetchRedirectSymbol]
                ];
            }
        ],
        postPlugins: [
            (value)=>{
                if (!value) return;
                if (typeof value !== "object") return;
                return [
                    "SingleFetchClassInstance",
                    Object.fromEntries(Object.entries(value))
                ];
            },
            ()=>[
                    "SingleFetchFallback"
                ]
        ]
    });
}
// lib/server-runtime/server.ts
function derive(build, mode) {
    let routes = createRoutes(build.routes);
    let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);
    let serverMode = isServerMode(mode) ? mode : "production" /* Production */ ;
    let staticHandler = createStaticHandler(dataRoutes, {
        basename: build.basename
    });
    let errorHandler = build.entry.module.handleError || ((error, { request })=>{
        if (serverMode !== "test" /* Test */  && !request.signal.aborted) console.error(// @ts-expect-error This is "private" from users but intended for internal use
        isRouteErrorResponse(error) && error.error ? error.error : error);
    });
    return {
        routes,
        dataRoutes,
        serverMode,
        staticHandler,
        errorHandler
    };
}
var createRequestHandler = (build, mode)=>{
    let _build;
    let routes;
    let serverMode;
    let staticHandler;
    let errorHandler;
    return async function requestHandler(request, initialContext) {
        _build = typeof build === "function" ? await build() : build;
        let loadContext = _build.future.unstable_middleware ? new unstable_RouterContextProvider(initialContext) : initialContext || {};
        if (typeof build === "function") {
            let derived = derive(_build, mode);
            routes = derived.routes;
            serverMode = derived.serverMode;
            staticHandler = derived.staticHandler;
            errorHandler = derived.errorHandler;
        } else if (!routes || !serverMode || !staticHandler || !errorHandler) {
            let derived = derive(_build, mode);
            routes = derived.routes;
            serverMode = derived.serverMode;
            staticHandler = derived.staticHandler;
            errorHandler = derived.errorHandler;
        }
        let url = new URL(request.url);
        let normalizedBasename = _build.basename || "/";
        let normalizedPath = url.pathname;
        if (stripBasename(normalizedPath, normalizedBasename) === "/_root.data") normalizedPath = normalizedBasename;
        else if (normalizedPath.endsWith(".data")) normalizedPath = normalizedPath.replace(/\.data$/, "");
        if (stripBasename(normalizedPath, normalizedBasename) !== "/" && normalizedPath.endsWith("/")) normalizedPath = normalizedPath.slice(0, -1);
        let params = {};
        let handleError = (error)=>{
            if (mode === "development" /* Development */ ) getDevServerHooks()?.processRequestError?.(error);
            errorHandler(error, {
                context: loadContext,
                params,
                request
            });
        };
        if (!_build.ssr) {
            if (_build.prerender.length === 0) request.headers.set("X-React-Router-SPA-Mode", "yes");
            else if (!_build.prerender.includes(normalizedPath) && !_build.prerender.includes(normalizedPath + "/")) {
                if (url.pathname.endsWith(".data")) {
                    errorHandler(new ErrorResponseImpl(404, "Not Found", `Refusing to SSR the path \`${normalizedPath}\` because \`ssr:false\` is set and the path is not included in the \`prerender\` config, so in production the path will be a 404.`), {
                        context: loadContext,
                        params,
                        request
                    });
                    return new Response("Not Found", {
                        status: 404,
                        statusText: "Not Found"
                    });
                } else request.headers.set("X-React-Router-SPA-Mode", "yes");
            }
        }
        let manifestUrl = `${normalizedBasename}/__manifest`.replace(/\/+/g, "/");
        if (url.pathname === manifestUrl) try {
            let res = await handleManifestRequest(_build, routes, url);
            return res;
        } catch (e) {
            handleError(e);
            return new Response("Unknown Server Error", {
                status: 500
            });
        }
        let matches = matchServerRoutes(routes, url.pathname, _build.basename);
        if (matches && matches.length > 0) Object.assign(params, matches[0].params);
        let response;
        if (url.pathname.endsWith(".data")) {
            let handlerUrl = new URL(request.url);
            handlerUrl.pathname = normalizedPath;
            let singleFetchMatches = matchServerRoutes(routes, handlerUrl.pathname, _build.basename);
            response = await handleSingleFetchRequest(serverMode, _build, staticHandler, request, handlerUrl, loadContext, handleError);
            if (_build.entry.module.handleDataRequest) {
                response = await _build.entry.module.handleDataRequest(response, {
                    context: loadContext,
                    params: singleFetchMatches ? singleFetchMatches[0].params : {},
                    request
                });
                if (isRedirectResponse(response)) {
                    let result = getSingleFetchRedirect(response.status, response.headers, _build.basename);
                    if (request.method === "GET") result = {
                        [SingleFetchRedirectSymbol]: result
                    };
                    let headers = new Headers(response.headers);
                    headers.set("Content-Type", "text/x-script");
                    return new Response(encodeViaTurboStream(result, request.signal, _build.entry.module.streamTimeout, serverMode), {
                        status: SINGLE_FETCH_REDIRECT_STATUS,
                        headers
                    });
                }
            }
        } else if (!request.headers.has("X-React-Router-SPA-Mode") && matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) response = await handleResourceRequest(serverMode, _build, staticHandler, matches.slice(-1)[0].route.id, request, loadContext, handleError);
        else {
            let { pathname } = url;
            let criticalCss = void 0;
            if (_build.unstable_getCriticalCss) criticalCss = await _build.unstable_getCriticalCss({
                pathname
            });
            else if (mode === "development" /* Development */  && getDevServerHooks()?.getCriticalCss) criticalCss = await getDevServerHooks()?.getCriticalCss?.(pathname);
            response = await handleDocumentRequest(serverMode, _build, staticHandler, request, loadContext, handleError, criticalCss);
        }
        if (request.method === "HEAD") return new Response(null, {
            headers: response.headers,
            status: response.status,
            statusText: response.statusText
        });
        return response;
    };
};
async function handleManifestRequest(build, routes, url) {
    if (build.assets.version !== url.searchParams.get("version")) return new Response(null, {
        status: 204,
        headers: {
            "X-Remix-Reload-Document": "true"
        }
    });
    let patches = {};
    if (url.searchParams.has("p")) {
        let paths = /* @__PURE__ */ new Set();
        url.searchParams.getAll("p").forEach((path)=>{
            if (!path.startsWith("/")) path = `/${path}`;
            let segments = path.split("/").slice(1);
            segments.forEach((_, i)=>{
                let partialPath = segments.slice(0, i + 1).join("/");
                paths.add(`/${partialPath}`);
            });
        });
        for (let path of paths){
            let matches = matchServerRoutes(routes, path, build.basename);
            if (matches) for (let match of matches){
                let routeId = match.route.id;
                let route = build.assets.routes[routeId];
                if (route) patches[routeId] = route;
            }
        }
        return Response.json(patches, {
            headers: {
                "Cache-Control": "public, max-age=31536000, immutable"
            }
        });
    }
    return new Response("Invalid Request", {
        status: 400
    });
}
async function handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {
    let response = request.method !== "GET" ? await singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) : await singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError);
    return response;
}
async function handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, criticalCss) {
    let isSpaMode = request.headers.has("X-React-Router-SPA-Mode");
    try {
        let response = await staticHandler.query(request, {
            requestContext: loadContext,
            unstable_respond: build.future.unstable_middleware ? (ctx)=>renderHtml(ctx, isSpaMode) : void 0
        });
        return isResponse(response) ? response : renderHtml(response, isSpaMode);
    } catch (error) {
        handleError(error);
        return new Response(null, {
            status: 500
        });
    }
    async function renderHtml(context, isSpaMode2) {
        if (isResponse(context)) return context;
        let headers = getDocumentHeaders(build, context);
        if (NO_BODY_STATUS_CODES.has(context.statusCode)) return new Response(null, {
            status: context.statusCode,
            headers
        });
        if (context.errors) {
            Object.values(context.errors).forEach((err)=>{
                if (!isRouteErrorResponse(err) || err.error) handleError(err);
            });
            context.errors = sanitizeErrors(context.errors, serverMode);
        }
        let state = {
            loaderData: context.loaderData,
            actionData: context.actionData,
            errors: serializeErrors2(context.errors, serverMode)
        };
        let entryContext = {
            manifest: build.assets,
            routeModules: createEntryRouteModules(build.routes),
            staticHandlerContext: context,
            criticalCss,
            serverHandoffString: createServerHandoffString({
                basename: build.basename,
                criticalCss,
                future: build.future,
                ssr: build.ssr,
                isSpaMode: isSpaMode2
            }),
            serverHandoffStream: encodeViaTurboStream(state, request.signal, build.entry.module.streamTimeout, serverMode),
            renderMeta: {},
            future: build.future,
            ssr: build.ssr,
            isSpaMode: isSpaMode2,
            serializeError: (err)=>serializeError(err, serverMode)
        };
        let handleDocumentRequestFunction = build.entry.module.default;
        try {
            return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);
        } catch (error) {
            handleError(error);
            let errorForSecondRender = error;
            if (isResponse(error)) try {
                let data2 = await unwrapResponse(error);
                errorForSecondRender = new ErrorResponseImpl(error.status, error.statusText, data2);
            } catch (e) {}
            context = getStaticContextFromError(staticHandler.dataRoutes, context, errorForSecondRender);
            if (context.errors) context.errors = sanitizeErrors(context.errors, serverMode);
            let state2 = {
                loaderData: context.loaderData,
                actionData: context.actionData,
                errors: serializeErrors2(context.errors, serverMode)
            };
            entryContext = {
                ...entryContext,
                staticHandlerContext: context,
                serverHandoffString: createServerHandoffString({
                    basename: build.basename,
                    future: build.future,
                    ssr: build.ssr,
                    isSpaMode: isSpaMode2
                }),
                serverHandoffStream: encodeViaTurboStream(state2, request.signal, build.entry.module.streamTimeout, serverMode),
                renderMeta: {}
            };
            try {
                return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);
            } catch (error2) {
                handleError(error2);
                return returnLastResortErrorResponse(error2, serverMode);
            }
        }
    }
}
async function handleResourceRequest(serverMode, build, staticHandler, routeId, request, loadContext, handleError) {
    try {
        let response = await staticHandler.queryRoute(request, {
            routeId,
            requestContext: loadContext,
            unstable_respond: build.future.unstable_middleware ? (ctx)=>ctx : void 0
        });
        if (isResponse(response)) return response;
        if (typeof response === "string") return new Response(response);
        return Response.json(response);
    } catch (error) {
        if (isResponse(error)) {
            error.headers.set("X-Remix-Catch", "yes");
            return error;
        }
        if (isRouteErrorResponse(error)) {
            if (error) handleError(error);
            return errorResponseToJson(error, serverMode);
        }
        if (error instanceof Error && error.message === "Expected a response from queryRoute") {
            let newError = new Error("Expected a Response to be returned from resource route handler");
            handleError(newError);
            return returnLastResortErrorResponse(newError, serverMode);
        }
        handleError(error);
        return returnLastResortErrorResponse(error, serverMode);
    }
}
function errorResponseToJson(errorResponse, serverMode) {
    return Response.json(serializeError(// @ts-expect-error This is "private" from users but intended for internal use
    errorResponse.error || new Error("Unexpected Server Error"), serverMode), {
        status: errorResponse.status,
        statusText: errorResponse.statusText,
        headers: {
            "X-Remix-Error": "yes"
        }
    });
}
function returnLastResortErrorResponse(error, serverMode) {
    let message = "Unexpected Server Error";
    if (serverMode !== "production" /* Production */ ) message += `

${String(error)}`;
    return new Response(message, {
        status: 500,
        headers: {
            "Content-Type": "text/plain"
        }
    });
}
function unwrapResponse(response) {
    let contentType = response.headers.get("Content-Type");
    return contentType && /\bapplication\/json\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();
}
// lib/server-runtime/sessions.ts
function flash(name) {
    return `__flash_${name}__`;
}
var createSession = (initialData = {}, id = "")=>{
    let map = new Map(Object.entries(initialData));
    return {
        get id () {
            return id;
        },
        get data () {
            return Object.fromEntries(map);
        },
        has (name) {
            return map.has(name) || map.has(flash(name));
        },
        get (name) {
            if (map.has(name)) return map.get(name);
            let flashName = flash(name);
            if (map.has(flashName)) {
                let value = map.get(flashName);
                map.delete(flashName);
                return value;
            }
            return void 0;
        },
        set (name, value) {
            map.set(name, value);
        },
        flash (name, value) {
            map.set(flash(name), value);
        },
        unset (name) {
            map.delete(name);
        }
    };
};
var isSession = (object)=>{
    return object != null && typeof object.id === "string" && typeof object.data !== "undefined" && typeof object.has === "function" && typeof object.get === "function" && typeof object.set === "function" && typeof object.flash === "function" && typeof object.unset === "function";
};
function createSessionStorage({ cookie: cookieArg, createData, readData, updateData, deleteData }) {
    let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || "__session", cookieArg);
    warnOnceAboutSigningSessionCookie(cookie);
    return {
        async getSession (cookieHeader, options) {
            let id = cookieHeader && await cookie.parse(cookieHeader, options);
            let data2 = id && await readData(id);
            return createSession(data2 || {}, id || "");
        },
        async commitSession (session, options) {
            let { id, data: data2 } = session;
            let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;
            if (id) await updateData(id, data2, expires);
            else id = await createData(data2, expires);
            return cookie.serialize(id, options);
        },
        async destroySession (session, options) {
            await deleteData(session.id);
            return cookie.serialize("", {
                ...options,
                maxAge: void 0,
                expires: /* @__PURE__ */ new Date(0)
            });
        }
    };
}
function warnOnceAboutSigningSessionCookie(cookie) {
    warnOnce(cookie.isSigned, `The "${cookie.name}" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`);
}
// lib/server-runtime/sessions/cookieStorage.ts
function createCookieSessionStorage({ cookie: cookieArg } = {}) {
    let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || "__session", cookieArg);
    warnOnceAboutSigningSessionCookie(cookie);
    return {
        async getSession (cookieHeader, options) {
            return createSession(cookieHeader && await cookie.parse(cookieHeader, options) || {});
        },
        async commitSession (session, options) {
            let serializedCookie = await cookie.serialize(session.data, options);
            if (serializedCookie.length > 4096) throw new Error("Cookie length will exceed browser maximum. Length: " + serializedCookie.length);
            return serializedCookie;
        },
        async destroySession (_session, options) {
            return cookie.serialize("", {
                ...options,
                maxAge: void 0,
                expires: /* @__PURE__ */ new Date(0)
            });
        }
    };
}
// lib/server-runtime/sessions/memoryStorage.ts
function createMemorySessionStorage({ cookie } = {}) {
    let map = /* @__PURE__ */ new Map();
    return createSessionStorage({
        cookie,
        async createData (data2, expires) {
            let id = Math.random().toString(36).substring(2, 10);
            map.set(id, {
                data: data2,
                expires
            });
            return id;
        },
        async readData (id) {
            if (map.has(id)) {
                let { data: data2, expires } = map.get(id);
                if (!expires || expires > /* @__PURE__ */ new Date()) return data2;
                if (expires) map.delete(id);
            }
            return null;
        },
        async updateData (id, data2, expires) {
            map.set(id, {
                data: data2,
                expires
            });
        },
        async deleteData (id) {
            map.delete(id);
        }
    });
}
// lib/href.ts
function href(path, ...args) {
    let params = args[0];
    return path.split("/").map((segment)=>{
        const match = segment.match(/^:([\w-]+)(\?)?/);
        if (!match) return segment;
        const param = match[1];
        const value = params ? params[param] : void 0;
        const isRequired = match[2] === void 0;
        if (isRequired && value === void 0) throw Error(`Path '${path}' requires param '${param}' but it was not provided`);
        return value;
    }).filter((segment)=>segment !== void 0).join("/");
}
// lib/dom/ssr/errors.ts
function deserializeErrors2(errors) {
    if (!errors) return null;
    let entries = Object.entries(errors);
    let serialized = {};
    for (let [key, val] of entries){
        if (val && val.__type === "RouteErrorResponse") serialized[key] = new ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);
        else if (val && val.__type === "Error") {
            if (val.__subType) {
                let ErrorConstructor = window[val.__subType];
                if (typeof ErrorConstructor === "function") try {
                    let error = new ErrorConstructor(val.message);
                    error.stack = val.stack;
                    serialized[key] = error;
                } catch (e) {}
            }
            if (serialized[key] == null) {
                let error = new Error(val.message);
                error.stack = val.stack;
                serialized[key] = error;
            }
        } else serialized[key] = val;
    }
    return serialized;
}

},{"react":"jMk1U","turbo-stream":"031wi","cookie":"8Pe3w","set-cookie-parser":"8AeuC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"031wi":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.encode = exports.decode = void 0;
const flatten_js_1 = require("8f10be1c14cdc7ed");
const unflatten_js_1 = require("d8f22d128db7aee5");
const utils_js_1 = require("bcbf18eed9422159");
async function decode(readable, options) {
    const { plugins } = options ?? {};
    const done = new utils_js_1.Deferred();
    const reader = readable.pipeThrough((0, utils_js_1.createLineSplittingTransform)()).getReader();
    const decoder = {
        values: [],
        hydrated: [],
        deferred: {},
        plugins
    };
    const decoded = await decodeInitial.call(decoder, reader);
    let donePromise = done.promise;
    if (decoded.done) done.resolve();
    else donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason)=>{
        for (const deferred of Object.values(decoder.deferred))deferred.reject(reason);
        done.reject(reason);
    });
    return {
        done: donePromise.then(()=>reader.closed),
        value: decoded.value
    };
}
exports.decode = decode;
async function decodeInitial(reader) {
    const read = await reader.read();
    if (!read.value) throw new SyntaxError();
    let line;
    try {
        line = JSON.parse(read.value);
    } catch (reason) {
        throw new SyntaxError();
    }
    return {
        done: read.done,
        value: unflatten_js_1.unflatten.call(this, line)
    };
}
async function decodeDeferred(reader) {
    let read = await reader.read();
    while(!read.done){
        if (!read.value) continue;
        const line = read.value;
        switch(line[0]){
            case utils_js_1.TYPE_PROMISE:
                {
                    const colonIndex = line.indexOf(":");
                    const deferredId = Number(line.slice(1, colonIndex));
                    const deferred = this.deferred[deferredId];
                    if (!deferred) throw new Error(`Deferred ID ${deferredId} not found in stream`);
                    const lineData = line.slice(colonIndex + 1);
                    let jsonLine;
                    try {
                        jsonLine = JSON.parse(lineData);
                    } catch (reason) {
                        throw new SyntaxError();
                    }
                    const value = unflatten_js_1.unflatten.call(this, jsonLine);
                    deferred.resolve(value);
                    break;
                }
            case utils_js_1.TYPE_ERROR:
                {
                    const colonIndex = line.indexOf(":");
                    const deferredId = Number(line.slice(1, colonIndex));
                    const deferred = this.deferred[deferredId];
                    if (!deferred) throw new Error(`Deferred ID ${deferredId} not found in stream`);
                    const lineData = line.slice(colonIndex + 1);
                    let jsonLine;
                    try {
                        jsonLine = JSON.parse(lineData);
                    } catch (reason) {
                        throw new SyntaxError();
                    }
                    const value = unflatten_js_1.unflatten.call(this, jsonLine);
                    deferred.reject(value);
                    break;
                }
            default:
                throw new SyntaxError();
        }
        read = await reader.read();
    }
}
function encode(input, options) {
    const { plugins, postPlugins, signal } = options ?? {};
    const encoder = {
        deferred: {},
        index: 0,
        indices: new Map(),
        stringified: [],
        plugins,
        postPlugins,
        signal
    };
    const textEncoder = new TextEncoder();
    let lastSentIndex = 0;
    const readable = new ReadableStream({
        async start (controller) {
            const id = flatten_js_1.flatten.call(encoder, input);
            if (Array.isArray(id)) throw new Error("This should never happen");
            if (id < 0) controller.enqueue(textEncoder.encode(`${id}\n`));
            else {
                controller.enqueue(textEncoder.encode(`[${encoder.stringified.join(",")}]\n`));
                lastSentIndex = encoder.stringified.length - 1;
            }
            const seenPromises = new WeakSet();
            while(Object.keys(encoder.deferred).length > 0){
                for (const [deferredId, deferred] of Object.entries(encoder.deferred)){
                    if (seenPromises.has(deferred)) continue;
                    seenPromises.add(encoder.deferred[Number(deferredId)] = raceSignal(deferred, encoder.signal).then((resolved)=>{
                        const id = flatten_js_1.flatten.call(encoder, resolved);
                        if (Array.isArray(id)) {
                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_PROMISE}${deferredId}:[["${utils_js_1.TYPE_PREVIOUS_RESOLVED}",${id[0]}]]\n`));
                            encoder.index++;
                            lastSentIndex++;
                        } else if (id < 0) controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_PROMISE}${deferredId}:${id}\n`));
                        else {
                            const values = encoder.stringified.slice(lastSentIndex + 1).join(",");
                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_PROMISE}${deferredId}:[${values}]\n`));
                            lastSentIndex = encoder.stringified.length - 1;
                        }
                    }, (reason)=>{
                        if (!reason || typeof reason !== "object" || !(reason instanceof Error)) reason = new Error("An unknown error occurred");
                        const id = flatten_js_1.flatten.call(encoder, reason);
                        if (Array.isArray(id)) {
                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_ERROR}${deferredId}:[["${utils_js_1.TYPE_PREVIOUS_RESOLVED}",${id[0]}]]\n`));
                            encoder.index++;
                            lastSentIndex++;
                        } else if (id < 0) controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_ERROR}${deferredId}:${id}\n`));
                        else {
                            const values = encoder.stringified.slice(lastSentIndex + 1).join(",");
                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_ERROR}${deferredId}:[${values}]\n`));
                            lastSentIndex = encoder.stringified.length - 1;
                        }
                    }).finally(()=>{
                        delete encoder.deferred[Number(deferredId)];
                    }));
                }
                await Promise.race(Object.values(encoder.deferred));
            }
            await Promise.all(Object.values(encoder.deferred));
            controller.close();
        }
    });
    return readable;
}
exports.encode = encode;
function raceSignal(promise, signal) {
    if (!signal) return promise;
    if (signal.aborted) return Promise.reject(signal.reason || new Error("Signal was aborted."));
    const abort = new Promise((resolve, reject)=>{
        signal.addEventListener("abort", (event)=>{
            reject(signal.reason || new Error("Signal was aborted."));
        });
        promise.then(resolve).catch(reject);
    });
    abort.catch(()=>{});
    return Promise.race([
        abort,
        promise
    ]);
}

},{"8f10be1c14cdc7ed":"2GWmZ","d8f22d128db7aee5":"8ddmw","bcbf18eed9422159":"kbjqW"}],"2GWmZ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.flatten = void 0;
const utils_js_1 = require("c3c0dac07752d118");
function flatten(input) {
    const { indices } = this;
    const existing = indices.get(input);
    if (existing) return [
        existing
    ];
    if (input === undefined) return utils_js_1.UNDEFINED;
    if (input === null) return utils_js_1.NULL;
    if (Number.isNaN(input)) return utils_js_1.NAN;
    if (input === Number.POSITIVE_INFINITY) return utils_js_1.POSITIVE_INFINITY;
    if (input === Number.NEGATIVE_INFINITY) return utils_js_1.NEGATIVE_INFINITY;
    if (input === 0 && 1 / input < 0) return utils_js_1.NEGATIVE_ZERO;
    const index = this.index++;
    indices.set(input, index);
    stringify.call(this, input, index);
    return index;
}
exports.flatten = flatten;
function stringify(input, index) {
    const { deferred, plugins, postPlugins } = this;
    const str = this.stringified;
    const stack = [
        [
            input,
            index
        ]
    ];
    while(stack.length > 0){
        const [input, index] = stack.pop();
        const partsForObj = (obj)=>Object.keys(obj).map((k)=>`"_${flatten.call(this, k)}":${flatten.call(this, obj[k])}`).join(",");
        let error = null;
        switch(typeof input){
            case "boolean":
            case "number":
            case "string":
                str[index] = JSON.stringify(input);
                break;
            case "bigint":
                str[index] = `["${utils_js_1.TYPE_BIGINT}","${input}"]`;
                break;
            case "symbol":
                {
                    const keyFor = Symbol.keyFor(input);
                    if (!keyFor) error = new Error("Cannot encode symbol unless created with Symbol.for()");
                    else str[index] = `["${utils_js_1.TYPE_SYMBOL}",${JSON.stringify(keyFor)}]`;
                    break;
                }
            case "object":
                {
                    if (!input) {
                        str[index] = `${utils_js_1.NULL}`;
                        break;
                    }
                    const isArray = Array.isArray(input);
                    let pluginHandled = false;
                    if (!isArray && plugins) for (const plugin of plugins){
                        const pluginResult = plugin(input);
                        if (Array.isArray(pluginResult)) {
                            pluginHandled = true;
                            const [pluginIdentifier, ...rest] = pluginResult;
                            str[index] = `[${JSON.stringify(pluginIdentifier)}`;
                            if (rest.length > 0) str[index] += `,${rest.map((v)=>flatten.call(this, v)).join(",")}`;
                            str[index] += "]";
                            break;
                        }
                    }
                    if (!pluginHandled) {
                        let result = isArray ? "[" : "{";
                        if (isArray) {
                            for(let i = 0; i < input.length; i++)result += (i ? "," : "") + (i in input ? flatten.call(this, input[i]) : utils_js_1.HOLE);
                            str[index] = `${result}]`;
                        } else if (input instanceof Date) str[index] = `["${utils_js_1.TYPE_DATE}",${input.getTime()}]`;
                        else if (input instanceof URL) str[index] = `["${utils_js_1.TYPE_URL}",${JSON.stringify(input.href)}]`;
                        else if (input instanceof RegExp) str[index] = `["${utils_js_1.TYPE_REGEXP}",${JSON.stringify(input.source)},${JSON.stringify(input.flags)}]`;
                        else if (input instanceof Set) {
                            if (input.size > 0) str[index] = `["${utils_js_1.TYPE_SET}",${[
                                ...input
                            ].map((val)=>flatten.call(this, val)).join(",")}]`;
                            else str[index] = `["${utils_js_1.TYPE_SET}"]`;
                        } else if (input instanceof Map) {
                            if (input.size > 0) str[index] = `["${utils_js_1.TYPE_MAP}",${[
                                ...input
                            ].flatMap(([k, v])=>[
                                    flatten.call(this, k),
                                    flatten.call(this, v)
                                ]).join(",")}]`;
                            else str[index] = `["${utils_js_1.TYPE_MAP}"]`;
                        } else if (input instanceof Promise) {
                            str[index] = `["${utils_js_1.TYPE_PROMISE}",${index}]`;
                            deferred[index] = input;
                        } else if (input instanceof Error) {
                            str[index] = `["${utils_js_1.TYPE_ERROR}",${JSON.stringify(input.message)}`;
                            if (input.name !== "Error") str[index] += `,${JSON.stringify(input.name)}`;
                            str[index] += "]";
                        } else if (Object.getPrototypeOf(input) === null) str[index] = `["${utils_js_1.TYPE_NULL_OBJECT}",{${partsForObj(input)}}]`;
                        else if (isPlainObject(input)) str[index] = `{${partsForObj(input)}}`;
                        else error = new Error("Cannot encode object with prototype");
                    }
                    break;
                }
            default:
                {
                    const isArray = Array.isArray(input);
                    let pluginHandled = false;
                    if (!isArray && plugins) for (const plugin of plugins){
                        const pluginResult = plugin(input);
                        if (Array.isArray(pluginResult)) {
                            pluginHandled = true;
                            const [pluginIdentifier, ...rest] = pluginResult;
                            str[index] = `[${JSON.stringify(pluginIdentifier)}`;
                            if (rest.length > 0) str[index] += `,${rest.map((v)=>flatten.call(this, v)).join(",")}`;
                            str[index] += "]";
                            break;
                        }
                    }
                    if (!pluginHandled) error = new Error("Cannot encode function or unexpected type");
                }
        }
        if (error) {
            let pluginHandled = false;
            if (postPlugins) for (const plugin of postPlugins){
                const pluginResult = plugin(input);
                if (Array.isArray(pluginResult)) {
                    pluginHandled = true;
                    const [pluginIdentifier, ...rest] = pluginResult;
                    str[index] = `[${JSON.stringify(pluginIdentifier)}`;
                    if (rest.length > 0) str[index] += `,${rest.map((v)=>flatten.call(this, v)).join(",")}`;
                    str[index] += "]";
                    break;
                }
            }
            if (!pluginHandled) throw error;
        }
    }
}
const objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
function isPlainObject(thing) {
    const proto = Object.getPrototypeOf(thing);
    return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join("\0") === objectProtoNames;
}

},{"c3c0dac07752d118":"kbjqW"}],"kbjqW":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createLineSplittingTransform = exports.Deferred = exports.TYPE_PREVIOUS_RESOLVED = exports.TYPE_URL = exports.TYPE_SYMBOL = exports.TYPE_SET = exports.TYPE_REGEXP = exports.TYPE_PROMISE = exports.TYPE_NULL_OBJECT = exports.TYPE_MAP = exports.TYPE_ERROR = exports.TYPE_DATE = exports.TYPE_BIGINT = exports.UNDEFINED = exports.POSITIVE_INFINITY = exports.NULL = exports.NEGATIVE_ZERO = exports.NEGATIVE_INFINITY = exports.NAN = exports.HOLE = void 0;
exports.HOLE = -1;
exports.NAN = -2;
exports.NEGATIVE_INFINITY = -3;
exports.NEGATIVE_ZERO = -4;
exports.NULL = -5;
exports.POSITIVE_INFINITY = -6;
exports.UNDEFINED = -7;
exports.TYPE_BIGINT = "B";
exports.TYPE_DATE = "D";
exports.TYPE_ERROR = "E";
exports.TYPE_MAP = "M";
exports.TYPE_NULL_OBJECT = "N";
exports.TYPE_PROMISE = "P";
exports.TYPE_REGEXP = "R";
exports.TYPE_SET = "S";
exports.TYPE_SYMBOL = "Y";
exports.TYPE_URL = "U";
exports.TYPE_PREVIOUS_RESOLVED = "Z";
class Deferred {
    promise;
    resolve;
    reject;
    constructor(){
        this.promise = new Promise((resolve, reject)=>{
            this.resolve = resolve;
            this.reject = reject;
        });
    }
}
exports.Deferred = Deferred;
function createLineSplittingTransform() {
    const decoder = new TextDecoder();
    let leftover = "";
    return new TransformStream({
        transform (chunk, controller) {
            const str = decoder.decode(chunk, {
                stream: true
            });
            const parts = (leftover + str).split("\n");
            // The last part might be a partial line, so keep it for the next chunk.
            leftover = parts.pop() || "";
            for (const part of parts)controller.enqueue(part);
        },
        flush (controller) {
            // If there's any leftover data, enqueue it before closing.
            if (leftover) controller.enqueue(leftover);
        }
    });
}
exports.createLineSplittingTransform = createLineSplittingTransform;

},{}],"8ddmw":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.unflatten = void 0;
const utils_js_1 = require("5dc07f7a5a3d111c");
const globalObj = typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : undefined;
function unflatten(parsed) {
    const { hydrated, values } = this;
    if (typeof parsed === "number") return hydrate.call(this, parsed);
    if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();
    const startIndex = values.length;
    for (const value of parsed)values.push(value);
    hydrated.length = values.length;
    return hydrate.call(this, startIndex);
}
exports.unflatten = unflatten;
function hydrate(index) {
    const { hydrated, values, deferred, plugins } = this;
    let result;
    const stack = [
        [
            index,
            (v)=>{
                result = v;
            }
        ]
    ];
    let postRun = [];
    while(stack.length > 0){
        const [index, set] = stack.pop();
        switch(index){
            case utils_js_1.UNDEFINED:
                set(undefined);
                continue;
            case utils_js_1.NULL:
                set(null);
                continue;
            case utils_js_1.NAN:
                set(NaN);
                continue;
            case utils_js_1.POSITIVE_INFINITY:
                set(Infinity);
                continue;
            case utils_js_1.NEGATIVE_INFINITY:
                set(-Infinity);
                continue;
            case utils_js_1.NEGATIVE_ZERO:
                set(-0);
                continue;
        }
        if (hydrated[index]) {
            set(hydrated[index]);
            continue;
        }
        const value = values[index];
        if (!value || typeof value !== "object") {
            hydrated[index] = value;
            set(value);
            continue;
        }
        if (Array.isArray(value)) {
            if (typeof value[0] === "string") {
                const [type, b, c] = value;
                switch(type){
                    case utils_js_1.TYPE_DATE:
                        set(hydrated[index] = new Date(b));
                        continue;
                    case utils_js_1.TYPE_URL:
                        set(hydrated[index] = new URL(b));
                        continue;
                    case utils_js_1.TYPE_BIGINT:
                        set(hydrated[index] = BigInt(b));
                        continue;
                    case utils_js_1.TYPE_REGEXP:
                        set(hydrated[index] = new RegExp(b, c));
                        continue;
                    case utils_js_1.TYPE_SYMBOL:
                        set(hydrated[index] = Symbol.for(b));
                        continue;
                    case utils_js_1.TYPE_SET:
                        const newSet = new Set();
                        hydrated[index] = newSet;
                        for(let i = 1; i < value.length; i++)stack.push([
                            value[i],
                            (v)=>{
                                newSet.add(v);
                            }
                        ]);
                        set(newSet);
                        continue;
                    case utils_js_1.TYPE_MAP:
                        const map = new Map();
                        hydrated[index] = map;
                        for(let i = 1; i < value.length; i += 2){
                            const r = [];
                            stack.push([
                                value[i + 1],
                                (v)=>{
                                    r[1] = v;
                                }
                            ]);
                            stack.push([
                                value[i],
                                (k)=>{
                                    r[0] = k;
                                }
                            ]);
                            postRun.push(()=>{
                                map.set(r[0], r[1]);
                            });
                        }
                        set(map);
                        continue;
                    case utils_js_1.TYPE_NULL_OBJECT:
                        const obj = Object.create(null);
                        hydrated[index] = obj;
                        for (const key of Object.keys(b).reverse()){
                            const r = [];
                            stack.push([
                                b[key],
                                (v)=>{
                                    r[1] = v;
                                }
                            ]);
                            stack.push([
                                Number(key.slice(1)),
                                (k)=>{
                                    r[0] = k;
                                }
                            ]);
                            postRun.push(()=>{
                                obj[r[0]] = r[1];
                            });
                        }
                        set(obj);
                        continue;
                    case utils_js_1.TYPE_PROMISE:
                        if (hydrated[b]) set(hydrated[index] = hydrated[b]);
                        else {
                            const d = new utils_js_1.Deferred();
                            deferred[b] = d;
                            set(hydrated[index] = d.promise);
                        }
                        continue;
                    case utils_js_1.TYPE_ERROR:
                        const [, message, errorType] = value;
                        let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);
                        hydrated[index] = error;
                        set(error);
                        continue;
                    case utils_js_1.TYPE_PREVIOUS_RESOLVED:
                        set(hydrated[index] = hydrated[b]);
                        continue;
                    default:
                        // Run plugins at the end so we have a chance to resolve primitives
                        // without running into a loop
                        if (Array.isArray(plugins)) {
                            const r = [];
                            const vals = value.slice(1);
                            for(let i = 0; i < vals.length; i++){
                                const v = vals[i];
                                stack.push([
                                    v,
                                    (v)=>{
                                        r[i] = v;
                                    }
                                ]);
                            }
                            postRun.push(()=>{
                                for (const plugin of plugins){
                                    const result = plugin(value[0], ...r);
                                    if (result) {
                                        set(hydrated[index] = result.value);
                                        return;
                                    }
                                }
                                throw new SyntaxError();
                            });
                            continue;
                        }
                        throw new SyntaxError();
                }
            } else {
                const array = [];
                hydrated[index] = array;
                for(let i = 0; i < value.length; i++){
                    const n = value[i];
                    if (n !== utils_js_1.HOLE) stack.push([
                        n,
                        (v)=>{
                            array[i] = v;
                        }
                    ]);
                }
                set(array);
                continue;
            }
        } else {
            const object = {};
            hydrated[index] = object;
            for (const key of Object.keys(value).reverse()){
                const r = [];
                stack.push([
                    value[key],
                    (v)=>{
                        r[1] = v;
                    }
                ]);
                stack.push([
                    Number(key.slice(1)),
                    (k)=>{
                        r[0] = k;
                    }
                ]);
                postRun.push(()=>{
                    object[r[0]] = r[1];
                });
            }
            set(object);
            continue;
        }
    }
    while(postRun.length > 0)postRun.pop()();
    return result;
}

},{"5dc07f7a5a3d111c":"kbjqW"}],"8Pe3w":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.parse = parse;
exports.serialize = serialize;
/**
 * RegExp to match cookie-name in RFC 6265 sec 4.1.1
 * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2
 * which has been replaced by the token definition in RFC 7230 appendix B.
 *
 * cookie-name       = token
 * token             = 1*tchar
 * tchar             = "!" / "#" / "$" / "%" / "&" / "'" /
 *                     "*" / "+" / "-" / "." / "^" / "_" /
 *                     "`" / "|" / "~" / DIGIT / ALPHA
 *
 * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191
 * Allow same range as cookie value, except `=`, which delimits end of name.
 */ const cookieNameRegExp = /^[\u0021-\u003A\u003C\u003E-\u007E]+$/;
/**
 * RegExp to match cookie-value in RFC 6265 sec 4.1.1
 *
 * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )
 * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E
 *                     ; US-ASCII characters excluding CTLs,
 *                     ; whitespace DQUOTE, comma, semicolon,
 *                     ; and backslash
 *
 * Allowing more characters: https://github.com/jshttp/cookie/issues/191
 * Comma, backslash, and DQUOTE are not part of the parsing algorithm.
 */ const cookieValueRegExp = /^[\u0021-\u003A\u003C-\u007E]*$/;
/**
 * RegExp to match domain-value in RFC 6265 sec 4.1.1
 *
 * domain-value      = <subdomain>
 *                     ; defined in [RFC1034], Section 3.5, as
 *                     ; enhanced by [RFC1123], Section 2.1
 * <subdomain>       = <label> | <subdomain> "." <label>
 * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]
 *                     Labels must be 63 characters or less.
 *                     'let-dig' not 'letter' in the first char, per RFC1123
 * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>
 * <let-dig-hyp>     = <let-dig> | "-"
 * <let-dig>         = <letter> | <digit>
 * <letter>          = any one of the 52 alphabetic characters A through Z in
 *                     upper case and a through z in lower case
 * <digit>           = any one of the ten digits 0 through 9
 *
 * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173
 *
 * > (Note that a leading %x2E ("."), if present, is ignored even though that
 * character is not permitted, but a trailing %x2E ("."), if present, will
 * cause the user agent to ignore the attribute.)
 */ const domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;
/**
 * RegExp to match path-value in RFC 6265 sec 4.1.1
 *
 * path-value        = <any CHAR except CTLs or ";">
 * CHAR              = %x01-7F
 *                     ; defined in RFC 5234 appendix B.1
 */ const pathValueRegExp = /^[\u0020-\u003A\u003D-\u007E]*$/;
const __toString = Object.prototype.toString;
const NullObject = /* @__PURE__ */ (()=>{
    const C = function() {};
    C.prototype = Object.create(null);
    return C;
})();
/**
 * Parse a cookie header.
 *
 * Parse the given cookie header string into an object
 * The object has the various cookies as keys(names) => values
 */ function parse(str, options) {
    const obj = new NullObject();
    const len = str.length;
    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.
    if (len < 2) return obj;
    const dec = options?.decode || decode;
    let index = 0;
    do {
        const eqIdx = str.indexOf("=", index);
        if (eqIdx === -1) break; // No more cookie pairs.
        const colonIdx = str.indexOf(";", index);
        const endIdx = colonIdx === -1 ? len : colonIdx;
        if (eqIdx > endIdx) {
            // backtrack on prior semicolon
            index = str.lastIndexOf(";", eqIdx - 1) + 1;
            continue;
        }
        const keyStartIdx = startIndex(str, index, eqIdx);
        const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);
        const key = str.slice(keyStartIdx, keyEndIdx);
        // only assign once
        if (obj[key] === undefined) {
            let valStartIdx = startIndex(str, eqIdx + 1, endIdx);
            let valEndIdx = endIndex(str, endIdx, valStartIdx);
            const value = dec(str.slice(valStartIdx, valEndIdx));
            obj[key] = value;
        }
        index = endIdx + 1;
    }while (index < len);
    return obj;
}
function startIndex(str, index, max) {
    do {
        const code = str.charCodeAt(index);
        if (code !== 0x20 /*   */  && code !== 0x09 /* \t */ ) return index;
    }while (++index < max);
    return max;
}
function endIndex(str, index, min) {
    while(index > min){
        const code = str.charCodeAt(--index);
        if (code !== 0x20 /*   */  && code !== 0x09 /* \t */ ) return index + 1;
    }
    return min;
}
/**
 * Serialize data into a cookie header.
 *
 * Serialize a name value pair into a cookie string suitable for
 * http headers. An optional options object specifies cookie parameters.
 *
 * serialize('foo', 'bar', { httpOnly: true })
 *   => "foo=bar; httpOnly"
 */ function serialize(name, val, options) {
    const enc = options?.encode || encodeURIComponent;
    if (!cookieNameRegExp.test(name)) throw new TypeError(`argument name is invalid: ${name}`);
    const value = enc(val);
    if (!cookieValueRegExp.test(value)) throw new TypeError(`argument val is invalid: ${val}`);
    let str = name + "=" + value;
    if (!options) return str;
    if (options.maxAge !== undefined) {
        if (!Number.isInteger(options.maxAge)) throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);
        str += "; Max-Age=" + options.maxAge;
    }
    if (options.domain) {
        if (!domainValueRegExp.test(options.domain)) throw new TypeError(`option domain is invalid: ${options.domain}`);
        str += "; Domain=" + options.domain;
    }
    if (options.path) {
        if (!pathValueRegExp.test(options.path)) throw new TypeError(`option path is invalid: ${options.path}`);
        str += "; Path=" + options.path;
    }
    if (options.expires) {
        if (!isDate(options.expires) || !Number.isFinite(options.expires.valueOf())) throw new TypeError(`option expires is invalid: ${options.expires}`);
        str += "; Expires=" + options.expires.toUTCString();
    }
    if (options.httpOnly) str += "; HttpOnly";
    if (options.secure) str += "; Secure";
    if (options.partitioned) str += "; Partitioned";
    if (options.priority) {
        const priority = typeof options.priority === "string" ? options.priority.toLowerCase() : undefined;
        switch(priority){
            case "low":
                str += "; Priority=Low";
                break;
            case "medium":
                str += "; Priority=Medium";
                break;
            case "high":
                str += "; Priority=High";
                break;
            default:
                throw new TypeError(`option priority is invalid: ${options.priority}`);
        }
    }
    if (options.sameSite) {
        const sameSite = typeof options.sameSite === "string" ? options.sameSite.toLowerCase() : options.sameSite;
        switch(sameSite){
            case true:
            case "strict":
                str += "; SameSite=Strict";
                break;
            case "lax":
                str += "; SameSite=Lax";
                break;
            case "none":
                str += "; SameSite=None";
                break;
            default:
                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);
        }
    }
    return str;
}
/**
 * URL-decode string value. Optimized to skip native call when no %.
 */ function decode(str) {
    if (str.indexOf("%") === -1) return str;
    try {
        return decodeURIComponent(str);
    } catch (e) {
        return str;
    }
}
/**
 * Determine if value is a Date.
 */ function isDate(val) {
    return __toString.call(val) === "[object Date]";
}

},{}],"8AeuC":[function(require,module,exports,__globalThis) {
"use strict";
var defaultParseOptions = {
    decodeValues: true,
    map: false,
    silent: false
};
function isNonEmptyString(str) {
    return typeof str === "string" && !!str.trim();
}
function parseString(setCookieValue, options) {
    var parts = setCookieValue.split(";").filter(isNonEmptyString);
    var nameValuePairStr = parts.shift();
    var parsed = parseNameValuePair(nameValuePairStr);
    var name = parsed.name;
    var value = parsed.value;
    options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
    try {
        value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value
    } catch (e) {
        console.error("set-cookie-parser encountered an error while decoding a cookie with value '" + value + "'. Set options.decodeValues to false to disable this feature.", e);
    }
    var cookie = {
        name: name,
        value: value
    };
    parts.forEach(function(part) {
        var sides = part.split("=");
        var key = sides.shift().trimLeft().toLowerCase();
        var value = sides.join("=");
        if (key === "expires") cookie.expires = new Date(value);
        else if (key === "max-age") cookie.maxAge = parseInt(value, 10);
        else if (key === "secure") cookie.secure = true;
        else if (key === "httponly") cookie.httpOnly = true;
        else if (key === "samesite") cookie.sameSite = value;
        else if (key === "partitioned") cookie.partitioned = true;
        else cookie[key] = value;
    });
    return cookie;
}
function parseNameValuePair(nameValuePairStr) {
    // Parses name-value-pair according to rfc6265bis draft
    var name = "";
    var value = "";
    var nameValueArr = nameValuePairStr.split("=");
    if (nameValueArr.length > 1) {
        name = nameValueArr.shift();
        value = nameValueArr.join("="); // everything after the first =, joined by a "=" if there was more than one part
    } else value = nameValuePairStr;
    return {
        name: name,
        value: value
    };
}
function parse(input, options) {
    options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
    if (!input) {
        if (!options.map) return [];
        else return {};
    }
    if (input.headers) {
        if (typeof input.headers.getSetCookie === "function") // for fetch responses - they combine headers of the same type in the headers array,
        // but getSetCookie returns an uncombined array
        input = input.headers.getSetCookie();
        else if (input.headers["set-cookie"]) // fast-path for node.js (which automatically normalizes header names to lower-case
        input = input.headers["set-cookie"];
        else {
            // slow-path for other environments - see #25
            var sch = input.headers[Object.keys(input.headers).find(function(key) {
                return key.toLowerCase() === "set-cookie";
            })];
            // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36
            if (!sch && input.headers.cookie && !options.silent) console.warn("Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.");
            input = sch;
        }
    }
    if (!Array.isArray(input)) input = [
        input
    ];
    if (!options.map) return input.filter(isNonEmptyString).map(function(str) {
        return parseString(str, options);
    });
    else {
        var cookies = {};
        return input.filter(isNonEmptyString).reduce(function(cookies, str) {
            var cookie = parseString(str, options);
            cookies[cookie.name] = cookie;
            return cookies;
        }, cookies);
    }
}
/*
  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas
  that are within a single set-cookie field-value, such as in the Expires portion.

  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2
  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128
  React Native's fetch does this for *every* header, including set-cookie.

  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25
  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation
*/ function splitCookiesString(cookiesString) {
    if (Array.isArray(cookiesString)) return cookiesString;
    if (typeof cookiesString !== "string") return [];
    var cookiesStrings = [];
    var pos = 0;
    var start;
    var ch;
    var lastComma;
    var nextStart;
    var cookiesSeparatorFound;
    function skipWhitespace() {
        while(pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos)))pos += 1;
        return pos < cookiesString.length;
    }
    function notSpecialChar() {
        ch = cookiesString.charAt(pos);
        return ch !== "=" && ch !== ";" && ch !== ",";
    }
    while(pos < cookiesString.length){
        start = pos;
        cookiesSeparatorFound = false;
        while(skipWhitespace()){
            ch = cookiesString.charAt(pos);
            if (ch === ",") {
                // ',' is a cookie separator if we have later first '=', not ';' or ','
                lastComma = pos;
                pos += 1;
                skipWhitespace();
                nextStart = pos;
                while(pos < cookiesString.length && notSpecialChar())pos += 1;
                // currently special character
                if (pos < cookiesString.length && cookiesString.charAt(pos) === "=") {
                    // we found cookies separator
                    cookiesSeparatorFound = true;
                    // pos is inside the next cookie, so back up and return it.
                    pos = nextStart;
                    cookiesStrings.push(cookiesString.substring(start, lastComma));
                    start = pos;
                } else // in param ',' or param separator ';',
                // we continue from that comma
                pos = lastComma + 1;
            } else pos += 1;
        }
        if (!cookiesSeparatorFound || pos >= cookiesString.length) cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
    }
    return cookiesStrings;
}
module.exports = parse;
module.exports.parse = parse;
module.exports.parseString = parseString;
module.exports.splitCookiesString = splitCookiesString;

},{}],"kooH4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _axiosJsDefault.default));
parcelHelpers.export(exports, "Axios", ()=>Axios);
parcelHelpers.export(exports, "AxiosError", ()=>AxiosError);
parcelHelpers.export(exports, "CanceledError", ()=>CanceledError);
parcelHelpers.export(exports, "isCancel", ()=>isCancel);
parcelHelpers.export(exports, "CancelToken", ()=>CancelToken);
parcelHelpers.export(exports, "VERSION", ()=>VERSION);
parcelHelpers.export(exports, "all", ()=>all);
parcelHelpers.export(exports, "Cancel", ()=>Cancel);
parcelHelpers.export(exports, "isAxiosError", ()=>isAxiosError);
parcelHelpers.export(exports, "spread", ()=>spread);
parcelHelpers.export(exports, "toFormData", ()=>toFormData);
parcelHelpers.export(exports, "AxiosHeaders", ()=>AxiosHeaders);
parcelHelpers.export(exports, "HttpStatusCode", ()=>HttpStatusCode);
parcelHelpers.export(exports, "formToJSON", ()=>formToJSON);
parcelHelpers.export(exports, "getAdapter", ()=>getAdapter);
parcelHelpers.export(exports, "mergeConfig", ()=>mergeConfig);
var _axiosJs = require("./lib/axios.js");
var _axiosJsDefault = parcelHelpers.interopDefault(_axiosJs);
// This module is intended to unwrap Axios default export as named.
// Keep top-level export same with static properties
// so that it can keep same with es module or cjs
const { Axios, AxiosError, CanceledError, isCancel, CancelToken, VERSION, all, Cancel, isAxiosError, spread, toFormData, AxiosHeaders, HttpStatusCode, formToJSON, getAdapter, mergeConfig } = (0, _axiosJsDefault.default);

},{"./lib/axios.js":"le7Ue","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"le7Ue":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("./utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _bindJs = require("./helpers/bind.js");
var _bindJsDefault = parcelHelpers.interopDefault(_bindJs);
var _axiosJs = require("./core/Axios.js");
var _axiosJsDefault = parcelHelpers.interopDefault(_axiosJs);
var _mergeConfigJs = require("./core/mergeConfig.js");
var _mergeConfigJsDefault = parcelHelpers.interopDefault(_mergeConfigJs);
var _indexJs = require("./defaults/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _formDataToJSONJs = require("./helpers/formDataToJSON.js");
var _formDataToJSONJsDefault = parcelHelpers.interopDefault(_formDataToJSONJs);
var _canceledErrorJs = require("./cancel/CanceledError.js");
var _canceledErrorJsDefault = parcelHelpers.interopDefault(_canceledErrorJs);
var _cancelTokenJs = require("./cancel/CancelToken.js");
var _cancelTokenJsDefault = parcelHelpers.interopDefault(_cancelTokenJs);
var _isCancelJs = require("./cancel/isCancel.js");
var _isCancelJsDefault = parcelHelpers.interopDefault(_isCancelJs);
var _dataJs = require("./env/data.js");
var _toFormDataJs = require("./helpers/toFormData.js");
var _toFormDataJsDefault = parcelHelpers.interopDefault(_toFormDataJs);
var _axiosErrorJs = require("./core/AxiosError.js");
var _axiosErrorJsDefault = parcelHelpers.interopDefault(_axiosErrorJs);
var _spreadJs = require("./helpers/spread.js");
var _spreadJsDefault = parcelHelpers.interopDefault(_spreadJs);
var _isAxiosErrorJs = require("./helpers/isAxiosError.js");
var _isAxiosErrorJsDefault = parcelHelpers.interopDefault(_isAxiosErrorJs);
var _axiosHeadersJs = require("./core/AxiosHeaders.js");
var _axiosHeadersJsDefault = parcelHelpers.interopDefault(_axiosHeadersJs);
var _adaptersJs = require("./adapters/adapters.js");
var _adaptersJsDefault = parcelHelpers.interopDefault(_adaptersJs);
var _httpStatusCodeJs = require("./helpers/HttpStatusCode.js");
var _httpStatusCodeJsDefault = parcelHelpers.interopDefault(_httpStatusCodeJs);
'use strict';
/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 *
 * @returns {Axios} A new instance of Axios
 */ function createInstance(defaultConfig) {
    const context = new (0, _axiosJsDefault.default)(defaultConfig);
    const instance = (0, _bindJsDefault.default)((0, _axiosJsDefault.default).prototype.request, context);
    // Copy axios.prototype to instance
    (0, _utilsJsDefault.default).extend(instance, (0, _axiosJsDefault.default).prototype, context, {
        allOwnKeys: true
    });
    // Copy context to instance
    (0, _utilsJsDefault.default).extend(instance, context, null, {
        allOwnKeys: true
    });
    // Factory for creating new instances
    instance.create = function create(instanceConfig) {
        return createInstance((0, _mergeConfigJsDefault.default)(defaultConfig, instanceConfig));
    };
    return instance;
}
// Create the default instance to be exported
const axios = createInstance((0, _indexJsDefault.default));
// Expose Axios class to allow class inheritance
axios.Axios = (0, _axiosJsDefault.default);
// Expose Cancel & CancelToken
axios.CanceledError = (0, _canceledErrorJsDefault.default);
axios.CancelToken = (0, _cancelTokenJsDefault.default);
axios.isCancel = (0, _isCancelJsDefault.default);
axios.VERSION = (0, _dataJs.VERSION);
axios.toFormData = (0, _toFormDataJsDefault.default);
// Expose AxiosError class
axios.AxiosError = (0, _axiosErrorJsDefault.default);
// alias for CanceledError for backward compatibility
axios.Cancel = axios.CanceledError;
// Expose all/spread
axios.all = function all(promises) {
    return Promise.all(promises);
};
axios.spread = (0, _spreadJsDefault.default);
// Expose isAxiosError
axios.isAxiosError = (0, _isAxiosErrorJsDefault.default);
// Expose mergeConfig
axios.mergeConfig = (0, _mergeConfigJsDefault.default);
axios.AxiosHeaders = (0, _axiosHeadersJsDefault.default);
axios.formToJSON = (thing)=>(0, _formDataToJSONJsDefault.default)((0, _utilsJsDefault.default).isHTMLForm(thing) ? new FormData(thing) : thing);
axios.getAdapter = (0, _adaptersJsDefault.default).getAdapter;
axios.HttpStatusCode = (0, _httpStatusCodeJsDefault.default);
axios.default = axios;
// this module should only have a default export
exports.default = axios;

},{"./utils.js":"jI6DP","./helpers/bind.js":"bgexy","./core/Axios.js":"cBDUi","./core/mergeConfig.js":"311Mu","./defaults/index.js":"9WXKx","./helpers/formDataToJSON.js":"fefHq","./cancel/CanceledError.js":"9yG1c","./cancel/CancelToken.js":"kSqbX","./cancel/isCancel.js":"fkTUi","./env/data.js":"9SLyZ","./helpers/toFormData.js":"2RXm4","./core/AxiosError.js":"7z85x","./helpers/spread.js":"i5yWF","./helpers/isAxiosError.js":"2FN3e","./core/AxiosHeaders.js":"9EzTj","./adapters/adapters.js":"hI0HS","./helpers/HttpStatusCode.js":"7tr76","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jI6DP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _bindJs = require("./helpers/bind.js");
var _bindJsDefault = parcelHelpers.interopDefault(_bindJs);
var global = arguments[3];
'use strict';
// utils is a library of generic helper functions non-specific to axios
const { toString } = Object.prototype;
const { getPrototypeOf } = Object;
const kindOf = ((cache)=>(thing)=>{
        const str = toString.call(thing);
        return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
    })(Object.create(null));
const kindOfTest = (type)=>{
    type = type.toLowerCase();
    return (thing)=>kindOf(thing) === type;
};
const typeOfTest = (type)=>(thing)=>typeof thing === type;
/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 *
 * @returns {boolean} True if value is an Array, otherwise false
 */ const { isArray } = Array;
/**
 * Determine if a value is undefined
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if the value is undefined, otherwise false
 */ const isUndefined = typeOfTest('undefined');
/**
 * Determine if a value is a Buffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Buffer, otherwise false
 */ function isBuffer(val) {
    return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);
}
/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */ const isArrayBuffer = kindOfTest('ArrayBuffer');
/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */ function isArrayBufferView(val) {
    let result;
    if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) result = ArrayBuffer.isView(val);
    else result = val && val.buffer && isArrayBuffer(val.buffer);
    return result;
}
/**
 * Determine if a value is a String
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a String, otherwise false
 */ const isString = typeOfTest('string');
/**
 * Determine if a value is a Function
 *
 * @param {*} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */ const isFunction = typeOfTest('function');
/**
 * Determine if a value is a Number
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Number, otherwise false
 */ const isNumber = typeOfTest('number');
/**
 * Determine if a value is an Object
 *
 * @param {*} thing The value to test
 *
 * @returns {boolean} True if value is an Object, otherwise false
 */ const isObject = (thing)=>thing !== null && typeof thing === 'object';
/**
 * Determine if a value is a Boolean
 *
 * @param {*} thing The value to test
 * @returns {boolean} True if value is a Boolean, otherwise false
 */ const isBoolean = (thing)=>thing === true || thing === false;
/**
 * Determine if a value is a plain Object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a plain Object, otherwise false
 */ const isPlainObject = (val)=>{
    if (kindOf(val) !== 'object') return false;
    const prototype = getPrototypeOf(val);
    return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);
};
/**
 * Determine if a value is a Date
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Date, otherwise false
 */ const isDate = kindOfTest('Date');
/**
 * Determine if a value is a File
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a File, otherwise false
 */ const isFile = kindOfTest('File');
/**
 * Determine if a value is a Blob
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Blob, otherwise false
 */ const isBlob = kindOfTest('Blob');
/**
 * Determine if a value is a FileList
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a File, otherwise false
 */ const isFileList = kindOfTest('FileList');
/**
 * Determine if a value is a Stream
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Stream, otherwise false
 */ const isStream = (val)=>isObject(val) && isFunction(val.pipe);
/**
 * Determine if a value is a FormData
 *
 * @param {*} thing The value to test
 *
 * @returns {boolean} True if value is an FormData, otherwise false
 */ const isFormData = (thing)=>{
    let kind;
    return thing && (typeof FormData === 'function' && thing instanceof FormData || isFunction(thing.append) && ((kind = kindOf(thing)) === 'formdata' || // detect form-data instance
    kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]'));
};
/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */ const isURLSearchParams = kindOfTest('URLSearchParams');
const [isReadableStream, isRequest, isResponse, isHeaders] = [
    'ReadableStream',
    'Request',
    'Response',
    'Headers'
].map(kindOfTest);
/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 *
 * @returns {String} The String freed of excess whitespace
 */ const trim = (str)=>str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 *
 * @param {Boolean} [allOwnKeys = false]
 * @returns {any}
 */ function forEach(obj, fn, { allOwnKeys = false } = {}) {
    // Don't bother if no value provided
    if (obj === null || typeof obj === 'undefined') return;
    let i;
    let l;
    // Force an array if not already something iterable
    if (typeof obj !== 'object') /*eslint no-param-reassign:0*/ obj = [
        obj
    ];
    if (isArray(obj)) // Iterate over array values
    for(i = 0, l = obj.length; i < l; i++)fn.call(null, obj[i], i, obj);
    else {
        // Iterate over object keys
        const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
        const len = keys.length;
        let key;
        for(i = 0; i < len; i++){
            key = keys[i];
            fn.call(null, obj[key], key, obj);
        }
    }
}
function findKey(obj, key) {
    key = key.toLowerCase();
    const keys = Object.keys(obj);
    let i = keys.length;
    let _key;
    while(i-- > 0){
        _key = keys[i];
        if (key === _key.toLowerCase()) return _key;
    }
    return null;
}
const _global = (()=>{
    /*eslint no-undef:0*/ if (typeof globalThis !== "undefined") return globalThis;
    return typeof self !== "undefined" ? self : typeof window !== 'undefined' ? window : global;
})();
const isContextDefined = (context)=>!isUndefined(context) && context !== _global;
/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 *
 * @returns {Object} Result of all merge properties
 */ function merge() {
    const { caseless } = isContextDefined(this) && this || {};
    const result = {};
    const assignValue = (val, key)=>{
        const targetKey = caseless && findKey(result, key) || key;
        if (isPlainObject(result[targetKey]) && isPlainObject(val)) result[targetKey] = merge(result[targetKey], val);
        else if (isPlainObject(val)) result[targetKey] = merge({}, val);
        else if (isArray(val)) result[targetKey] = val.slice();
        else result[targetKey] = val;
    };
    for(let i = 0, l = arguments.length; i < l; i++)arguments[i] && forEach(arguments[i], assignValue);
    return result;
}
/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 *
 * @param {Boolean} [allOwnKeys]
 * @returns {Object} The resulting value of object a
 */ const extend = (a, b, thisArg, { allOwnKeys } = {})=>{
    forEach(b, (val, key)=>{
        if (thisArg && isFunction(val)) a[key] = (0, _bindJsDefault.default)(val, thisArg);
        else a[key] = val;
    }, {
        allOwnKeys
    });
    return a;
};
/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 *
 * @returns {string} content value without BOM
 */ const stripBOM = (content)=>{
    if (content.charCodeAt(0) === 0xFEFF) content = content.slice(1);
    return content;
};
/**
 * Inherit the prototype methods from one constructor into another
 * @param {function} constructor
 * @param {function} superConstructor
 * @param {object} [props]
 * @param {object} [descriptors]
 *
 * @returns {void}
 */ const inherits = (constructor, superConstructor, props, descriptors)=>{
    constructor.prototype = Object.create(superConstructor.prototype, descriptors);
    constructor.prototype.constructor = constructor;
    Object.defineProperty(constructor, 'super', {
        value: superConstructor.prototype
    });
    props && Object.assign(constructor.prototype, props);
};
/**
 * Resolve object with deep prototype chain to a flat object
 * @param {Object} sourceObj source object
 * @param {Object} [destObj]
 * @param {Function|Boolean} [filter]
 * @param {Function} [propFilter]
 *
 * @returns {Object}
 */ const toFlatObject = (sourceObj, destObj, filter, propFilter)=>{
    let props;
    let i;
    let prop;
    const merged = {};
    destObj = destObj || {};
    // eslint-disable-next-line no-eq-null,eqeqeq
    if (sourceObj == null) return destObj;
    do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while(i-- > 0){
            prop = props[i];
            if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
                destObj[prop] = sourceObj[prop];
                merged[prop] = true;
            }
        }
        sourceObj = filter !== false && getPrototypeOf(sourceObj);
    }while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
    return destObj;
};
/**
 * Determines whether a string ends with the characters of a specified string
 *
 * @param {String} str
 * @param {String} searchString
 * @param {Number} [position= 0]
 *
 * @returns {boolean}
 */ const endsWith = (str, searchString, position)=>{
    str = String(str);
    if (position === undefined || position > str.length) position = str.length;
    position -= searchString.length;
    const lastIndex = str.indexOf(searchString, position);
    return lastIndex !== -1 && lastIndex === position;
};
/**
 * Returns new array from array like object or null if failed
 *
 * @param {*} [thing]
 *
 * @returns {?Array}
 */ const toArray = (thing)=>{
    if (!thing) return null;
    if (isArray(thing)) return thing;
    let i = thing.length;
    if (!isNumber(i)) return null;
    const arr = new Array(i);
    while(i-- > 0)arr[i] = thing[i];
    return arr;
};
/**
 * Checking if the Uint8Array exists and if it does, it returns a function that checks if the
 * thing passed in is an instance of Uint8Array
 *
 * @param {TypedArray}
 *
 * @returns {Array}
 */ // eslint-disable-next-line func-names
const isTypedArray = ((TypedArray)=>{
    // eslint-disable-next-line func-names
    return (thing)=>{
        return TypedArray && thing instanceof TypedArray;
    };
})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));
/**
 * For each entry in the object, call the function with the key and value.
 *
 * @param {Object<any, any>} obj - The object to iterate over.
 * @param {Function} fn - The function to call for each entry.
 *
 * @returns {void}
 */ const forEachEntry = (obj, fn)=>{
    const generator = obj && obj[Symbol.iterator];
    const iterator = generator.call(obj);
    let result;
    while((result = iterator.next()) && !result.done){
        const pair = result.value;
        fn.call(obj, pair[0], pair[1]);
    }
};
/**
 * It takes a regular expression and a string, and returns an array of all the matches
 *
 * @param {string} regExp - The regular expression to match against.
 * @param {string} str - The string to search.
 *
 * @returns {Array<boolean>}
 */ const matchAll = (regExp, str)=>{
    let matches;
    const arr = [];
    while((matches = regExp.exec(str)) !== null)arr.push(matches);
    return arr;
};
/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */ const isHTMLForm = kindOfTest('HTMLFormElement');
const toCamelCase = (str)=>{
    return str.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function replacer(m, p1, p2) {
        return p1.toUpperCase() + p2;
    });
};
/* Creating a function that will check if an object has a property. */ const hasOwnProperty = (({ hasOwnProperty })=>(obj, prop)=>hasOwnProperty.call(obj, prop))(Object.prototype);
/**
 * Determine if a value is a RegExp object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a RegExp object, otherwise false
 */ const isRegExp = kindOfTest('RegExp');
const reduceDescriptors = (obj, reducer)=>{
    const descriptors = Object.getOwnPropertyDescriptors(obj);
    const reducedDescriptors = {};
    forEach(descriptors, (descriptor, name)=>{
        let ret;
        if ((ret = reducer(descriptor, name, obj)) !== false) reducedDescriptors[name] = ret || descriptor;
    });
    Object.defineProperties(obj, reducedDescriptors);
};
/**
 * Makes all methods read-only
 * @param {Object} obj
 */ const freezeMethods = (obj)=>{
    reduceDescriptors(obj, (descriptor, name)=>{
        // skip restricted props in strict mode
        if (isFunction(obj) && [
            'arguments',
            'caller',
            'callee'
        ].indexOf(name) !== -1) return false;
        const value = obj[name];
        if (!isFunction(value)) return;
        descriptor.enumerable = false;
        if ('writable' in descriptor) {
            descriptor.writable = false;
            return;
        }
        if (!descriptor.set) descriptor.set = ()=>{
            throw Error('Can not rewrite read-only method \'' + name + '\'');
        };
    });
};
const toObjectSet = (arrayOrString, delimiter)=>{
    const obj = {};
    const define = (arr)=>{
        arr.forEach((value)=>{
            obj[value] = true;
        });
    };
    isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));
    return obj;
};
const noop = ()=>{};
const toFiniteNumber = (value, defaultValue)=>{
    return value != null && Number.isFinite(value = +value) ? value : defaultValue;
};
/**
 * If the thing is a FormData object, return true, otherwise return false.
 *
 * @param {unknown} thing - The thing to check.
 *
 * @returns {boolean}
 */ function isSpecCompliantForm(thing) {
    return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);
}
const toJSONObject = (obj)=>{
    const stack = new Array(10);
    const visit = (source, i)=>{
        if (isObject(source)) {
            if (stack.indexOf(source) >= 0) return;
            if (!('toJSON' in source)) {
                stack[i] = source;
                const target = isArray(source) ? [] : {};
                forEach(source, (value, key)=>{
                    const reducedValue = visit(value, i + 1);
                    !isUndefined(reducedValue) && (target[key] = reducedValue);
                });
                stack[i] = undefined;
                return target;
            }
        }
        return source;
    };
    return visit(obj, 0);
};
const isAsyncFn = kindOfTest('AsyncFunction');
const isThenable = (thing)=>thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);
// original code
// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34
const _setImmediate = ((setImmediateSupported, postMessageSupported)=>{
    if (setImmediateSupported) return setImmediate;
    return postMessageSupported ? ((token, callbacks)=>{
        _global.addEventListener("message", ({ source, data })=>{
            if (source === _global && data === token) callbacks.length && callbacks.shift()();
        }, false);
        return (cb)=>{
            callbacks.push(cb);
            _global.postMessage(token, "*");
        };
    })(`axios@${Math.random()}`, []) : (cb)=>setTimeout(cb);
})(typeof setImmediate === 'function', isFunction(_global.postMessage));
const asap = typeof queueMicrotask !== 'undefined' ? queueMicrotask.bind(_global) : _setImmediate;
// *********************
exports.default = {
    isArray,
    isArrayBuffer,
    isBuffer,
    isFormData,
    isArrayBufferView,
    isString,
    isNumber,
    isBoolean,
    isObject,
    isPlainObject,
    isReadableStream,
    isRequest,
    isResponse,
    isHeaders,
    isUndefined,
    isDate,
    isFile,
    isBlob,
    isRegExp,
    isFunction,
    isStream,
    isURLSearchParams,
    isTypedArray,
    isFileList,
    forEach,
    merge,
    extend,
    trim,
    stripBOM,
    inherits,
    toFlatObject,
    kindOf,
    kindOfTest,
    endsWith,
    toArray,
    forEachEntry,
    matchAll,
    isHTMLForm,
    hasOwnProperty,
    hasOwnProp: hasOwnProperty,
    reduceDescriptors,
    freezeMethods,
    toObjectSet,
    toCamelCase,
    noop,
    toFiniteNumber,
    findKey,
    global: _global,
    isContextDefined,
    isSpecCompliantForm,
    toJSONObject,
    isAsyncFn,
    isThenable,
    setImmediate: _setImmediate,
    asap
};

},{"./helpers/bind.js":"bgexy","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bgexy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>bind);
'use strict';
function bind(fn, thisArg) {
    return function wrap() {
        return fn.apply(thisArg, arguments);
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cBDUi":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("./../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _buildURLJs = require("../helpers/buildURL.js");
var _buildURLJsDefault = parcelHelpers.interopDefault(_buildURLJs);
var _interceptorManagerJs = require("./InterceptorManager.js");
var _interceptorManagerJsDefault = parcelHelpers.interopDefault(_interceptorManagerJs);
var _dispatchRequestJs = require("./dispatchRequest.js");
var _dispatchRequestJsDefault = parcelHelpers.interopDefault(_dispatchRequestJs);
var _mergeConfigJs = require("./mergeConfig.js");
var _mergeConfigJsDefault = parcelHelpers.interopDefault(_mergeConfigJs);
var _buildFullPathJs = require("./buildFullPath.js");
var _buildFullPathJsDefault = parcelHelpers.interopDefault(_buildFullPathJs);
var _validatorJs = require("../helpers/validator.js");
var _validatorJsDefault = parcelHelpers.interopDefault(_validatorJs);
var _axiosHeadersJs = require("./AxiosHeaders.js");
var _axiosHeadersJsDefault = parcelHelpers.interopDefault(_axiosHeadersJs);
'use strict';
const validators = (0, _validatorJsDefault.default).validators;
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 *
 * @return {Axios} A new instance of Axios
 */ class Axios {
    constructor(instanceConfig){
        this.defaults = instanceConfig;
        this.interceptors = {
            request: new (0, _interceptorManagerJsDefault.default)(),
            response: new (0, _interceptorManagerJsDefault.default)()
        };
    }
    /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */ async request(configOrUrl, config) {
        try {
            return await this._request(configOrUrl, config);
        } catch (err) {
            if (err instanceof Error) {
                let dummy = {};
                Error.captureStackTrace ? Error.captureStackTrace(dummy) : dummy = new Error();
                // slice off the Error: ... line
                const stack = dummy.stack ? dummy.stack.replace(/^.+\n/, '') : '';
                try {
                    if (!err.stack) err.stack = stack;
                    else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ''))) err.stack += '\n' + stack;
                } catch (e) {
                // ignore the case where "stack" is an un-writable property
                }
            }
            throw err;
        }
    }
    _request(configOrUrl, config) {
        /*eslint no-param-reassign:0*/ // Allow for axios('example/url'[, config]) a la fetch API
        if (typeof configOrUrl === 'string') {
            config = config || {};
            config.url = configOrUrl;
        } else config = configOrUrl || {};
        config = (0, _mergeConfigJsDefault.default)(this.defaults, config);
        const { transitional, paramsSerializer, headers } = config;
        if (transitional !== undefined) (0, _validatorJsDefault.default).assertOptions(transitional, {
            silentJSONParsing: validators.transitional(validators.boolean),
            forcedJSONParsing: validators.transitional(validators.boolean),
            clarifyTimeoutError: validators.transitional(validators.boolean)
        }, false);
        if (paramsSerializer != null) {
            if ((0, _utilsJsDefault.default).isFunction(paramsSerializer)) config.paramsSerializer = {
                serialize: paramsSerializer
            };
            else (0, _validatorJsDefault.default).assertOptions(paramsSerializer, {
                encode: validators.function,
                serialize: validators.function
            }, true);
        }
        // Set config.allowAbsoluteUrls
        if (config.allowAbsoluteUrls !== undefined) ;
        else if (this.defaults.allowAbsoluteUrls !== undefined) config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;
        else config.allowAbsoluteUrls = true;
        (0, _validatorJsDefault.default).assertOptions(config, {
            baseUrl: validators.spelling('baseURL'),
            withXsrfToken: validators.spelling('withXSRFToken')
        }, true);
        // Set config.method
        config.method = (config.method || this.defaults.method || 'get').toLowerCase();
        // Flatten headers
        let contextHeaders = headers && (0, _utilsJsDefault.default).merge(headers.common, headers[config.method]);
        headers && (0, _utilsJsDefault.default).forEach([
            'delete',
            'get',
            'head',
            'post',
            'put',
            'patch',
            'common'
        ], (method)=>{
            delete headers[method];
        });
        config.headers = (0, _axiosHeadersJsDefault.default).concat(contextHeaders, headers);
        // filter out skipped interceptors
        const requestInterceptorChain = [];
        let synchronousRequestInterceptors = true;
        this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
            if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) return;
            synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
            requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
        });
        const responseInterceptorChain = [];
        this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
            responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
        });
        let promise;
        let i = 0;
        let len;
        if (!synchronousRequestInterceptors) {
            const chain = [
                (0, _dispatchRequestJsDefault.default).bind(this),
                undefined
            ];
            chain.unshift.apply(chain, requestInterceptorChain);
            chain.push.apply(chain, responseInterceptorChain);
            len = chain.length;
            promise = Promise.resolve(config);
            while(i < len)promise = promise.then(chain[i++], chain[i++]);
            return promise;
        }
        len = requestInterceptorChain.length;
        let newConfig = config;
        i = 0;
        while(i < len){
            const onFulfilled = requestInterceptorChain[i++];
            const onRejected = requestInterceptorChain[i++];
            try {
                newConfig = onFulfilled(newConfig);
            } catch (error) {
                onRejected.call(this, error);
                break;
            }
        }
        try {
            promise = (0, _dispatchRequestJsDefault.default).call(this, newConfig);
        } catch (error) {
            return Promise.reject(error);
        }
        i = 0;
        len = responseInterceptorChain.length;
        while(i < len)promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
        return promise;
    }
    getUri(config) {
        config = (0, _mergeConfigJsDefault.default)(this.defaults, config);
        const fullPath = (0, _buildFullPathJsDefault.default)(config.baseURL, config.url, config.allowAbsoluteUrls);
        return (0, _buildURLJsDefault.default)(fullPath, config.params, config.paramsSerializer);
    }
}
// Provide aliases for supported request methods
(0, _utilsJsDefault.default).forEach([
    'delete',
    'get',
    'head',
    'options'
], function forEachMethodNoData(method) {
    /*eslint func-names:0*/ Axios.prototype[method] = function(url, config) {
        return this.request((0, _mergeConfigJsDefault.default)(config || {}, {
            method,
            url,
            data: (config || {}).data
        }));
    };
});
(0, _utilsJsDefault.default).forEach([
    'post',
    'put',
    'patch'
], function forEachMethodWithData(method) {
    /*eslint func-names:0*/ function generateHTTPMethod(isForm) {
        return function httpMethod(url, data, config) {
            return this.request((0, _mergeConfigJsDefault.default)(config || {}, {
                method,
                headers: isForm ? {
                    'Content-Type': 'multipart/form-data'
                } : {},
                url,
                data
            }));
        };
    }
    Axios.prototype[method] = generateHTTPMethod();
    Axios.prototype[method + 'Form'] = generateHTTPMethod(true);
});
exports.default = Axios;

},{"./../utils.js":"jI6DP","../helpers/buildURL.js":"3CNaw","./InterceptorManager.js":"bt5wS","./dispatchRequest.js":"1p0aT","./mergeConfig.js":"311Mu","./buildFullPath.js":"kg0Bk","../helpers/validator.js":"9wnyh","./AxiosHeaders.js":"9EzTj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3CNaw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>buildURL);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _axiosURLSearchParamsJs = require("../helpers/AxiosURLSearchParams.js");
var _axiosURLSearchParamsJsDefault = parcelHelpers.interopDefault(_axiosURLSearchParamsJs);
'use strict';
/**
 * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their
 * URI encoded counterparts
 *
 * @param {string} val The value to be encoded.
 *
 * @returns {string} The encoded value.
 */ function encode(val) {
    return encodeURIComponent(val).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
}
function buildURL(url, params, options) {
    /*eslint no-param-reassign:0*/ if (!params) return url;
    const _encode = options && options.encode || encode;
    if ((0, _utilsJsDefault.default).isFunction(options)) options = {
        serialize: options
    };
    const serializeFn = options && options.serialize;
    let serializedParams;
    if (serializeFn) serializedParams = serializeFn(params, options);
    else serializedParams = (0, _utilsJsDefault.default).isURLSearchParams(params) ? params.toString() : new (0, _axiosURLSearchParamsJsDefault.default)(params, options).toString(_encode);
    if (serializedParams) {
        const hashmarkIndex = url.indexOf("#");
        if (hashmarkIndex !== -1) url = url.slice(0, hashmarkIndex);
        url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
    }
    return url;
}

},{"../utils.js":"jI6DP","../helpers/AxiosURLSearchParams.js":"i7MZs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i7MZs":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _toFormDataJs = require("./toFormData.js");
var _toFormDataJsDefault = parcelHelpers.interopDefault(_toFormDataJs);
'use strict';
/**
 * It encodes a string by replacing all characters that are not in the unreserved set with
 * their percent-encoded equivalents
 *
 * @param {string} str - The string to encode.
 *
 * @returns {string} The encoded string.
 */ function encode(str) {
    const charMap = {
        '!': '%21',
        "'": '%27',
        '(': '%28',
        ')': '%29',
        '~': '%7E',
        '%20': '+',
        '%00': '\x00'
    };
    return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
        return charMap[match];
    });
}
/**
 * It takes a params object and converts it to a FormData object
 *
 * @param {Object<string, any>} params - The parameters to be converted to a FormData object.
 * @param {Object<string, any>} options - The options object passed to the Axios constructor.
 *
 * @returns {void}
 */ function AxiosURLSearchParams(params, options) {
    this._pairs = [];
    params && (0, _toFormDataJsDefault.default)(params, this, options);
}
const prototype = AxiosURLSearchParams.prototype;
prototype.append = function append(name, value) {
    this._pairs.push([
        name,
        value
    ]);
};
prototype.toString = function toString(encoder) {
    const _encode = encoder ? function(value) {
        return encoder.call(this, value, encode);
    } : encode;
    return this._pairs.map(function each(pair) {
        return _encode(pair[0]) + '=' + _encode(pair[1]);
    }, '').join('&');
};
exports.default = AxiosURLSearchParams;

},{"./toFormData.js":"2RXm4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2RXm4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _axiosErrorJs = require("../core/AxiosError.js");
var _axiosErrorJsDefault = parcelHelpers.interopDefault(_axiosErrorJs);
// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored
var _formDataJs = require("../platform/node/classes/FormData.js");
var _formDataJsDefault = parcelHelpers.interopDefault(_formDataJs);
var Buffer = require("adfd9b103875c2dd").Buffer;
'use strict';
/**
 * Determines if the given thing is a array or js object.
 *
 * @param {string} thing - The object or array to be visited.
 *
 * @returns {boolean}
 */ function isVisitable(thing) {
    return (0, _utilsJsDefault.default).isPlainObject(thing) || (0, _utilsJsDefault.default).isArray(thing);
}
/**
 * It removes the brackets from the end of a string
 *
 * @param {string} key - The key of the parameter.
 *
 * @returns {string} the key without the brackets.
 */ function removeBrackets(key) {
    return (0, _utilsJsDefault.default).endsWith(key, '[]') ? key.slice(0, -2) : key;
}
/**
 * It takes a path, a key, and a boolean, and returns a string
 *
 * @param {string} path - The path to the current key.
 * @param {string} key - The key of the current object being iterated over.
 * @param {string} dots - If true, the key will be rendered with dots instead of brackets.
 *
 * @returns {string} The path to the current key.
 */ function renderKey(path, key, dots) {
    if (!path) return key;
    return path.concat(key).map(function each(token, i) {
        // eslint-disable-next-line no-param-reassign
        token = removeBrackets(token);
        return !dots && i ? '[' + token + ']' : token;
    }).join(dots ? '.' : '');
}
/**
 * If the array is an array and none of its elements are visitable, then it's a flat array.
 *
 * @param {Array<any>} arr - The array to check
 *
 * @returns {boolean}
 */ function isFlatArray(arr) {
    return (0, _utilsJsDefault.default).isArray(arr) && !arr.some(isVisitable);
}
const predicates = (0, _utilsJsDefault.default).toFlatObject((0, _utilsJsDefault.default), {}, null, function filter(prop) {
    return /^is[A-Z]/.test(prop);
});
/**
 * Convert a data object to FormData
 *
 * @param {Object} obj
 * @param {?Object} [formData]
 * @param {?Object} [options]
 * @param {Function} [options.visitor]
 * @param {Boolean} [options.metaTokens = true]
 * @param {Boolean} [options.dots = false]
 * @param {?Boolean} [options.indexes = false]
 *
 * @returns {Object}
 **/ /**
 * It converts an object into a FormData object
 *
 * @param {Object<any, any>} obj - The object to convert to form data.
 * @param {string} formData - The FormData object to append to.
 * @param {Object<string, any>} options
 *
 * @returns
 */ function toFormData(obj, formData, options) {
    if (!(0, _utilsJsDefault.default).isObject(obj)) throw new TypeError('target must be an object');
    // eslint-disable-next-line no-param-reassign
    formData = formData || new ((0, _formDataJsDefault.default) || FormData)();
    // eslint-disable-next-line no-param-reassign
    options = (0, _utilsJsDefault.default).toFlatObject(options, {
        metaTokens: true,
        dots: false,
        indexes: false
    }, false, function defined(option, source) {
        // eslint-disable-next-line no-eq-null,eqeqeq
        return !(0, _utilsJsDefault.default).isUndefined(source[option]);
    });
    const metaTokens = options.metaTokens;
    // eslint-disable-next-line no-use-before-define
    const visitor = options.visitor || defaultVisitor;
    const dots = options.dots;
    const indexes = options.indexes;
    const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;
    const useBlob = _Blob && (0, _utilsJsDefault.default).isSpecCompliantForm(formData);
    if (!(0, _utilsJsDefault.default).isFunction(visitor)) throw new TypeError('visitor must be a function');
    function convertValue(value) {
        if (value === null) return '';
        if ((0, _utilsJsDefault.default).isDate(value)) return value.toISOString();
        if (!useBlob && (0, _utilsJsDefault.default).isBlob(value)) throw new (0, _axiosErrorJsDefault.default)('Blob is not supported. Use a Buffer instead.');
        if ((0, _utilsJsDefault.default).isArrayBuffer(value) || (0, _utilsJsDefault.default).isTypedArray(value)) return useBlob && typeof Blob === 'function' ? new Blob([
            value
        ]) : Buffer.from(value);
        return value;
    }
    /**
   * Default visitor.
   *
   * @param {*} value
   * @param {String|Number} key
   * @param {Array<String|Number>} path
   * @this {FormData}
   *
   * @returns {boolean} return true to visit the each prop of the value recursively
   */ function defaultVisitor(value, key, path) {
        let arr = value;
        if (value && !path && typeof value === 'object') {
            if ((0, _utilsJsDefault.default).endsWith(key, '{}')) {
                // eslint-disable-next-line no-param-reassign
                key = metaTokens ? key : key.slice(0, -2);
                // eslint-disable-next-line no-param-reassign
                value = JSON.stringify(value);
            } else if ((0, _utilsJsDefault.default).isArray(value) && isFlatArray(value) || ((0, _utilsJsDefault.default).isFileList(value) || (0, _utilsJsDefault.default).endsWith(key, '[]')) && (arr = (0, _utilsJsDefault.default).toArray(value))) {
                // eslint-disable-next-line no-param-reassign
                key = removeBrackets(key);
                arr.forEach(function each(el, index) {
                    !((0, _utilsJsDefault.default).isUndefined(el) || el === null) && formData.append(// eslint-disable-next-line no-nested-ternary
                    indexes === true ? renderKey([
                        key
                    ], index, dots) : indexes === null ? key : key + '[]', convertValue(el));
                });
                return false;
            }
        }
        if (isVisitable(value)) return true;
        formData.append(renderKey(path, key, dots), convertValue(value));
        return false;
    }
    const stack = [];
    const exposedHelpers = Object.assign(predicates, {
        defaultVisitor,
        convertValue,
        isVisitable
    });
    function build(value, path) {
        if ((0, _utilsJsDefault.default).isUndefined(value)) return;
        if (stack.indexOf(value) !== -1) throw Error('Circular reference detected in ' + path.join('.'));
        stack.push(value);
        (0, _utilsJsDefault.default).forEach(value, function each(el, key) {
            const result = !((0, _utilsJsDefault.default).isUndefined(el) || el === null) && visitor.call(formData, el, (0, _utilsJsDefault.default).isString(key) ? key.trim() : key, path, exposedHelpers);
            if (result === true) build(el, path ? path.concat(key) : [
                key
            ]);
        });
        stack.pop();
    }
    if (!(0, _utilsJsDefault.default).isObject(obj)) throw new TypeError('data must be an object');
    build(obj);
    return formData;
}
exports.default = toFormData;

},{"adfd9b103875c2dd":"bCaf4","../utils.js":"jI6DP","../core/AxiosError.js":"7z85x","../platform/node/classes/FormData.js":"dVGJ4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bCaf4":[function(require,module,exports,__globalThis) {
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */ /* eslint-disable no-proto */ 'use strict';
const base64 = require("9c62938f1dccc73c");
const ieee754 = require("aceacb6a4531a9d2");
const customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation
 ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
 : null;
exports.Buffer = Buffer;
exports.SlowBuffer = SlowBuffer;
exports.INSPECT_MAX_BYTES = 50;
const K_MAX_LENGTH = 0x7fffffff;
exports.kMaxLength = K_MAX_LENGTH;
/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */ Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();
if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
function typedArraySupport() {
    // Can typed array instances can be augmented?
    try {
        const arr = new Uint8Array(1);
        const proto = {
            foo: function() {
                return 42;
            }
        };
        Object.setPrototypeOf(proto, Uint8Array.prototype);
        Object.setPrototypeOf(arr, proto);
        return arr.foo() === 42;
    } catch (e) {
        return false;
    }
}
Object.defineProperty(Buffer.prototype, 'parent', {
    enumerable: true,
    get: function() {
        if (!Buffer.isBuffer(this)) return undefined;
        return this.buffer;
    }
});
Object.defineProperty(Buffer.prototype, 'offset', {
    enumerable: true,
    get: function() {
        if (!Buffer.isBuffer(this)) return undefined;
        return this.byteOffset;
    }
});
function createBuffer(length) {
    if (length > K_MAX_LENGTH) throw new RangeError('The value "' + length + '" is invalid for option "size"');
    // Return an augmented `Uint8Array` instance
    const buf = new Uint8Array(length);
    Object.setPrototypeOf(buf, Buffer.prototype);
    return buf;
}
/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */ function Buffer(arg, encodingOrOffset, length) {
    // Common case.
    if (typeof arg === 'number') {
        if (typeof encodingOrOffset === 'string') throw new TypeError('The "string" argument must be of type string. Received type number');
        return allocUnsafe(arg);
    }
    return from(arg, encodingOrOffset, length);
}
Buffer.poolSize = 8192 // not used by this implementation
;
function from(value, encodingOrOffset, length) {
    if (typeof value === 'string') return fromString(value, encodingOrOffset);
    if (ArrayBuffer.isView(value)) return fromArrayView(value);
    if (value == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) return fromArrayBuffer(value, encodingOrOffset, length);
    if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) return fromArrayBuffer(value, encodingOrOffset, length);
    if (typeof value === 'number') throw new TypeError('The "value" argument must not be of type number. Received type number');
    const valueOf = value.valueOf && value.valueOf();
    if (valueOf != null && valueOf !== value) return Buffer.from(valueOf, encodingOrOffset, length);
    const b = fromObject(value);
    if (b) return b;
    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);
    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
}
/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/ Buffer.from = function(value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
};
// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);
Object.setPrototypeOf(Buffer, Uint8Array);
function assertSize(size) {
    if (typeof size !== 'number') throw new TypeError('"size" argument must be of type number');
    else if (size < 0) throw new RangeError('The value "' + size + '" is invalid for option "size"');
}
function alloc(size, fill, encoding) {
    assertSize(size);
    if (size <= 0) return createBuffer(size);
    if (fill !== undefined) // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    return createBuffer(size);
}
/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/ Buffer.alloc = function(size, fill, encoding) {
    return alloc(size, fill, encoding);
};
function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
}
/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */ Buffer.allocUnsafe = function(size) {
    return allocUnsafe(size);
};
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */ Buffer.allocUnsafeSlow = function(size) {
    return allocUnsafe(size);
};
function fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8';
    if (!Buffer.isEncoding(encoding)) throw new TypeError('Unknown encoding: ' + encoding);
    const length = byteLength(string, encoding) | 0;
    let buf = createBuffer(length);
    const actual = buf.write(string, encoding);
    if (actual !== length) // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual);
    return buf;
}
function fromArrayLike(array) {
    const length = array.length < 0 ? 0 : checked(array.length) | 0;
    const buf = createBuffer(length);
    for(let i = 0; i < length; i += 1)buf[i] = array[i] & 255;
    return buf;
}
function fromArrayView(arrayView) {
    if (isInstance(arrayView, Uint8Array)) {
        const copy = new Uint8Array(arrayView);
        return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
    }
    return fromArrayLike(arrayView);
}
function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError('"offset" is outside of buffer bounds');
    if (array.byteLength < byteOffset + (length || 0)) throw new RangeError('"length" is outside of buffer bounds');
    let buf;
    if (byteOffset === undefined && length === undefined) buf = new Uint8Array(array);
    else if (length === undefined) buf = new Uint8Array(array, byteOffset);
    else buf = new Uint8Array(array, byteOffset, length);
    // Return an augmented `Uint8Array` instance
    Object.setPrototypeOf(buf, Buffer.prototype);
    return buf;
}
function fromObject(obj) {
    if (Buffer.isBuffer(obj)) {
        const len = checked(obj.length) | 0;
        const buf = createBuffer(len);
        if (buf.length === 0) return buf;
        obj.copy(buf, 0, 0, len);
        return buf;
    }
    if (obj.length !== undefined) {
        if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) return createBuffer(0);
        return fromArrayLike(obj);
    }
    if (obj.type === 'Buffer' && Array.isArray(obj.data)) return fromArrayLike(obj.data);
}
function checked(length) {
    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
    // length is NaN (which is otherwise coerced to zero.)
    if (length >= K_MAX_LENGTH) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + ' bytes');
    return length | 0;
}
function SlowBuffer(length) {
    if (+length != length) length = 0;
    return Buffer.alloc(+length);
}
Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
    ;
};
Buffer.compare = function compare(a, b) {
    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);
    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    if (a === b) return 0;
    let x = a.length;
    let y = b.length;
    for(let i = 0, len = Math.min(x, y); i < len; ++i)if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
    }
    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
};
Buffer.isEncoding = function isEncoding(encoding) {
    switch(String(encoding).toLowerCase()){
        case 'hex':
        case 'utf8':
        case 'utf-8':
        case 'ascii':
        case 'latin1':
        case 'binary':
        case 'base64':
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return true;
        default:
            return false;
    }
};
Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) throw new TypeError('"list" argument must be an Array of Buffers');
    if (list.length === 0) return Buffer.alloc(0);
    let i;
    if (length === undefined) {
        length = 0;
        for(i = 0; i < list.length; ++i)length += list[i].length;
    }
    const buffer = Buffer.allocUnsafe(length);
    let pos = 0;
    for(i = 0; i < list.length; ++i){
        let buf = list[i];
        if (isInstance(buf, Uint8Array)) {
            if (pos + buf.length > buffer.length) {
                if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);
                buf.copy(buffer, pos);
            } else Uint8Array.prototype.set.call(buffer, buf, pos);
        } else if (!Buffer.isBuffer(buf)) throw new TypeError('"list" argument must be an Array of Buffers');
        else buf.copy(buffer, pos);
        pos += buf.length;
    }
    return buffer;
};
function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) return string.length;
    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) return string.byteLength;
    if (typeof string !== 'string') throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);
    const len = string.length;
    const mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;
    // Use a for loop to avoid recursion
    let loweredCase = false;
    for(;;)switch(encoding){
        case 'ascii':
        case 'latin1':
        case 'binary':
            return len;
        case 'utf8':
        case 'utf-8':
            return utf8ToBytes(string).length;
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return len * 2;
        case 'hex':
            return len >>> 1;
        case 'base64':
            return base64ToBytes(string).length;
        default:
            if (loweredCase) return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
            ;
            encoding = ('' + encoding).toLowerCase();
            loweredCase = true;
    }
}
Buffer.byteLength = byteLength;
function slowToString(encoding, start, end) {
    let loweredCase = false;
    // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
    // property of a typed array.
    // This behaves neither like String nor Uint8Array in that we set start/end
    // to their upper/lower bounds if the value passed is out of range.
    // undefined is handled specially as per ECMA-262 6th Edition,
    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
    if (start === undefined || start < 0) start = 0;
    // Return early if start > this.length. Done here to prevent potential uint32
    // coercion fail below.
    if (start > this.length) return '';
    if (end === undefined || end > this.length) end = this.length;
    if (end <= 0) return '';
    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
    end >>>= 0;
    start >>>= 0;
    if (end <= start) return '';
    if (!encoding) encoding = 'utf8';
    while(true)switch(encoding){
        case 'hex':
            return hexSlice(this, start, end);
        case 'utf8':
        case 'utf-8':
            return utf8Slice(this, start, end);
        case 'ascii':
            return asciiSlice(this, start, end);
        case 'latin1':
        case 'binary':
            return latin1Slice(this, start, end);
        case 'base64':
            return base64Slice(this, start, end);
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return utf16leSlice(this, start, end);
        default:
            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
            encoding = (encoding + '').toLowerCase();
            loweredCase = true;
    }
}
// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true;
function swap(b, n, m) {
    const i = b[n];
    b[n] = b[m];
    b[m] = i;
}
Buffer.prototype.swap16 = function swap16() {
    const len = this.length;
    if (len % 2 !== 0) throw new RangeError('Buffer size must be a multiple of 16-bits');
    for(let i = 0; i < len; i += 2)swap(this, i, i + 1);
    return this;
};
Buffer.prototype.swap32 = function swap32() {
    const len = this.length;
    if (len % 4 !== 0) throw new RangeError('Buffer size must be a multiple of 32-bits');
    for(let i = 0; i < len; i += 4){
        swap(this, i, i + 3);
        swap(this, i + 1, i + 2);
    }
    return this;
};
Buffer.prototype.swap64 = function swap64() {
    const len = this.length;
    if (len % 8 !== 0) throw new RangeError('Buffer size must be a multiple of 64-bits');
    for(let i = 0; i < len; i += 8){
        swap(this, i, i + 7);
        swap(this, i + 1, i + 6);
        swap(this, i + 2, i + 5);
        swap(this, i + 3, i + 4);
    }
    return this;
};
Buffer.prototype.toString = function toString() {
    const length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
};
Buffer.prototype.toLocaleString = Buffer.prototype.toString;
Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return Buffer.compare(this, b) === 0;
};
Buffer.prototype.inspect = function inspect() {
    let str = '';
    const max = exports.INSPECT_MAX_BYTES;
    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
    if (this.length > max) str += ' ... ';
    return '<Buffer ' + str + '>';
};
if (customInspectSymbol) Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;
Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) target = Buffer.from(target, target.offset, target.byteLength);
    if (!Buffer.isBuffer(target)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);
    if (start === undefined) start = 0;
    if (end === undefined) end = target ? target.length : 0;
    if (thisStart === undefined) thisStart = 0;
    if (thisEnd === undefined) thisEnd = this.length;
    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError('out of range index');
    if (thisStart >= thisEnd && start >= end) return 0;
    if (thisStart >= thisEnd) return -1;
    if (start >= end) return 1;
    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) return 0;
    let x = thisEnd - thisStart;
    let y = end - start;
    const len = Math.min(x, y);
    const thisCopy = this.slice(thisStart, thisEnd);
    const targetCopy = target.slice(start, end);
    for(let i = 0; i < len; ++i)if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
    }
    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
};
// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    // Empty buffer means no match
    if (buffer.length === 0) return -1;
    // Normalize byteOffset
    if (typeof byteOffset === 'string') {
        encoding = byteOffset;
        byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff;
    else if (byteOffset < -2147483648) byteOffset = -2147483648;
    byteOffset = +byteOffset // Coerce to Number.
    ;
    if (numberIsNaN(byteOffset)) // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : buffer.length - 1;
    // Normalize byteOffset: negative offsets start from the end of the buffer
    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
    if (byteOffset >= buffer.length) {
        if (dir) return -1;
        else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
        if (dir) byteOffset = 0;
        else return -1;
    }
    // Normalize val
    if (typeof val === 'string') val = Buffer.from(val, encoding);
    // Finally, search either indexOf (if dir is true) or lastIndexOf
    if (Buffer.isBuffer(val)) {
        // Special case: looking for empty string/buffer always fails
        if (val.length === 0) return -1;
        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
        val = val & 0xFF // Search for a byte value [0-255]
        ;
        if (typeof Uint8Array.prototype.indexOf === 'function') {
            if (dir) return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
            else return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
        return arrayIndexOf(buffer, [
            val
        ], byteOffset, encoding, dir);
    }
    throw new TypeError('val must be string, number or Buffer');
}
function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    let indexSize = 1;
    let arrLength = arr.length;
    let valLength = val.length;
    if (encoding !== undefined) {
        encoding = String(encoding).toLowerCase();
        if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
            if (arr.length < 2 || val.length < 2) return -1;
            indexSize = 2;
            arrLength /= 2;
            valLength /= 2;
            byteOffset /= 2;
        }
    }
    function read(buf, i) {
        if (indexSize === 1) return buf[i];
        else return buf.readUInt16BE(i * indexSize);
    }
    let i;
    if (dir) {
        let foundIndex = -1;
        for(i = byteOffset; i < arrLength; i++)if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
            if (foundIndex === -1) foundIndex = i;
            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
            if (foundIndex !== -1) i -= i - foundIndex;
            foundIndex = -1;
        }
    } else {
        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
        for(i = byteOffset; i >= 0; i--){
            let found = true;
            for(let j = 0; j < valLength; j++)if (read(arr, i + j) !== read(val, j)) {
                found = false;
                break;
            }
            if (found) return i;
        }
    }
    return -1;
}
Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
};
Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
};
Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
};
function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    const remaining = buf.length - offset;
    if (!length) length = remaining;
    else {
        length = Number(length);
        if (length > remaining) length = remaining;
    }
    const strLen = string.length;
    if (length > strLen / 2) length = strLen / 2;
    let i;
    for(i = 0; i < length; ++i){
        const parsed = parseInt(string.substr(i * 2, 2), 16);
        if (numberIsNaN(parsed)) return i;
        buf[offset + i] = parsed;
    }
    return i;
}
function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
}
function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
}
function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
}
function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
}
Buffer.prototype.write = function write(string, offset, length, encoding) {
    // Buffer#write(string)
    if (offset === undefined) {
        encoding = 'utf8';
        length = this.length;
        offset = 0;
    // Buffer#write(string, encoding)
    } else if (length === undefined && typeof offset === 'string') {
        encoding = offset;
        length = this.length;
        offset = 0;
    // Buffer#write(string, offset[, length][, encoding])
    } else if (isFinite(offset)) {
        offset = offset >>> 0;
        if (isFinite(length)) {
            length = length >>> 0;
            if (encoding === undefined) encoding = 'utf8';
        } else {
            encoding = length;
            length = undefined;
        }
    } else throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    const remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;
    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError('Attempt to write outside buffer bounds');
    if (!encoding) encoding = 'utf8';
    let loweredCase = false;
    for(;;)switch(encoding){
        case 'hex':
            return hexWrite(this, string, offset, length);
        case 'utf8':
        case 'utf-8':
            return utf8Write(this, string, offset, length);
        case 'ascii':
        case 'latin1':
        case 'binary':
            return asciiWrite(this, string, offset, length);
        case 'base64':
            // Warning: maxLength not taken into account in base64Write
            return base64Write(this, string, offset, length);
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return ucs2Write(this, string, offset, length);
        default:
            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
            encoding = ('' + encoding).toLowerCase();
            loweredCase = true;
    }
};
Buffer.prototype.toJSON = function toJSON() {
    return {
        type: 'Buffer',
        data: Array.prototype.slice.call(this._arr || this, 0)
    };
};
function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) return base64.fromByteArray(buf);
    else return base64.fromByteArray(buf.slice(start, end));
}
function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    const res = [];
    let i = start;
    while(i < end){
        const firstByte = buf[i];
        let codePoint = null;
        let bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;
        if (i + bytesPerSequence <= end) {
            let secondByte, thirdByte, fourthByte, tempCodePoint;
            switch(bytesPerSequence){
                case 1:
                    if (firstByte < 0x80) codePoint = firstByte;
                    break;
                case 2:
                    secondByte = buf[i + 1];
                    if ((secondByte & 0xC0) === 0x80) {
                        tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;
                        if (tempCodePoint > 0x7F) codePoint = tempCodePoint;
                    }
                    break;
                case 3:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                        tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;
                        if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) codePoint = tempCodePoint;
                    }
                    break;
                case 4:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    fourthByte = buf[i + 3];
                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                        tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;
                        if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) codePoint = tempCodePoint;
                    }
            }
        }
        if (codePoint === null) {
            // we did not generate a valid codePoint so insert a
            // replacement char (U+FFFD) and advance only 1 byte
            codePoint = 0xFFFD;
            bytesPerSequence = 1;
        } else if (codePoint > 0xFFFF) {
            // encode to utf16 (surrogate pair dance)
            codePoint -= 0x10000;
            res.push(codePoint >>> 10 & 0x3FF | 0xD800);
            codePoint = 0xDC00 | codePoint & 0x3FF;
        }
        res.push(codePoint);
        i += bytesPerSequence;
    }
    return decodeCodePointsArray(res);
}
// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
const MAX_ARGUMENTS_LENGTH = 0x1000;
function decodeCodePointsArray(codePoints) {
    const len = codePoints.length;
    if (len <= MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
    ;
    // Decode in chunks to avoid "call stack size exceeded".
    let res = '';
    let i = 0;
    while(i < len)res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    return res;
}
function asciiSlice(buf, start, end) {
    let ret = '';
    end = Math.min(buf.length, end);
    for(let i = start; i < end; ++i)ret += String.fromCharCode(buf[i] & 0x7F);
    return ret;
}
function latin1Slice(buf, start, end) {
    let ret = '';
    end = Math.min(buf.length, end);
    for(let i = start; i < end; ++i)ret += String.fromCharCode(buf[i]);
    return ret;
}
function hexSlice(buf, start, end) {
    const len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    let out = '';
    for(let i = start; i < end; ++i)out += hexSliceLookupTable[buf[i]];
    return out;
}
function utf16leSlice(buf, start, end) {
    const bytes = buf.slice(start, end);
    let res = '';
    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
    for(let i = 0; i < bytes.length - 1; i += 2)res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    return res;
}
Buffer.prototype.slice = function slice(start, end) {
    const len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;
    if (start < 0) {
        start += len;
        if (start < 0) start = 0;
    } else if (start > len) start = len;
    if (end < 0) {
        end += len;
        if (end < 0) end = 0;
    } else if (end > len) end = len;
    if (end < start) end = start;
    const newBuf = this.subarray(start, end);
    // Return an augmented `Uint8Array` instance
    Object.setPrototypeOf(newBuf, Buffer.prototype);
    return newBuf;
};
/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */ function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
}
Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    let val = this[offset];
    let mul = 1;
    let i = 0;
    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;
    return val;
};
Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    let val = this[offset + --byteLength];
    let mul = 1;
    while(byteLength > 0 && (mul *= 0x100))val += this[offset + --byteLength] * mul;
    return val;
};
Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset];
};
Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
};
Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
};
Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
};
Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
};
Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {
    offset = offset >>> 0;
    validateNumber(offset, 'offset');
    const first = this[offset];
    const last = this[offset + 7];
    if (first === undefined || last === undefined) boundsError(offset, this.length - 8);
    const lo = first + this[++offset] * 256 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;
    const hi = this[++offset] + this[++offset] * 256 + this[++offset] * 2 ** 16 + last * 2 ** 24;
    return BigInt(lo) + (BigInt(hi) << BigInt(32));
});
Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {
    offset = offset >>> 0;
    validateNumber(offset, 'offset');
    const first = this[offset];
    const last = this[offset + 7];
    if (first === undefined || last === undefined) boundsError(offset, this.length - 8);
    const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + this[++offset];
    const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + last;
    return (BigInt(hi) << BigInt(32)) + BigInt(lo);
});
Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    let val = this[offset];
    let mul = 1;
    let i = 0;
    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;
    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
};
Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    let i = byteLength;
    let mul = 1;
    let val = this[offset + --i];
    while(i > 0 && (mul *= 0x100))val += this[offset + --i] * mul;
    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
};
Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return this[offset];
    return (0xff - this[offset] + 1) * -1;
};
Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    const val = this[offset] | this[offset + 1] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
};
Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    const val = this[offset + 1] | this[offset] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
};
Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
};
Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
};
Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {
    offset = offset >>> 0;
    validateNumber(offset, 'offset');
    const first = this[offset];
    const last = this[offset + 7];
    if (first === undefined || last === undefined) boundsError(offset, this.length - 8);
    const val = this[offset + 4] + this[offset + 5] * 256 + this[offset + 6] * 2 ** 16 + (last << 24 // Overflow
    );
    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 256 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);
});
Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {
    offset = offset >>> 0;
    validateNumber(offset, 'offset');
    const first = this[offset];
    const last = this[offset + 7];
    if (first === undefined || last === undefined) boundsError(offset, this.length - 8);
    const val = (first << 24) + // Overflow
    this[++offset] * 2 ** 16 + this[++offset] * 256 + this[++offset];
    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + last);
});
Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
};
Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
};
Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
};
Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
};
function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
}
Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
        const maxBytes = Math.pow(2, 8 * byteLength) - 1;
        checkInt(this, value, offset, byteLength, maxBytes, 0);
    }
    let mul = 1;
    let i = 0;
    this[offset] = value & 0xFF;
    while(++i < byteLength && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;
    return offset + byteLength;
};
Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
        const maxBytes = Math.pow(2, 8 * byteLength) - 1;
        checkInt(this, value, offset, byteLength, maxBytes, 0);
    }
    let i = byteLength - 1;
    let mul = 1;
    this[offset + i] = value & 0xFF;
    while(--i >= 0 && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;
    return offset + byteLength;
};
Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
    this[offset] = value & 0xff;
    return offset + 1;
};
Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
};
Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
};
Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
    return offset + 4;
};
Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
};
function wrtBigUInt64LE(buf, value, offset, min, max) {
    checkIntBI(value, min, max, buf, offset, 7);
    let lo = Number(value & BigInt(0xffffffff));
    buf[offset++] = lo;
    lo = lo >> 8;
    buf[offset++] = lo;
    lo = lo >> 8;
    buf[offset++] = lo;
    lo = lo >> 8;
    buf[offset++] = lo;
    let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));
    buf[offset++] = hi;
    hi = hi >> 8;
    buf[offset++] = hi;
    hi = hi >> 8;
    buf[offset++] = hi;
    hi = hi >> 8;
    buf[offset++] = hi;
    return offset;
}
function wrtBigUInt64BE(buf, value, offset, min, max) {
    checkIntBI(value, min, max, buf, offset, 7);
    let lo = Number(value & BigInt(0xffffffff));
    buf[offset + 7] = lo;
    lo = lo >> 8;
    buf[offset + 6] = lo;
    lo = lo >> 8;
    buf[offset + 5] = lo;
    lo = lo >> 8;
    buf[offset + 4] = lo;
    let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));
    buf[offset + 3] = hi;
    hi = hi >> 8;
    buf[offset + 2] = hi;
    hi = hi >> 8;
    buf[offset + 1] = hi;
    hi = hi >> 8;
    buf[offset] = hi;
    return offset + 8;
}
Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {
    return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));
});
Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {
    return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));
});
Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
        const limit = Math.pow(2, 8 * byteLength - 1);
        checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }
    let i = 0;
    let mul = 1;
    let sub = 0;
    this[offset] = value & 0xFF;
    while(++i < byteLength && (mul *= 0x100)){
        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) sub = 1;
        this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }
    return offset + byteLength;
};
Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
        const limit = Math.pow(2, 8 * byteLength - 1);
        checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }
    let i = byteLength - 1;
    let mul = 1;
    let sub = 0;
    this[offset + i] = value & 0xFF;
    while(--i >= 0 && (mul *= 0x100)){
        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) sub = 1;
        this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }
    return offset + byteLength;
};
Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -128);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = value & 0xff;
    return offset + 1;
};
Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
};
Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
};
Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
};
Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    if (value < 0) value = 0xffffffff + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
};
Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {
    return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));
});
Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {
    return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));
});
function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
}
function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -340282346638528860000000000000000000000);
    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
}
Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
};
Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
};
function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);
    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
}
Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
};
Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
};
// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;
    // Copy 0 bytes; we're done
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;
    // Fatal error conditions
    if (targetStart < 0) throw new RangeError('targetStart out of bounds');
    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');
    // Are we oob?
    if (end > this.length) end = this.length;
    if (target.length - targetStart < end - start) end = target.length - targetStart + start;
    const len = end - start;
    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end);
    else Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    return len;
};
// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill(val, start, end, encoding) {
    // Handle string cases:
    if (typeof val === 'string') {
        if (typeof start === 'string') {
            encoding = start;
            start = 0;
            end = this.length;
        } else if (typeof end === 'string') {
            encoding = end;
            end = this.length;
        }
        if (encoding !== undefined && typeof encoding !== 'string') throw new TypeError('encoding must be a string');
        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) throw new TypeError('Unknown encoding: ' + encoding);
        if (val.length === 1) {
            const code = val.charCodeAt(0);
            if (encoding === 'utf8' && code < 128 || encoding === 'latin1') // Fast path: If `val` fits into a single byte, use that numeric value.
            val = code;
        }
    } else if (typeof val === 'number') val = val & 255;
    else if (typeof val === 'boolean') val = Number(val);
    // Invalid ranges are not set to a default, so can range check early.
    if (start < 0 || this.length < start || this.length < end) throw new RangeError('Out of range index');
    if (end <= start) return this;
    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val) val = 0;
    let i;
    if (typeof val === 'number') for(i = start; i < end; ++i)this[i] = val;
    else {
        const bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
        const len = bytes.length;
        if (len === 0) throw new TypeError('The value "' + val + '" is invalid for argument "value"');
        for(i = 0; i < end - start; ++i)this[i + start] = bytes[i % len];
    }
    return this;
};
// CUSTOM ERRORS
// =============
// Simplified versions from Node, changed for Buffer-only usage
const errors = {};
function E(sym, getMessage, Base) {
    errors[sym] = class NodeError extends Base {
        constructor(){
            super();
            Object.defineProperty(this, 'message', {
                value: getMessage.apply(this, arguments),
                writable: true,
                configurable: true
            });
            // Add the error code to the name to include it in the stack trace.
            this.name = `${this.name} [${sym}]`;
            // Access the stack to generate the error message including the error code
            // from the name.
            this.stack // eslint-disable-line no-unused-expressions
            ;
            // Reset the name to the actual name.
            delete this.name;
        }
        get code() {
            return sym;
        }
        set code(value) {
            Object.defineProperty(this, 'code', {
                configurable: true,
                enumerable: true,
                value,
                writable: true
            });
        }
        toString() {
            return `${this.name} [${sym}]: ${this.message}`;
        }
    };
}
E('ERR_BUFFER_OUT_OF_BOUNDS', function(name) {
    if (name) return `${name} is outside of buffer bounds`;
    return 'Attempt to access memory outside buffer bounds';
}, RangeError);
E('ERR_INVALID_ARG_TYPE', function(name, actual) {
    return `The "${name}" argument must be of type number. Received type ${typeof actual}`;
}, TypeError);
E('ERR_OUT_OF_RANGE', function(str, range, input) {
    let msg = `The value of "${str}" is out of range.`;
    let received = input;
    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) received = addNumericalSeparator(String(input));
    else if (typeof input === 'bigint') {
        received = String(input);
        if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) received = addNumericalSeparator(received);
        received += 'n';
    }
    msg += ` It must be ${range}. Received ${received}`;
    return msg;
}, RangeError);
function addNumericalSeparator(val) {
    let res = '';
    let i = val.length;
    const start = val[0] === '-' ? 1 : 0;
    for(; i >= start + 4; i -= 3)res = `_${val.slice(i - 3, i)}${res}`;
    return `${val.slice(0, i)}${res}`;
}
// CHECK FUNCTIONS
// ===============
function checkBounds(buf, offset, byteLength) {
    validateNumber(offset, 'offset');
    if (buf[offset] === undefined || buf[offset + byteLength] === undefined) boundsError(offset, buf.length - (byteLength + 1));
}
function checkIntBI(value, min, max, buf, offset, byteLength) {
    if (value > max || value < min) {
        const n = typeof min === 'bigint' ? 'n' : '';
        let range;
        if (byteLength > 3) {
            if (min === 0 || min === BigInt(0)) range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;
            else range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` + `${(byteLength + 1) * 8 - 1}${n}`;
        } else range = `>= ${min}${n} and <= ${max}${n}`;
        throw new errors.ERR_OUT_OF_RANGE('value', range, value);
    }
    checkBounds(buf, offset, byteLength);
}
function validateNumber(value, name) {
    if (typeof value !== 'number') throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value);
}
function boundsError(value, length, type) {
    if (Math.floor(value) !== value) {
        validateNumber(value, type);
        throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);
    }
    if (length < 0) throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();
    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', `>= ${type ? 1 : 0} and <= ${length}`, value);
}
// HELPER FUNCTIONS
// ================
const INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
function base64clean(str) {
    // Node takes equal signs as end of the Base64 encoding
    str = str.split('=')[0];
    // Node strips out invalid characters like \n and \t from the string, base64-js does not
    str = str.trim().replace(INVALID_BASE64_RE, '');
    // Node converts strings with length < 2 to ''
    if (str.length < 2) return '';
    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
    while(str.length % 4 !== 0)str = str + '=';
    return str;
}
function utf8ToBytes(string, units) {
    units = units || Infinity;
    let codePoint;
    const length = string.length;
    let leadSurrogate = null;
    const bytes = [];
    for(let i = 0; i < length; ++i){
        codePoint = string.charCodeAt(i);
        // is surrogate component
        if (codePoint > 0xD7FF && codePoint < 0xE000) {
            // last char was a lead
            if (!leadSurrogate) {
                // no lead yet
                if (codePoint > 0xDBFF) {
                    // unexpected trail
                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                    continue;
                } else if (i + 1 === length) {
                    // unpaired lead
                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                    continue;
                }
                // valid lead
                leadSurrogate = codePoint;
                continue;
            }
            // 2 leads in a row
            if (codePoint < 0xDC00) {
                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                leadSurrogate = codePoint;
                continue;
            }
            // valid surrogate pair
            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
        } else if (leadSurrogate) // valid bmp char, but last char was a lead
        {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
        }
        leadSurrogate = null;
        // encode utf8
        if (codePoint < 0x80) {
            if ((units -= 1) < 0) break;
            bytes.push(codePoint);
        } else if (codePoint < 0x800) {
            if ((units -= 2) < 0) break;
            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
        } else if (codePoint < 0x10000) {
            if ((units -= 3) < 0) break;
            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
        } else if (codePoint < 0x110000) {
            if ((units -= 4) < 0) break;
            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
        } else throw new Error('Invalid code point');
    }
    return bytes;
}
function asciiToBytes(str) {
    const byteArray = [];
    for(let i = 0; i < str.length; ++i)// Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF);
    return byteArray;
}
function utf16leToBytes(str, units) {
    let c, hi, lo;
    const byteArray = [];
    for(let i = 0; i < str.length; ++i){
        if ((units -= 2) < 0) break;
        c = str.charCodeAt(i);
        hi = c >> 8;
        lo = c % 256;
        byteArray.push(lo);
        byteArray.push(hi);
    }
    return byteArray;
}
function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
}
function blitBuffer(src, dst, offset, length) {
    let i;
    for(i = 0; i < length; ++i){
        if (i + offset >= dst.length || i >= src.length) break;
        dst[i + offset] = src[i];
    }
    return i;
}
// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
}
function numberIsNaN(obj) {
    // For IE11 support
    return obj !== obj // eslint-disable-line no-self-compare
    ;
}
// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
const hexSliceLookupTable = function() {
    const alphabet = '0123456789abcdef';
    const table = new Array(256);
    for(let i = 0; i < 16; ++i){
        const i16 = i * 16;
        for(let j = 0; j < 16; ++j)table[i16 + j] = alphabet[i] + alphabet[j];
    }
    return table;
}();
// Return not function with Error if BigInt not supported
function defineBigIntMethod(fn) {
    return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn;
}
function BufferBigIntNotDefined() {
    throw new Error('BigInt not supported');
}

},{"9c62938f1dccc73c":"9I2RJ","aceacb6a4531a9d2":"geXY6"}],"9I2RJ":[function(require,module,exports,__globalThis) {
'use strict';
exports.byteLength = byteLength;
exports.toByteArray = toByteArray;
exports.fromByteArray = fromByteArray;
var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for(var i = 0, len = code.length; i < len; ++i){
    lookup[i] = code[i];
    revLookup[code.charCodeAt(i)] = i;
}
// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;
function getLens(b64) {
    var len = b64.length;
    if (len % 4 > 0) throw new Error('Invalid string. Length must be a multiple of 4');
    // Trim off extra bytes after placeholder bytes are found
    // See: https://github.com/beatgammit/base64-js/issues/42
    var validLen = b64.indexOf('=');
    if (validLen === -1) validLen = len;
    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
    return [
        validLen,
        placeHoldersLen
    ];
}
// base64 is 4/3 + up to two characters of the original data
function byteLength(b64) {
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function _byteLength(b64, validLen, placeHoldersLen) {
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function toByteArray(b64) {
    var tmp;
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
    var curByte = 0;
    // if there are placeholders, only get up to the last complete 4 chars
    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
    var i;
    for(i = 0; i < len; i += 4){
        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
        arr[curByte++] = tmp >> 16 & 0xFF;
        arr[curByte++] = tmp >> 8 & 0xFF;
        arr[curByte++] = tmp & 0xFF;
    }
    if (placeHoldersLen === 2) {
        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
        arr[curByte++] = tmp & 0xFF;
    }
    if (placeHoldersLen === 1) {
        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 0xFF;
        arr[curByte++] = tmp & 0xFF;
    }
    return arr;
}
function tripletToBase64(num) {
    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
}
function encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];
    for(var i = start; i < end; i += 3){
        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
        output.push(tripletToBase64(tmp));
    }
    return output.join('');
}
function fromByteArray(uint8) {
    var tmp;
    var len = uint8.length;
    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
    ;
    var parts = [];
    var maxChunkLength = 16383 // must be multiple of 3
    ;
    // go through the array every three bytes, we'll deal with trailing stuff later
    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength)parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
    // pad the end with zeros, but make sure to not forget the extra bytes
    if (extraBytes === 1) {
        tmp = uint8[len - 1];
        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
    } else if (extraBytes === 2) {
        tmp = (uint8[len - 2] << 8) + uint8[len - 1];
        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
    }
    return parts.join('');
}

},{}],"geXY6":[function(require,module,exports,__globalThis) {
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ exports.read = function(buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;
    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);
    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);
    if (e === 0) e = 1 - eBias;
    else if (e === eMax) return m ? NaN : (s ? -1 : 1) * Infinity;
    else {
        m = m + Math.pow(2, mLen);
        e = e - eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};
exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);
    if (isNaN(value) || value === Infinity) {
        m = isNaN(value) ? 1 : 0;
        e = eMax;
    } else {
        e = Math.floor(Math.log(value) / Math.LN2);
        if (value * (c = Math.pow(2, -e)) < 1) {
            e--;
            c *= 2;
        }
        if (e + eBias >= 1) value += rt / c;
        else value += rt * Math.pow(2, 1 - eBias);
        if (value * c >= 2) {
            e++;
            c /= 2;
        }
        if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
        } else if (e + eBias >= 1) {
            m = (value * c - 1) * Math.pow(2, mLen);
            e = e + eBias;
        } else {
            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e = 0;
        }
    }
    for(; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);
    e = e << mLen | m;
    eLen += mLen;
    for(; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);
    buffer[offset + i - d] |= s * 128;
};

},{}],"7z85x":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
'use strict';
/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [config] The config.
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 *
 * @returns {Error} The created error.
 */ function AxiosError(message, code, config, request, response) {
    Error.call(this);
    if (Error.captureStackTrace) Error.captureStackTrace(this, this.constructor);
    else this.stack = new Error().stack;
    this.message = message;
    this.name = 'AxiosError';
    code && (this.code = code);
    config && (this.config = config);
    request && (this.request = request);
    if (response) {
        this.response = response;
        this.status = response.status ? response.status : null;
    }
}
(0, _utilsJsDefault.default).inherits(AxiosError, Error, {
    toJSON: function toJSON() {
        return {
            // Standard
            message: this.message,
            name: this.name,
            // Microsoft
            description: this.description,
            number: this.number,
            // Mozilla
            fileName: this.fileName,
            lineNumber: this.lineNumber,
            columnNumber: this.columnNumber,
            stack: this.stack,
            // Axios
            config: (0, _utilsJsDefault.default).toJSONObject(this.config),
            code: this.code,
            status: this.status
        };
    }
});
const prototype = AxiosError.prototype;
const descriptors = {};
[
    'ERR_BAD_OPTION_VALUE',
    'ERR_BAD_OPTION',
    'ECONNABORTED',
    'ETIMEDOUT',
    'ERR_NETWORK',
    'ERR_FR_TOO_MANY_REDIRECTS',
    'ERR_DEPRECATED',
    'ERR_BAD_RESPONSE',
    'ERR_BAD_REQUEST',
    'ERR_CANCELED',
    'ERR_NOT_SUPPORT',
    'ERR_INVALID_URL'
].forEach((code)=>{
    descriptors[code] = {
        value: code
    };
});
Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(prototype, 'isAxiosError', {
    value: true
});
// eslint-disable-next-line func-names
AxiosError.from = (error, code, config, request, response, customProps)=>{
    const axiosError = Object.create(prototype);
    (0, _utilsJsDefault.default).toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
    }, (prop)=>{
        return prop !== 'isAxiosError';
    });
    AxiosError.call(axiosError, error.message, code, config, request, response);
    axiosError.cause = error;
    axiosError.name = error.name;
    customProps && Object.assign(axiosError, customProps);
    return axiosError;
};
exports.default = AxiosError;

},{"../utils.js":"jI6DP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dVGJ4":[function(require,module,exports,__globalThis) {
// eslint-disable-next-line strict
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = null;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bt5wS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("./../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
'use strict';
class InterceptorManager {
    constructor(){
        this.handlers = [];
    }
    /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */ use(fulfilled, rejected, options) {
        this.handlers.push({
            fulfilled,
            rejected,
            synchronous: options ? options.synchronous : false,
            runWhen: options ? options.runWhen : null
        });
        return this.handlers.length - 1;
    }
    /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */ eject(id) {
        if (this.handlers[id]) this.handlers[id] = null;
    }
    /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */ clear() {
        if (this.handlers) this.handlers = [];
    }
    /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */ forEach(fn) {
        (0, _utilsJsDefault.default).forEach(this.handlers, function forEachHandler(h) {
            if (h !== null) fn(h);
        });
    }
}
exports.default = InterceptorManager;

},{"./../utils.js":"jI6DP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1p0aT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>dispatchRequest);
var _transformDataJs = require("./transformData.js");
var _transformDataJsDefault = parcelHelpers.interopDefault(_transformDataJs);
var _isCancelJs = require("../cancel/isCancel.js");
var _isCancelJsDefault = parcelHelpers.interopDefault(_isCancelJs);
var _indexJs = require("../defaults/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _canceledErrorJs = require("../cancel/CanceledError.js");
var _canceledErrorJsDefault = parcelHelpers.interopDefault(_canceledErrorJs);
var _axiosHeadersJs = require("../core/AxiosHeaders.js");
var _axiosHeadersJsDefault = parcelHelpers.interopDefault(_axiosHeadersJs);
var _adaptersJs = require("../adapters/adapters.js");
var _adaptersJsDefault = parcelHelpers.interopDefault(_adaptersJs);
'use strict';
/**
 * Throws a `CanceledError` if cancellation has been requested.
 *
 * @param {Object} config The config that is to be used for the request
 *
 * @returns {void}
 */ function throwIfCancellationRequested(config) {
    if (config.cancelToken) config.cancelToken.throwIfRequested();
    if (config.signal && config.signal.aborted) throw new (0, _canceledErrorJsDefault.default)(null, config);
}
function dispatchRequest(config) {
    throwIfCancellationRequested(config);
    config.headers = (0, _axiosHeadersJsDefault.default).from(config.headers);
    // Transform request data
    config.data = (0, _transformDataJsDefault.default).call(config, config.transformRequest);
    if ([
        'post',
        'put',
        'patch'
    ].indexOf(config.method) !== -1) config.headers.setContentType('application/x-www-form-urlencoded', false);
    const adapter = (0, _adaptersJsDefault.default).getAdapter(config.adapter || (0, _indexJsDefault.default).adapter);
    return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        // Transform response data
        response.data = (0, _transformDataJsDefault.default).call(config, config.transformResponse, response);
        response.headers = (0, _axiosHeadersJsDefault.default).from(response.headers);
        return response;
    }, function onAdapterRejection(reason) {
        if (!(0, _isCancelJsDefault.default)(reason)) {
            throwIfCancellationRequested(config);
            // Transform response data
            if (reason && reason.response) {
                reason.response.data = (0, _transformDataJsDefault.default).call(config, config.transformResponse, reason.response);
                reason.response.headers = (0, _axiosHeadersJsDefault.default).from(reason.response.headers);
            }
        }
        return Promise.reject(reason);
    });
}

},{"./transformData.js":"8ANo1","../cancel/isCancel.js":"fkTUi","../defaults/index.js":"9WXKx","../cancel/CanceledError.js":"9yG1c","../core/AxiosHeaders.js":"9EzTj","../adapters/adapters.js":"hI0HS","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8ANo1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>transformData);
var _utilsJs = require("./../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _indexJs = require("../defaults/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _axiosHeadersJs = require("../core/AxiosHeaders.js");
var _axiosHeadersJsDefault = parcelHelpers.interopDefault(_axiosHeadersJs);
'use strict';
function transformData(fns, response) {
    const config = this || (0, _indexJsDefault.default);
    const context = response || config;
    const headers = (0, _axiosHeadersJsDefault.default).from(context.headers);
    let data = context.data;
    (0, _utilsJsDefault.default).forEach(fns, function transform(fn) {
        data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);
    });
    headers.normalize();
    return data;
}

},{"./../utils.js":"jI6DP","../defaults/index.js":"9WXKx","../core/AxiosHeaders.js":"9EzTj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9WXKx":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _axiosErrorJs = require("../core/AxiosError.js");
var _axiosErrorJsDefault = parcelHelpers.interopDefault(_axiosErrorJs);
var _transitionalJs = require("./transitional.js");
var _transitionalJsDefault = parcelHelpers.interopDefault(_transitionalJs);
var _toFormDataJs = require("../helpers/toFormData.js");
var _toFormDataJsDefault = parcelHelpers.interopDefault(_toFormDataJs);
var _toURLEncodedFormJs = require("../helpers/toURLEncodedForm.js");
var _toURLEncodedFormJsDefault = parcelHelpers.interopDefault(_toURLEncodedFormJs);
var _indexJs = require("../platform/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _formDataToJSONJs = require("../helpers/formDataToJSON.js");
var _formDataToJSONJsDefault = parcelHelpers.interopDefault(_formDataToJSONJs);
'use strict';
/**
 * It takes a string, tries to parse it, and if it fails, it returns the stringified version
 * of the input
 *
 * @param {any} rawValue - The value to be stringified.
 * @param {Function} parser - A function that parses a string into a JavaScript object.
 * @param {Function} encoder - A function that takes a value and returns a string.
 *
 * @returns {string} A stringified version of the rawValue.
 */ function stringifySafely(rawValue, parser, encoder) {
    if ((0, _utilsJsDefault.default).isString(rawValue)) try {
        (parser || JSON.parse)(rawValue);
        return (0, _utilsJsDefault.default).trim(rawValue);
    } catch (e) {
        if (e.name !== 'SyntaxError') throw e;
    }
    return (encoder || JSON.stringify)(rawValue);
}
const defaults = {
    transitional: (0, _transitionalJsDefault.default),
    adapter: [
        'xhr',
        'http',
        'fetch'
    ],
    transformRequest: [
        function transformRequest(data, headers) {
            const contentType = headers.getContentType() || '';
            const hasJSONContentType = contentType.indexOf('application/json') > -1;
            const isObjectPayload = (0, _utilsJsDefault.default).isObject(data);
            if (isObjectPayload && (0, _utilsJsDefault.default).isHTMLForm(data)) data = new FormData(data);
            const isFormData = (0, _utilsJsDefault.default).isFormData(data);
            if (isFormData) return hasJSONContentType ? JSON.stringify((0, _formDataToJSONJsDefault.default)(data)) : data;
            if ((0, _utilsJsDefault.default).isArrayBuffer(data) || (0, _utilsJsDefault.default).isBuffer(data) || (0, _utilsJsDefault.default).isStream(data) || (0, _utilsJsDefault.default).isFile(data) || (0, _utilsJsDefault.default).isBlob(data) || (0, _utilsJsDefault.default).isReadableStream(data)) return data;
            if ((0, _utilsJsDefault.default).isArrayBufferView(data)) return data.buffer;
            if ((0, _utilsJsDefault.default).isURLSearchParams(data)) {
                headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);
                return data.toString();
            }
            let isFileList;
            if (isObjectPayload) {
                if (contentType.indexOf('application/x-www-form-urlencoded') > -1) return (0, _toURLEncodedFormJsDefault.default)(data, this.formSerializer).toString();
                if ((isFileList = (0, _utilsJsDefault.default).isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {
                    const _FormData = this.env && this.env.FormData;
                    return (0, _toFormDataJsDefault.default)(isFileList ? {
                        'files[]': data
                    } : data, _FormData && new _FormData(), this.formSerializer);
                }
            }
            if (isObjectPayload || hasJSONContentType) {
                headers.setContentType('application/json', false);
                return stringifySafely(data);
            }
            return data;
        }
    ],
    transformResponse: [
        function transformResponse(data) {
            const transitional = this.transitional || defaults.transitional;
            const forcedJSONParsing = transitional && transitional.forcedJSONParsing;
            const JSONRequested = this.responseType === 'json';
            if ((0, _utilsJsDefault.default).isResponse(data) || (0, _utilsJsDefault.default).isReadableStream(data)) return data;
            if (data && (0, _utilsJsDefault.default).isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
                const silentJSONParsing = transitional && transitional.silentJSONParsing;
                const strictJSONParsing = !silentJSONParsing && JSONRequested;
                try {
                    return JSON.parse(data);
                } catch (e) {
                    if (strictJSONParsing) {
                        if (e.name === 'SyntaxError') throw (0, _axiosErrorJsDefault.default).from(e, (0, _axiosErrorJsDefault.default).ERR_BAD_RESPONSE, this, null, this.response);
                        throw e;
                    }
                }
            }
            return data;
        }
    ],
    /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */ timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
        FormData: (0, _indexJsDefault.default).classes.FormData,
        Blob: (0, _indexJsDefault.default).classes.Blob
    },
    validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
    },
    headers: {
        common: {
            'Accept': 'application/json, text/plain, */*',
            'Content-Type': undefined
        }
    }
};
(0, _utilsJsDefault.default).forEach([
    'delete',
    'get',
    'head',
    'post',
    'put',
    'patch'
], (method)=>{
    defaults.headers[method] = {};
});
exports.default = defaults;

},{"../utils.js":"jI6DP","../core/AxiosError.js":"7z85x","./transitional.js":"cKdyU","../helpers/toFormData.js":"2RXm4","../helpers/toURLEncodedForm.js":"keaer","../platform/index.js":"626Zd","../helpers/formDataToJSON.js":"fefHq","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cKdyU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
'use strict';
exports.default = {
    silentJSONParsing: true,
    forcedJSONParsing: true,
    clarifyTimeoutError: false
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"keaer":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>toURLEncodedForm);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _toFormDataJs = require("./toFormData.js");
var _toFormDataJsDefault = parcelHelpers.interopDefault(_toFormDataJs);
var _indexJs = require("../platform/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
'use strict';
function toURLEncodedForm(data, options) {
    return (0, _toFormDataJsDefault.default)(data, new (0, _indexJsDefault.default).classes.URLSearchParams(), Object.assign({
        visitor: function(value, key, path, helpers) {
            if ((0, _indexJsDefault.default).isNode && (0, _utilsJsDefault.default).isBuffer(value)) {
                this.append(key, value.toString('base64'));
                return false;
            }
            return helpers.defaultVisitor.apply(this, arguments);
        }
    }, options));
}

},{"../utils.js":"jI6DP","./toFormData.js":"2RXm4","../platform/index.js":"626Zd","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"626Zd":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./node/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _utilsJs = require("./common/utils.js");
exports.default = {
    ..._utilsJs,
    ...(0, _indexJsDefault.default)
};

},{"./node/index.js":"1TZsR","./common/utils.js":"3Z7Gl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1TZsR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _urlsearchParamsJs = require("./classes/URLSearchParams.js");
var _urlsearchParamsJsDefault = parcelHelpers.interopDefault(_urlsearchParamsJs);
var _formDataJs = require("./classes/FormData.js");
var _formDataJsDefault = parcelHelpers.interopDefault(_formDataJs);
var _blobJs = require("./classes/Blob.js");
var _blobJsDefault = parcelHelpers.interopDefault(_blobJs);
exports.default = {
    isBrowser: true,
    classes: {
        URLSearchParams: (0, _urlsearchParamsJsDefault.default),
        FormData: (0, _formDataJsDefault.default),
        Blob: (0, _blobJsDefault.default)
    },
    protocols: [
        'http',
        'https',
        'file',
        'blob',
        'url',
        'data'
    ]
};

},{"./classes/URLSearchParams.js":"6cHm6","./classes/FormData.js":"7ag3a","./classes/Blob.js":"hRvHl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6cHm6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _axiosURLSearchParamsJs = require("../../../helpers/AxiosURLSearchParams.js");
var _axiosURLSearchParamsJsDefault = parcelHelpers.interopDefault(_axiosURLSearchParamsJs);
'use strict';
exports.default = typeof URLSearchParams !== 'undefined' ? URLSearchParams : (0, _axiosURLSearchParamsJsDefault.default);

},{"../../../helpers/AxiosURLSearchParams.js":"i7MZs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7ag3a":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
'use strict';
exports.default = typeof FormData !== 'undefined' ? FormData : null;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hRvHl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
'use strict';
exports.default = typeof Blob !== 'undefined' ? Blob : null;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3Z7Gl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hasBrowserEnv", ()=>hasBrowserEnv);
parcelHelpers.export(exports, "hasStandardBrowserWebWorkerEnv", ()=>hasStandardBrowserWebWorkerEnv);
parcelHelpers.export(exports, "hasStandardBrowserEnv", ()=>hasStandardBrowserEnv);
parcelHelpers.export(exports, "navigator", ()=>_navigator);
parcelHelpers.export(exports, "origin", ()=>origin);
const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';
const _navigator = typeof navigator === 'object' && navigator || undefined;
/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 *
 * @returns {boolean}
 */ const hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || [
    'ReactNative',
    'NativeScript',
    'NS'
].indexOf(_navigator.product) < 0);
/**
 * Determine if we're running in a standard browser webWorker environment
 *
 * Although the `isStandardBrowserEnv` method indicates that
 * `allows axios to run in a web worker`, the WebWorker will still be
 * filtered out due to its judgment standard
 * `typeof window !== 'undefined' && typeof document !== 'undefined'`.
 * This leads to a problem when axios post `FormData` in webWorker
 */ const hasStandardBrowserWebWorkerEnv = (()=>{
    return typeof WorkerGlobalScope !== 'undefined' && // eslint-disable-next-line no-undef
    self instanceof WorkerGlobalScope && typeof self.importScripts === 'function';
})();
const origin = hasBrowserEnv && window.location.href || 'http://localhost';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fefHq":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
'use strict';
/**
 * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']
 *
 * @param {string} name - The name of the property to get.
 *
 * @returns An array of strings.
 */ function parsePropPath(name) {
    // foo[x][y][z]
    // foo.x.y.z
    // foo-x-y-z
    // foo x y z
    return (0, _utilsJsDefault.default).matchAll(/\w+|\[(\w*)]/g, name).map((match)=>{
        return match[0] === '[]' ? '' : match[1] || match[0];
    });
}
/**
 * Convert an array to an object.
 *
 * @param {Array<any>} arr - The array to convert to an object.
 *
 * @returns An object with the same keys and values as the array.
 */ function arrayToObject(arr) {
    const obj = {};
    const keys = Object.keys(arr);
    let i;
    const len = keys.length;
    let key;
    for(i = 0; i < len; i++){
        key = keys[i];
        obj[key] = arr[key];
    }
    return obj;
}
/**
 * It takes a FormData object and returns a JavaScript object
 *
 * @param {string} formData The FormData object to convert to JSON.
 *
 * @returns {Object<string, any> | null} The converted object.
 */ function formDataToJSON(formData) {
    function buildPath(path, value, target, index) {
        let name = path[index++];
        if (name === '__proto__') return true;
        const isNumericKey = Number.isFinite(+name);
        const isLast = index >= path.length;
        name = !name && (0, _utilsJsDefault.default).isArray(target) ? target.length : name;
        if (isLast) {
            if ((0, _utilsJsDefault.default).hasOwnProp(target, name)) target[name] = [
                target[name],
                value
            ];
            else target[name] = value;
            return !isNumericKey;
        }
        if (!target[name] || !(0, _utilsJsDefault.default).isObject(target[name])) target[name] = [];
        const result = buildPath(path, value, target[name], index);
        if (result && (0, _utilsJsDefault.default).isArray(target[name])) target[name] = arrayToObject(target[name]);
        return !isNumericKey;
    }
    if ((0, _utilsJsDefault.default).isFormData(formData) && (0, _utilsJsDefault.default).isFunction(formData.entries)) {
        const obj = {};
        (0, _utilsJsDefault.default).forEachEntry(formData, (name, value)=>{
            buildPath(parsePropPath(name), value, obj, 0);
        });
        return obj;
    }
    return null;
}
exports.default = formDataToJSON;

},{"../utils.js":"jI6DP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9EzTj":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _parseHeadersJs = require("../helpers/parseHeaders.js");
var _parseHeadersJsDefault = parcelHelpers.interopDefault(_parseHeadersJs);
'use strict';
const $internals = Symbol('internals');
function normalizeHeader(header) {
    return header && String(header).trim().toLowerCase();
}
function normalizeValue(value) {
    if (value === false || value == null) return value;
    return (0, _utilsJsDefault.default).isArray(value) ? value.map(normalizeValue) : String(value);
}
function parseTokens(str) {
    const tokens = Object.create(null);
    const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
    let match;
    while(match = tokensRE.exec(str))tokens[match[1]] = match[2];
    return tokens;
}
const isValidHeaderName = (str)=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
function matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {
    if ((0, _utilsJsDefault.default).isFunction(filter)) return filter.call(this, value, header);
    if (isHeaderNameFilter) value = header;
    if (!(0, _utilsJsDefault.default).isString(value)) return;
    if ((0, _utilsJsDefault.default).isString(filter)) return value.indexOf(filter) !== -1;
    if ((0, _utilsJsDefault.default).isRegExp(filter)) return filter.test(value);
}
function formatHeader(header) {
    return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (w, char, str)=>{
        return char.toUpperCase() + str;
    });
}
function buildAccessors(obj, header) {
    const accessorName = (0, _utilsJsDefault.default).toCamelCase(' ' + header);
    [
        'get',
        'set',
        'has'
    ].forEach((methodName)=>{
        Object.defineProperty(obj, methodName + accessorName, {
            value: function(arg1, arg2, arg3) {
                return this[methodName].call(this, header, arg1, arg2, arg3);
            },
            configurable: true
        });
    });
}
class AxiosHeaders {
    constructor(headers){
        headers && this.set(headers);
    }
    set(header, valueOrRewrite, rewrite) {
        const self = this;
        function setHeader(_value, _header, _rewrite) {
            const lHeader = normalizeHeader(_header);
            if (!lHeader) throw new Error('header name must be a non-empty string');
            const key = (0, _utilsJsDefault.default).findKey(self, lHeader);
            if (!key || self[key] === undefined || _rewrite === true || _rewrite === undefined && self[key] !== false) self[key || _header] = normalizeValue(_value);
        }
        const setHeaders = (headers, _rewrite)=>(0, _utilsJsDefault.default).forEach(headers, (_value, _header)=>setHeader(_value, _header, _rewrite));
        if ((0, _utilsJsDefault.default).isPlainObject(header) || header instanceof this.constructor) setHeaders(header, valueOrRewrite);
        else if ((0, _utilsJsDefault.default).isString(header) && (header = header.trim()) && !isValidHeaderName(header)) setHeaders((0, _parseHeadersJsDefault.default)(header), valueOrRewrite);
        else if ((0, _utilsJsDefault.default).isHeaders(header)) for (const [key, value] of header.entries())setHeader(value, key, rewrite);
        else header != null && setHeader(valueOrRewrite, header, rewrite);
        return this;
    }
    get(header, parser) {
        header = normalizeHeader(header);
        if (header) {
            const key = (0, _utilsJsDefault.default).findKey(this, header);
            if (key) {
                const value = this[key];
                if (!parser) return value;
                if (parser === true) return parseTokens(value);
                if ((0, _utilsJsDefault.default).isFunction(parser)) return parser.call(this, value, key);
                if ((0, _utilsJsDefault.default).isRegExp(parser)) return parser.exec(value);
                throw new TypeError('parser must be boolean|regexp|function');
            }
        }
    }
    has(header, matcher) {
        header = normalizeHeader(header);
        if (header) {
            const key = (0, _utilsJsDefault.default).findKey(this, header);
            return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
        }
        return false;
    }
    delete(header, matcher) {
        const self = this;
        let deleted = false;
        function deleteHeader(_header) {
            _header = normalizeHeader(_header);
            if (_header) {
                const key = (0, _utilsJsDefault.default).findKey(self, _header);
                if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {
                    delete self[key];
                    deleted = true;
                }
            }
        }
        if ((0, _utilsJsDefault.default).isArray(header)) header.forEach(deleteHeader);
        else deleteHeader(header);
        return deleted;
    }
    clear(matcher) {
        const keys = Object.keys(this);
        let i = keys.length;
        let deleted = false;
        while(i--){
            const key = keys[i];
            if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
                delete this[key];
                deleted = true;
            }
        }
        return deleted;
    }
    normalize(format) {
        const self = this;
        const headers = {};
        (0, _utilsJsDefault.default).forEach(this, (value, header)=>{
            const key = (0, _utilsJsDefault.default).findKey(headers, header);
            if (key) {
                self[key] = normalizeValue(value);
                delete self[header];
                return;
            }
            const normalized = format ? formatHeader(header) : String(header).trim();
            if (normalized !== header) delete self[header];
            self[normalized] = normalizeValue(value);
            headers[normalized] = true;
        });
        return this;
    }
    concat(...targets) {
        return this.constructor.concat(this, ...targets);
    }
    toJSON(asStrings) {
        const obj = Object.create(null);
        (0, _utilsJsDefault.default).forEach(this, (value, header)=>{
            value != null && value !== false && (obj[header] = asStrings && (0, _utilsJsDefault.default).isArray(value) ? value.join(', ') : value);
        });
        return obj;
    }
    [Symbol.iterator]() {
        return Object.entries(this.toJSON())[Symbol.iterator]();
    }
    toString() {
        return Object.entries(this.toJSON()).map(([header, value])=>header + ': ' + value).join('\n');
    }
    get [Symbol.toStringTag]() {
        return 'AxiosHeaders';
    }
    static from(thing) {
        return thing instanceof this ? thing : new this(thing);
    }
    static concat(first, ...targets) {
        const computed = new this(first);
        targets.forEach((target)=>computed.set(target));
        return computed;
    }
    static accessor(header) {
        const internals = this[$internals] = this[$internals] = {
            accessors: {}
        };
        const accessors = internals.accessors;
        const prototype = this.prototype;
        function defineAccessor(_header) {
            const lHeader = normalizeHeader(_header);
            if (!accessors[lHeader]) {
                buildAccessors(prototype, _header);
                accessors[lHeader] = true;
            }
        }
        (0, _utilsJsDefault.default).isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);
        return this;
    }
}
AxiosHeaders.accessor([
    'Content-Type',
    'Content-Length',
    'Accept',
    'Accept-Encoding',
    'User-Agent',
    'Authorization'
]);
// reserved names hotfix
(0, _utilsJsDefault.default).reduceDescriptors(AxiosHeaders.prototype, ({ value }, key)=>{
    let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`
    return {
        get: ()=>value,
        set (headerValue) {
            this[mapped] = headerValue;
        }
    };
});
(0, _utilsJsDefault.default).freezeMethods(AxiosHeaders);
exports.default = AxiosHeaders;

},{"../utils.js":"jI6DP","../helpers/parseHeaders.js":"H8RrA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"H8RrA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("./../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
'use strict';
// RawAxiosHeaders whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
const ignoreDuplicateOf = (0, _utilsJsDefault.default).toObjectSet([
    'age',
    'authorization',
    'content-length',
    'content-type',
    'etag',
    'expires',
    'from',
    'host',
    'if-modified-since',
    'if-unmodified-since',
    'last-modified',
    'location',
    'max-forwards',
    'proxy-authorization',
    'referer',
    'retry-after',
    'user-agent'
]);
/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} rawHeaders Headers needing to be parsed
 *
 * @returns {Object} Headers parsed into an object
 */ exports.default = (rawHeaders)=>{
    const parsed = {};
    let key;
    let val;
    let i;
    rawHeaders && rawHeaders.split('\n').forEach(function parser(line) {
        i = line.indexOf(':');
        key = line.substring(0, i).trim().toLowerCase();
        val = line.substring(i + 1).trim();
        if (!key || parsed[key] && ignoreDuplicateOf[key]) return;
        if (key === 'set-cookie') {
            if (parsed[key]) parsed[key].push(val);
            else parsed[key] = [
                val
            ];
        } else parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    });
    return parsed;
};

},{"./../utils.js":"jI6DP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fkTUi":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>isCancel);
'use strict';
function isCancel(value) {
    return !!(value && value.__CANCEL__);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9yG1c":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _axiosErrorJs = require("../core/AxiosError.js");
var _axiosErrorJsDefault = parcelHelpers.interopDefault(_axiosErrorJs);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
'use strict';
/**
 * A `CanceledError` is an object that is thrown when an operation is canceled.
 *
 * @param {string=} message The message.
 * @param {Object=} config The config.
 * @param {Object=} request The request.
 *
 * @returns {CanceledError} The created error.
 */ function CanceledError(message, config, request) {
    // eslint-disable-next-line no-eq-null,eqeqeq
    (0, _axiosErrorJsDefault.default).call(this, message == null ? 'canceled' : message, (0, _axiosErrorJsDefault.default).ERR_CANCELED, config, request);
    this.name = 'CanceledError';
}
(0, _utilsJsDefault.default).inherits(CanceledError, (0, _axiosErrorJsDefault.default), {
    __CANCEL__: true
});
exports.default = CanceledError;

},{"../core/AxiosError.js":"7z85x","../utils.js":"jI6DP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hI0HS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _httpJs = require("./http.js");
var _httpJsDefault = parcelHelpers.interopDefault(_httpJs);
var _xhrJs = require("./xhr.js");
var _xhrJsDefault = parcelHelpers.interopDefault(_xhrJs);
var _fetchJs = require("./fetch.js");
var _fetchJsDefault = parcelHelpers.interopDefault(_fetchJs);
var _axiosErrorJs = require("../core/AxiosError.js");
var _axiosErrorJsDefault = parcelHelpers.interopDefault(_axiosErrorJs);
const knownAdapters = {
    http: (0, _httpJsDefault.default),
    xhr: (0, _xhrJsDefault.default),
    fetch: (0, _fetchJsDefault.default)
};
(0, _utilsJsDefault.default).forEach(knownAdapters, (fn, value)=>{
    if (fn) {
        try {
            Object.defineProperty(fn, 'name', {
                value
            });
        } catch (e) {
        // eslint-disable-next-line no-empty
        }
        Object.defineProperty(fn, 'adapterName', {
            value
        });
    }
});
const renderReason = (reason)=>`- ${reason}`;
const isResolvedHandle = (adapter)=>(0, _utilsJsDefault.default).isFunction(adapter) || adapter === null || adapter === false;
exports.default = {
    getAdapter: (adapters)=>{
        adapters = (0, _utilsJsDefault.default).isArray(adapters) ? adapters : [
            adapters
        ];
        const { length } = adapters;
        let nameOrAdapter;
        let adapter;
        const rejectedReasons = {};
        for(let i = 0; i < length; i++){
            nameOrAdapter = adapters[i];
            let id;
            adapter = nameOrAdapter;
            if (!isResolvedHandle(nameOrAdapter)) {
                adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];
                if (adapter === undefined) throw new (0, _axiosErrorJsDefault.default)(`Unknown adapter '${id}'`);
            }
            if (adapter) break;
            rejectedReasons[id || '#' + i] = adapter;
        }
        if (!adapter) {
            const reasons = Object.entries(rejectedReasons).map(([id, state])=>`adapter ${id} ` + (state === false ? 'is not supported by the environment' : 'is not available in the build'));
            let s = length ? reasons.length > 1 ? 'since :\n' + reasons.map(renderReason).join('\n') : ' ' + renderReason(reasons[0]) : 'as no adapter specified';
            throw new (0, _axiosErrorJsDefault.default)(`There is no suitable adapter to dispatch the request ` + s, 'ERR_NOT_SUPPORT');
        }
        return adapter;
    },
    adapters: knownAdapters
};

},{"../utils.js":"jI6DP","./http.js":"dVGJ4","./xhr.js":"ao6fA","./fetch.js":"d5PZl","../core/AxiosError.js":"7z85x","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ao6fA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("./../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _settleJs = require("./../core/settle.js");
var _settleJsDefault = parcelHelpers.interopDefault(_settleJs);
var _transitionalJs = require("../defaults/transitional.js");
var _transitionalJsDefault = parcelHelpers.interopDefault(_transitionalJs);
var _axiosErrorJs = require("../core/AxiosError.js");
var _axiosErrorJsDefault = parcelHelpers.interopDefault(_axiosErrorJs);
var _canceledErrorJs = require("../cancel/CanceledError.js");
var _canceledErrorJsDefault = parcelHelpers.interopDefault(_canceledErrorJs);
var _parseProtocolJs = require("../helpers/parseProtocol.js");
var _parseProtocolJsDefault = parcelHelpers.interopDefault(_parseProtocolJs);
var _indexJs = require("../platform/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _axiosHeadersJs = require("../core/AxiosHeaders.js");
var _axiosHeadersJsDefault = parcelHelpers.interopDefault(_axiosHeadersJs);
var _progressEventReducerJs = require("../helpers/progressEventReducer.js");
var _resolveConfigJs = require("../helpers/resolveConfig.js");
var _resolveConfigJsDefault = parcelHelpers.interopDefault(_resolveConfigJs);
const isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';
exports.default = isXHRAdapterSupported && function(config) {
    return new Promise(function dispatchXhrRequest(resolve, reject) {
        const _config = (0, _resolveConfigJsDefault.default)(config);
        let requestData = _config.data;
        const requestHeaders = (0, _axiosHeadersJsDefault.default).from(_config.headers).normalize();
        let { responseType, onUploadProgress, onDownloadProgress } = _config;
        let onCanceled;
        let uploadThrottled, downloadThrottled;
        let flushUpload, flushDownload;
        function done() {
            flushUpload && flushUpload(); // flush events
            flushDownload && flushDownload(); // flush events
            _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);
            _config.signal && _config.signal.removeEventListener('abort', onCanceled);
        }
        let request = new XMLHttpRequest();
        request.open(_config.method.toUpperCase(), _config.url, true);
        // Set the request timeout in MS
        request.timeout = _config.timeout;
        function onloadend() {
            if (!request) return;
            // Prepare the response
            const responseHeaders = (0, _axiosHeadersJsDefault.default).from('getAllResponseHeaders' in request && request.getAllResponseHeaders());
            const responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;
            const response = {
                data: responseData,
                status: request.status,
                statusText: request.statusText,
                headers: responseHeaders,
                config,
                request
            };
            (0, _settleJsDefault.default)(function _resolve(value) {
                resolve(value);
                done();
            }, function _reject(err) {
                reject(err);
                done();
            }, response);
            // Clean up request
            request = null;
        }
        if ('onloadend' in request) // Use onloadend if available
        request.onloadend = onloadend;
        else // Listen for ready state to emulate onloadend
        request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) return;
            // The request errored out and we didn't get a response, this will be
            // handled by onerror instead
            // With one exception: request that using file: protocol, most browsers
            // will return status as 0 even though it's a successful request
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) return;
            // readystate handler is calling before onerror or ontimeout handlers,
            // so we should call onloadend on the next 'tick'
            setTimeout(onloadend);
        };
        // Handle browser request cancellation (as opposed to a manual cancellation)
        request.onabort = function handleAbort() {
            if (!request) return;
            reject(new (0, _axiosErrorJsDefault.default)('Request aborted', (0, _axiosErrorJsDefault.default).ECONNABORTED, config, request));
            // Clean up request
            request = null;
        };
        // Handle low level network errors
        request.onerror = function handleError() {
            // Real errors are hidden from us by the browser
            // onerror should only fire if it's a network error
            reject(new (0, _axiosErrorJsDefault.default)('Network Error', (0, _axiosErrorJsDefault.default).ERR_NETWORK, config, request));
            // Clean up request
            request = null;
        };
        // Handle timeout
        request.ontimeout = function handleTimeout() {
            let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';
            const transitional = _config.transitional || (0, _transitionalJsDefault.default);
            if (_config.timeoutErrorMessage) timeoutErrorMessage = _config.timeoutErrorMessage;
            reject(new (0, _axiosErrorJsDefault.default)(timeoutErrorMessage, transitional.clarifyTimeoutError ? (0, _axiosErrorJsDefault.default).ETIMEDOUT : (0, _axiosErrorJsDefault.default).ECONNABORTED, config, request));
            // Clean up request
            request = null;
        };
        // Remove Content-Type if data is undefined
        requestData === undefined && requestHeaders.setContentType(null);
        // Add headers to the request
        if ('setRequestHeader' in request) (0, _utilsJsDefault.default).forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
            request.setRequestHeader(key, val);
        });
        // Add withCredentials to request if needed
        if (!(0, _utilsJsDefault.default).isUndefined(_config.withCredentials)) request.withCredentials = !!_config.withCredentials;
        // Add responseType to request if needed
        if (responseType && responseType !== 'json') request.responseType = _config.responseType;
        // Handle progress if needed
        if (onDownloadProgress) {
            [downloadThrottled, flushDownload] = (0, _progressEventReducerJs.progressEventReducer)(onDownloadProgress, true);
            request.addEventListener('progress', downloadThrottled);
        }
        // Not all browsers support upload events
        if (onUploadProgress && request.upload) {
            [uploadThrottled, flushUpload] = (0, _progressEventReducerJs.progressEventReducer)(onUploadProgress);
            request.upload.addEventListener('progress', uploadThrottled);
            request.upload.addEventListener('loadend', flushUpload);
        }
        if (_config.cancelToken || _config.signal) {
            // Handle cancellation
            // eslint-disable-next-line func-names
            onCanceled = (cancel)=>{
                if (!request) return;
                reject(!cancel || cancel.type ? new (0, _canceledErrorJsDefault.default)(null, config, request) : cancel);
                request.abort();
                request = null;
            };
            _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
            if (_config.signal) _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);
        }
        const protocol = (0, _parseProtocolJsDefault.default)(_config.url);
        if (protocol && (0, _indexJsDefault.default).protocols.indexOf(protocol) === -1) {
            reject(new (0, _axiosErrorJsDefault.default)('Unsupported protocol ' + protocol + ':', (0, _axiosErrorJsDefault.default).ERR_BAD_REQUEST, config));
            return;
        }
        // Send the request
        request.send(requestData || null);
    });
};

},{"./../utils.js":"jI6DP","./../core/settle.js":"2vmJg","../defaults/transitional.js":"cKdyU","../core/AxiosError.js":"7z85x","../cancel/CanceledError.js":"9yG1c","../helpers/parseProtocol.js":"af3D4","../platform/index.js":"626Zd","../core/AxiosHeaders.js":"9EzTj","../helpers/progressEventReducer.js":"6rzPu","../helpers/resolveConfig.js":"3RDMa","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2vmJg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>settle);
var _axiosErrorJs = require("./AxiosError.js");
var _axiosErrorJsDefault = parcelHelpers.interopDefault(_axiosErrorJs);
'use strict';
function settle(resolve, reject, response) {
    const validateStatus = response.config.validateStatus;
    if (!response.status || !validateStatus || validateStatus(response.status)) resolve(response);
    else reject(new (0, _axiosErrorJsDefault.default)('Request failed with status code ' + response.status, [
        (0, _axiosErrorJsDefault.default).ERR_BAD_REQUEST,
        (0, _axiosErrorJsDefault.default).ERR_BAD_RESPONSE
    ][Math.floor(response.status / 100) - 4], response.config, response.request, response));
}

},{"./AxiosError.js":"7z85x","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"af3D4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>parseProtocol);
'use strict';
function parseProtocol(url) {
    const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
    return match && match[1] || '';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6rzPu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "progressEventReducer", ()=>progressEventReducer);
parcelHelpers.export(exports, "progressEventDecorator", ()=>progressEventDecorator);
parcelHelpers.export(exports, "asyncDecorator", ()=>asyncDecorator);
var _speedometerJs = require("./speedometer.js");
var _speedometerJsDefault = parcelHelpers.interopDefault(_speedometerJs);
var _throttleJs = require("./throttle.js");
var _throttleJsDefault = parcelHelpers.interopDefault(_throttleJs);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
const progressEventReducer = (listener, isDownloadStream, freq = 3)=>{
    let bytesNotified = 0;
    const _speedometer = (0, _speedometerJsDefault.default)(50, 250);
    return (0, _throttleJsDefault.default)((e)=>{
        const loaded = e.loaded;
        const total = e.lengthComputable ? e.total : undefined;
        const progressBytes = loaded - bytesNotified;
        const rate = _speedometer(progressBytes);
        const inRange = loaded <= total;
        bytesNotified = loaded;
        const data = {
            loaded,
            total,
            progress: total ? loaded / total : undefined,
            bytes: progressBytes,
            rate: rate ? rate : undefined,
            estimated: rate && total && inRange ? (total - loaded) / rate : undefined,
            event: e,
            lengthComputable: total != null,
            [isDownloadStream ? 'download' : 'upload']: true
        };
        listener(data);
    }, freq);
};
const progressEventDecorator = (total, throttled)=>{
    const lengthComputable = total != null;
    return [
        (loaded)=>throttled[0]({
                lengthComputable,
                total,
                loaded
            }),
        throttled[1]
    ];
};
const asyncDecorator = (fn)=>(...args)=>(0, _utilsJsDefault.default).asap(()=>fn(...args));

},{"./speedometer.js":"cCdi6","./throttle.js":"esfhP","../utils.js":"jI6DP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cCdi6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
'use strict';
/**
 * Calculate data maxRate
 * @param {Number} [samplesCount= 10]
 * @param {Number} [min= 1000]
 * @returns {Function}
 */ function speedometer(samplesCount, min) {
    samplesCount = samplesCount || 10;
    const bytes = new Array(samplesCount);
    const timestamps = new Array(samplesCount);
    let head = 0;
    let tail = 0;
    let firstSampleTS;
    min = min !== undefined ? min : 1000;
    return function push(chunkLength) {
        const now = Date.now();
        const startedAt = timestamps[tail];
        if (!firstSampleTS) firstSampleTS = now;
        bytes[head] = chunkLength;
        timestamps[head] = now;
        let i = tail;
        let bytesCount = 0;
        while(i !== head){
            bytesCount += bytes[i++];
            i = i % samplesCount;
        }
        head = (head + 1) % samplesCount;
        if (head === tail) tail = (tail + 1) % samplesCount;
        if (now - firstSampleTS < min) return;
        const passed = startedAt && now - startedAt;
        return passed ? Math.round(bytesCount * 1000 / passed) : undefined;
    };
}
exports.default = speedometer;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"esfhP":[function(require,module,exports,__globalThis) {
/**
 * Throttle decorator
 * @param {Function} fn
 * @param {Number} freq
 * @return {Function}
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function throttle(fn, freq) {
    let timestamp = 0;
    let threshold = 1000 / freq;
    let lastArgs;
    let timer;
    const invoke = (args, now = Date.now())=>{
        timestamp = now;
        lastArgs = null;
        if (timer) {
            clearTimeout(timer);
            timer = null;
        }
        fn.apply(null, args);
    };
    const throttled = (...args)=>{
        const now = Date.now();
        const passed = now - timestamp;
        if (passed >= threshold) invoke(args, now);
        else {
            lastArgs = args;
            if (!timer) timer = setTimeout(()=>{
                timer = null;
                invoke(lastArgs);
            }, threshold - passed);
        }
    };
    const flush = ()=>lastArgs && invoke(lastArgs);
    return [
        throttled,
        flush
    ];
}
exports.default = throttle;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3RDMa":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../platform/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _isURLSameOriginJs = require("./isURLSameOrigin.js");
var _isURLSameOriginJsDefault = parcelHelpers.interopDefault(_isURLSameOriginJs);
var _cookiesJs = require("./cookies.js");
var _cookiesJsDefault = parcelHelpers.interopDefault(_cookiesJs);
var _buildFullPathJs = require("../core/buildFullPath.js");
var _buildFullPathJsDefault = parcelHelpers.interopDefault(_buildFullPathJs);
var _mergeConfigJs = require("../core/mergeConfig.js");
var _mergeConfigJsDefault = parcelHelpers.interopDefault(_mergeConfigJs);
var _axiosHeadersJs = require("../core/AxiosHeaders.js");
var _axiosHeadersJsDefault = parcelHelpers.interopDefault(_axiosHeadersJs);
var _buildURLJs = require("./buildURL.js");
var _buildURLJsDefault = parcelHelpers.interopDefault(_buildURLJs);
exports.default = (config)=>{
    const newConfig = (0, _mergeConfigJsDefault.default)({}, config);
    let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } = newConfig;
    newConfig.headers = headers = (0, _axiosHeadersJsDefault.default).from(headers);
    newConfig.url = (0, _buildURLJsDefault.default)((0, _buildFullPathJsDefault.default)(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);
    // HTTP basic authentication
    if (auth) headers.set('Authorization', 'Basic ' + btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : '')));
    let contentType;
    if ((0, _utilsJsDefault.default).isFormData(data)) {
        if ((0, _indexJsDefault.default).hasStandardBrowserEnv || (0, _indexJsDefault.default).hasStandardBrowserWebWorkerEnv) headers.setContentType(undefined); // Let the browser set it
        else if ((contentType = headers.getContentType()) !== false) {
            // fix semicolon duplication issue for ReactNative FormData implementation
            const [type, ...tokens] = contentType ? contentType.split(';').map((token)=>token.trim()).filter(Boolean) : [];
            headers.setContentType([
                type || 'multipart/form-data',
                ...tokens
            ].join('; '));
        }
    }
    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if ((0, _indexJsDefault.default).hasStandardBrowserEnv) {
        withXSRFToken && (0, _utilsJsDefault.default).isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));
        if (withXSRFToken || withXSRFToken !== false && (0, _isURLSameOriginJsDefault.default)(newConfig.url)) {
            // Add xsrf header
            const xsrfValue = xsrfHeaderName && xsrfCookieName && (0, _cookiesJsDefault.default).read(xsrfCookieName);
            if (xsrfValue) headers.set(xsrfHeaderName, xsrfValue);
        }
    }
    return newConfig;
};

},{"../platform/index.js":"626Zd","../utils.js":"jI6DP","./isURLSameOrigin.js":"d9uxL","./cookies.js":"hoVvn","../core/buildFullPath.js":"kg0Bk","../core/mergeConfig.js":"311Mu","../core/AxiosHeaders.js":"9EzTj","./buildURL.js":"3CNaw","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d9uxL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../platform/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
exports.default = (0, _indexJsDefault.default).hasStandardBrowserEnv ? ((origin, isMSIE)=>(url)=>{
        url = new URL(url, (0, _indexJsDefault.default).origin);
        return origin.protocol === url.protocol && origin.host === url.host && (isMSIE || origin.port === url.port);
    })(new URL((0, _indexJsDefault.default).origin), (0, _indexJsDefault.default).navigator && /(msie|trident)/i.test((0, _indexJsDefault.default).navigator.userAgent)) : ()=>true;

},{"../platform/index.js":"626Zd","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hoVvn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("./../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _indexJs = require("../platform/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
exports.default = (0, _indexJsDefault.default).hasStandardBrowserEnv ? // Standard browser envs support document.cookie
{
    write (name, value, expires, path, domain, secure) {
        const cookie = [
            name + '=' + encodeURIComponent(value)
        ];
        (0, _utilsJsDefault.default).isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());
        (0, _utilsJsDefault.default).isString(path) && cookie.push('path=' + path);
        (0, _utilsJsDefault.default).isString(domain) && cookie.push('domain=' + domain);
        secure === true && cookie.push('secure');
        document.cookie = cookie.join('; ');
    },
    read (name) {
        const match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return match ? decodeURIComponent(match[3]) : null;
    },
    remove (name) {
        this.write(name, '', Date.now() - 86400000);
    }
} : // Non-standard browser env (web workers, react-native) lack needed support.
{
    write () {},
    read () {
        return null;
    },
    remove () {}
};

},{"./../utils.js":"jI6DP","../platform/index.js":"626Zd","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kg0Bk":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>buildFullPath);
var _isAbsoluteURLJs = require("../helpers/isAbsoluteURL.js");
var _isAbsoluteURLJsDefault = parcelHelpers.interopDefault(_isAbsoluteURLJs);
var _combineURLsJs = require("../helpers/combineURLs.js");
var _combineURLsJsDefault = parcelHelpers.interopDefault(_combineURLsJs);
'use strict';
function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {
    let isRelativeUrl = !(0, _isAbsoluteURLJsDefault.default)(requestedURL);
    if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) return (0, _combineURLsJsDefault.default)(baseURL, requestedURL);
    return requestedURL;
}

},{"../helpers/isAbsoluteURL.js":"6XRC7","../helpers/combineURLs.js":"l5Wmt","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6XRC7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>isAbsoluteURL);
'use strict';
function isAbsoluteURL(url) {
    // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
    // by any combination of letters, digits, plus, period, or hyphen.
    return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l5Wmt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>combineURLs);
'use strict';
function combineURLs(baseURL, relativeURL) {
    return relativeURL ? baseURL.replace(/\/?\/$/, '') + '/' + relativeURL.replace(/^\/+/, '') : baseURL;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"311Mu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>mergeConfig);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _axiosHeadersJs = require("./AxiosHeaders.js");
var _axiosHeadersJsDefault = parcelHelpers.interopDefault(_axiosHeadersJs);
'use strict';
const headersToObject = (thing)=>thing instanceof (0, _axiosHeadersJsDefault.default) ? {
        ...thing
    } : thing;
function mergeConfig(config1, config2) {
    // eslint-disable-next-line no-param-reassign
    config2 = config2 || {};
    const config = {};
    function getMergedValue(target, source, prop, caseless) {
        if ((0, _utilsJsDefault.default).isPlainObject(target) && (0, _utilsJsDefault.default).isPlainObject(source)) return (0, _utilsJsDefault.default).merge.call({
            caseless
        }, target, source);
        else if ((0, _utilsJsDefault.default).isPlainObject(source)) return (0, _utilsJsDefault.default).merge({}, source);
        else if ((0, _utilsJsDefault.default).isArray(source)) return source.slice();
        return source;
    }
    // eslint-disable-next-line consistent-return
    function mergeDeepProperties(a, b, prop, caseless) {
        if (!(0, _utilsJsDefault.default).isUndefined(b)) return getMergedValue(a, b, prop, caseless);
        else if (!(0, _utilsJsDefault.default).isUndefined(a)) return getMergedValue(undefined, a, prop, caseless);
    }
    // eslint-disable-next-line consistent-return
    function valueFromConfig2(a, b) {
        if (!(0, _utilsJsDefault.default).isUndefined(b)) return getMergedValue(undefined, b);
    }
    // eslint-disable-next-line consistent-return
    function defaultToConfig2(a, b) {
        if (!(0, _utilsJsDefault.default).isUndefined(b)) return getMergedValue(undefined, b);
        else if (!(0, _utilsJsDefault.default).isUndefined(a)) return getMergedValue(undefined, a);
    }
    // eslint-disable-next-line consistent-return
    function mergeDirectKeys(a, b, prop) {
        if (prop in config2) return getMergedValue(a, b);
        else if (prop in config1) return getMergedValue(undefined, a);
    }
    const mergeMap = {
        url: valueFromConfig2,
        method: valueFromConfig2,
        data: valueFromConfig2,
        baseURL: defaultToConfig2,
        transformRequest: defaultToConfig2,
        transformResponse: defaultToConfig2,
        paramsSerializer: defaultToConfig2,
        timeout: defaultToConfig2,
        timeoutMessage: defaultToConfig2,
        withCredentials: defaultToConfig2,
        withXSRFToken: defaultToConfig2,
        adapter: defaultToConfig2,
        responseType: defaultToConfig2,
        xsrfCookieName: defaultToConfig2,
        xsrfHeaderName: defaultToConfig2,
        onUploadProgress: defaultToConfig2,
        onDownloadProgress: defaultToConfig2,
        decompress: defaultToConfig2,
        maxContentLength: defaultToConfig2,
        maxBodyLength: defaultToConfig2,
        beforeRedirect: defaultToConfig2,
        transport: defaultToConfig2,
        httpAgent: defaultToConfig2,
        httpsAgent: defaultToConfig2,
        cancelToken: defaultToConfig2,
        socketPath: defaultToConfig2,
        responseEncoding: defaultToConfig2,
        validateStatus: mergeDirectKeys,
        headers: (a, b, prop)=>mergeDeepProperties(headersToObject(a), headersToObject(b), prop, true)
    };
    (0, _utilsJsDefault.default).forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {
        const merge = mergeMap[prop] || mergeDeepProperties;
        const configValue = merge(config1[prop], config2[prop], prop);
        (0, _utilsJsDefault.default).isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
    });
    return config;
}

},{"../utils.js":"jI6DP","./AxiosHeaders.js":"9EzTj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d5PZl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../platform/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
var _axiosErrorJs = require("../core/AxiosError.js");
var _axiosErrorJsDefault = parcelHelpers.interopDefault(_axiosErrorJs);
var _composeSignalsJs = require("../helpers/composeSignals.js");
var _composeSignalsJsDefault = parcelHelpers.interopDefault(_composeSignalsJs);
var _trackStreamJs = require("../helpers/trackStream.js");
var _axiosHeadersJs = require("../core/AxiosHeaders.js");
var _axiosHeadersJsDefault = parcelHelpers.interopDefault(_axiosHeadersJs);
var _progressEventReducerJs = require("../helpers/progressEventReducer.js");
var _resolveConfigJs = require("../helpers/resolveConfig.js");
var _resolveConfigJsDefault = parcelHelpers.interopDefault(_resolveConfigJs);
var _settleJs = require("../core/settle.js");
var _settleJsDefault = parcelHelpers.interopDefault(_settleJs);
const isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';
const isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';
// used only inside the fetch adapter
const encodeText = isFetchSupported && (typeof TextEncoder === 'function' ? ((encoder)=>(str)=>encoder.encode(str))(new TextEncoder()) : async (str)=>new Uint8Array(await new Response(str).arrayBuffer()));
const test = (fn, ...args)=>{
    try {
        return !!fn(...args);
    } catch (e) {
        return false;
    }
};
const supportsRequestStream = isReadableStreamSupported && test(()=>{
    let duplexAccessed = false;
    const hasContentType = new Request((0, _indexJsDefault.default).origin, {
        body: new ReadableStream(),
        method: 'POST',
        get duplex () {
            duplexAccessed = true;
            return 'half';
        }
    }).headers.has('Content-Type');
    return duplexAccessed && !hasContentType;
});
const DEFAULT_CHUNK_SIZE = 65536;
const supportsResponseStream = isReadableStreamSupported && test(()=>(0, _utilsJsDefault.default).isReadableStream(new Response('').body));
const resolvers = {
    stream: supportsResponseStream && ((res)=>res.body)
};
isFetchSupported && ((res)=>{
    [
        'text',
        'arrayBuffer',
        'blob',
        'formData',
        'stream'
    ].forEach((type)=>{
        !resolvers[type] && (resolvers[type] = (0, _utilsJsDefault.default).isFunction(res[type]) ? (res)=>res[type]() : (_, config)=>{
            throw new (0, _axiosErrorJsDefault.default)(`Response type '${type}' is not supported`, (0, _axiosErrorJsDefault.default).ERR_NOT_SUPPORT, config);
        });
    });
})(new Response);
const getBodyLength = async (body)=>{
    if (body == null) return 0;
    if ((0, _utilsJsDefault.default).isBlob(body)) return body.size;
    if ((0, _utilsJsDefault.default).isSpecCompliantForm(body)) {
        const _request = new Request((0, _indexJsDefault.default).origin, {
            method: 'POST',
            body
        });
        return (await _request.arrayBuffer()).byteLength;
    }
    if ((0, _utilsJsDefault.default).isArrayBufferView(body) || (0, _utilsJsDefault.default).isArrayBuffer(body)) return body.byteLength;
    if ((0, _utilsJsDefault.default).isURLSearchParams(body)) body = body + '';
    if ((0, _utilsJsDefault.default).isString(body)) return (await encodeText(body)).byteLength;
};
const resolveBodyLength = async (headers, body)=>{
    const length = (0, _utilsJsDefault.default).toFiniteNumber(headers.getContentLength());
    return length == null ? getBodyLength(body) : length;
};
exports.default = isFetchSupported && (async (config)=>{
    let { url, method, data, signal, cancelToken, timeout, onDownloadProgress, onUploadProgress, responseType, headers, withCredentials = 'same-origin', fetchOptions } = (0, _resolveConfigJsDefault.default)(config);
    responseType = responseType ? (responseType + '').toLowerCase() : 'text';
    let composedSignal = (0, _composeSignalsJsDefault.default)([
        signal,
        cancelToken && cancelToken.toAbortSignal()
    ], timeout);
    let request;
    const unsubscribe = composedSignal && composedSignal.unsubscribe && (()=>{
        composedSignal.unsubscribe();
    });
    let requestContentLength;
    try {
        if (onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' && (requestContentLength = await resolveBodyLength(headers, data)) !== 0) {
            let _request = new Request(url, {
                method: 'POST',
                body: data,
                duplex: "half"
            });
            let contentTypeHeader;
            if ((0, _utilsJsDefault.default).isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) headers.setContentType(contentTypeHeader);
            if (_request.body) {
                const [onProgress, flush] = (0, _progressEventReducerJs.progressEventDecorator)(requestContentLength, (0, _progressEventReducerJs.progressEventReducer)((0, _progressEventReducerJs.asyncDecorator)(onUploadProgress)));
                data = (0, _trackStreamJs.trackStream)(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);
            }
        }
        if (!(0, _utilsJsDefault.default).isString(withCredentials)) withCredentials = withCredentials ? 'include' : 'omit';
        // Cloudflare Workers throws when credentials are defined
        // see https://github.com/cloudflare/workerd/issues/902
        const isCredentialsSupported = "credentials" in Request.prototype;
        request = new Request(url, {
            ...fetchOptions,
            signal: composedSignal,
            method: method.toUpperCase(),
            headers: headers.normalize().toJSON(),
            body: data,
            duplex: "half",
            credentials: isCredentialsSupported ? withCredentials : undefined
        });
        let response = await fetch(request);
        const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');
        if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {
            const options = {};
            [
                'status',
                'statusText',
                'headers'
            ].forEach((prop)=>{
                options[prop] = response[prop];
            });
            const responseContentLength = (0, _utilsJsDefault.default).toFiniteNumber(response.headers.get('content-length'));
            const [onProgress, flush] = onDownloadProgress && (0, _progressEventReducerJs.progressEventDecorator)(responseContentLength, (0, _progressEventReducerJs.progressEventReducer)((0, _progressEventReducerJs.asyncDecorator)(onDownloadProgress), true)) || [];
            response = new Response((0, _trackStreamJs.trackStream)(response.body, DEFAULT_CHUNK_SIZE, onProgress, ()=>{
                flush && flush();
                unsubscribe && unsubscribe();
            }), options);
        }
        responseType = responseType || 'text';
        let responseData = await resolvers[(0, _utilsJsDefault.default).findKey(resolvers, responseType) || 'text'](response, config);
        !isStreamResponse && unsubscribe && unsubscribe();
        return await new Promise((resolve, reject)=>{
            (0, _settleJsDefault.default)(resolve, reject, {
                data: responseData,
                headers: (0, _axiosHeadersJsDefault.default).from(response.headers),
                status: response.status,
                statusText: response.statusText,
                config,
                request
            });
        });
    } catch (err) {
        unsubscribe && unsubscribe();
        if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) throw Object.assign(new (0, _axiosErrorJsDefault.default)('Network Error', (0, _axiosErrorJsDefault.default).ERR_NETWORK, config, request), {
            cause: err.cause || err
        });
        throw (0, _axiosErrorJsDefault.default).from(err, err && err.code, config, request);
    }
});

},{"../platform/index.js":"626Zd","../utils.js":"jI6DP","../core/AxiosError.js":"7z85x","../helpers/composeSignals.js":"fy9c7","../helpers/trackStream.js":"6dI08","../core/AxiosHeaders.js":"9EzTj","../helpers/progressEventReducer.js":"6rzPu","../helpers/resolveConfig.js":"3RDMa","../core/settle.js":"2vmJg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fy9c7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _canceledErrorJs = require("../cancel/CanceledError.js");
var _canceledErrorJsDefault = parcelHelpers.interopDefault(_canceledErrorJs);
var _axiosErrorJs = require("../core/AxiosError.js");
var _axiosErrorJsDefault = parcelHelpers.interopDefault(_axiosErrorJs);
var _utilsJs = require("../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
const composeSignals = (signals, timeout)=>{
    const { length } = signals = signals ? signals.filter(Boolean) : [];
    if (timeout || length) {
        let controller = new AbortController();
        let aborted;
        const onabort = function(reason) {
            if (!aborted) {
                aborted = true;
                unsubscribe();
                const err = reason instanceof Error ? reason : this.reason;
                controller.abort(err instanceof (0, _axiosErrorJsDefault.default) ? err : new (0, _canceledErrorJsDefault.default)(err instanceof Error ? err.message : err));
            }
        };
        let timer = timeout && setTimeout(()=>{
            timer = null;
            onabort(new (0, _axiosErrorJsDefault.default)(`timeout ${timeout} of ms exceeded`, (0, _axiosErrorJsDefault.default).ETIMEDOUT));
        }, timeout);
        const unsubscribe = ()=>{
            if (signals) {
                timer && clearTimeout(timer);
                timer = null;
                signals.forEach((signal)=>{
                    signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);
                });
                signals = null;
            }
        };
        signals.forEach((signal)=>signal.addEventListener('abort', onabort));
        const { signal } = controller;
        signal.unsubscribe = ()=>(0, _utilsJsDefault.default).asap(unsubscribe);
        return signal;
    }
};
exports.default = composeSignals;

},{"../cancel/CanceledError.js":"9yG1c","../core/AxiosError.js":"7z85x","../utils.js":"jI6DP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6dI08":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "streamChunk", ()=>streamChunk);
parcelHelpers.export(exports, "readBytes", ()=>readBytes);
parcelHelpers.export(exports, "trackStream", ()=>trackStream);
const streamChunk = function*(chunk, chunkSize) {
    let len = chunk.byteLength;
    if (!chunkSize || len < chunkSize) {
        yield chunk;
        return;
    }
    let pos = 0;
    let end;
    while(pos < len){
        end = pos + chunkSize;
        yield chunk.slice(pos, end);
        pos = end;
    }
};
const readBytes = async function*(iterable, chunkSize) {
    for await (const chunk of readStream(iterable))yield* streamChunk(chunk, chunkSize);
};
const readStream = async function*(stream) {
    if (stream[Symbol.asyncIterator]) {
        yield* stream;
        return;
    }
    const reader = stream.getReader();
    try {
        for(;;){
            const { done, value } = await reader.read();
            if (done) break;
            yield value;
        }
    } finally{
        await reader.cancel();
    }
};
const trackStream = (stream, chunkSize, onProgress, onFinish)=>{
    const iterator = readBytes(stream, chunkSize);
    let bytes = 0;
    let done;
    let _onFinish = (e)=>{
        if (!done) {
            done = true;
            onFinish && onFinish(e);
        }
    };
    return new ReadableStream({
        async pull (controller) {
            try {
                const { done, value } = await iterator.next();
                if (done) {
                    _onFinish();
                    controller.close();
                    return;
                }
                let len = value.byteLength;
                if (onProgress) {
                    let loadedBytes = bytes += len;
                    onProgress(loadedBytes);
                }
                controller.enqueue(new Uint8Array(value));
            } catch (err) {
                _onFinish(err);
                throw err;
            }
        },
        cancel (reason) {
            _onFinish(reason);
            return iterator.return();
        }
    }, {
        highWaterMark: 2
    });
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9wnyh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _dataJs = require("../env/data.js");
var _axiosErrorJs = require("../core/AxiosError.js");
var _axiosErrorJsDefault = parcelHelpers.interopDefault(_axiosErrorJs);
'use strict';
const validators = {};
// eslint-disable-next-line func-names
[
    'object',
    'boolean',
    'number',
    'function',
    'string',
    'symbol'
].forEach((type, i)=>{
    validators[type] = function validator(thing) {
        return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
    };
});
const deprecatedWarnings = {};
/**
 * Transitional option validator
 *
 * @param {function|boolean?} validator - set to false if the transitional option has been removed
 * @param {string?} version - deprecated version / removed since version
 * @param {string?} message - some message with additional info
 *
 * @returns {function}
 */ validators.transitional = function transitional(validator, version, message) {
    function formatMessage(opt, desc) {
        return '[Axios v' + (0, _dataJs.VERSION) + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
    }
    // eslint-disable-next-line func-names
    return (value, opt, opts)=>{
        if (validator === false) throw new (0, _axiosErrorJsDefault.default)(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')), (0, _axiosErrorJsDefault.default).ERR_DEPRECATED);
        if (version && !deprecatedWarnings[opt]) {
            deprecatedWarnings[opt] = true;
            // eslint-disable-next-line no-console
            console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));
        }
        return validator ? validator(value, opt, opts) : true;
    };
};
validators.spelling = function spelling(correctSpelling) {
    return (value, opt)=>{
        // eslint-disable-next-line no-console
        console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);
        return true;
    };
};
/**
 * Assert object's properties type
 *
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 *
 * @returns {object}
 */ function assertOptions(options, schema, allowUnknown) {
    if (typeof options !== 'object') throw new (0, _axiosErrorJsDefault.default)('options must be an object', (0, _axiosErrorJsDefault.default).ERR_BAD_OPTION_VALUE);
    const keys = Object.keys(options);
    let i = keys.length;
    while(i-- > 0){
        const opt = keys[i];
        const validator = schema[opt];
        if (validator) {
            const value = options[opt];
            const result = value === undefined || validator(value, opt, options);
            if (result !== true) throw new (0, _axiosErrorJsDefault.default)('option ' + opt + ' must be ' + result, (0, _axiosErrorJsDefault.default).ERR_BAD_OPTION_VALUE);
            continue;
        }
        if (allowUnknown !== true) throw new (0, _axiosErrorJsDefault.default)('Unknown option ' + opt, (0, _axiosErrorJsDefault.default).ERR_BAD_OPTION);
    }
}
exports.default = {
    assertOptions,
    validators
};

},{"../env/data.js":"9SLyZ","../core/AxiosError.js":"7z85x","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9SLyZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VERSION", ()=>VERSION);
const VERSION = "1.8.4";

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kSqbX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _canceledErrorJs = require("./CanceledError.js");
var _canceledErrorJsDefault = parcelHelpers.interopDefault(_canceledErrorJs);
'use strict';
/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @param {Function} executor The executor function.
 *
 * @returns {CancelToken}
 */ class CancelToken {
    constructor(executor){
        if (typeof executor !== 'function') throw new TypeError('executor must be a function.');
        let resolvePromise;
        this.promise = new Promise(function promiseExecutor(resolve) {
            resolvePromise = resolve;
        });
        const token = this;
        // eslint-disable-next-line func-names
        this.promise.then((cancel)=>{
            if (!token._listeners) return;
            let i = token._listeners.length;
            while(i-- > 0)token._listeners[i](cancel);
            token._listeners = null;
        });
        // eslint-disable-next-line func-names
        this.promise.then = (onfulfilled)=>{
            let _resolve;
            // eslint-disable-next-line func-names
            const promise = new Promise((resolve)=>{
                token.subscribe(resolve);
                _resolve = resolve;
            }).then(onfulfilled);
            promise.cancel = function reject() {
                token.unsubscribe(_resolve);
            };
            return promise;
        };
        executor(function cancel(message, config, request) {
            if (token.reason) // Cancellation has already been requested
            return;
            token.reason = new (0, _canceledErrorJsDefault.default)(message, config, request);
            resolvePromise(token.reason);
        });
    }
    /**
   * Throws a `CanceledError` if cancellation has been requested.
   */ throwIfRequested() {
        if (this.reason) throw this.reason;
    }
    /**
   * Subscribe to the cancel signal
   */ subscribe(listener) {
        if (this.reason) {
            listener(this.reason);
            return;
        }
        if (this._listeners) this._listeners.push(listener);
        else this._listeners = [
            listener
        ];
    }
    /**
   * Unsubscribe from the cancel signal
   */ unsubscribe(listener) {
        if (!this._listeners) return;
        const index = this._listeners.indexOf(listener);
        if (index !== -1) this._listeners.splice(index, 1);
    }
    toAbortSignal() {
        const controller = new AbortController();
        const abort = (err)=>{
            controller.abort(err);
        };
        this.subscribe(abort);
        controller.signal.unsubscribe = ()=>this.unsubscribe(abort);
        return controller.signal;
    }
    /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */ static source() {
        let cancel;
        const token = new CancelToken(function executor(c) {
            cancel = c;
        });
        return {
            token,
            cancel
        };
    }
}
exports.default = CancelToken;

},{"./CanceledError.js":"9yG1c","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i5yWF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>spread);
'use strict';
function spread(callback) {
    return function wrap(arr) {
        return callback.apply(null, arr);
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2FN3e":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>isAxiosError);
var _utilsJs = require("./../utils.js");
var _utilsJsDefault = parcelHelpers.interopDefault(_utilsJs);
'use strict';
function isAxiosError(payload) {
    return (0, _utilsJsDefault.default).isObject(payload) && payload.isAxiosError === true;
}

},{"./../utils.js":"jI6DP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7tr76":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
const HttpStatusCode = {
    Continue: 100,
    SwitchingProtocols: 101,
    Processing: 102,
    EarlyHints: 103,
    Ok: 200,
    Created: 201,
    Accepted: 202,
    NonAuthoritativeInformation: 203,
    NoContent: 204,
    ResetContent: 205,
    PartialContent: 206,
    MultiStatus: 207,
    AlreadyReported: 208,
    ImUsed: 226,
    MultipleChoices: 300,
    MovedPermanently: 301,
    Found: 302,
    SeeOther: 303,
    NotModified: 304,
    UseProxy: 305,
    Unused: 306,
    TemporaryRedirect: 307,
    PermanentRedirect: 308,
    BadRequest: 400,
    Unauthorized: 401,
    PaymentRequired: 402,
    Forbidden: 403,
    NotFound: 404,
    MethodNotAllowed: 405,
    NotAcceptable: 406,
    ProxyAuthenticationRequired: 407,
    RequestTimeout: 408,
    Conflict: 409,
    Gone: 410,
    LengthRequired: 411,
    PreconditionFailed: 412,
    PayloadTooLarge: 413,
    UriTooLong: 414,
    UnsupportedMediaType: 415,
    RangeNotSatisfiable: 416,
    ExpectationFailed: 417,
    ImATeapot: 418,
    MisdirectedRequest: 421,
    UnprocessableEntity: 422,
    Locked: 423,
    FailedDependency: 424,
    TooEarly: 425,
    UpgradeRequired: 426,
    PreconditionRequired: 428,
    TooManyRequests: 429,
    RequestHeaderFieldsTooLarge: 431,
    UnavailableForLegalReasons: 451,
    InternalServerError: 500,
    NotImplemented: 501,
    BadGateway: 502,
    ServiceUnavailable: 503,
    GatewayTimeout: 504,
    HttpVersionNotSupported: 505,
    VariantAlsoNegotiates: 506,
    InsufficientStorage: 507,
    LoopDetected: 508,
    NotExtended: 510,
    NetworkAuthenticationRequired: 511
};
Object.entries(HttpStatusCode).forEach(([key, value])=>{
    HttpStatusCode[value] = key;
});
exports.default = HttpStatusCode;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"59JzK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Cookies", ()=>(0, _universalCookieDefault.default));
parcelHelpers.export(exports, "CookiesProvider", ()=>CookiesProvider);
parcelHelpers.export(exports, "useCookies", ()=>useCookies);
parcelHelpers.export(exports, "withCookies", ()=>withCookies);
var _universalCookie = require("universal-cookie");
var _universalCookieDefault = parcelHelpers.interopDefault(_universalCookie);
var _react = require("react");
const CookiesContext = _react.createContext(null);
const { Provider, Consumer } = CookiesContext;
const CookiesProvider = (props)=>{
    const cookies = _react.useMemo(()=>{
        if (props.cookies) return props.cookies;
        else return new (0, _universalCookieDefault.default)(undefined, props.defaultSetOptions);
    }, [
        props.cookies,
        props.defaultSetOptions
    ]);
    return _react.createElement(Provider, {
        value: cookies
    }, props.children);
};
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol, Iterator */ function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
typeof SuppressedError === "function" && SuppressedError;
function getDefaultExportFromCjs(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}
var reactIs = {
    exports: {}
};
var reactIs_production_min = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var hasRequiredReactIs_production_min;
function requireReactIs_production_min() {
    if (hasRequiredReactIs_production_min) return reactIs_production_min;
    hasRequiredReactIs_production_min = 1;
    var b = "function" === typeof Symbol && Symbol.for, c = b ? Symbol.for("react.element") : 60103, d = b ? Symbol.for("react.portal") : 60106, e = b ? Symbol.for("react.fragment") : 60107, f = b ? Symbol.for("react.strict_mode") : 60108, g = b ? Symbol.for("react.profiler") : 60114, h = b ? Symbol.for("react.provider") : 60109, k = b ? Symbol.for("react.context") : 60110, l = b ? Symbol.for("react.async_mode") : 60111, m = b ? Symbol.for("react.concurrent_mode") : 60111, n = b ? Symbol.for("react.forward_ref") : 60112, p = b ? Symbol.for("react.suspense") : 60113, q = b ? Symbol.for("react.suspense_list") : 60120, r = b ? Symbol.for("react.memo") : 60115, t = b ? Symbol.for("react.lazy") : 60116, v = b ? Symbol.for("react.block") : 60121, w = b ? Symbol.for("react.fundamental") : 60117, x = b ? Symbol.for("react.responder") : 60118, y = b ? Symbol.for("react.scope") : 60119;
    function z(a) {
        if ("object" === typeof a && null !== a) {
            var u = a.$$typeof;
            switch(u){
                case c:
                    switch(a = a.type, a){
                        case l:
                        case m:
                        case e:
                        case g:
                        case f:
                        case p:
                            return a;
                        default:
                            switch(a = a && a.$$typeof, a){
                                case k:
                                case n:
                                case t:
                                case r:
                                case h:
                                    return a;
                                default:
                                    return u;
                            }
                    }
                case d:
                    return u;
            }
        }
    }
    function A(a) {
        return z(a) === m;
    }
    reactIs_production_min.AsyncMode = l;
    reactIs_production_min.ConcurrentMode = m;
    reactIs_production_min.ContextConsumer = k;
    reactIs_production_min.ContextProvider = h;
    reactIs_production_min.Element = c;
    reactIs_production_min.ForwardRef = n;
    reactIs_production_min.Fragment = e;
    reactIs_production_min.Lazy = t;
    reactIs_production_min.Memo = r;
    reactIs_production_min.Portal = d;
    reactIs_production_min.Profiler = g;
    reactIs_production_min.StrictMode = f;
    reactIs_production_min.Suspense = p;
    reactIs_production_min.isAsyncMode = function(a) {
        return A(a) || z(a) === l;
    };
    reactIs_production_min.isConcurrentMode = A;
    reactIs_production_min.isContextConsumer = function(a) {
        return z(a) === k;
    };
    reactIs_production_min.isContextProvider = function(a) {
        return z(a) === h;
    };
    reactIs_production_min.isElement = function(a) {
        return "object" === typeof a && null !== a && a.$$typeof === c;
    };
    reactIs_production_min.isForwardRef = function(a) {
        return z(a) === n;
    };
    reactIs_production_min.isFragment = function(a) {
        return z(a) === e;
    };
    reactIs_production_min.isLazy = function(a) {
        return z(a) === t;
    };
    reactIs_production_min.isMemo = function(a) {
        return z(a) === r;
    };
    reactIs_production_min.isPortal = function(a) {
        return z(a) === d;
    };
    reactIs_production_min.isProfiler = function(a) {
        return z(a) === g;
    };
    reactIs_production_min.isStrictMode = function(a) {
        return z(a) === f;
    };
    reactIs_production_min.isSuspense = function(a) {
        return z(a) === p;
    };
    reactIs_production_min.isValidElementType = function(a) {
        return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
    };
    reactIs_production_min.typeOf = z;
    return reactIs_production_min;
}
var reactIs_development = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var hasRequiredReactIs_development;
function requireReactIs_development() {
    if (hasRequiredReactIs_development) return reactIs_development;
    hasRequiredReactIs_development = 1;
    (function() {
        // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
        // nor polyfill, then a plain number is used for performance.
        var hasSymbol = typeof Symbol === 'function' && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
        // (unstable) APIs that have been removed. Can we remove the symbols?
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
        function isValidElementType(type) {
            return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
            type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
            if (typeof object === 'object' && object !== null) {
                var $$typeof = object.$$typeof;
                switch($$typeof){
                    case REACT_ELEMENT_TYPE:
                        var type = object.type;
                        switch(type){
                            case REACT_ASYNC_MODE_TYPE:
                            case REACT_CONCURRENT_MODE_TYPE:
                            case REACT_FRAGMENT_TYPE:
                            case REACT_PROFILER_TYPE:
                            case REACT_STRICT_MODE_TYPE:
                            case REACT_SUSPENSE_TYPE:
                                return type;
                            default:
                                var $$typeofType = type && type.$$typeof;
                                switch($$typeofType){
                                    case REACT_CONTEXT_TYPE:
                                    case REACT_FORWARD_REF_TYPE:
                                    case REACT_LAZY_TYPE:
                                    case REACT_MEMO_TYPE:
                                    case REACT_PROVIDER_TYPE:
                                        return $$typeofType;
                                    default:
                                        return $$typeof;
                                }
                        }
                    case REACT_PORTAL_TYPE:
                        return $$typeof;
                }
            }
            return undefined;
        } // AsyncMode is deprecated along with isAsyncMode
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
        function isAsyncMode(object) {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
                hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
                console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
            return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
            return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
            return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
            return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
            return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
            return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
            return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
            return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
            return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
            return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
            return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
            return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
            return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        reactIs_development.AsyncMode = AsyncMode;
        reactIs_development.ConcurrentMode = ConcurrentMode;
        reactIs_development.ContextConsumer = ContextConsumer;
        reactIs_development.ContextProvider = ContextProvider;
        reactIs_development.Element = Element;
        reactIs_development.ForwardRef = ForwardRef;
        reactIs_development.Fragment = Fragment;
        reactIs_development.Lazy = Lazy;
        reactIs_development.Memo = Memo;
        reactIs_development.Portal = Portal;
        reactIs_development.Profiler = Profiler;
        reactIs_development.StrictMode = StrictMode;
        reactIs_development.Suspense = Suspense;
        reactIs_development.isAsyncMode = isAsyncMode;
        reactIs_development.isConcurrentMode = isConcurrentMode;
        reactIs_development.isContextConsumer = isContextConsumer;
        reactIs_development.isContextProvider = isContextProvider;
        reactIs_development.isElement = isElement;
        reactIs_development.isForwardRef = isForwardRef;
        reactIs_development.isFragment = isFragment;
        reactIs_development.isLazy = isLazy;
        reactIs_development.isMemo = isMemo;
        reactIs_development.isPortal = isPortal;
        reactIs_development.isProfiler = isProfiler;
        reactIs_development.isStrictMode = isStrictMode;
        reactIs_development.isSuspense = isSuspense;
        reactIs_development.isValidElementType = isValidElementType;
        reactIs_development.typeOf = typeOf;
    })();
    return reactIs_development;
}
var hasRequiredReactIs;
function requireReactIs() {
    if (hasRequiredReactIs) return reactIs.exports;
    hasRequiredReactIs = 1;
    reactIs.exports = requireReactIs_development();
    return reactIs.exports;
}
var hoistNonReactStatics_cjs;
var hasRequiredHoistNonReactStatics_cjs;
function requireHoistNonReactStatics_cjs() {
    if (hasRequiredHoistNonReactStatics_cjs) return hoistNonReactStatics_cjs;
    hasRequiredHoistNonReactStatics_cjs = 1;
    var reactIs = requireReactIs();
    /**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */ var REACT_STATICS = {
        childContextTypes: true,
        contextType: true,
        contextTypes: true,
        defaultProps: true,
        displayName: true,
        getDefaultProps: true,
        getDerivedStateFromError: true,
        getDerivedStateFromProps: true,
        mixins: true,
        propTypes: true,
        type: true
    };
    var KNOWN_STATICS = {
        name: true,
        length: true,
        prototype: true,
        caller: true,
        callee: true,
        arguments: true,
        arity: true
    };
    var FORWARD_REF_STATICS = {
        '$$typeof': true,
        render: true,
        defaultProps: true,
        displayName: true,
        propTypes: true
    };
    var MEMO_STATICS = {
        '$$typeof': true,
        compare: true,
        defaultProps: true,
        displayName: true,
        propTypes: true,
        type: true
    };
    var TYPE_STATICS = {};
    TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
    TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
    function getStatics(component) {
        // React v16.11 and below
        if (reactIs.isMemo(component)) return MEMO_STATICS;
         // React v16.12 and above
        return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
    }
    var defineProperty = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = Object.prototype;
    function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
        if (typeof sourceComponent !== 'string') {
            // don't hoist over string (html) components
            if (objectPrototype) {
                var inheritedComponent = getPrototypeOf(sourceComponent);
                if (inheritedComponent && inheritedComponent !== objectPrototype) hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
            var keys = getOwnPropertyNames(sourceComponent);
            if (getOwnPropertySymbols) keys = keys.concat(getOwnPropertySymbols(sourceComponent));
            var targetStatics = getStatics(targetComponent);
            var sourceStatics = getStatics(sourceComponent);
            for(var i = 0; i < keys.length; ++i){
                var key = keys[i];
                if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                    try {
                        // Avoid failures from read-only properties
                        defineProperty(targetComponent, key, descriptor);
                    } catch (e) {}
                }
            }
        }
        return targetComponent;
    }
    hoistNonReactStatics_cjs = hoistNonReactStatics;
    return hoistNonReactStatics_cjs;
}
var hoistNonReactStatics_cjsExports = requireHoistNonReactStatics_cjs();
var hoistStatics = /*@__PURE__*/ getDefaultExportFromCjs(hoistNonReactStatics_cjsExports);
function withCookies(WrappedComponent) {
    // @ts-ignore
    const name = WrappedComponent.displayName || WrappedComponent.name;
    class CookieWrapper extends _react.Component {
        constructor(){
            super(...arguments);
            this.onChange = ()=>{
                // Make sure to update children with new values
                this.forceUpdate();
            };
        }
        listen() {
            this.props.cookies.addChangeListener(this.onChange);
        }
        unlisten(cookies) {
            (cookies || this.props.cookies).removeChangeListener(this.onChange);
        }
        componentDidMount() {
            this.listen();
        }
        componentDidUpdate(prevProps) {
            if (prevProps.cookies !== this.props.cookies) {
                this.unlisten(prevProps.cookies);
                this.listen();
            }
        }
        componentWillUnmount() {
            this.unlisten();
        }
        render() {
            const _a = this.props, { forwardedRef, cookies } = _a, restProps = __rest(_a, [
                "forwardedRef",
                "cookies"
            ]);
            const allCookies = cookies.getAll({
                doNotUpdate: true
            });
            return _react.createElement(WrappedComponent, Object.assign({}, restProps, {
                ref: forwardedRef,
                cookies: cookies,
                allCookies: allCookies
            }));
        }
    }
    CookieWrapper.displayName = `withCookies(${name})`;
    CookieWrapper.WrappedComponent = WrappedComponent;
    const ForwardedComponent = _react.forwardRef((props, ref)=>{
        return _react.createElement(Consumer, null, (cookies)=>_react.createElement(CookieWrapper, Object.assign({
                cookies: cookies
            }, props, {
                forwardedRef: ref
            })));
    });
    ForwardedComponent.displayName = CookieWrapper.displayName;
    ForwardedComponent.WrappedComponent = CookieWrapper.WrappedComponent;
    return hoistStatics(ForwardedComponent, WrappedComponent);
}
function isInBrowser() {
    return typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';
}
function useCookies(dependencies, options) {
    const cookies = (0, _react.useContext)(CookiesContext);
    if (!cookies) throw new Error('Missing <CookiesProvider>');
    const defaultOptions = {
        doNotUpdate: true
    };
    const getOptions = Object.assign(Object.assign({}, defaultOptions), options);
    const [allCookies, setCookies] = (0, _react.useState)(()=>cookies.getAll(getOptions));
    if (isInBrowser()) (0, _react.useLayoutEffect)(()=>{
        function onChange() {
            if (!cookies) throw new Error('Missing <CookiesProvider>');
            const newCookies = cookies.getAll(getOptions);
            if (shouldUpdate(dependencies || null, newCookies, allCookies)) setCookies(newCookies);
        }
        cookies.addChangeListener(onChange);
        return ()=>{
            cookies.removeChangeListener(onChange);
        };
    }, [
        cookies,
        allCookies
    ]);
    const setCookie = (0, _react.useMemo)(()=>cookies.set.bind(cookies), [
        cookies
    ]);
    const removeCookie = (0, _react.useMemo)(()=>cookies.remove.bind(cookies), [
        cookies
    ]);
    const updateCookies = (0, _react.useMemo)(()=>cookies.update.bind(cookies), [
        cookies
    ]);
    return [
        allCookies,
        setCookie,
        removeCookie,
        updateCookies
    ];
}
function shouldUpdate(dependencies, newCookies, oldCookies) {
    if (!dependencies) return true;
    for (let dependency of dependencies){
        if (newCookies[dependency] !== oldCookies[dependency]) return true;
    }
    return false;
}

},{"universal-cookie":"ekvlm","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ekvlm":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Cookies);
var global = arguments[3];
var dist = {};
var hasRequiredDist;
function requireDist() {
    if (hasRequiredDist) return dist;
    hasRequiredDist = 1;
    Object.defineProperty(dist, "__esModule", {
        value: true
    });
    dist.parse = parse;
    dist.serialize = serialize;
    /**
	 * RegExp to match cookie-name in RFC 6265 sec 4.1.1
	 * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2
	 * which has been replaced by the token definition in RFC 7230 appendix B.
	 *
	 * cookie-name       = token
	 * token             = 1*tchar
	 * tchar             = "!" / "#" / "$" / "%" / "&" / "'" /
	 *                     "*" / "+" / "-" / "." / "^" / "_" /
	 *                     "`" / "|" / "~" / DIGIT / ALPHA
	 *
	 * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191
	 * Allow same range as cookie value, except `=`, which delimits end of name.
	 */ const cookieNameRegExp = /^[\u0021-\u003A\u003C\u003E-\u007E]+$/;
    /**
	 * RegExp to match cookie-value in RFC 6265 sec 4.1.1
	 *
	 * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )
	 * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E
	 *                     ; US-ASCII characters excluding CTLs,
	 *                     ; whitespace DQUOTE, comma, semicolon,
	 *                     ; and backslash
	 *
	 * Allowing more characters: https://github.com/jshttp/cookie/issues/191
	 * Comma, backslash, and DQUOTE are not part of the parsing algorithm.
	 */ const cookieValueRegExp = /^[\u0021-\u003A\u003C-\u007E]*$/;
    /**
	 * RegExp to match domain-value in RFC 6265 sec 4.1.1
	 *
	 * domain-value      = <subdomain>
	 *                     ; defined in [RFC1034], Section 3.5, as
	 *                     ; enhanced by [RFC1123], Section 2.1
	 * <subdomain>       = <label> | <subdomain> "." <label>
	 * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]
	 *                     Labels must be 63 characters or less.
	 *                     'let-dig' not 'letter' in the first char, per RFC1123
	 * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>
	 * <let-dig-hyp>     = <let-dig> | "-"
	 * <let-dig>         = <letter> | <digit>
	 * <letter>          = any one of the 52 alphabetic characters A through Z in
	 *                     upper case and a through z in lower case
	 * <digit>           = any one of the ten digits 0 through 9
	 *
	 * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173
	 *
	 * > (Note that a leading %x2E ("."), if present, is ignored even though that
	 * character is not permitted, but a trailing %x2E ("."), if present, will
	 * cause the user agent to ignore the attribute.)
	 */ const domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;
    /**
	 * RegExp to match path-value in RFC 6265 sec 4.1.1
	 *
	 * path-value        = <any CHAR except CTLs or ";">
	 * CHAR              = %x01-7F
	 *                     ; defined in RFC 5234 appendix B.1
	 */ const pathValueRegExp = /^[\u0020-\u003A\u003D-\u007E]*$/;
    const __toString = Object.prototype.toString;
    const NullObject = /* @__PURE__ */ (()=>{
        const C = function() {};
        C.prototype = Object.create(null);
        return C;
    })();
    /**
	 * Parse a cookie header.
	 *
	 * Parse the given cookie header string into an object
	 * The object has the various cookies as keys(names) => values
	 */ function parse(str, options) {
        const obj = new NullObject();
        const len = str.length;
        // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.
        if (len < 2) return obj;
        const dec = options?.decode || decode;
        let index = 0;
        do {
            const eqIdx = str.indexOf("=", index);
            if (eqIdx === -1) break; // No more cookie pairs.
            const colonIdx = str.indexOf(";", index);
            const endIdx = colonIdx === -1 ? len : colonIdx;
            if (eqIdx > endIdx) {
                // backtrack on prior semicolon
                index = str.lastIndexOf(";", eqIdx - 1) + 1;
                continue;
            }
            const keyStartIdx = startIndex(str, index, eqIdx);
            const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);
            const key = str.slice(keyStartIdx, keyEndIdx);
            // only assign once
            if (obj[key] === undefined) {
                let valStartIdx = startIndex(str, eqIdx + 1, endIdx);
                let valEndIdx = endIndex(str, endIdx, valStartIdx);
                const value = dec(str.slice(valStartIdx, valEndIdx));
                obj[key] = value;
            }
            index = endIdx + 1;
        }while (index < len);
        return obj;
    }
    function startIndex(str, index, max) {
        do {
            const code = str.charCodeAt(index);
            if (code !== 0x20 /*   */  && code !== 0x09 /* \t */ ) return index;
        }while (++index < max);
        return max;
    }
    function endIndex(str, index, min) {
        while(index > min){
            const code = str.charCodeAt(--index);
            if (code !== 0x20 /*   */  && code !== 0x09 /* \t */ ) return index + 1;
        }
        return min;
    }
    /**
	 * Serialize data into a cookie header.
	 *
	 * Serialize a name value pair into a cookie string suitable for
	 * http headers. An optional options object specifies cookie parameters.
	 *
	 * serialize('foo', 'bar', { httpOnly: true })
	 *   => "foo=bar; httpOnly"
	 */ function serialize(name, val, options) {
        const enc = options?.encode || encodeURIComponent;
        if (!cookieNameRegExp.test(name)) throw new TypeError(`argument name is invalid: ${name}`);
        const value = enc(val);
        if (!cookieValueRegExp.test(value)) throw new TypeError(`argument val is invalid: ${val}`);
        let str = name + "=" + value;
        if (!options) return str;
        if (options.maxAge !== undefined) {
            if (!Number.isInteger(options.maxAge)) throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);
            str += "; Max-Age=" + options.maxAge;
        }
        if (options.domain) {
            if (!domainValueRegExp.test(options.domain)) throw new TypeError(`option domain is invalid: ${options.domain}`);
            str += "; Domain=" + options.domain;
        }
        if (options.path) {
            if (!pathValueRegExp.test(options.path)) throw new TypeError(`option path is invalid: ${options.path}`);
            str += "; Path=" + options.path;
        }
        if (options.expires) {
            if (!isDate(options.expires) || !Number.isFinite(options.expires.valueOf())) throw new TypeError(`option expires is invalid: ${options.expires}`);
            str += "; Expires=" + options.expires.toUTCString();
        }
        if (options.httpOnly) str += "; HttpOnly";
        if (options.secure) str += "; Secure";
        if (options.partitioned) str += "; Partitioned";
        if (options.priority) {
            const priority = typeof options.priority === "string" ? options.priority.toLowerCase() : undefined;
            switch(priority){
                case "low":
                    str += "; Priority=Low";
                    break;
                case "medium":
                    str += "; Priority=Medium";
                    break;
                case "high":
                    str += "; Priority=High";
                    break;
                default:
                    throw new TypeError(`option priority is invalid: ${options.priority}`);
            }
        }
        if (options.sameSite) {
            const sameSite = typeof options.sameSite === "string" ? options.sameSite.toLowerCase() : options.sameSite;
            switch(sameSite){
                case true:
                case "strict":
                    str += "; SameSite=Strict";
                    break;
                case "lax":
                    str += "; SameSite=Lax";
                    break;
                case "none":
                    str += "; SameSite=None";
                    break;
                default:
                    throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);
            }
        }
        return str;
    }
    /**
	 * URL-decode string value. Optimized to skip native call when no %.
	 */ function decode(str) {
        if (str.indexOf("%") === -1) return str;
        try {
            return decodeURIComponent(str);
        } catch (e) {
            return str;
        }
    }
    /**
	 * Determine if value is a Date.
	 */ function isDate(val) {
        return __toString.call(val) === "[object Date]";
    }
    return dist;
}
var distExports = requireDist();
function hasDocumentCookie() {
    const testingValue = typeof global === 'undefined' ? undefined : global.TEST_HAS_DOCUMENT_COOKIE;
    if (typeof testingValue === 'boolean') return testingValue;
    // Can we get/set cookies on document.cookie?
    return typeof document === 'object' && typeof document.cookie === 'string';
}
function parseCookies(cookies) {
    if (typeof cookies === 'string') return distExports.parse(cookies);
    else if (typeof cookies === 'object' && cookies !== null) return cookies;
    else return {};
}
function readCookie(value, options = {}) {
    const cleanValue = cleanupCookieValue(value);
    if (!options.doNotParse) try {
        return JSON.parse(cleanValue);
    } catch (e) {
    // At least we tried
    }
    // Ignore clean value if we failed the deserialization
    // It is not relevant anymore to trim those values
    return value;
}
function cleanupCookieValue(value) {
    // express prepend j: before serializing a cookie
    if (value && value[0] === 'j' && value[1] === ':') return value.substr(2);
    return value;
}
class Cookies {
    constructor(cookies, defaultSetOptions = {}){
        this.changeListeners = [];
        this.HAS_DOCUMENT_COOKIE = false;
        this.update = ()=>{
            if (!this.HAS_DOCUMENT_COOKIE) return;
            const previousCookies = this.cookies;
            this.cookies = distExports.parse(document.cookie);
            this._checkChanges(previousCookies);
        };
        const domCookies = typeof document === 'undefined' ? '' : document.cookie;
        this.cookies = parseCookies(cookies || domCookies);
        this.defaultSetOptions = defaultSetOptions;
        this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();
    }
    _emitChange(params) {
        for(let i = 0; i < this.changeListeners.length; ++i)this.changeListeners[i](params);
    }
    _checkChanges(previousCookies) {
        const names = new Set(Object.keys(previousCookies).concat(Object.keys(this.cookies)));
        names.forEach((name)=>{
            if (previousCookies[name] !== this.cookies[name]) this._emitChange({
                name,
                value: readCookie(this.cookies[name])
            });
        });
    }
    _startPolling() {
        this.pollingInterval = setInterval(this.update, 300);
    }
    _stopPolling() {
        if (this.pollingInterval) clearInterval(this.pollingInterval);
    }
    get(name, options = {}) {
        if (!options.doNotUpdate) this.update();
        return readCookie(this.cookies[name], options);
    }
    getAll(options = {}) {
        if (!options.doNotUpdate) this.update();
        const result = {};
        for(let name in this.cookies)result[name] = readCookie(this.cookies[name], options);
        return result;
    }
    set(name, value, options) {
        if (options) options = Object.assign(Object.assign({}, this.defaultSetOptions), options);
        else options = this.defaultSetOptions;
        const stringValue = typeof value === 'string' ? value : JSON.stringify(value);
        this.cookies = Object.assign(Object.assign({}, this.cookies), {
            [name]: stringValue
        });
        if (this.HAS_DOCUMENT_COOKIE) document.cookie = distExports.serialize(name, stringValue, options);
        this._emitChange({
            name,
            value,
            options
        });
    }
    remove(name, options) {
        const finalOptions = options = Object.assign(Object.assign(Object.assign({}, this.defaultSetOptions), options), {
            expires: new Date(1970, 1, 1, 0, 0, 1),
            maxAge: 0
        });
        this.cookies = Object.assign({}, this.cookies);
        delete this.cookies[name];
        if (this.HAS_DOCUMENT_COOKIE) document.cookie = distExports.serialize(name, '', finalOptions);
        this._emitChange({
            name,
            value: undefined,
            options
        });
    }
    addChangeListener(callback) {
        this.changeListeners.push(callback);
        if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 1) {
            if (typeof window === 'object' && 'cookieStore' in window) window.cookieStore.addEventListener('change', this.update);
            else this._startPolling();
        }
    }
    removeChangeListener(callback) {
        const idx = this.changeListeners.indexOf(callback);
        if (idx >= 0) this.changeListeners.splice(idx, 1);
        if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 0) {
            if (typeof window === 'object' && 'cookieStore' in window) window.cookieStore.removeEventListener('change', this.update);
            else this._stopPolling();
        }
    }
    removeAllChangeListeners() {
        while(this.changeListeners.length > 0)this.removeChangeListener(this.changeListeners[0]);
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7h6Pi":[function(require,module,exports,__globalThis) {
"use strict";
var Refresh = require("7422ead32dcc1e6b");
function debounce(func, delay) {
    {
        let timeout = undefined;
        let lastTime = 0;
        return function(args) {
            // Call immediately if last call was more than the delay ago.
            // Otherwise, set a timeout. This means the first call is fast
            // (for the common case of a single update), and subsequent updates
            // are batched.
            let now = Date.now();
            if (now - lastTime > delay) {
                lastTime = now;
                func.call(null, args);
            } else {
                clearTimeout(timeout);
                timeout = setTimeout(function() {
                    timeout = undefined;
                    lastTime = Date.now();
                    func.call(null, args);
                }, delay);
            }
        };
    }
}
var enqueueUpdate = debounce(function() {
    Refresh.performReactRefresh();
}, 30);
module.exports.init = function() {
    if (!globalThis.$RefreshReg$) {
        Refresh.injectIntoGlobalHook(globalThis);
        globalThis.$RefreshReg$ = function() {};
        globalThis.$RefreshSig$ = function() {
            return function(type) {
                return type;
            };
        };
        if (typeof window !== 'undefined') {
            let ErrorOverlay = require("e4d875b7642f9496");
            ErrorOverlay.setEditorHandler(function(errorLocation) {
                let file = `${errorLocation.fileName}:${errorLocation.lineNumber || 1}:${errorLocation.colNumber || 1}`;
                fetch(module.bundle.devServer + `/__parcel_launch_editor?file=${encodeURIComponent(file)}`);
            });
            ErrorOverlay.startReportingRuntimeErrors({
                onError: function() {}
            });
            window.addEventListener('parcelhmraccept', ()=>{
                ErrorOverlay.dismissRuntimeErrors();
            });
        }
    }
};
// Everything below is either adapted or copied from
// https://github.com/facebook/metro/blob/61de16bd1edd7e738dd0311c89555a644023ab2d/packages/metro/src/lib/polyfills/require.js
// MIT License - Copyright (c) Facebook, Inc. and its affiliates.
module.exports.prelude = function(module1) {
    globalThis.$RefreshReg$ = function(type, id) {
        Refresh.register(type, module1.id + ' ' + id);
    };
    globalThis.$RefreshSig$ = Refresh.createSignatureFunctionForTransform;
};
module.exports.postlude = function(module1) {
    if (typeof window === 'undefined') return;
    if (isReactRefreshBoundary(module1.exports)) {
        registerExportsForReactRefresh(module1);
        if (module1.hot) {
            module1.hot.dispose(function(data) {
                if (Refresh.hasUnrecoverableErrors()) window.location.reload();
                data.prevExports = module1.exports;
            });
            module1.hot.accept(function(getParents) {
                var prevExports = module1.hot.data.prevExports;
                var nextExports = module1.exports;
                // Since we just executed the code for it, it's possible
                // that the new exports make it ineligible for being a boundary.
                var isNoLongerABoundary = !isReactRefreshBoundary(nextExports);
                // It can also become ineligible if its exports are incompatible
                // with the previous exports.
                // For example, if you add/remove/change exports, we'll want
                // to re-execute the importing modules, and force those components
                // to re-render. Similarly, if you convert a class component
                // to a function, we want to invalidate the boundary.
                var didInvalidate = shouldInvalidateReactRefreshBoundary(prevExports, nextExports);
                if (isNoLongerABoundary || didInvalidate) {
                    // We'll be conservative. The only case in which we won't do a full
                    // reload is if all parent modules are also refresh boundaries.
                    // In that case we'll add them to the current queue.
                    var parents = getParents();
                    if (parents.length === 0) {
                        // Looks like we bubbled to the root. Can't recover from that.
                        window.location.reload();
                        return;
                    }
                    return parents;
                }
                enqueueUpdate();
            });
        }
    }
};
function isReactRefreshBoundary(exports) {
    if (Refresh.isLikelyComponentType(exports)) return true;
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    return false;
    var hasExports = false;
    var areAllExportsComponents = true;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        hasExports = true;
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) // Don't invoke getters for CJS as they may have side effects.
        return false;
        var exportValue = exports[key];
        if (!Refresh.isLikelyComponentType(exportValue)) areAllExportsComponents = false;
    }
    return hasExports && areAllExportsComponents;
}
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
    var prevSignature = getRefreshBoundarySignature(prevExports);
    var nextSignature = getRefreshBoundarySignature(nextExports);
    if (prevSignature.length !== nextSignature.length) return true;
    for(var i = 0; i < nextSignature.length; i++){
        if (prevSignature[i] !== nextSignature[i]) return true;
    }
    return false;
}
// When this signature changes, it's unsafe to stop at this refresh boundary.
function getRefreshBoundarySignature(exports) {
    var signature = [];
    signature.push(Refresh.getFamilyByType(exports));
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return signature;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        signature.push(key);
        signature.push(Refresh.getFamilyByType(exportValue));
    }
    return signature;
}
function registerExportsForReactRefresh(module1) {
    var exports = module1.exports, id = module1.id;
    Refresh.register(exports, id + ' %exports%');
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        var typeID = id + ' %exports% ' + key;
        Refresh.register(exportValue, typeID);
    }
}

},{"7422ead32dcc1e6b":"hpiFP","e4d875b7642f9496":"gnoim"}],"hpiFP":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("96622d495519d4e");

},{"96622d495519d4e":"7AD9f"}],"7AD9f":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function computeFullKey(signature) {
        if (null !== signature.fullKey) return signature.fullKey;
        var fullKey = signature.ownKey;
        try {
            var hooks = signature.getCustomHooks();
        } catch (err) {
            return signature.forceReset = !0, signature.fullKey = fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if ("function" !== typeof hook) return signature.forceReset = !0, signature.fullKey = fullKey;
            hook = allSignaturesByType.get(hook);
            if (void 0 !== hook) {
                var nestedHookKey = computeFullKey(hook);
                hook.forceReset && (signature.forceReset = !0);
                fullKey += "\n---\n" + nestedHookKey;
            }
        }
        return signature.fullKey = fullKey;
    }
    function resolveFamily(type) {
        return updatedFamiliesByType.get(type);
    }
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function getProperty(object, property) {
        try {
            return object[property];
        } catch (err) {}
    }
    function register(type, id) {
        if (!(null === type || "function" !== typeof type && "object" !== typeof type || allFamiliesByType.has(type))) {
            var family = allFamiliesByID.get(id);
            void 0 === family ? (family = {
                current: type
            }, allFamiliesByID.set(id, family)) : pendingUpdates.push([
                family,
                type
            ]);
            allFamiliesByType.set(type, family);
            if ("object" === typeof type && null !== type) switch(getProperty(type, "$$typeof")){
                case REACT_FORWARD_REF_TYPE:
                    register(type.render, id + "$render");
                    break;
                case REACT_MEMO_TYPE:
                    register(type.type, id + "$type");
            }
        }
    }
    function setSignature(type, key) {
        var forceReset = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !1, getCustomHooks = 3 < arguments.length ? arguments[3] : void 0;
        allSignaturesByType.has(type) || allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
        if ("object" === typeof type && null !== type) switch(getProperty(type, "$$typeof")){
            case REACT_FORWARD_REF_TYPE:
                setSignature(type.render, key, forceReset, getCustomHooks);
                break;
            case REACT_MEMO_TYPE:
                setSignature(type.type, key, forceReset, getCustomHooks);
        }
    }
    function collectCustomHooksForSignature(type) {
        type = allSignaturesByType.get(type);
        void 0 !== type && computeFullKey(type);
    }
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_MEMO_TYPE = Symbol.for("react.memo"), PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map, allFamiliesByID = new Map(), allFamiliesByType = new PossiblyWeakMap(), allSignaturesByType = new PossiblyWeakMap(), updatedFamiliesByType = new PossiblyWeakMap(), pendingUpdates = [], helpersByRendererID = new Map(), helpersByRoot = new Map(), mountedRoots = new Set(), failedRoots = new Set(), rootElements = "function" === typeof WeakMap ? new WeakMap() : null, isPerformingRefresh = !1;
    exports._getMountedRootCount = function() {
        return mountedRoots.size;
    };
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = function() {
        var savedType, hasCustomHooks, didCollectHooks = !1;
        return function(type, key, forceReset, getCustomHooks) {
            if ("string" === typeof key) return savedType || (savedType = type, hasCustomHooks = "function" === typeof getCustomHooks), null == type || "function" !== typeof type && "object" !== typeof type || setSignature(type, key, forceReset, getCustomHooks), type;
            !didCollectHooks && hasCustomHooks && (didCollectHooks = !0, collectCustomHooksForSignature(savedType));
        };
    };
    exports.getFamilyByID = function(id) {
        return allFamiliesByID.get(id);
    };
    exports.getFamilyByType = function(type) {
        return allFamiliesByType.get(type);
    };
    exports.hasUnrecoverableErrors = function() {
        return !1;
    };
    exports.injectIntoGlobalHook = function(globalObject) {
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (void 0 === hook) {
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: !0,
                inject: function() {
                    return nextID++;
                },
                onScheduleFiberRoot: function() {},
                onCommitFiberRoot: function() {},
                onCommitFiberUnmount: function() {}
            };
        }
        if (hook.isDisabled) console.warn("Something has shimmed the React DevTools global hook (__REACT_DEVTOOLS_GLOBAL_HOOK__). Fast Refresh is not compatible with this shim and will be disabled.");
        else {
            var oldInject = hook.inject;
            hook.inject = function(injected) {
                var id = oldInject.apply(this, arguments);
                "function" === typeof injected.scheduleRefresh && "function" === typeof injected.setRefreshHandler && helpersByRendererID.set(id, injected);
                return id;
            };
            hook.renderers.forEach(function(injected, id) {
                "function" === typeof injected.scheduleRefresh && "function" === typeof injected.setRefreshHandler && helpersByRendererID.set(id, injected);
            });
            var oldOnCommitFiberRoot = hook.onCommitFiberRoot, oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {};
            hook.onScheduleFiberRoot = function(id, root, children) {
                isPerformingRefresh || (failedRoots.delete(root), null !== rootElements && rootElements.set(root, children));
                return oldOnScheduleFiberRoot.apply(this, arguments);
            };
            hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
                var helpers = helpersByRendererID.get(id);
                if (void 0 !== helpers) {
                    helpersByRoot.set(root, helpers);
                    helpers = root.current;
                    var alternate = helpers.alternate;
                    null !== alternate ? (alternate = null != alternate.memoizedState && null != alternate.memoizedState.element && mountedRoots.has(root), helpers = null != helpers.memoizedState && null != helpers.memoizedState.element, !alternate && helpers ? (mountedRoots.add(root), failedRoots.delete(root)) : alternate && helpers || (alternate && !helpers ? (mountedRoots.delete(root), didError ? failedRoots.add(root) : helpersByRoot.delete(root)) : alternate || helpers || didError && failedRoots.add(root))) : mountedRoots.add(root);
                }
                return oldOnCommitFiberRoot.apply(this, arguments);
            };
        }
    };
    exports.isLikelyComponentType = function(type) {
        switch(typeof type){
            case "function":
                if (null != type.prototype) {
                    if (type.prototype.isReactComponent) return !0;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (1 < ownNames.length || "constructor" !== ownNames[0] || type.prototype.__proto__ !== Object.prototype) return !1;
                }
                type = type.name || type.displayName;
                return "string" === typeof type && /^[A-Z]/.test(type);
            case "object":
                if (null != type) switch(getProperty(type, "$$typeof")){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        return !0;
                }
                return !1;
            default:
                return !1;
        }
    };
    exports.performReactRefresh = function() {
        if (0 === pendingUpdates.length || isPerformingRefresh) return null;
        isPerformingRefresh = !0;
        try {
            var staleFamilies = new Set(), updatedFamilies = new Set(), updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0];
                _ref = _ref[1];
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(_ref, family);
                family.current = _ref;
                prevType.prototype && prevType.prototype.isReactComponent || _ref.prototype && _ref.prototype.isReactComponent ? _ref = !1 : (prevType = allSignaturesByType.get(prevType), _ref = allSignaturesByType.get(_ref), _ref = void 0 === prevType && void 0 === _ref || void 0 !== prevType && void 0 !== _ref && computeFullKey(prevType) === computeFullKey(_ref) && !_ref.forceReset ? !0 : !1);
                _ref ? updatedFamilies.add(family) : staleFamilies.add(family);
            });
            var update = {
                updatedFamilies: updatedFamilies,
                staleFamilies: staleFamilies
            };
            helpersByRendererID.forEach(function(helpers) {
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = !1, firstError = null, failedRootsSnapshot = cloneSet(failedRoots), mountedRootsSnapshot = cloneSet(mountedRoots), helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (void 0 === helpers) throw Error("Could not find helpers for a root. This is a bug in React Refresh.");
                failedRoots.has(root);
                if (null !== rootElements && rootElements.has(root)) {
                    var element = rootElements.get(root);
                    try {
                        helpers.scheduleRoot(root, element);
                    } catch (err) {
                        didError || (didError = !0, firstError = err);
                    }
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (void 0 === helpers) throw Error("Could not find helpers for a root. This is a bug in React Refresh.");
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    didError || (didError = !0, firstError = err);
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = !1;
        }
    };
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"gnoim":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setEditorHandler", ()=>$da9882e673ac146b$export$25a22ac46f1bd016);
parcelHelpers.export(exports, "reportRuntimeError", ()=>$da9882e673ac146b$export$74e9101ce4078c0);
parcelHelpers.export(exports, "startReportingRuntimeErrors", ()=>$da9882e673ac146b$export$cda2c88a41631c16);
parcelHelpers.export(exports, "dismissRuntimeErrors", ()=>$da9882e673ac146b$export$1cfa6d161ca81bd9);
parcelHelpers.export(exports, "stopReportingRuntimeErrors", ()=>$da9882e673ac146b$export$25ba7d9a816639e7);
function $parcel$interopDefault(a) {
    return a && a.__esModule ? a.default : a;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ /* eslint-disable react/react-in-jsx-scope, no-console */ var $b6c7f0288a15c619$var$n, $b6c7f0288a15c619$export$41c562ebe57d11e2, $b6c7f0288a15c619$var$t, $b6c7f0288a15c619$export$a8257692ac88316c, $b6c7f0288a15c619$var$i, $b6c7f0288a15c619$var$r, $b6c7f0288a15c619$var$o, $b6c7f0288a15c619$var$e, $b6c7f0288a15c619$var$f, $b6c7f0288a15c619$var$c, $b6c7f0288a15c619$var$s, $b6c7f0288a15c619$var$a, $b6c7f0288a15c619$var$h, $b6c7f0288a15c619$var$p = {}, $b6c7f0288a15c619$var$v = [], $b6c7f0288a15c619$var$y = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, $b6c7f0288a15c619$var$d = Array.isArray;
function $b6c7f0288a15c619$var$w(n, l) {
    for(var t in l)n[t] = l[t];
    return n;
}
function $b6c7f0288a15c619$var$g(n) {
    n && n.parentNode && n.parentNode.removeChild(n);
}
function $b6c7f0288a15c619$export$c8a8987d4410bf2d(l, t, u) {
    var i, r, o, e = {};
    for(o in t)"key" == o ? i = t[o] : "ref" == o ? r = t[o] : e[o] = t[o];
    if (arguments.length > 2 && (e.children = arguments.length > 3 ? $b6c7f0288a15c619$var$n.call(arguments, 2) : u), "function" == typeof l && null != l.defaultProps) for(o in l.defaultProps)void 0 === e[o] && (e[o] = l.defaultProps[o]);
    return $b6c7f0288a15c619$var$m(l, e, i, r, null);
}
function $b6c7f0288a15c619$var$m(n, u, i, r, o) {
    var e = {
        type: n,
        props: u,
        key: i,
        ref: r,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __c: null,
        constructor: void 0,
        __v: null == o ? ++$b6c7f0288a15c619$var$t : o,
        __i: -1,
        __u: 0
    };
    return null == o && null != $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(e), e;
}
function $b6c7f0288a15c619$export$7d1e3a5e95ceca43() {
    return {
        current: null
    };
}
function $b6c7f0288a15c619$export$ffb0004e005737fa(n) {
    return n.children;
}
function $b6c7f0288a15c619$export$16fa2f45be04daa8(n, l) {
    this.props = n, this.context = l;
}
function $b6c7f0288a15c619$var$S(n, l) {
    if (null == l) return n.__ ? $b6c7f0288a15c619$var$S(n.__, n.__i + 1) : null;
    for(var t; l < n.__k.length; l++)if (null != (t = n.__k[l]) && null != t.__e) return t.__e;
    return "function" == typeof n.type ? $b6c7f0288a15c619$var$S(n) : null;
}
function $b6c7f0288a15c619$var$C(n) {
    var l, t;
    if (null != (n = n.__) && null != n.__c) {
        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (t = n.__k[l]) && null != t.__e) {
            n.__e = n.__c.base = t.__e;
            break;
        }
        return $b6c7f0288a15c619$var$C(n);
    }
}
function $b6c7f0288a15c619$var$M(n) {
    (!n.__d && (n.__d = !0) && $b6c7f0288a15c619$var$i.push(n) && !$b6c7f0288a15c619$var$$.__r++ || $b6c7f0288a15c619$var$r !== $b6c7f0288a15c619$export$41c562ebe57d11e2.debounceRendering) && (($b6c7f0288a15c619$var$r = $b6c7f0288a15c619$export$41c562ebe57d11e2.debounceRendering) || $b6c7f0288a15c619$var$o)($b6c7f0288a15c619$var$$);
}
function $b6c7f0288a15c619$var$$() {
    for(var n, t, u, r, o, f, c, s = 1; $b6c7f0288a15c619$var$i.length;)$b6c7f0288a15c619$var$i.length > s && $b6c7f0288a15c619$var$i.sort($b6c7f0288a15c619$var$e), n = $b6c7f0288a15c619$var$i.shift(), s = $b6c7f0288a15c619$var$i.length, n.__d && (u = void 0, o = (r = (t = n).__v).__e, f = [], c = [], t.__P && ((u = $b6c7f0288a15c619$var$w({}, r)).__v = r.__v + 1, $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(u), $b6c7f0288a15c619$var$O(t.__P, u, r, t.__n, t.__P.namespaceURI, 32 & r.__u ? [
        o
    ] : null, f, null == o ? $b6c7f0288a15c619$var$S(r) : o, !!(32 & r.__u), c), u.__v = r.__v, u.__.__k[u.__i] = u, $b6c7f0288a15c619$var$z(f, u, c), u.__e != o && $b6c7f0288a15c619$var$C(u)));
    $b6c7f0288a15c619$var$$.__r = 0;
}
function $b6c7f0288a15c619$var$I(n, l, t, u, i, r, o, e, f, c, s) {
    var a, h, y, d, w, g, _ = u && u.__k || $b6c7f0288a15c619$var$v, m = l.length;
    for(f = $b6c7f0288a15c619$var$P(t, l, _, f, m), a = 0; a < m; a++)null != (y = t.__k[a]) && (h = -1 === y.__i ? $b6c7f0288a15c619$var$p : _[y.__i] || $b6c7f0288a15c619$var$p, y.__i = a, g = $b6c7f0288a15c619$var$O(n, y, h, i, r, o, e, f, c, s), d = y.__e, y.ref && h.ref != y.ref && (h.ref && $b6c7f0288a15c619$var$q(h.ref, null, y), s.push(y.ref, y.__c || d, y)), null == w && null != d && (w = d), 4 & y.__u || h.__k === y.__k ? f = $b6c7f0288a15c619$var$A(y, f, n) : "function" == typeof y.type && void 0 !== g ? f = g : d && (f = d.nextSibling), y.__u &= -7);
    return t.__e = w, f;
}
function $b6c7f0288a15c619$var$P(n, l, t, u, i) {
    var r, o, e, f, c, s = t.length, a = s, h = 0;
    for(n.__k = new Array(i), r = 0; r < i; r++)null != (o = l[r]) && "boolean" != typeof o && "function" != typeof o ? (f = r + h, (o = n.__k[r] = "string" == typeof o || "number" == typeof o || "bigint" == typeof o || o.constructor == String ? $b6c7f0288a15c619$var$m(null, o, null, null, null) : $b6c7f0288a15c619$var$d(o) ? $b6c7f0288a15c619$var$m($b6c7f0288a15c619$export$ffb0004e005737fa, {
        children: o
    }, null, null, null) : void 0 === o.constructor && o.__b > 0 ? $b6c7f0288a15c619$var$m(o.type, o.props, o.key, o.ref ? o.ref : null, o.__v) : o).__ = n, o.__b = n.__b + 1, e = null, -1 !== (c = o.__i = $b6c7f0288a15c619$var$L(o, t, f, a)) && (a--, (e = t[c]) && (e.__u |= 2)), null == e || null === e.__v ? (-1 == c && (i > s ? h-- : i < s && h++), "function" != typeof o.type && (o.__u |= 4)) : c != f && (c == f - 1 ? h-- : c == f + 1 ? h++ : (c > f ? h-- : h++, o.__u |= 4))) : n.__k[r] = null;
    if (a) for(r = 0; r < s; r++)null != (e = t[r]) && 0 == (2 & e.__u) && (e.__e == u && (u = $b6c7f0288a15c619$var$S(e)), $b6c7f0288a15c619$var$B(e, e));
    return u;
}
function $b6c7f0288a15c619$var$A(n, l, t) {
    var u, i;
    if ("function" == typeof n.type) {
        for(u = n.__k, i = 0; u && i < u.length; i++)u[i] && (u[i].__ = n, l = $b6c7f0288a15c619$var$A(u[i], l, t));
        return l;
    }
    n.__e != l && (l && n.type && !t.contains(l) && (l = $b6c7f0288a15c619$var$S(n)), t.insertBefore(n.__e, l || null), l = n.__e);
    do l = l && l.nextSibling;
    while (null != l && 8 == l.nodeType);
    return l;
}
function $b6c7f0288a15c619$export$47e4c5b300681277(n, l) {
    return l = l || [], null == n || "boolean" == typeof n || ($b6c7f0288a15c619$var$d(n) ? n.some(function(n) {
        $b6c7f0288a15c619$export$47e4c5b300681277(n, l);
    }) : l.push(n)), l;
}
function $b6c7f0288a15c619$var$L(n, l, t, u) {
    var i, r, o = n.key, e = n.type, f = l[t];
    if (null === f && null == n.key || f && o == f.key && e === f.type && 0 == (2 & f.__u)) return t;
    if (u > (null != f && 0 == (2 & f.__u) ? 1 : 0)) for(i = t - 1, r = t + 1; i >= 0 || r < l.length;){
        if (i >= 0) {
            if ((f = l[i]) && 0 == (2 & f.__u) && o == f.key && e === f.type) return i;
            i--;
        }
        if (r < l.length) {
            if ((f = l[r]) && 0 == (2 & f.__u) && o == f.key && e === f.type) return r;
            r++;
        }
    }
    return -1;
}
function $b6c7f0288a15c619$var$T(n, l, t) {
    "-" == l[0] ? n.setProperty(l, null == t ? "" : t) : n[l] = null == t ? "" : "number" != typeof t || $b6c7f0288a15c619$var$y.test(l) ? t : t + "px";
}
function $b6c7f0288a15c619$var$j(n, l, t, u, i) {
    var r;
    n: if ("style" == l) {
        if ("string" == typeof t) n.style.cssText = t;
        else {
            if ("string" == typeof u && (n.style.cssText = u = ""), u) for(l in u)t && l in t || $b6c7f0288a15c619$var$T(n.style, l, "");
            if (t) for(l in t)u && t[l] === u[l] || $b6c7f0288a15c619$var$T(n.style, l, t[l]);
        }
    } else if ("o" == l[0] && "n" == l[1]) r = l != (l = l.replace($b6c7f0288a15c619$var$f, "$1")), l = l.toLowerCase() in n || "onFocusOut" == l || "onFocusIn" == l ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + r] = t, t ? u ? t.t = u.t : (t.t = $b6c7f0288a15c619$var$c, n.addEventListener(l, r ? $b6c7f0288a15c619$var$a : $b6c7f0288a15c619$var$s, r)) : n.removeEventListener(l, r ? $b6c7f0288a15c619$var$a : $b6c7f0288a15c619$var$s, r);
    else {
        if ("http://www.w3.org/2000/svg" == i) l = l.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
        else if ("width" != l && "height" != l && "href" != l && "list" != l && "form" != l && "tabIndex" != l && "download" != l && "rowSpan" != l && "colSpan" != l && "role" != l && "popover" != l && l in n) try {
            n[l] = null == t ? "" : t;
            break n;
        } catch (n) {}
        "function" == typeof t || (null == t || !1 === t && "-" != l[4] ? n.removeAttribute(l) : n.setAttribute(l, "popover" == l && 1 == t ? "" : t));
    }
}
function $b6c7f0288a15c619$var$F(n) {
    return function(t) {
        if (this.l) {
            var u = this.l[t.type + n];
            if (null == t.u) t.u = $b6c7f0288a15c619$var$c++;
            else if (t.u < u.t) return;
            return u($b6c7f0288a15c619$export$41c562ebe57d11e2.event ? $b6c7f0288a15c619$export$41c562ebe57d11e2.event(t) : t);
        }
    };
}
function $b6c7f0288a15c619$var$O(n, t, u, i, r, o, e, f, c, s) {
    var a, h, p, v, y, _, m, b, S, C, M, $, P, A, H, L, T, j = t.type;
    if (void 0 !== t.constructor) return null;
    128 & u.__u && (c = !!(32 & u.__u), o = [
        f = t.__e = u.__e
    ]), (a = $b6c7f0288a15c619$export$41c562ebe57d11e2.__b) && a(t);
    n: if ("function" == typeof j) try {
        if (b = t.props, S = "prototype" in j && j.prototype.render, C = (a = j.contextType) && i[a.__c], M = a ? C ? C.props.value : a.__ : i, u.__c ? m = (h = t.__c = u.__c).__ = h.__E : (S ? t.__c = h = new j(b, M) : (t.__c = h = new $b6c7f0288a15c619$export$16fa2f45be04daa8(b, M), h.constructor = j, h.render = $b6c7f0288a15c619$var$D), C && C.sub(h), h.props = b, h.state || (h.state = {}), h.context = M, h.__n = i, p = h.__d = !0, h.__h = [], h._sb = []), S && null == h.__s && (h.__s = h.state), S && null != j.getDerivedStateFromProps && (h.__s == h.state && (h.__s = $b6c7f0288a15c619$var$w({}, h.__s)), $b6c7f0288a15c619$var$w(h.__s, j.getDerivedStateFromProps(b, h.__s))), v = h.props, y = h.state, h.__v = t, p) S && null == j.getDerivedStateFromProps && null != h.componentWillMount && h.componentWillMount(), S && null != h.componentDidMount && h.__h.push(h.componentDidMount);
        else {
            if (S && null == j.getDerivedStateFromProps && b !== v && null != h.componentWillReceiveProps && h.componentWillReceiveProps(b, M), !h.__e && (null != h.shouldComponentUpdate && !1 === h.shouldComponentUpdate(b, h.__s, M) || t.__v == u.__v)) {
                for(t.__v != u.__v && (h.props = b, h.state = h.__s, h.__d = !1), t.__e = u.__e, t.__k = u.__k, t.__k.some(function(n) {
                    n && (n.__ = t);
                }), $ = 0; $ < h._sb.length; $++)h.__h.push(h._sb[$]);
                h._sb = [], h.__h.length && e.push(h);
                break n;
            }
            null != h.componentWillUpdate && h.componentWillUpdate(b, h.__s, M), S && null != h.componentDidUpdate && h.__h.push(function() {
                h.componentDidUpdate(v, y, _);
            });
        }
        if (h.context = M, h.props = b, h.__P = n, h.__e = !1, P = $b6c7f0288a15c619$export$41c562ebe57d11e2.__r, A = 0, S) {
            for(h.state = h.__s, h.__d = !1, P && P(t), a = h.render(h.props, h.state, h.context), H = 0; H < h._sb.length; H++)h.__h.push(h._sb[H]);
            h._sb = [];
        } else do h.__d = !1, P && P(t), a = h.render(h.props, h.state, h.context), h.state = h.__s;
        while (h.__d && ++A < 25);
        h.state = h.__s, null != h.getChildContext && (i = $b6c7f0288a15c619$var$w($b6c7f0288a15c619$var$w({}, i), h.getChildContext())), S && !p && null != h.getSnapshotBeforeUpdate && (_ = h.getSnapshotBeforeUpdate(v, y)), L = a, null != a && a.type === $b6c7f0288a15c619$export$ffb0004e005737fa && null == a.key && (L = $b6c7f0288a15c619$var$N(a.props.children)), f = $b6c7f0288a15c619$var$I(n, $b6c7f0288a15c619$var$d(L) ? L : [
            L
        ], t, u, i, r, o, e, f, c, s), h.base = t.__e, t.__u &= -161, h.__h.length && e.push(h), m && (h.__E = h.__ = null);
    } catch (n) {
        if (t.__v = null, c || null != o) {
            if (n.then) {
                for(t.__u |= c ? 160 : 128; f && 8 == f.nodeType && f.nextSibling;)f = f.nextSibling;
                o[o.indexOf(f)] = null, t.__e = f;
            } else for(T = o.length; T--;)$b6c7f0288a15c619$var$g(o[T]);
        } else t.__e = u.__e, t.__k = u.__k;
        $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, t, u);
    }
    else null == o && t.__v == u.__v ? (t.__k = u.__k, t.__e = u.__e) : f = t.__e = $b6c7f0288a15c619$var$V(u.__e, t, u, i, r, o, e, c, s);
    return (a = $b6c7f0288a15c619$export$41c562ebe57d11e2.diffed) && a(t), 128 & t.__u ? void 0 : f;
}
function $b6c7f0288a15c619$var$z(n, t, u) {
    for(var i = 0; i < u.length; i++)$b6c7f0288a15c619$var$q(u[i], u[++i], u[++i]);
    $b6c7f0288a15c619$export$41c562ebe57d11e2.__c && $b6c7f0288a15c619$export$41c562ebe57d11e2.__c(t, n), n.some(function(t) {
        try {
            n = t.__h, t.__h = [], n.some(function(n) {
                n.call(t);
            });
        } catch (n) {
            $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, t.__v);
        }
    });
}
function $b6c7f0288a15c619$var$N(n) {
    return "object" != typeof n || null == n ? n : $b6c7f0288a15c619$var$d(n) ? n.map($b6c7f0288a15c619$var$N) : $b6c7f0288a15c619$var$w({}, n);
}
function $b6c7f0288a15c619$var$V(t, u, i, r, o, e, f, c, s) {
    var a, h, v, y, w, _, m, b = i.props, k = u.props, x = u.type;
    if ("svg" == x ? o = "http://www.w3.org/2000/svg" : "math" == x ? o = "http://www.w3.org/1998/Math/MathML" : o || (o = "http://www.w3.org/1999/xhtml"), null != e) {
        for(a = 0; a < e.length; a++)if ((w = e[a]) && "setAttribute" in w == !!x && (x ? w.localName == x : 3 == w.nodeType)) {
            t = w, e[a] = null;
            break;
        }
    }
    if (null == t) {
        if (null == x) return document.createTextNode(k);
        t = document.createElementNS(o, x, k.is && k), c && ($b6c7f0288a15c619$export$41c562ebe57d11e2.__m && $b6c7f0288a15c619$export$41c562ebe57d11e2.__m(u, e), c = !1), e = null;
    }
    if (null === x) b === k || c && t.data === k || (t.data = k);
    else {
        if (e = e && $b6c7f0288a15c619$var$n.call(t.childNodes), b = i.props || $b6c7f0288a15c619$var$p, !c && null != e) for(b = {}, a = 0; a < t.attributes.length; a++)b[(w = t.attributes[a]).name] = w.value;
        for(a in b)if (w = b[a], "children" == a) ;
        else if ("dangerouslySetInnerHTML" == a) v = w;
        else if (!(a in k)) {
            if ("value" == a && "defaultValue" in k || "checked" == a && "defaultChecked" in k) continue;
            $b6c7f0288a15c619$var$j(t, a, null, w, o);
        }
        for(a in k)w = k[a], "children" == a ? y = w : "dangerouslySetInnerHTML" == a ? h = w : "value" == a ? _ = w : "checked" == a ? m = w : c && "function" != typeof w || b[a] === w || $b6c7f0288a15c619$var$j(t, a, w, b[a], o);
        if (h) c || v && (h.__html === v.__html || h.__html === t.innerHTML) || (t.innerHTML = h.__html), u.__k = [];
        else if (v && (t.innerHTML = ""), $b6c7f0288a15c619$var$I("template" === u.type ? t.content : t, $b6c7f0288a15c619$var$d(y) ? y : [
            y
        ], u, i, r, "foreignObject" == x ? "http://www.w3.org/1999/xhtml" : o, e, f, e ? e[0] : i.__k && $b6c7f0288a15c619$var$S(i, 0), c, s), null != e) for(a = e.length; a--;)$b6c7f0288a15c619$var$g(e[a]);
        c || (a = "value", "progress" == x && null == _ ? t.removeAttribute("value") : void 0 !== _ && (_ !== t[a] || "progress" == x && !_ || "option" == x && _ !== b[a]) && $b6c7f0288a15c619$var$j(t, a, _, b[a], o), a = "checked", void 0 !== m && m !== t[a] && $b6c7f0288a15c619$var$j(t, a, m, b[a], o));
    }
    return t;
}
function $b6c7f0288a15c619$var$q(n, t, u) {
    try {
        if ("function" == typeof n) {
            var i = "function" == typeof n.__u;
            i && n.__u(), i && null == t || (n.__u = n(t));
        } else n.current = t;
    } catch (n) {
        $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u);
    }
}
function $b6c7f0288a15c619$var$B(n, t, u) {
    var i, r;
    if ($b6c7f0288a15c619$export$41c562ebe57d11e2.unmount && $b6c7f0288a15c619$export$41c562ebe57d11e2.unmount(n), (i = n.ref) && (i.current && i.current !== n.__e || $b6c7f0288a15c619$var$q(i, null, t)), null != (i = n.__c)) {
        if (i.componentWillUnmount) try {
            i.componentWillUnmount();
        } catch (n) {
            $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, t);
        }
        i.base = i.__P = null;
    }
    if (i = n.__k) for(r = 0; r < i.length; r++)i[r] && $b6c7f0288a15c619$var$B(i[r], t, u || "function" != typeof n.type);
    u || $b6c7f0288a15c619$var$g(n.__e), n.__c = n.__ = n.__e = void 0;
}
function $b6c7f0288a15c619$var$D(n, l, t) {
    return this.constructor(n, t);
}
function $b6c7f0288a15c619$export$b3890eb0ae9dca99(t, u, i) {
    var r, o, e, f;
    u == document && (u = document.documentElement), $b6c7f0288a15c619$export$41c562ebe57d11e2.__ && $b6c7f0288a15c619$export$41c562ebe57d11e2.__(t, u), o = (r = "function" == typeof i) ? null : i && i.__k || u.__k, e = [], f = [], $b6c7f0288a15c619$var$O(u, t = (!r && i || u).__k = $b6c7f0288a15c619$export$c8a8987d4410bf2d($b6c7f0288a15c619$export$ffb0004e005737fa, null, [
        t
    ]), o || $b6c7f0288a15c619$var$p, $b6c7f0288a15c619$var$p, u.namespaceURI, !r && i ? [
        i
    ] : o ? null : u.firstChild ? $b6c7f0288a15c619$var$n.call(u.childNodes) : null, e, !r && i ? i : o ? o.__e : u.firstChild, r, f), $b6c7f0288a15c619$var$z(e, t, f);
}
function $b6c7f0288a15c619$export$fa8d919ba61d84db(n, l) {
    $b6c7f0288a15c619$export$b3890eb0ae9dca99(n, l, $b6c7f0288a15c619$export$fa8d919ba61d84db);
}
function $b6c7f0288a15c619$export$e530037191fcd5d7(l, t, u) {
    var i, r, o, e, f = $b6c7f0288a15c619$var$w({}, l.props);
    for(o in l.type && l.type.defaultProps && (e = l.type.defaultProps), t)"key" == o ? i = t[o] : "ref" == o ? r = t[o] : f[o] = void 0 === t[o] && void 0 !== e ? e[o] : t[o];
    return arguments.length > 2 && (f.children = arguments.length > 3 ? $b6c7f0288a15c619$var$n.call(arguments, 2) : u), $b6c7f0288a15c619$var$m(l.type, f, i || l.key, r || l.ref, null);
}
function $b6c7f0288a15c619$export$fd42f52fd3ae1109(n) {
    function l(n) {
        var t, u;
        return this.getChildContext || (t = new Set, (u = {})[l.__c] = this, this.getChildContext = function() {
            return u;
        }, this.componentWillUnmount = function() {
            t = null;
        }, this.shouldComponentUpdate = function(n) {
            this.props.value !== n.value && t.forEach(function(n) {
                n.__e = !0, $b6c7f0288a15c619$var$M(n);
            });
        }, this.sub = function(n) {
            t.add(n);
            var l = n.componentWillUnmount;
            n.componentWillUnmount = function() {
                t && t.delete(n), l && l.call(n);
            };
        }), n.children;
    }
    return l.__c = "__cC" + $b6c7f0288a15c619$var$h++, l.__ = n, l.Provider = l.__l = (l.Consumer = function(n, l) {
        return n.children(l);
    }).contextType = l, l;
}
$b6c7f0288a15c619$var$n = $b6c7f0288a15c619$var$v.slice, $b6c7f0288a15c619$export$41c562ebe57d11e2 = {
    __e: function(n, l, t, u) {
        for(var i, r, o; l = l.__;)if ((i = l.__c) && !i.__) try {
            if ((r = i.constructor) && null != r.getDerivedStateFromError && (i.setState(r.getDerivedStateFromError(n)), o = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, u || {}), o = i.__d), o) return i.__E = i;
        } catch (l) {
            n = l;
        }
        throw n;
    }
}, $b6c7f0288a15c619$var$t = 0, $b6c7f0288a15c619$export$a8257692ac88316c = function(n) {
    return null != n && null == n.constructor;
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.setState = function(n, l) {
    var t;
    t = null != this.__s && this.__s !== this.state ? this.__s : this.__s = $b6c7f0288a15c619$var$w({}, this.state), "function" == typeof n && (n = n($b6c7f0288a15c619$var$w({}, t), this.props)), n && $b6c7f0288a15c619$var$w(t, n), null != n && this.__v && (l && this._sb.push(l), $b6c7f0288a15c619$var$M(this));
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.forceUpdate = function(n) {
    this.__v && (this.__e = !0, n && this.__h.push(n), $b6c7f0288a15c619$var$M(this));
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.render = $b6c7f0288a15c619$export$ffb0004e005737fa, $b6c7f0288a15c619$var$i = [], $b6c7f0288a15c619$var$o = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, $b6c7f0288a15c619$var$e = function(n, l) {
    return n.__v.__b - l.__v.__b;
}, $b6c7f0288a15c619$var$$.__r = 0, $b6c7f0288a15c619$var$f = /(PointerCapture)$|Capture$/i, $b6c7f0288a15c619$var$c = 0, $b6c7f0288a15c619$var$s = $b6c7f0288a15c619$var$F(!1), $b6c7f0288a15c619$var$a = $b6c7f0288a15c619$var$F(!0), $b6c7f0288a15c619$var$h = 0;
var $23b7c1cb98b19658$var$t = /["&<]/;
function $23b7c1cb98b19658$var$n(r) {
    if (0 === r.length || !1 === $23b7c1cb98b19658$var$t.test(r)) return r;
    for(var e = 0, n = 0, o = "", f = ""; n < r.length; n++){
        switch(r.charCodeAt(n)){
            case 34:
                f = "&quot;";
                break;
            case 38:
                f = "&amp;";
                break;
            case 60:
                f = "&lt;";
                break;
            default:
                continue;
        }
        n !== e && (o += r.slice(e, n)), o += f, e = n + 1;
    }
    return n !== e && (o += r.slice(e, n)), o;
}
var $23b7c1cb98b19658$var$o = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, $23b7c1cb98b19658$var$f = 0, $23b7c1cb98b19658$var$i = Array.isArray;
function $23b7c1cb98b19658$export$34b9dba7ce09269b(e, t, n, o, i, u) {
    t || (t = {});
    var a, c, p = t;
    if ("ref" in p) for(c in p = {}, t)"ref" == c ? a = t[c] : p[c] = t[c];
    var l = {
        type: e,
        props: p,
        key: n,
        ref: a,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __c: null,
        constructor: void 0,
        __v: --$23b7c1cb98b19658$var$f,
        __i: -1,
        __u: 0,
        __source: i,
        __self: u
    };
    if ("function" == typeof e && (a = e.defaultProps)) for(c in a)void 0 === p[c] && (p[c] = a[c]);
    return $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(l), l;
}
function $23b7c1cb98b19658$export$45700d561b2268ac(r) {
    var t = $23b7c1cb98b19658$export$34b9dba7ce09269b($b6c7f0288a15c619$export$ffb0004e005737fa, {
        tpl: r,
        exprs: [].slice.call(arguments, 1)
    });
    return t.key = t.__v, t;
}
var $23b7c1cb98b19658$var$c = {}, $23b7c1cb98b19658$var$p = /[A-Z]/g;
function $23b7c1cb98b19658$export$991f6ffe102e5bac(e, t) {
    if ($b6c7f0288a15c619$export$41c562ebe57d11e2.attr) {
        var f = $b6c7f0288a15c619$export$41c562ebe57d11e2.attr(e, t);
        if ("string" == typeof f) return f;
    }
    if ("ref" === e || "key" === e) return "";
    if ("style" === e && "object" == typeof t) {
        var i = "";
        for(var u in t){
            var a = t[u];
            if (null != a && "" !== a) {
                var l = "-" == u[0] ? u : $23b7c1cb98b19658$var$c[u] || ($23b7c1cb98b19658$var$c[u] = u.replace($23b7c1cb98b19658$var$p, "-$&").toLowerCase()), s = ";";
                "number" != typeof a || l.startsWith("--") || $23b7c1cb98b19658$var$o.test(l) || (s = "px;"), i = i + l + ":" + a + s;
            }
        }
        return e + '="' + i + '"';
    }
    return null == t || !1 === t || "function" == typeof t || "object" == typeof t ? "" : !0 === t ? e : e + '="' + $23b7c1cb98b19658$var$n(t) + '"';
}
function $23b7c1cb98b19658$export$40e96e718441efeb(r) {
    if (null == r || "boolean" == typeof r || "function" == typeof r) return null;
    if ("object" == typeof r) {
        if (void 0 === r.constructor) return r;
        if ($23b7c1cb98b19658$var$i(r)) {
            for(var e = 0; e < r.length; e++)r[e] = $23b7c1cb98b19658$export$40e96e718441efeb(r[e]);
            return r;
        }
    }
    return $23b7c1cb98b19658$var$n("" + r);
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $883a43040cbd0629$var$boundErrorHandler = null;
function $883a43040cbd0629$var$errorHandler(callback, e) {
    // $FlowFixMe
    if (!e.error) return;
    // $FlowFixMe
    const { error: error } = e;
    if (error instanceof Error) callback(error);
    else // Look in your browser's devtools for more information
    callback(new Error(error));
}
function $883a43040cbd0629$export$6503ec6e8aabbaf(target, callback) {
    if ($883a43040cbd0629$var$boundErrorHandler !== null) return;
    $883a43040cbd0629$var$boundErrorHandler = $883a43040cbd0629$var$errorHandler.bind(undefined, callback);
    target.addEventListener('error', $883a43040cbd0629$var$boundErrorHandler);
}
function $883a43040cbd0629$export$d07f55d4c15c0440(target) {
    if ($883a43040cbd0629$var$boundErrorHandler === null) return;
    target.removeEventListener('error', $883a43040cbd0629$var$boundErrorHandler);
    $883a43040cbd0629$var$boundErrorHandler = null;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $900f8c32b7484e20$var$boundRejectionHandler = null;
function $900f8c32b7484e20$var$rejectionHandler(callback, e) {
    if (e == null || e.reason == null) return callback(new Error('Unknown'));
    let { reason: reason } = e;
    if (reason instanceof Error) return callback(reason);
    // A non-error was rejected, we don't have a trace :(
    // Look in your browser's devtools for more information
    return callback(new Error(reason));
}
function $900f8c32b7484e20$export$6503ec6e8aabbaf(target, callback) {
    if ($900f8c32b7484e20$var$boundRejectionHandler !== null) return;
    $900f8c32b7484e20$var$boundRejectionHandler = $900f8c32b7484e20$var$rejectionHandler.bind(undefined, callback);
    // $FlowFixMe
    target.addEventListener('unhandledrejection', $900f8c32b7484e20$var$boundRejectionHandler);
}
function $900f8c32b7484e20$export$d07f55d4c15c0440(target) {
    if ($900f8c32b7484e20$var$boundRejectionHandler === null) return;
    // $FlowFixMe
    target.removeEventListener('unhandledrejection', $900f8c32b7484e20$var$boundRejectionHandler);
    $900f8c32b7484e20$var$boundRejectionHandler = null;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $5f72ade198404e99$var$stackTraceRegistered = false;
// Default: https://docs.microsoft.com/en-us/scripting/javascript/reference/stacktracelimit-property-error-javascript
let $5f72ade198404e99$var$restoreStackTraceValue = 10;
const $5f72ade198404e99$var$MAX_STACK_LENGTH = 50;
function $5f72ade198404e99$export$6503ec6e8aabbaf(limit = $5f72ade198404e99$var$MAX_STACK_LENGTH) {
    if ($5f72ade198404e99$var$stackTraceRegistered) return;
    try {
        $5f72ade198404e99$var$restoreStackTraceValue = Error.stackTraceLimit;
        Error.stackTraceLimit = limit;
        $5f72ade198404e99$var$stackTraceRegistered = true;
    } catch (e) {
    // Not all browsers support this so we don't care if it errors
    }
}
function $5f72ade198404e99$export$d07f55d4c15c0440() {
    if (!$5f72ade198404e99$var$stackTraceRegistered) return;
    try {
        Error.stackTraceLimit = $5f72ade198404e99$var$restoreStackTraceValue;
        $5f72ade198404e99$var$stackTraceRegistered = false;
    } catch (e) {
    // Not all browsers support this so we don't care if it errors
    }
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * A representation of a stack frame.
 */ class $d35756f426c25812$export$8949fddf10447898 {
    constructor(functionName = null, fileName = null, lineNumber = null, columnNumber = null, scriptCode = null, sourceFunctionName = null, sourceFileName = null, sourceLineNumber = null, sourceColumnNumber = null, sourceScriptCode = null){
        if (functionName && functionName.indexOf('Object.') === 0) functionName = functionName.slice(7);
        if (// https://github.com/facebook/create-react-app/issues/2097
        // Let's ignore a meaningless name we get for top-level modules.
        functionName === 'friendlySyntaxErrorLabel' || functionName === 'exports.__esModule' || functionName === '<anonymous>' || !functionName) functionName = null;
        this.functionName = functionName;
        this.fileName = fileName;
        this.lineNumber = lineNumber;
        this.columnNumber = columnNumber;
        this._originalFunctionName = sourceFunctionName;
        this._originalFileName = sourceFileName;
        this._originalLineNumber = sourceLineNumber;
        this._originalColumnNumber = sourceColumnNumber;
        this._scriptCode = scriptCode;
        this._originalScriptCode = sourceScriptCode;
    }
    /**
   * Returns the name of this function.
   */ getFunctionName() {
        return this.functionName || '(anonymous function)';
    }
    /**
   * Returns the source of the frame.
   * This contains the file name, line number, and column number when available.
   */ getSource() {
        let str = '';
        if (this.fileName != null) str += this.fileName + ':';
        if (this.lineNumber != null) str += this.lineNumber + ':';
        if (this.columnNumber != null) str += this.columnNumber + ':';
        return str.slice(0, -1);
    }
    /**
   * Returns a pretty version of this stack frame.
   */ toString() {
        const functionName = this.getFunctionName();
        const source = this.getSource();
        return `${functionName}${source ? ` (${source})` : ``}`;
    }
}
var $d35756f426c25812$export$2e2bcd8739ae039 = $d35756f426c25812$export$8949fddf10447898;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $865b9ffc545cb441$var$regexExtractLocation = /\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;
function $865b9ffc545cb441$var$extractLocation(token) {
    return $865b9ffc545cb441$var$regexExtractLocation.exec(token) // $FlowFixMe
    .slice(1).map((v)=>{
        const p = Number(v);
        if (!isNaN(p)) return p;
        return v;
    });
}
const $865b9ffc545cb441$var$regexValidFrame_Chrome = /^\s*(at|in)\s.+(:\d+)/;
const $865b9ffc545cb441$var$regexValidFrame_FireFox = /(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;
function $865b9ffc545cb441$var$parseStack(stack) {
    let frames = stack.filter((e)=>$865b9ffc545cb441$var$regexValidFrame_Chrome.test(e) || $865b9ffc545cb441$var$regexValidFrame_FireFox.test(e)).map((e)=>{
        if ($865b9ffc545cb441$var$regexValidFrame_FireFox.test(e)) {
            // Strip eval, we don't care about it
            let isEval = false;
            if (/ > (eval|Function)/.test(e)) {
                e = e.replace(/ line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g, ':$1');
                isEval = true;
            }
            const data = e.split(/[@]/g);
            const last = data.pop();
            return new $d35756f426c25812$export$2e2bcd8739ae039(data.join('@') || (isEval ? 'eval' : null), ...$865b9ffc545cb441$var$extractLocation(last));
        } else {
            // Strip eval, we don't care about it
            if (e.indexOf('(eval ') !== -1) e = e.replace(/(\(eval at [^()]*)|(\),.*$)/g, '');
            if (e.indexOf('(at ') !== -1) e = e.replace(/\(at /, '(');
            const data = e.trim().split(/\s+/g).slice(1);
            const last = data.pop();
            return new $d35756f426c25812$export$2e2bcd8739ae039(data.join(' ') || null, ...$865b9ffc545cb441$var$extractLocation(last));
        }
    });
    let index = frames.findIndex((frame)=>frame.getFunctionName().includes('react-stack-bottom-frame'));
    if (index >= 0) frames = frames.slice(0, index);
    return frames;
}
/**
 * Turns an <code>Error</code>, or similar object, into a set of <code>StackFrame</code>s.
 * @alias parse
 */ function $865b9ffc545cb441$export$98e6a39c04603d36(error) {
    if (error == null) throw new Error('You cannot pass a null object.');
    if (typeof error === 'string') return $865b9ffc545cb441$var$parseStack(error.split('\n'));
    if (Array.isArray(error)) return $865b9ffc545cb441$var$parseStack(error);
    if (typeof error.stack === 'string') return $865b9ffc545cb441$var$parseStack(error.stack.split('\n'));
    throw new Error('The error you provided does not contain a stack trace.');
}
var $865b9ffc545cb441$export$2e2bcd8739ae039 = $865b9ffc545cb441$export$98e6a39c04603d36;
/**
 * Enhances a set of <code>StackFrame</code>s with their original positions and code (when available).
 * @param {StackFrame[]} frames A set of <code>StackFrame</code>s which contain (generated) code positions.
 * @param {number} [contextLines=3] The number of lines to provide before and after the line specified in the <code>StackFrame</code>.
 */ async function $df495b51087c401c$export$35b6448019ed80b8(error, contextLines = 3) {
    const frames = $865b9ffc545cb441$export$98e6a39c04603d36(error);
    // $FlowFixMe
    let res = await fetch(module.bundle.devServer + '/__parcel_code_frame', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            contextLines: contextLines,
            frames: frames.map((f)=>({
                    fileName: f.fileName,
                    lineNumber: f.lineNumber,
                    columnNumber: f.columnNumber
                }))
        })
    });
    let json = await res.json();
    return json.map((f, i)=>new $d35756f426c25812$export$8949fddf10447898(frames[i].functionName, f.fileName, f.lineNumber, f.columnNumber, f.compiledLines, frames[i].functionName, f.sourceFileName, f.sourceLineNumber, f.sourceColumnNumber, f.sourceLines));
}
var $df495b51087c401c$export$2e2bcd8739ae039 = $df495b51087c401c$export$35b6448019ed80b8;
const $6d40ebe8356580e0$var$CONTEXT_SIZE = 3;
function $6d40ebe8356580e0$export$9123e6c9c0ac21ed(crash) {
    return (error, unhandledRejection = false)=>{
        $df495b51087c401c$export$2e2bcd8739ae039(error, $6d40ebe8356580e0$var$CONTEXT_SIZE).then((stackFrames)=>{
            if (stackFrames == null) return;
            crash({
                error: error,
                unhandledRejection: unhandledRejection,
                contextSize: $6d40ebe8356580e0$var$CONTEXT_SIZE,
                stackFrames: stackFrames
            });
        }).catch((e)=>{
            // eslint-disable-next-line no-console
            console.log('Could not get the stack frames of error:', e);
        });
    };
}
function $6d40ebe8356580e0$var$patchConsole(method, onError) {
    /* eslint-disable no-console */ let original = console[method];
    console[method] = (...args)=>{
        let error = null;
        if (typeof args[0] === 'string') {
            let format = args[0].match(/%[oOdisfc]/g);
            if (format) {
                let errorIndex = format.findIndex((match)=>match === '%o' || match === '%O');
                if (errorIndex < 0) errorIndex = format.findIndex((match)=>match === '%s');
                if (errorIndex >= 0) error = args[errorIndex + 1];
                else error = args[1];
                if (!(error instanceof Error)) {
                    let index = 1;
                    let message = args[0].replace(/%[oOdisfc]/g, (match)=>{
                        switch(match){
                            case '%s':
                                return String(args[index++]);
                            case '%f':
                                return parseFloat(args[index++]);
                            case '%d':
                            case '%i':
                                return parseInt(args[index++], 10);
                            case '%o':
                            case '%O':
                                if (args[index] instanceof Error) return String(args[index++]);
                                else return JSON.stringify(args[index++]);
                            case '%c':
                                index++;
                                return '';
                        }
                    });
                    error = new Error(message);
                }
            } else error = new Error(args[0]);
        } else error = args.find((arg)=>arg instanceof Error);
        if (error && !error.message.includes('[parcel]') && typeof window !== 'undefined' && window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
            // Attempt to append the React component stack
            // TODO: use React.captureOwnerStack once stable.
            let hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook.renderers instanceof Map) {
                for (let renderer of hook.renderers.values())if (typeof renderer?.currentDispatcherRef?.getCurrentStack === 'function') {
                    let stack = renderer.currentDispatcherRef.getCurrentStack();
                    if (stack) {
                        error.stack += stack;
                        break;
                    }
                }
            }
            onError(error);
        }
        original.apply(console, args);
    };
/* eslint-enable no-console */ }
function $6d40ebe8356580e0$export$38ec23daa6e8dcdf(crash) {
    const crashWithFramesRunTime = $6d40ebe8356580e0$export$9123e6c9c0ac21ed(crash);
    $883a43040cbd0629$export$6503ec6e8aabbaf(window, (error)=>crashWithFramesRunTime(error, false));
    $900f8c32b7484e20$export$6503ec6e8aabbaf(window, (error)=>crashWithFramesRunTime(error, true));
    $5f72ade198404e99$export$6503ec6e8aabbaf();
    $6d40ebe8356580e0$var$patchConsole('error', (error)=>crashWithFramesRunTime(error, false));
    return function() {
        $5f72ade198404e99$export$d07f55d4c15c0440();
        $900f8c32b7484e20$export$d07f55d4c15c0440(window);
        $883a43040cbd0629$export$d07f55d4c15c0440(window);
    };
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ var $10ecac3e4062713a$var$t, $10ecac3e4062713a$var$r, $10ecac3e4062713a$var$u, $10ecac3e4062713a$var$i, $10ecac3e4062713a$var$o = 0, $10ecac3e4062713a$var$f = [], $10ecac3e4062713a$var$c = $b6c7f0288a15c619$export$41c562ebe57d11e2, $10ecac3e4062713a$var$e = $10ecac3e4062713a$var$c.__b, $10ecac3e4062713a$var$a = $10ecac3e4062713a$var$c.__r, $10ecac3e4062713a$var$v = $10ecac3e4062713a$var$c.diffed, $10ecac3e4062713a$var$l = $10ecac3e4062713a$var$c.__c, $10ecac3e4062713a$var$m = $10ecac3e4062713a$var$c.unmount, $10ecac3e4062713a$var$s = $10ecac3e4062713a$var$c.__;
function $10ecac3e4062713a$var$p(n, t) {
    $10ecac3e4062713a$var$c.__h && $10ecac3e4062713a$var$c.__h($10ecac3e4062713a$var$r, n, $10ecac3e4062713a$var$o || t), $10ecac3e4062713a$var$o = 0;
    var u = $10ecac3e4062713a$var$r.__H || ($10ecac3e4062713a$var$r.__H = {
        __: [],
        __h: []
    });
    return n >= u.__.length && u.__.push({}), u.__[n];
}
function $10ecac3e4062713a$export$60241385465d0a34(n) {
    return $10ecac3e4062713a$var$o = 1, $10ecac3e4062713a$export$13e3392192263954($10ecac3e4062713a$var$D, n);
}
function $10ecac3e4062713a$export$13e3392192263954(n, u, i) {
    var o = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 2);
    if (o.t = n, !o.__c && (o.__ = [
        i ? i(u) : $10ecac3e4062713a$var$D(void 0, u),
        function(n) {
            var t = o.__N ? o.__N[0] : o.__[0], r = o.t(t, n);
            t !== r && (o.__N = [
                r,
                o.__[1]
            ], o.__c.setState({}));
        }
    ], o.__c = $10ecac3e4062713a$var$r, !$10ecac3e4062713a$var$r.__f)) {
        var f = function(n, t, r) {
            if (!o.__c.__H) return !0;
            var u = o.__c.__H.__.filter(function(n) {
                return !!n.__c;
            });
            if (u.every(function(n) {
                return !n.__N;
            })) return !c || c.call(this, n, t, r);
            var i = o.__c.props !== n;
            return u.forEach(function(n) {
                if (n.__N) {
                    var t = n.__[0];
                    n.__ = n.__N, n.__N = void 0, t !== n.__[0] && (i = !0);
                }
            }), c && c.call(this, n, t, r) || i;
        };
        $10ecac3e4062713a$var$r.__f = !0;
        var c = $10ecac3e4062713a$var$r.shouldComponentUpdate, e = $10ecac3e4062713a$var$r.componentWillUpdate;
        $10ecac3e4062713a$var$r.componentWillUpdate = function(n, t, r) {
            if (this.__e) {
                var u = c;
                c = void 0, f(n, t, r), c = u;
            }
            e && e.call(this, n, t, r);
        }, $10ecac3e4062713a$var$r.shouldComponentUpdate = f;
    }
    return o.__N || o.__;
}
function $10ecac3e4062713a$export$6d9c69b0de29b591(n, u) {
    var i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 3);
    !$10ecac3e4062713a$var$c.__s && $10ecac3e4062713a$var$C(i.__H, u) && (i.__ = n, i.u = u, $10ecac3e4062713a$var$r.__H.__h.push(i));
}
function $10ecac3e4062713a$export$e5c5a5f917a5871c(n, u) {
    var i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 4);
    !$10ecac3e4062713a$var$c.__s && $10ecac3e4062713a$var$C(i.__H, u) && (i.__ = n, i.u = u, $10ecac3e4062713a$var$r.__h.push(i));
}
function $10ecac3e4062713a$export$b8f5890fc79d6aca(n) {
    return $10ecac3e4062713a$var$o = 5, $10ecac3e4062713a$export$1538c33de8887b59(function() {
        return {
            current: n
        };
    }, []);
}
function $10ecac3e4062713a$export$d5a552a76deda3c2(n, t, r) {
    $10ecac3e4062713a$var$o = 6, $10ecac3e4062713a$export$e5c5a5f917a5871c(function() {
        if ("function" == typeof n) {
            var r = n(t());
            return function() {
                n(null), r && "function" == typeof r && r();
            };
        }
        if (n) return n.current = t(), function() {
            return n.current = null;
        };
    }, null == r ? r : r.concat(n));
}
function $10ecac3e4062713a$export$1538c33de8887b59(n, r) {
    var u = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 7);
    return $10ecac3e4062713a$var$C(u.__H, r) && (u.__ = n(), u.__H = r, u.__h = n), u.__;
}
function $10ecac3e4062713a$export$35808ee640e87ca7(n, t) {
    return $10ecac3e4062713a$var$o = 8, $10ecac3e4062713a$export$1538c33de8887b59(function() {
        return n;
    }, t);
}
function $10ecac3e4062713a$export$fae74005e78b1a27(n) {
    var u = $10ecac3e4062713a$var$r.context[n.__c], i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 9);
    return i.c = n, u ? (null == i.__ && (i.__ = !0, u.sub($10ecac3e4062713a$var$r)), u.props.value) : n.__;
}
function $10ecac3e4062713a$export$dc8fbce3eb94dc1e(n, t) {
    $10ecac3e4062713a$var$c.useDebugValue && $10ecac3e4062713a$var$c.useDebugValue(t ? t(n) : n);
}
function $10ecac3e4062713a$export$c052f6604b7d51fe(n) {
    var u = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 10), i = $10ecac3e4062713a$export$60241385465d0a34();
    return u.__ = n, $10ecac3e4062713a$var$r.componentDidCatch || ($10ecac3e4062713a$var$r.componentDidCatch = function(n, t) {
        u.__ && u.__(n, t), i[1](n);
    }), [
        i[0],
        function() {
            i[1](void 0);
        }
    ];
}
function $10ecac3e4062713a$export$f680877a34711e37() {
    var n = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 11);
    if (!n.__) {
        for(var u = $10ecac3e4062713a$var$r.__v; null !== u && !u.__m && null !== u.__;)u = u.__;
        var i = u.__m || (u.__m = [
            0,
            0
        ]);
        n.__ = "P" + i[0] + "-" + i[1]++;
    }
    return n.__;
}
function $10ecac3e4062713a$var$j() {
    for(var n; n = $10ecac3e4062713a$var$f.shift();)if (n.__P && n.__H) try {
        n.__H.__h.forEach($10ecac3e4062713a$var$z), n.__H.__h.forEach($10ecac3e4062713a$var$B), n.__H.__h = [];
    } catch (t) {
        n.__H.__h = [], $10ecac3e4062713a$var$c.__e(t, n.__v);
    }
}
$10ecac3e4062713a$var$c.__b = function(n) {
    $10ecac3e4062713a$var$r = null, $10ecac3e4062713a$var$e && $10ecac3e4062713a$var$e(n);
}, $10ecac3e4062713a$var$c.__ = function(n, t) {
    n && t.__k && t.__k.__m && (n.__m = t.__k.__m), $10ecac3e4062713a$var$s && $10ecac3e4062713a$var$s(n, t);
}, $10ecac3e4062713a$var$c.__r = function(n) {
    $10ecac3e4062713a$var$a && $10ecac3e4062713a$var$a(n), $10ecac3e4062713a$var$t = 0;
    var i = ($10ecac3e4062713a$var$r = n.__c).__H;
    i && ($10ecac3e4062713a$var$u === $10ecac3e4062713a$var$r ? (i.__h = [], $10ecac3e4062713a$var$r.__h = [], i.__.forEach(function(n) {
        n.__N && (n.__ = n.__N), n.u = n.__N = void 0;
    })) : (i.__h.forEach($10ecac3e4062713a$var$z), i.__h.forEach($10ecac3e4062713a$var$B), i.__h = [], $10ecac3e4062713a$var$t = 0)), $10ecac3e4062713a$var$u = $10ecac3e4062713a$var$r;
}, $10ecac3e4062713a$var$c.diffed = function(n) {
    $10ecac3e4062713a$var$v && $10ecac3e4062713a$var$v(n);
    var t = n.__c;
    t && t.__H && (t.__H.__h.length && (1 !== $10ecac3e4062713a$var$f.push(t) && $10ecac3e4062713a$var$i === $10ecac3e4062713a$var$c.requestAnimationFrame || (($10ecac3e4062713a$var$i = $10ecac3e4062713a$var$c.requestAnimationFrame) || $10ecac3e4062713a$var$w)($10ecac3e4062713a$var$j)), t.__H.__.forEach(function(n) {
        n.u && (n.__H = n.u), n.u = void 0;
    })), $10ecac3e4062713a$var$u = $10ecac3e4062713a$var$r = null;
}, $10ecac3e4062713a$var$c.__c = function(n, t) {
    t.some(function(n) {
        try {
            n.__h.forEach($10ecac3e4062713a$var$z), n.__h = n.__h.filter(function(n) {
                return !n.__ || $10ecac3e4062713a$var$B(n);
            });
        } catch (r) {
            t.some(function(n) {
                n.__h && (n.__h = []);
            }), t = [], $10ecac3e4062713a$var$c.__e(r, n.__v);
        }
    }), $10ecac3e4062713a$var$l && $10ecac3e4062713a$var$l(n, t);
}, $10ecac3e4062713a$var$c.unmount = function(n) {
    $10ecac3e4062713a$var$m && $10ecac3e4062713a$var$m(n);
    var t, r = n.__c;
    r && r.__H && (r.__H.__.forEach(function(n) {
        try {
            $10ecac3e4062713a$var$z(n);
        } catch (n) {
            t = n;
        }
    }), r.__H = void 0, t && $10ecac3e4062713a$var$c.__e(t, r.__v));
};
var $10ecac3e4062713a$var$k = "function" == typeof requestAnimationFrame;
function $10ecac3e4062713a$var$w(n) {
    var t, r = function() {
        clearTimeout(u), $10ecac3e4062713a$var$k && cancelAnimationFrame(t), setTimeout(n);
    }, u = setTimeout(r, 100);
    $10ecac3e4062713a$var$k && (t = requestAnimationFrame(r));
}
function $10ecac3e4062713a$var$z(n) {
    var t = $10ecac3e4062713a$var$r, u = n.__c;
    "function" == typeof u && (n.__c = void 0, u()), $10ecac3e4062713a$var$r = t;
}
function $10ecac3e4062713a$var$B(n) {
    var t = $10ecac3e4062713a$var$r;
    n.__c = n.__(), $10ecac3e4062713a$var$r = t;
}
function $10ecac3e4062713a$var$C(n, t) {
    return !n || n.length !== t.length || t.some(function(t, r) {
        return t !== n[r];
    });
}
function $10ecac3e4062713a$var$D(n, t) {
    return "function" == typeof t ? t(n) : t;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $74bb4be6e9b78681$export$f30cb9bc4f736419 = {
    // Colors for components styles
    background: 'white',
    color: 'black',
    headerColor: '#ce1126',
    primaryPreBackground: 'rgba(206, 17, 38, 0.05)',
    primaryPreColor: 'inherit',
    secondaryPreBackground: 'rgba(251, 245, 180, 0.3)',
    secondaryPreColor: 'inherit',
    footer: '#878e91',
    anchorColor: '#878e91',
    toggleBackground: 'transparent',
    toggleColor: '#878e91',
    closeColor: '#293238',
    navBackground: 'rgba(206, 17, 38, 0.05)',
    navArrow: '#ce1126',
    diffAdded: 'green',
    diffRemoved: '#ce1126',
    // Light color scheme inspired by https://chriskempson.github.io/base16/css/base16-github.css
    // base00: '#ffffff',
    base01: '#f5f5f5',
    // base02: '#c8c8fa',
    base03: '#6e6e6e',
    // base04: '#e8e8e8',
    base05: '#333333',
    // base06: '#ffffff',
    // base07: '#ffffff',
    base08: '#881280',
    // base09: '#0086b3',
    // base0A: '#795da3',
    base0B: '#1155cc',
    base0C: '#994500',
    // base0D: '#795da3',
    base0E: '#c80000'
};
const $74bb4be6e9b78681$export$3e936a8db52a10a0 = {
    // Colors for components styles
    background: '#353535',
    color: 'white',
    headerColor: '#e83b46',
    primaryPreBackground: 'rgba(206, 17, 38, 0.1)',
    primaryPreColor: '#fccfcf',
    secondaryPreBackground: 'rgba(251, 245, 180, 0.1)',
    secondaryPreColor: '#fbf5b4',
    footer: '#878e91',
    anchorColor: '#878e91',
    toggleBackground: 'transparent',
    toggleColor: '#878e91',
    closeColor: '#ffffff',
    navBackground: 'rgba(206, 17, 38, 0.2)',
    navArrow: '#ce1126',
    diffAdded: '#85e285',
    diffRemoved: '#ff5459',
    // Dark color scheme inspired by https://github.com/atom/base16-tomorrow-dark-theme/blob/master/styles/colors.less
    // base00: '#1d1f21',
    base01: '#282a2e',
    // base02: '#373b41',
    base03: '#969896',
    // base04: '#b4b7b4',
    base05: '#c5c8c6',
    // base06: '#e0e0e0',
    // base07: '#ffffff',
    base08: '#cc6666',
    // base09: '#de935f',
    // base0A: '#f0c674',
    base0B: '#b5bd68',
    base0C: '#8abeb7',
    // base0D: '#81a2be',
    base0E: '#b294bb'
};
const $74bb4be6e9b78681$export$bca14c5b3b88a9c9 = Object.fromEntries(Object.keys($74bb4be6e9b78681$export$f30cb9bc4f736419).map((key)=>[
        key,
        `light-dark(${$74bb4be6e9b78681$export$f30cb9bc4f736419[key]}, ${$74bb4be6e9b78681$export$3e936a8db52a10a0[key]})`
    ]));
const $74bb4be6e9b78681$export$7ef984671d1853d7 = {
    width: '100vw',
    height: '100vh',
    maxWidth: 'none',
    maxHeight: 'none',
    border: 0,
    margin: 0,
    padding: 0,
    boxSizing: 'border-box',
    textAlign: 'center',
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    outline: 'none',
    colorScheme: 'light dark'
};
const $20d888b381d18c6c$var$overlayStyle = {
    position: 'relative',
    display: 'inline-flex',
    flexDirection: 'column',
    height: '100%',
    width: '1024px',
    maxWidth: '100%',
    overflowX: 'hidden',
    overflowY: 'auto',
    padding: '0.5rem',
    boxSizing: 'border-box',
    textAlign: 'left',
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '11px',
    whiteSpace: 'pre-wrap',
    wordBreak: 'break-word',
    lineHeight: 1.5,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color
};
function $20d888b381d18c6c$var$ErrorOverlay(props) {
    const { shortcutHandler: shortcutHandler } = props;
    $10ecac3e4062713a$export$6d9c69b0de29b591(()=>{
        const onKeyDown = (e)=>{
            if (shortcutHandler) shortcutHandler(e.key);
        };
        window.addEventListener('keydown', onKeyDown);
        return ()=>{
            window.removeEventListener('keydown', onKeyDown);
        };
    }, [
        shortcutHandler
    ]);
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $20d888b381d18c6c$var$overlayStyle,
        children: props.children
    });
}
var $20d888b381d18c6c$export$2e2bcd8739ae039 = $20d888b381d18c6c$var$ErrorOverlay;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $7aae0c9ea64fc08c$var$closeButtonStyle = {
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.closeColor,
    lineHeight: '1rem',
    fontSize: '1.5rem',
    padding: '1rem',
    cursor: 'pointer',
    position: 'absolute',
    right: 0,
    top: 0
};
function $7aae0c9ea64fc08c$var$CloseButton({ close: close }) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        title: "Click or press Escape to dismiss.",
        onClick: close,
        style: $7aae0c9ea64fc08c$var$closeButtonStyle,
        children: "\xd7"
    });
}
var $7aae0c9ea64fc08c$export$2e2bcd8739ae039 = $7aae0c9ea64fc08c$var$CloseButton;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $1adc179a826c5dd2$var$navigationBarStyle = {
    marginBottom: '0.5rem'
};
const $1adc179a826c5dd2$var$buttonContainerStyle = {
    marginRight: '1em'
};
const $1adc179a826c5dd2$var$_navButtonStyle = {
    border: 'none',
    borderRadius: '4px',
    padding: '3px 6px',
    cursor: 'pointer'
};
const $1adc179a826c5dd2$var$leftButtonStyle = {
    ...$1adc179a826c5dd2$var$_navButtonStyle,
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navArrow,
    borderTopRightRadius: '0px',
    borderBottomRightRadius: '0px',
    marginRight: '1px'
};
const $1adc179a826c5dd2$var$rightButtonStyle = {
    ...$1adc179a826c5dd2$var$_navButtonStyle,
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navArrow,
    borderTopLeftRadius: '0px',
    borderBottomLeftRadius: '0px'
};
function $1adc179a826c5dd2$var$NavigationBar(props) {
    const { currentError: currentError, totalErrors: totalErrors, previous: previous, next: next } = props;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $1adc179a826c5dd2$var$navigationBarStyle,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                style: $1adc179a826c5dd2$var$buttonContainerStyle,
                children: [
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: previous,
                        style: $1adc179a826c5dd2$var$leftButtonStyle,
                        children: "\u2190"
                    }),
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: next,
                        style: $1adc179a826c5dd2$var$rightButtonStyle,
                        children: "\u2192"
                    })
                ]
            }),
            `${currentError} of ${totalErrors} errors on the page`
        ]
    });
}
var $1adc179a826c5dd2$export$2e2bcd8739ae039 = $1adc179a826c5dd2$var$NavigationBar;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $c306e3a42547c8c2$var$headerStyle = {
    fontSize: '2em',
    fontFamily: 'sans-serif',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.headerColor,
    whiteSpace: 'pre-wrap',
    // Top bottom margin spaces header
    // Right margin revents overlap with close button
    margin: '0 2rem 0.75rem 0',
    flex: '0 0 auto'
};
function $c306e3a42547c8c2$var$Header(props) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $c306e3a42547c8c2$var$headerStyle,
        children: props.headerText
    });
}
var $c306e3a42547c8c2$export$2e2bcd8739ae039 = $c306e3a42547c8c2$var$Header;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $97c30df7f5c364f7$var$_preStyle = {
    position: 'relative',
    display: 'block',
    padding: '0.5em',
    marginTop: '0.5em',
    marginBottom: '0.5em',
    overflowX: 'auto',
    whiteSpace: 'pre-wrap',
    borderRadius: '0.25rem'
};
const $97c30df7f5c364f7$var$codeStyle = {
    fontFamily: 'Consolas, Menlo, monospace'
};
function $97c30df7f5c364f7$var$CodeBlock({ main: main, codeHTML: codeHTML }) {
    const primaryPreStyle = {
        ...$97c30df7f5c364f7$var$_preStyle,
        backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreBackground,
        color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreColor
    };
    const secondaryPreStyle = {
        ...$97c30df7f5c364f7$var$_preStyle,
        backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.secondaryPreBackground,
        color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.secondaryPreColor
    };
    const preStyle = main ? primaryPreStyle : secondaryPreStyle;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
        style: preStyle,
        children: $23b7c1cb98b19658$export$34b9dba7ce09269b("code", {
            style: $97c30df7f5c364f7$var$codeStyle,
            dangerouslySetInnerHTML: {
                __html: codeHTML
            }
        })
    });
}
var $97c30df7f5c364f7$export$2e2bcd8739ae039 = $97c30df7f5c364f7$var$CodeBlock;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $f78f50d61026cdc5$export$44b1e5ee7f53eae1(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled) {
    let prettyURL;
    if (!compiled && sourceFileName && typeof sourceLineNumber === 'number') {
        // Remove everything up to the first /src/ or /node_modules/
        const trimMatch = /^[/|\\].*?[/|\\]((src|node_modules)[/|\\].*)/.exec(sourceFileName);
        if (trimMatch && trimMatch[1]) prettyURL = trimMatch[1];
        else prettyURL = sourceFileName;
        prettyURL += ':' + sourceLineNumber;
        // Note: we intentionally skip 0's because they're produced by cheap webpack maps
        if (sourceColumnNumber) prettyURL += ':' + sourceColumnNumber;
    } else if (fileName && typeof lineNumber === 'number') {
        prettyURL = fileName + ':' + lineNumber;
        // Note: we intentionally skip 0's because they're produced by cheap webpack maps
        if (columnNumber) prettyURL += ':' + columnNumber;
    } else prettyURL = 'unknown';
    return prettyURL.replace('webpack://', '.');
}
var $f78f50d61026cdc5$export$2e2bcd8739ae039 = $f78f50d61026cdc5$export$44b1e5ee7f53eae1;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $cdea3ae92bef6910$exports = {};
'use strict';
$cdea3ae92bef6910$exports = $cdea3ae92bef6910$var$ansiHTML;
// Reference to https://github.com/sindresorhus/ansi-regex
var $cdea3ae92bef6910$var$_regANSI = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/;
var $cdea3ae92bef6910$var$_defColors = {
    reset: [
        'fff',
        '000'
    ],
    black: '000',
    red: 'ff0000',
    green: '209805',
    yellow: 'e8bf03',
    blue: '0000ff',
    magenta: 'ff00ff',
    cyan: '00ffee',
    lightgrey: 'f0f0f0',
    darkgrey: '888'
};
var $cdea3ae92bef6910$var$_styles = {
    30: 'black',
    31: 'red',
    32: 'green',
    33: 'yellow',
    34: 'blue',
    35: 'magenta',
    36: 'cyan',
    37: 'lightgrey'
};
var $cdea3ae92bef6910$var$_openTags = {
    '1': 'font-weight:bold',
    '2': 'opacity:0.5',
    '3': '<i>',
    '4': '<u>',
    '8': 'display:none',
    '9': '<del>' // delete
};
var $cdea3ae92bef6910$var$_closeTags = {
    '23': '</i>',
    '24': '</u>',
    '29': '</del>' // reset delete
};
[
    0,
    21,
    22,
    27,
    28,
    39,
    49
].forEach(function(n) {
    $cdea3ae92bef6910$var$_closeTags[n] = '</span>';
});
/**
 * Converts text with ANSI color codes to HTML markup.
 * @param {String} text
 * @returns {*}
 */ function $cdea3ae92bef6910$var$ansiHTML(text) {
    // Returns the text if the string has no ANSI escape code.
    if (!$cdea3ae92bef6910$var$_regANSI.test(text)) return text;
    // Cache opened sequence.
    var ansiCodes = [];
    // Replace with markup.
    var ret = text.replace(/\033\[(\d+)m/g, function(match, seq) {
        var ot = $cdea3ae92bef6910$var$_openTags[seq];
        if (ot) {
            // If current sequence has been opened, close it.
            if (!!~ansiCodes.indexOf(seq)) {
                ansiCodes.pop();
                return '</span>';
            }
            // Open tag.
            ansiCodes.push(seq);
            return ot[0] === '<' ? ot : '<span style="' + ot + ';">';
        }
        var ct = $cdea3ae92bef6910$var$_closeTags[seq];
        if (ct) {
            // Pop sequence
            ansiCodes.pop();
            return ct;
        }
        return '';
    });
    // Make sure tags are closed.
    var l = ansiCodes.length;
    l > 0 && (ret += Array(l + 1).join('</span>'));
    return ret;
}
/**
 * Customize colors.
 * @param {Object} colors reference to _defColors
 */ $cdea3ae92bef6910$var$ansiHTML.setColors = function(colors) {
    if (typeof colors !== 'object') throw new Error('`colors` parameter must be an Object.');
    var _finalColors = {};
    for(var key in $cdea3ae92bef6910$var$_defColors){
        var hex = colors.hasOwnProperty(key) ? colors[key] : null;
        if (!hex) {
            _finalColors[key] = $cdea3ae92bef6910$var$_defColors[key];
            continue;
        }
        if ('reset' === key) {
            if (typeof hex === 'string') hex = [
                hex
            ];
            if (!Array.isArray(hex) || hex.length === 0 || hex.some(function(h) {
                return typeof h !== 'string';
            })) throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000');
            var defHexColor = $cdea3ae92bef6910$var$_defColors[key];
            if (!hex[0]) hex[0] = defHexColor[0];
            if (hex.length === 1 || !hex[1]) {
                hex = [
                    hex[0]
                ];
                hex.push(defHexColor[1]);
            }
            hex = hex.slice(0, 2);
        } else if (typeof hex !== 'string') throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000');
        _finalColors[key] = hex;
    }
    $cdea3ae92bef6910$var$_setTags(_finalColors);
};
/**
 * Reset colors.
 */ $cdea3ae92bef6910$var$ansiHTML.reset = function() {
    $cdea3ae92bef6910$var$_setTags($cdea3ae92bef6910$var$_defColors);
};
/**
 * Expose tags, including open and close.
 * @type {Object}
 */ $cdea3ae92bef6910$var$ansiHTML.tags = {};
if (Object.defineProperty) {
    Object.defineProperty($cdea3ae92bef6910$var$ansiHTML.tags, 'open', {
        get: function() {
            return $cdea3ae92bef6910$var$_openTags;
        }
    });
    Object.defineProperty($cdea3ae92bef6910$var$ansiHTML.tags, 'close', {
        get: function() {
            return $cdea3ae92bef6910$var$_closeTags;
        }
    });
} else {
    $cdea3ae92bef6910$var$ansiHTML.tags.open = $cdea3ae92bef6910$var$_openTags;
    $cdea3ae92bef6910$var$ansiHTML.tags.close = $cdea3ae92bef6910$var$_closeTags;
}
function $cdea3ae92bef6910$var$_setTags(colors) {
    // reset all
    $cdea3ae92bef6910$var$_openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1];
    // inverse
    $cdea3ae92bef6910$var$_openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0];
    // dark grey
    $cdea3ae92bef6910$var$_openTags['90'] = 'color:#' + colors.darkgrey;
    for(var code in $cdea3ae92bef6910$var$_styles){
        var color = $cdea3ae92bef6910$var$_styles[code];
        var oriColor = colors[color] || '000';
        $cdea3ae92bef6910$var$_openTags[code] = 'color:#' + oriColor;
        code = parseInt(code);
        $cdea3ae92bef6910$var$_openTags[(code + 10).toString()] = 'background:#' + oriColor;
    }
}
$cdea3ae92bef6910$var$ansiHTML.reset();
// Map ANSI colors from what babel-code-frame uses to base16-github
// See: https://github.com/babel/babel/blob/e86f62b304d280d0bab52c38d61842b853848ba6/packages/babel-code-frame/src/index.js#L9-L22
const $b67e2a05a9c13039$var$colors = {
    reset: [
        $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base05,
        'transparent'
    ],
    black: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base05,
    red: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base08 /* marker, bg-invalid */ ,
    green: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0B /* string */ ,
    yellow: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base08 /* capitalized, jsx_tag, punctuator */ ,
    blue: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0C,
    magenta: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0C /* regex */ ,
    cyan: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0E /* keyword */ ,
    gray: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base03 /* comment, gutter */ ,
    lightgrey: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base01,
    darkgrey: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base03
};
/*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).setColors($b67e2a05a9c13039$var$colors);
// $FlowFixMe
for(let tag in /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open)/*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open[tag] = /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open[tag].replace(/#light-dark/g, 'light-dark');
function $b67e2a05a9c13039$var$generateAnsiHTML(txt) {
    return /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports)(txt.replace(/[&<>"']/g, (c)=>{
        switch(c){
            case '&':
                return '&amp';
            case '<':
                return '&lt;';
            case '>':
                return '&gt';
            case '"':
                return '&quot;';
            case "'":
                return '&#39;';
            default:
                return c;
        }
    }));
}
var $b67e2a05a9c13039$export$2e2bcd8739ae039 = $b67e2a05a9c13039$var$generateAnsiHTML;
const $e0e0fa52b83f95a9$var$linkStyle = {
    fontSize: '0.9em',
    marginBottom: '0.9em'
};
const $e0e0fa52b83f95a9$var$anchorStyle = {
    textDecoration: 'none',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.anchorColor,
    cursor: 'pointer'
};
const $e0e0fa52b83f95a9$var$codeAnchorStyle = {
    cursor: 'pointer'
};
const $e0e0fa52b83f95a9$var$toggleStyle = {
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.toggleColor,
    cursor: 'pointer',
    border: 'none',
    display: 'block',
    width: '100%',
    textAlign: 'left',
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.toggleBackground,
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '1em',
    padding: '0px',
    lineHeight: '1.5'
};
function $e0e0fa52b83f95a9$var$StackFrame(props) {
    const { frame: frame, critical: critical, showCode: showCode } = props;
    const { fileName: fileName, lineNumber: lineNumber, columnNumber: columnNumber, _scriptCode: scriptLines, _originalFileName: sourceFileName, _originalLineNumber: sourceLineNumber, _originalColumnNumber: sourceColumnNumber, _originalScriptCode: sourceLines } = frame;
    const functionName = frame.getFunctionName();
    const [compiled, setCompiled] = $10ecac3e4062713a$export$60241385465d0a34(!sourceLines);
    const getErrorLocation = ()=>{
        const { _originalFileName: fileName, _originalLineNumber: lineNumber } = props.frame;
        // Unknown file
        if (!fileName) return null;
        // e.g. "/path-to-my-app/webpack/bootstrap eaddeb46b67d75e4dfc1"
        const isInternalWebpackBootstrapCode = fileName.trim().indexOf(' ') !== -1;
        if (isInternalWebpackBootstrapCode) return null;
        // Code is in a real file
        return {
            fileName: fileName,
            lineNumber: lineNumber || 1
        };
    };
    const editorHandler = ()=>{
        const errorLoc = getErrorLocation();
        if (!errorLoc) return;
        props.editorHandler?.(errorLoc);
    };
    const url = $f78f50d61026cdc5$export$44b1e5ee7f53eae1(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled);
    let codeBlockProps = null;
    if (showCode) {
        if (compiled && scriptLines && scriptLines.length !== 0 && lineNumber != null) codeBlockProps = {
            codeHTML: $b67e2a05a9c13039$export$2e2bcd8739ae039(scriptLines),
            main: critical
        };
        else if (!compiled && sourceLines && sourceLines.length !== 0 && sourceLineNumber != null) codeBlockProps = {
            codeHTML: $b67e2a05a9c13039$export$2e2bcd8739ae039(sourceLines),
            main: critical
        };
    }
    const canOpenInEditor = getErrorLocation() !== null && props.editorHandler !== null;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: functionName
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                style: $e0e0fa52b83f95a9$var$linkStyle,
                children: $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                    role: "link",
                    style: canOpenInEditor ? $e0e0fa52b83f95a9$var$anchorStyle : null,
                    onClick: canOpenInEditor ? editorHandler : null,
                    onKeyDown: canOpenInEditor ? (e)=>{
                        if (e.key === 'Enter') editorHandler();
                    } : null,
                    tabIndex: canOpenInEditor ? '0' : null,
                    children: url
                })
            }),
            codeBlockProps && $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                style: {
                    marginBottom: '1.5em'
                },
                children: [
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                        onClick: canOpenInEditor ? editorHandler : null,
                        style: canOpenInEditor ? $e0e0fa52b83f95a9$var$codeAnchorStyle : null,
                        children: $23b7c1cb98b19658$export$34b9dba7ce09269b($97c30df7f5c364f7$export$2e2bcd8739ae039, {
                            ...codeBlockProps
                        })
                    }),
                    scriptLines && sourceLines && $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        style: $e0e0fa52b83f95a9$var$toggleStyle,
                        onClick: ()=>{
                            setCompiled(!compiled);
                        },
                        children: 'View ' + (compiled ? 'source' : 'compiled')
                    })
                ]
            })
        ]
    });
}
var $e0e0fa52b83f95a9$export$2e2bcd8739ae039 = $e0e0fa52b83f95a9$var$StackFrame;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $9a1abb59f5d10ec8$var$_collapsibleStyle = {
    cursor: 'pointer',
    border: 'none',
    display: 'block',
    width: '100%',
    textAlign: 'left',
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '1em',
    padding: '0px',
    lineHeight: '1.5'
};
const $9a1abb59f5d10ec8$var$collapsibleCollapsedStyle = {
    ...$9a1abb59f5d10ec8$var$_collapsibleStyle,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color,
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    marginBottom: '1.5em'
};
const $9a1abb59f5d10ec8$var$collapsibleExpandedStyle = {
    ...$9a1abb59f5d10ec8$var$_collapsibleStyle,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color,
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    marginBottom: '0.6em'
};
function $9a1abb59f5d10ec8$var$Collapsible(props) {
    const [collapsed, setCollapsed] = $10ecac3e4062713a$export$60241385465d0a34(true);
    const toggleCollapsed = ()=>{
        setCollapsed(!collapsed);
    };
    const count = props.children.length;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("details", {
        open: !collapsed,
        onToggle: toggleCollapsed,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("summary", {
                style: collapsed ? $9a1abb59f5d10ec8$var$collapsibleCollapsedStyle : $9a1abb59f5d10ec8$var$collapsibleExpandedStyle,
                children: (collapsed ? "\u25B6" : "\u25BC") + ` ${count} stack frames were ` + (collapsed ? 'collapsed.' : 'expanded.')
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: [
                    props.children,
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: toggleCollapsed,
                        style: $9a1abb59f5d10ec8$var$collapsibleExpandedStyle,
                        children: `\u{25B2} ${count} stack frames were expanded.`
                    })
                ]
            })
        ]
    });
}
var $9a1abb59f5d10ec8$export$2e2bcd8739ae039 = $9a1abb59f5d10ec8$var$Collapsible;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $e95d7084caaf4e6d$export$723fa77eef12dd9f(sourceFileName, fileName) {
    return sourceFileName == null || sourceFileName === '' || sourceFileName.indexOf('~/') !== -1 || sourceFileName.indexOf('node_modules/') !== -1 || sourceFileName.indexOf('error-overlay') !== -1 || sourceFileName.trim().indexOf(' ') !== -1 || fileName == null || fileName === '';
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $a5027556d7003a42$export$64794fcb05cf0bcf(errorName) {
    switch(errorName){
        case 'EvalError':
        case 'InternalError':
        case 'RangeError':
        case 'ReferenceError':
        case 'SyntaxError':
        case 'TypeError':
        case 'URIError':
            return true;
        default:
            return false;
    }
}
var $a5027556d7003a42$export$2e2bcd8739ae039 = $a5027556d7003a42$export$64794fcb05cf0bcf;
const $5ee7d2edb790dd06$var$traceStyle = {
    fontSize: '1em',
    flex: '0 1 auto',
    minHeight: '0px',
    overflow: 'auto'
};
function $5ee7d2edb790dd06$var$StackTrace(props) {
    const { stackFrames: stackFrames, errorName: errorName, contextSize: contextSize, editorHandler: editorHandler } = props;
    const renderedFrames = [];
    let hasReachedAppCode = false, currentBundle = [], bundleCount = 0;
    stackFrames.forEach((frame, index)=>{
        const { fileName: fileName, _originalFileName: sourceFileName } = frame;
        const isInternalUrl = $e95d7084caaf4e6d$export$723fa77eef12dd9f(sourceFileName, fileName);
        const isThrownIntentionally = !$a5027556d7003a42$export$64794fcb05cf0bcf(errorName);
        const shouldCollapse = isInternalUrl && (isThrownIntentionally || hasReachedAppCode);
        if (!isInternalUrl) hasReachedAppCode = true;
        const frameEle = $23b7c1cb98b19658$export$34b9dba7ce09269b($e0e0fa52b83f95a9$export$2e2bcd8739ae039, {
            frame: frame,
            contextSize: contextSize,
            critical: index === 0,
            showCode: !shouldCollapse,
            editorHandler: editorHandler
        }, 'frame-' + index);
        const lastElement = index === stackFrames.length - 1;
        if (shouldCollapse) currentBundle.push(frameEle);
        if (!shouldCollapse || lastElement) {
            if (currentBundle.length === 1) renderedFrames.push(currentBundle[0]);
            else if (currentBundle.length > 1) {
                bundleCount++;
                renderedFrames.push($23b7c1cb98b19658$export$34b9dba7ce09269b($9a1abb59f5d10ec8$export$2e2bcd8739ae039, {
                    children: currentBundle
                }, 'bundle-' + bundleCount));
            }
            currentBundle = [];
        }
        if (!shouldCollapse) renderedFrames.push(frameEle);
    });
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $5ee7d2edb790dd06$var$traceStyle,
        children: renderedFrames
    });
}
var $5ee7d2edb790dd06$export$2e2bcd8739ae039 = $5ee7d2edb790dd06$var$StackTrace;
const $2eeadf2892cff4e4$var$diffStyle = {
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreColor,
    padding: '0.5em',
    overflowX: 'auto',
    whiteSpace: 'pre-wrap',
    borderRadius: '0.25rem'
};
function $2eeadf2892cff4e4$export$2e2bcd8739ae039({ diff: diff }) {
    let lines = diff.split('\n').flatMap((line, i)=>[
            $2eeadf2892cff4e4$var$formatLine(line, i),
            '\n'
        ]).slice(0, -1);
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
        style: $2eeadf2892cff4e4$var$diffStyle,
        children: lines
    });
}
function $2eeadf2892cff4e4$var$formatLine(line, index) {
    if (line.startsWith('+')) return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        style: {
            color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.diffAdded,
            fontWeight: 'bold'
        },
        children: line
    }, index);
    else if (line.startsWith('-') || line.startsWith('>')) return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        style: {
            color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.diffRemoved,
            fontWeight: 'bold'
        },
        children: line
    }, index);
    else return line;
}
const $4baa71cb4cecc0ea$var$wrapperStyle = {
    display: 'flex',
    flexDirection: 'column'
};
function $4baa71cb4cecc0ea$var$RuntimeError({ errorRecord: errorRecord, editorHandler: editorHandler }) {
    const { error: error, unhandledRejection: unhandledRejection, contextSize: contextSize, stackFrames: stackFrames } = errorRecord;
    const errorName = unhandledRejection ? 'Unhandled Rejection (' + error.name + ')' : error.name;
    // Make header prettier
    const message = error.message;
    let headerText = message.match(/^\w*:/) || !errorName ? message : errorName + ': ' + message;
    headerText = headerText // TODO: maybe remove this prefix from fbjs?
    // It's just scaring people
    .replace(/^Invariant Violation:\s*/, '') // This is not helpful either:
    .replace(/^Warning:\s*/, '') // Break the actionable part to the next line.
    // AFAIK React 16+ should already do this.
    .replace(' Check the render method', '\n\nCheck the render method').replace(' Check your code at', '\n\nCheck your code at');
    let link, diff;
    if (headerText.includes('https://react.dev/link/hydration-mismatch')) {
        [headerText, diff] = headerText.split('https://react.dev/link/hydration-mismatch');
        link = 'https://react.dev/link/hydration-mismatch';
    } else if (headerText.includes('This will cause a hydration error.')) {
        [headerText, diff] = headerText.split('This will cause a hydration error.');
        headerText += 'This will cause a hydration error.';
    }
    let lines = headerText.split('\n');
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $4baa71cb4cecc0ea$var$wrapperStyle,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b($c306e3a42547c8c2$export$2e2bcd8739ae039, {
                headerText: lines[0]
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
                children: lines.slice(1).join('\n').trim()
            }),
            link && $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: $23b7c1cb98b19658$export$34b9dba7ce09269b("a", {
                    href: link,
                    target: "_blank",
                    rel: "noreferrer",
                    children: link
                })
            }),
            diff && $23b7c1cb98b19658$export$34b9dba7ce09269b($2eeadf2892cff4e4$export$2e2bcd8739ae039, {
                diff: diff.trim()
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($5ee7d2edb790dd06$export$2e2bcd8739ae039, {
                stackFrames: stackFrames,
                errorName: errorName,
                contextSize: contextSize,
                editorHandler: editorHandler
            })
        ]
    });
}
var $4baa71cb4cecc0ea$export$2e2bcd8739ae039 = $4baa71cb4cecc0ea$var$RuntimeError;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $7606db210182b733$var$footerStyle = {
    fontFamily: 'sans-serif',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.footer,
    marginTop: '0.5rem',
    flex: '0 0 auto'
};
function $7606db210182b733$var$Footer(props) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $7606db210182b733$var$footerStyle,
        children: [
            props.line1,
            $23b7c1cb98b19658$export$34b9dba7ce09269b("br", {}),
            props.line2
        ]
    });
}
var $7606db210182b733$export$2e2bcd8739ae039 = $7606db210182b733$var$Footer;
function $d0eac8b125ed15e2$var$RuntimeErrorContainer(props) {
    const { errorRecords: errorRecords, close: close } = props;
    const totalErrors = errorRecords.length;
    let [currentIndex, setCurrentIndex] = $10ecac3e4062713a$export$60241385465d0a34(0);
    let previous = ()=>{
        setCurrentIndex(currentIndex > 0 ? currentIndex - 1 : totalErrors - 1);
    };
    let next = ()=>{
        setCurrentIndex(currentIndex < totalErrors - 1 ? currentIndex + 1 : 0);
    };
    return $23b7c1cb98b19658$export$34b9dba7ce09269b($20d888b381d18c6c$export$2e2bcd8739ae039, {
        shortcutHandler: (key)=>{
            if (key === 'Escape') props.close();
            else if (key === 'ArrowLeft') previous();
            else if (key === 'ArrowRight') next();
        },
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b($7aae0c9ea64fc08c$export$2e2bcd8739ae039, {
                close: close
            }),
            totalErrors > 1 && $23b7c1cb98b19658$export$34b9dba7ce09269b($1adc179a826c5dd2$export$2e2bcd8739ae039, {
                currentError: currentIndex + 1,
                totalErrors: totalErrors,
                previous: previous,
                next: next
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($4baa71cb4cecc0ea$export$2e2bcd8739ae039, {
                errorRecord: errorRecords[currentIndex],
                editorHandler: props.editorHandler
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($7606db210182b733$export$2e2bcd8739ae039, {
                line1: "This screen is visible only in development. It will not appear if the app crashes in production.",
                line2: "Open your browser\u2019s developer console to further inspect this error.  Click the 'X' or hit ESC to dismiss this message."
            })
        ]
    });
}
var $d0eac8b125ed15e2$export$2e2bcd8739ae039 = $d0eac8b125ed15e2$var$RuntimeErrorContainer;
let $da9882e673ac146b$var$iframe = null;
let $da9882e673ac146b$var$editorHandler = null;
let $da9882e673ac146b$var$currentRuntimeErrorRecords = [];
let $da9882e673ac146b$var$stopListeningToRuntimeErrors = null;
function $da9882e673ac146b$export$25a22ac46f1bd016(handler) {
    $da9882e673ac146b$var$editorHandler = handler;
    if ($da9882e673ac146b$var$iframe) $da9882e673ac146b$var$update();
}
function $da9882e673ac146b$export$74e9101ce4078c0(error, options) {
    $6d40ebe8356580e0$export$9123e6c9c0ac21ed($da9882e673ac146b$var$handleRuntimeError(options))(error, false);
}
function $da9882e673ac146b$export$cda2c88a41631c16(options) {
    if ($da9882e673ac146b$var$stopListeningToRuntimeErrors !== null) throw new Error('Already listening');
    $da9882e673ac146b$var$stopListeningToRuntimeErrors = $6d40ebe8356580e0$export$38ec23daa6e8dcdf($da9882e673ac146b$var$handleRuntimeError(options));
}
const $da9882e673ac146b$var$handleRuntimeError = (options)=>(errorRecord)=>{
        try {
            if (typeof options.onError === 'function') options.onError.call(null);
        } finally{
            if ($da9882e673ac146b$var$currentRuntimeErrorRecords.some(({ error: error })=>error === errorRecord.error)) // This fixes https://github.com/facebook/create-react-app/issues/3011.
            // eslint-disable-next-line no-unsafe-finally
            return;
            $da9882e673ac146b$var$currentRuntimeErrorRecords = $da9882e673ac146b$var$currentRuntimeErrorRecords.concat([
                errorRecord
            ]);
            $da9882e673ac146b$var$update();
        }
    };
function $da9882e673ac146b$export$1cfa6d161ca81bd9() {
    $da9882e673ac146b$var$currentRuntimeErrorRecords = [];
    $da9882e673ac146b$var$update();
}
function $da9882e673ac146b$export$25ba7d9a816639e7() {
    if ($da9882e673ac146b$var$stopListeningToRuntimeErrors === null) throw new Error('Not currently listening');
    try {
        $da9882e673ac146b$var$stopListeningToRuntimeErrors();
    } finally{
        $da9882e673ac146b$var$stopListeningToRuntimeErrors = null;
    }
}
let $da9882e673ac146b$var$rootNode, $da9882e673ac146b$var$shadow;
function $da9882e673ac146b$var$update() {
    if (!$da9882e673ac146b$var$rootNode) {
        $da9882e673ac146b$var$rootNode = document.createElement('parcel-error-overlay');
        $da9882e673ac146b$var$shadow = $da9882e673ac146b$var$rootNode.attachShadow({
            mode: 'open'
        });
        if ($da9882e673ac146b$var$rootNode) document.body?.appendChild($da9882e673ac146b$var$rootNode);
    }
    if ($da9882e673ac146b$var$currentRuntimeErrorRecords.length > 0 && $da9882e673ac146b$var$shadow) $b6c7f0288a15c619$export$b3890eb0ae9dca99($23b7c1cb98b19658$export$34b9dba7ce09269b("dialog", {
        ref: (d)=>d?.showModal(),
        style: $74bb4be6e9b78681$export$7ef984671d1853d7,
        onClose: $da9882e673ac146b$export$1cfa6d161ca81bd9,
        children: $23b7c1cb98b19658$export$34b9dba7ce09269b($da9882e673ac146b$var$ErrorOverlay, {})
    }), $da9882e673ac146b$var$shadow);
    else {
        $da9882e673ac146b$var$rootNode?.remove();
        $da9882e673ac146b$var$rootNode = null;
    }
}
function $da9882e673ac146b$var$ErrorOverlay() {
    if ($da9882e673ac146b$var$currentRuntimeErrorRecords.length > 0) return $23b7c1cb98b19658$export$34b9dba7ce09269b($d0eac8b125ed15e2$export$2e2bcd8739ae039, {
        errorRecords: $da9882e673ac146b$var$currentRuntimeErrorRecords,
        close: $da9882e673ac146b$export$1cfa6d161ca81bd9,
        editorHandler: $da9882e673ac146b$var$editorHandler
    });
    return null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9kBex":[function(require,module,exports,__globalThis) {
// src/redux/userSlice.js
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setUser", ()=>setUser);
parcelHelpers.export(exports, "clearUser", ()=>clearUser);
var _toolkit = require("@reduxjs/toolkit");
const authSlice = (0, _toolkit.createSlice)({
    name: 'user',
    initialState: {
        name: null,
        email: null,
        isAuthenticated: false
    },
    reducers: {
        setUser: (state, action)=>{
            console.log(action.payload);
            state.name = action.payload.name;
            state.email = action.payload.email;
            state.isAuthenticated = true;
        },
        clearUser: (state)=>{
            state.name = null;
            state.email = null;
            state.isAuthenticated = false;
        }
    }
});
const { setUser, clearUser } = authSlice.actions;
exports.default = authSlice.reducer;

},{"@reduxjs/toolkit":"fKS5f","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fKS5f":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ReducerType", ()=>ReducerType);
parcelHelpers.export(exports, "SHOULD_AUTOBATCH", ()=>SHOULD_AUTOBATCH);
parcelHelpers.export(exports, "TaskAbortError", ()=>TaskAbortError);
parcelHelpers.export(exports, "Tuple", ()=>Tuple);
parcelHelpers.export(exports, "addListener", ()=>addListener);
parcelHelpers.export(exports, "asyncThunkCreator", ()=>asyncThunkCreator);
parcelHelpers.export(exports, "autoBatchEnhancer", ()=>autoBatchEnhancer);
parcelHelpers.export(exports, "buildCreateSlice", ()=>buildCreateSlice);
parcelHelpers.export(exports, "clearAllListeners", ()=>clearAllListeners);
parcelHelpers.export(exports, "combineSlices", ()=>combineSlices);
parcelHelpers.export(exports, "configureStore", ()=>configureStore);
parcelHelpers.export(exports, "createAction", ()=>createAction);
parcelHelpers.export(exports, "createActionCreatorInvariantMiddleware", ()=>createActionCreatorInvariantMiddleware);
parcelHelpers.export(exports, "createAsyncThunk", ()=>createAsyncThunk);
parcelHelpers.export(exports, "createDraftSafeSelector", ()=>createDraftSafeSelector);
parcelHelpers.export(exports, "createDraftSafeSelectorCreator", ()=>createDraftSafeSelectorCreator);
parcelHelpers.export(exports, "createDynamicMiddleware", ()=>createDynamicMiddleware);
parcelHelpers.export(exports, "createEntityAdapter", ()=>createEntityAdapter);
parcelHelpers.export(exports, "createImmutableStateInvariantMiddleware", ()=>createImmutableStateInvariantMiddleware);
parcelHelpers.export(exports, "createListenerMiddleware", ()=>createListenerMiddleware);
parcelHelpers.export(exports, "createNextState", ()=>(0, _immer.produce));
parcelHelpers.export(exports, "createReducer", ()=>createReducer);
parcelHelpers.export(exports, "createSelector", ()=>(0, _reselect.createSelector));
parcelHelpers.export(exports, "createSelectorCreator", ()=>(0, _reselect.createSelectorCreator));
parcelHelpers.export(exports, "createSerializableStateInvariantMiddleware", ()=>createSerializableStateInvariantMiddleware);
parcelHelpers.export(exports, "createSlice", ()=>createSlice);
parcelHelpers.export(exports, "current", ()=>(0, _immer.current));
parcelHelpers.export(exports, "findNonSerializableValue", ()=>findNonSerializableValue);
parcelHelpers.export(exports, "formatProdErrorMessage", ()=>formatProdErrorMessage);
parcelHelpers.export(exports, "freeze", ()=>(0, _immer.freeze));
parcelHelpers.export(exports, "isActionCreator", ()=>isActionCreator);
parcelHelpers.export(exports, "isAllOf", ()=>isAllOf);
parcelHelpers.export(exports, "isAnyOf", ()=>isAnyOf);
parcelHelpers.export(exports, "isAsyncThunkAction", ()=>isAsyncThunkAction);
parcelHelpers.export(exports, "isDraft", ()=>(0, _immer.isDraft));
parcelHelpers.export(exports, "isFluxStandardAction", ()=>isFSA);
parcelHelpers.export(exports, "isFulfilled", ()=>isFulfilled);
parcelHelpers.export(exports, "isImmutableDefault", ()=>isImmutableDefault);
parcelHelpers.export(exports, "isPending", ()=>isPending);
parcelHelpers.export(exports, "isPlain", ()=>isPlain);
parcelHelpers.export(exports, "isRejected", ()=>isRejected);
parcelHelpers.export(exports, "isRejectedWithValue", ()=>isRejectedWithValue);
parcelHelpers.export(exports, "lruMemoize", ()=>(0, _reselect.lruMemoize));
parcelHelpers.export(exports, "miniSerializeError", ()=>miniSerializeError);
parcelHelpers.export(exports, "nanoid", ()=>nanoid);
parcelHelpers.export(exports, "original", ()=>(0, _immer.original));
parcelHelpers.export(exports, "prepareAutoBatched", ()=>prepareAutoBatched);
parcelHelpers.export(exports, "removeListener", ()=>removeListener);
parcelHelpers.export(exports, "unwrapResult", ()=>unwrapResult);
parcelHelpers.export(exports, "weakMapMemoize", ()=>(0, _reselect.weakMapMemoize));
// src/index.ts
var _redux = require("redux");
parcelHelpers.exportAll(_redux, exports);
var _immer = require("immer");
var _reselect = require("reselect");
// src/getDefaultMiddleware.ts
var _reduxThunk = require("redux-thunk");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {
        enumerable: true,
        configurable: true,
        writable: true,
        value
    }) : obj[key] = value;
var __spreadValues = (a, b)=>{
    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols) {
        for (var prop of __getOwnPropSymbols(b))if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    }
    return a;
};
var __spreadProps = (a, b)=>__defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude)=>{
    var target = {};
    for(var prop in source)if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
    if (source != null && __getOwnPropSymbols) {
        for (var prop of __getOwnPropSymbols(source))if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];
    }
    return target;
};
var __publicField = (obj, key, value)=>__defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
var createDraftSafeSelectorCreator = (...args)=>{
    const createSelector2 = (0, _reselect.createSelectorCreator)(...args);
    const createDraftSafeSelector2 = Object.assign((...args2)=>{
        const selector = createSelector2(...args2);
        const wrappedSelector = (value, ...rest)=>selector((0, _immer.isDraft)(value) ? (0, _immer.current)(value) : value, ...rest);
        Object.assign(wrappedSelector, selector);
        return wrappedSelector;
    }, {
        withTypes: ()=>createDraftSafeSelector2
    });
    return createDraftSafeSelector2;
};
var createDraftSafeSelector = /* @__PURE__ */ createDraftSafeSelectorCreator((0, _reselect.weakMapMemoize));
var composeWithDevTools = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function() {
    if (arguments.length === 0) return void 0;
    if (typeof arguments[0] === "object") return 0, _redux.compose;
    return (0, _redux.compose).apply(null, arguments);
};
var devToolsEnhancer = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ : function() {
    return function(noop3) {
        return noop3;
    };
};
// src/tsHelpers.ts
var hasMatchFunction = (v)=>{
    return v && typeof v.match === "function";
};
// src/createAction.ts
function createAction(type, prepareAction) {
    function actionCreator(...args) {
        if (prepareAction) {
            let prepared = prepareAction(...args);
            if (!prepared) throw new Error("prepareAction did not return an object");
            return __spreadValues(__spreadValues({
                type,
                payload: prepared.payload
            }, "meta" in prepared && {
                meta: prepared.meta
            }), "error" in prepared && {
                error: prepared.error
            });
        }
        return {
            type,
            payload: args[0]
        };
    }
    actionCreator.toString = ()=>`${type}`;
    actionCreator.type = type;
    actionCreator.match = (action)=>(0, _redux.isAction)(action) && action.type === type;
    return actionCreator;
}
function isActionCreator(action) {
    return typeof action === "function" && "type" in action && // hasMatchFunction only wants Matchers but I don't see the point in rewriting it
    hasMatchFunction(action);
}
function isFSA(action) {
    return (0, _redux.isAction)(action) && Object.keys(action).every(isValidKey);
}
function isValidKey(key) {
    return [
        "type",
        "payload",
        "error",
        "meta"
    ].indexOf(key) > -1;
}
// src/actionCreatorInvariantMiddleware.ts
function getMessage(type) {
    const splitType = type ? `${type}`.split("/") : [];
    const actionName = splitType[splitType.length - 1] || "actionCreator";
    return `Detected an action creator with type "${type || "unknown"}" being dispatched. 
Make sure you're calling the action creator before dispatching, i.e. \`dispatch(${actionName}())\` instead of \`dispatch(${actionName})\`. This is necessary even if the action has no payload.`;
}
function createActionCreatorInvariantMiddleware(options = {}) {
    var next, action;
    const { isActionCreator: isActionCreator2 = isActionCreator } = options;
    return ()=>(next)=>(action)=>{
                if (isActionCreator2(action)) console.warn(getMessage(action.type));
                return next(action);
            };
}
function getTimeMeasureUtils(maxDelay, fnName) {
    let elapsed = 0;
    return {
        measureTime (fn) {
            const started = Date.now();
            try {
                return fn();
            } finally{
                const finished = Date.now();
                elapsed += finished - started;
            }
        },
        warnIfExceeded () {
            if (elapsed > maxDelay) console.warn(`${fnName} took ${elapsed}ms, which is more than the warning threshold of ${maxDelay}ms. 
If your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.
It is disabled in production builds, so you don't need to worry about that.`);
        }
    };
}
var Tuple = class _Tuple extends Array {
    constructor(...items){
        super(...items);
        Object.setPrototypeOf(this, _Tuple.prototype);
    }
    static get [Symbol.species]() {
        return _Tuple;
    }
    concat(...arr) {
        return super.concat.apply(this, arr);
    }
    prepend(...arr) {
        if (arr.length === 1 && Array.isArray(arr[0])) return new _Tuple(...arr[0].concat(this));
        return new _Tuple(...arr.concat(this));
    }
};
function freezeDraftable(val) {
    return (0, _immer.isDraftable)(val) ? (0, _immer.produce)(val, ()=>{}) : val;
}
function getOrInsertComputed(map, key, compute) {
    if (map.has(key)) return map.get(key);
    return map.set(key, compute(key)).get(key);
}
// src/immutableStateInvariantMiddleware.ts
function isImmutableDefault(value) {
    return typeof value !== "object" || value == null || Object.isFrozen(value);
}
function trackForMutations(isImmutable, ignorePaths, obj) {
    const trackedProperties = trackProperties(isImmutable, ignorePaths, obj);
    return {
        detectMutations () {
            return detectMutations(isImmutable, ignorePaths, trackedProperties, obj);
        }
    };
}
function trackProperties(isImmutable, ignorePaths = [], obj, path = "", checkedObjects = /* @__PURE__ */ new Set()) {
    const tracked = {
        value: obj
    };
    if (!isImmutable(obj) && !checkedObjects.has(obj)) {
        checkedObjects.add(obj);
        tracked.children = {};
        for(const key in obj){
            const childPath = path ? path + "." + key : key;
            if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) continue;
            tracked.children[key] = trackProperties(isImmutable, ignorePaths, obj[key], childPath);
        }
    }
    return tracked;
}
function detectMutations(isImmutable, ignoredPaths = [], trackedProperty, obj, sameParentRef = false, path = "") {
    const prevObj = trackedProperty ? trackedProperty.value : void 0;
    const sameRef = prevObj === obj;
    if (sameParentRef && !sameRef && !Number.isNaN(obj)) return {
        wasMutated: true,
        path
    };
    if (isImmutable(prevObj) || isImmutable(obj)) return {
        wasMutated: false
    };
    const keysToDetect = {};
    for(let key in trackedProperty.children)keysToDetect[key] = true;
    for(let key in obj)keysToDetect[key] = true;
    const hasIgnoredPaths = ignoredPaths.length > 0;
    for(let key in keysToDetect){
        const nestedPath = path ? path + "." + key : key;
        if (hasIgnoredPaths) {
            const hasMatches = ignoredPaths.some((ignored)=>{
                if (ignored instanceof RegExp) return ignored.test(nestedPath);
                return nestedPath === ignored;
            });
            if (hasMatches) continue;
        }
        const result = detectMutations(isImmutable, ignoredPaths, trackedProperty.children[key], obj[key], sameRef, nestedPath);
        if (result.wasMutated) return result;
    }
    return {
        wasMutated: false
    };
}
function createImmutableStateInvariantMiddleware(options = {}) {
    var next, action;
    {
        let stringify2 = function(obj, serializer, indent, decycler) {
            return JSON.stringify(obj, getSerialize2(serializer, decycler), indent);
        }, getSerialize2 = function(serializer, decycler) {
            let stack = [], keys = [];
            if (!decycler) decycler = function(_, value) {
                if (stack[0] === value) return "[Circular ~]";
                return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]";
            };
            return function(key, value) {
                if (stack.length > 0) {
                    var thisPos = stack.indexOf(this);
                    ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
                    ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);
                    if (~stack.indexOf(value)) value = decycler.call(this, key, value);
                } else stack.push(value);
                return serializer == null ? value : serializer.call(this, key, value);
            };
        };
        var stringify = stringify2, getSerialize = getSerialize2;
        let { isImmutable = isImmutableDefault, ignoredPaths, warnAfter = 32 } = options;
        const track = trackForMutations.bind(null, isImmutable, ignoredPaths);
        return ({ getState })=>{
            let state = getState();
            let tracker = track(state);
            let result;
            return (next)=>(action)=>{
                    const measureUtils = getTimeMeasureUtils(warnAfter, "ImmutableStateInvariantMiddleware");
                    measureUtils.measureTime(()=>{
                        state = getState();
                        result = tracker.detectMutations();
                        tracker = track(state);
                        if (result.wasMutated) throw new Error(`A state mutation was detected between dispatches, in the path '${result.path || ""}'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)`);
                    });
                    const dispatchedAction = next(action);
                    measureUtils.measureTime(()=>{
                        state = getState();
                        result = tracker.detectMutations();
                        tracker = track(state);
                        if (result.wasMutated) throw new Error(`A state mutation was detected inside a dispatch, in the path: ${result.path || ""}. Take a look at the reducer(s) handling the action ${stringify2(action)}. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)`);
                    });
                    measureUtils.warnIfExceeded();
                    return dispatchedAction;
                };
        };
    }
}
function isPlain(val) {
    const type = typeof val;
    return val == null || type === "string" || type === "boolean" || type === "number" || Array.isArray(val) || (0, _redux.isPlainObject)(val);
}
function findNonSerializableValue(value, path = "", isSerializable = isPlain, getEntries, ignoredPaths = [], cache) {
    let foundNestedSerializable;
    if (!isSerializable(value)) return {
        keyPath: path || "<root>",
        value
    };
    if (typeof value !== "object" || value === null) return false;
    if (cache == null ? void 0 : cache.has(value)) return false;
    const entries = getEntries != null ? getEntries(value) : Object.entries(value);
    const hasIgnoredPaths = ignoredPaths.length > 0;
    for (const [key, nestedValue] of entries){
        const nestedPath = path ? path + "." + key : key;
        if (hasIgnoredPaths) {
            const hasMatches = ignoredPaths.some((ignored)=>{
                if (ignored instanceof RegExp) return ignored.test(nestedPath);
                return nestedPath === ignored;
            });
            if (hasMatches) continue;
        }
        if (!isSerializable(nestedValue)) return {
            keyPath: nestedPath,
            value: nestedValue
        };
        if (typeof nestedValue === "object") {
            foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths, cache);
            if (foundNestedSerializable) return foundNestedSerializable;
        }
    }
    if (cache && isNestedFrozen(value)) cache.add(value);
    return false;
}
function isNestedFrozen(value) {
    if (!Object.isFrozen(value)) return false;
    for (const nestedValue of Object.values(value)){
        if (typeof nestedValue !== "object" || nestedValue === null) continue;
        if (!isNestedFrozen(nestedValue)) return false;
    }
    return true;
}
function createSerializableStateInvariantMiddleware(options = {}) {
    var next, action;
    {
        const { isSerializable = isPlain, getEntries, ignoredActions = [], ignoredActionPaths = [
            "meta.arg",
            "meta.baseQueryMeta"
        ], ignoredPaths = [], warnAfter = 32, ignoreState = false, ignoreActions = false, disableCache = false } = options;
        const cache = !disableCache && WeakSet ? /* @__PURE__ */ new WeakSet() : void 0;
        return (storeAPI)=>(next)=>(action)=>{
                    if (!(0, _redux.isAction)(action)) return next(action);
                    const result = next(action);
                    const measureUtils = getTimeMeasureUtils(warnAfter, "SerializableStateInvariantMiddleware");
                    if (!ignoreActions && !(ignoredActions.length && ignoredActions.indexOf(action.type) !== -1)) measureUtils.measureTime(()=>{
                        const foundActionNonSerializableValue = findNonSerializableValue(action, "", isSerializable, getEntries, ignoredActionPaths, cache);
                        if (foundActionNonSerializableValue) {
                            const { keyPath, value } = foundActionNonSerializableValue;
                            console.error(`A non-serializable value was detected in an action, in the path: \`${keyPath}\`. Value:`, value, "\nTake a look at the logic that dispatched this action: ", action, "\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)", "\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)");
                        }
                    });
                    if (!ignoreState) {
                        measureUtils.measureTime(()=>{
                            const state = storeAPI.getState();
                            const foundStateNonSerializableValue = findNonSerializableValue(state, "", isSerializable, getEntries, ignoredPaths, cache);
                            if (foundStateNonSerializableValue) {
                                const { keyPath, value } = foundStateNonSerializableValue;
                                console.error(`A non-serializable value was detected in the state, in the path: \`${keyPath}\`. Value:`, value, `
Take a look at the reducer(s) handling this action type: ${action.type}.
(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)`);
                            }
                        });
                        measureUtils.warnIfExceeded();
                    }
                    return result;
                };
    }
}
// src/getDefaultMiddleware.ts
function isBoolean(x) {
    return typeof x === "boolean";
}
var buildGetDefaultMiddleware = ()=>function getDefaultMiddleware(options) {
        const { thunk = true, immutableCheck = true, serializableCheck = true, actionCreatorCheck = true } = options != null ? options : {};
        let middlewareArray = new Tuple();
        if (thunk) {
            if (isBoolean(thunk)) middlewareArray.push((0, _reduxThunk.thunk));
            else middlewareArray.push((0, _reduxThunk.withExtraArgument)(thunk.extraArgument));
        }
        if (immutableCheck) {
            let immutableOptions = {};
            if (!isBoolean(immutableCheck)) immutableOptions = immutableCheck;
            middlewareArray.unshift(createImmutableStateInvariantMiddleware(immutableOptions));
        }
        if (serializableCheck) {
            let serializableOptions = {};
            if (!isBoolean(serializableCheck)) serializableOptions = serializableCheck;
            middlewareArray.push(createSerializableStateInvariantMiddleware(serializableOptions));
        }
        if (actionCreatorCheck) {
            let actionCreatorOptions = {};
            if (!isBoolean(actionCreatorCheck)) actionCreatorOptions = actionCreatorCheck;
            middlewareArray.unshift(createActionCreatorInvariantMiddleware(actionCreatorOptions));
        }
        return middlewareArray;
    };
// src/autoBatchEnhancer.ts
var SHOULD_AUTOBATCH = "RTK_autoBatch";
var prepareAutoBatched = ()=>(payload)=>({
            payload,
            meta: {
                [SHOULD_AUTOBATCH]: true
            }
        });
var createQueueWithTimer = (timeout)=>{
    return (notify)=>{
        setTimeout(notify, timeout);
    };
};
var autoBatchEnhancer = (options = {
    type: "raf"
})=>(next)=>(...args)=>{
            const store = next(...args);
            let notifying = true;
            let shouldNotifyAtEndOfTick = false;
            let notificationQueued = false;
            const listeners = /* @__PURE__ */ new Set();
            const queueCallback = options.type === "tick" ? queueMicrotask : options.type === "raf" ? // requestAnimationFrame won't exist in SSR environments. Fall back to a vague approximation just to keep from erroring.
            typeof window !== "undefined" && window.requestAnimationFrame ? window.requestAnimationFrame : createQueueWithTimer(10) : options.type === "callback" ? options.queueNotification : createQueueWithTimer(options.timeout);
            const notifyListeners = ()=>{
                notificationQueued = false;
                if (shouldNotifyAtEndOfTick) {
                    shouldNotifyAtEndOfTick = false;
                    listeners.forEach((l)=>l());
                }
            };
            return Object.assign({}, store, {
                // Override the base `store.subscribe` method to keep original listeners
                // from running if we're delaying notifications
                subscribe (listener2) {
                    const wrappedListener = ()=>notifying && listener2();
                    const unsubscribe = store.subscribe(wrappedListener);
                    listeners.add(listener2);
                    return ()=>{
                        unsubscribe();
                        listeners.delete(listener2);
                    };
                },
                // Override the base `store.dispatch` method so that we can check actions
                // for the `shouldAutoBatch` flag and determine if batching is active
                dispatch (action) {
                    var _a;
                    try {
                        notifying = !((_a = action == null ? void 0 : action.meta) == null ? void 0 : _a[SHOULD_AUTOBATCH]);
                        shouldNotifyAtEndOfTick = !notifying;
                        if (shouldNotifyAtEndOfTick) {
                            if (!notificationQueued) {
                                notificationQueued = true;
                                queueCallback(notifyListeners);
                            }
                        }
                        return store.dispatch(action);
                    } finally{
                        notifying = true;
                    }
                }
            });
        };
// src/getDefaultEnhancers.ts
var buildGetDefaultEnhancers = (middlewareEnhancer)=>function getDefaultEnhancers(options) {
        const { autoBatch = true } = options != null ? options : {};
        let enhancerArray = new Tuple(middlewareEnhancer);
        if (autoBatch) enhancerArray.push(autoBatchEnhancer(typeof autoBatch === "object" ? autoBatch : void 0));
        return enhancerArray;
    };
// src/configureStore.ts
function configureStore(options) {
    const getDefaultMiddleware = buildGetDefaultMiddleware();
    const { reducer, middleware, devTools = true, preloadedState, enhancers } = options || {};
    let rootReducer;
    if (typeof reducer === "function") rootReducer = reducer;
    else if ((0, _redux.isPlainObject)(reducer)) rootReducer = (0, _redux.combineReducers)(reducer);
    else throw new Error("`reducer` is a required argument, and must be a function or an object of functions that can be passed to combineReducers");
    if (middleware && typeof middleware !== "function") throw new Error("`middleware` field must be a callback");
    let finalMiddleware;
    if (typeof middleware === "function") {
        finalMiddleware = middleware(getDefaultMiddleware);
        if (!Array.isArray(finalMiddleware)) throw new Error("when using a middleware builder function, an array of middleware must be returned");
    } else finalMiddleware = getDefaultMiddleware();
    if (finalMiddleware.some((item)=>typeof item !== "function")) throw new Error("each middleware provided to configureStore must be a function");
    let finalCompose = (0, _redux.compose);
    if (devTools) finalCompose = composeWithDevTools(__spreadValues({
        // Enable capture of stack traces for dispatched Redux actions
        trace: true
    }, typeof devTools === "object" && devTools));
    const middlewareEnhancer = (0, _redux.applyMiddleware)(...finalMiddleware);
    const getDefaultEnhancers = buildGetDefaultEnhancers(middlewareEnhancer);
    if (enhancers && typeof enhancers !== "function") throw new Error("`enhancers` field must be a callback");
    let storeEnhancers = typeof enhancers === "function" ? enhancers(getDefaultEnhancers) : getDefaultEnhancers();
    if (!Array.isArray(storeEnhancers)) throw new Error("`enhancers` callback must return an array");
    if (storeEnhancers.some((item)=>typeof item !== "function")) throw new Error("each enhancer provided to configureStore must be a function");
    if ((0, finalMiddleware.length) && !storeEnhancers.includes(middlewareEnhancer)) console.error("middlewares were provided, but middleware enhancer was not included in final enhancers - make sure to call `getDefaultEnhancers`");
    const composedEnhancer = finalCompose(...storeEnhancers);
    return (0, _redux.createStore)(rootReducer, preloadedState, composedEnhancer);
}
// src/mapBuilders.ts
function executeReducerBuilderCallback(builderCallback) {
    const actionsMap = {};
    const actionMatchers = [];
    let defaultCaseReducer;
    const builder = {
        addCase (typeOrActionCreator, reducer) {
            if (actionMatchers.length > 0) throw new Error("`builder.addCase` should only be called before calling `builder.addMatcher`");
            if (defaultCaseReducer) throw new Error("`builder.addCase` should only be called before calling `builder.addDefaultCase`");
            const type = typeof typeOrActionCreator === "string" ? typeOrActionCreator : typeOrActionCreator.type;
            if (!type) throw new Error("`builder.addCase` cannot be called with an empty action type");
            if (type in actionsMap) throw new Error(`\`builder.addCase\` cannot be called with two reducers for the same action type '${type}'`);
            actionsMap[type] = reducer;
            return builder;
        },
        addMatcher (matcher, reducer) {
            if (defaultCaseReducer) throw new Error("`builder.addMatcher` should only be called before calling `builder.addDefaultCase`");
            actionMatchers.push({
                matcher,
                reducer
            });
            return builder;
        },
        addDefaultCase (reducer) {
            if (defaultCaseReducer) throw new Error("`builder.addDefaultCase` can only be called once");
            defaultCaseReducer = reducer;
            return builder;
        }
    };
    builderCallback(builder);
    return [
        actionsMap,
        actionMatchers,
        defaultCaseReducer
    ];
}
// src/createReducer.ts
function isStateFunction(x) {
    return typeof x === "function";
}
function createReducer(initialState, mapOrBuilderCallback) {
    if (typeof mapOrBuilderCallback === "object") throw new Error("The object notation for `createReducer` has been removed. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createReducer");
    let [actionsMap, finalActionMatchers, finalDefaultCaseReducer] = executeReducerBuilderCallback(mapOrBuilderCallback);
    let getInitialState;
    if (isStateFunction(initialState)) getInitialState = ()=>freezeDraftable(initialState());
    else {
        const frozenInitialState = freezeDraftable(initialState);
        getInitialState = ()=>frozenInitialState;
    }
    function reducer(state = getInitialState(), action) {
        let caseReducers = [
            actionsMap[action.type],
            ...finalActionMatchers.filter(({ matcher })=>matcher(action)).map(({ reducer: reducer2 })=>reducer2)
        ];
        if (caseReducers.filter((cr)=>!!cr).length === 0) caseReducers = [
            finalDefaultCaseReducer
        ];
        return caseReducers.reduce((previousState, caseReducer)=>{
            if (caseReducer) {
                if ((0, _immer.isDraft)(previousState)) {
                    const draft = previousState;
                    const result = caseReducer(draft, action);
                    if (result === void 0) return previousState;
                    return result;
                } else if (!(0, _immer.isDraftable)(previousState)) {
                    const result = caseReducer(previousState, action);
                    if (result === void 0) {
                        if (previousState === null) return previousState;
                        throw Error("A case reducer on a non-draftable value must not return undefined");
                    }
                    return result;
                } else return (0, _immer.produce)(previousState, (draft)=>{
                    return caseReducer(draft, action);
                });
            }
            return previousState;
        }, state);
    }
    reducer.getInitialState = getInitialState;
    return reducer;
}
// src/matchers.ts
var matches = (matcher, action)=>{
    if (hasMatchFunction(matcher)) return matcher.match(action);
    else return matcher(action);
};
function isAnyOf(...matchers) {
    return (action)=>{
        return matchers.some((matcher)=>matches(matcher, action));
    };
}
function isAllOf(...matchers) {
    return (action)=>{
        return matchers.every((matcher)=>matches(matcher, action));
    };
}
function hasExpectedRequestMetadata(action, validStatus) {
    if (!action || !action.meta) return false;
    const hasValidRequestId = typeof action.meta.requestId === "string";
    const hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;
    return hasValidRequestId && hasValidRequestStatus;
}
function isAsyncThunkArray(a) {
    return typeof a[0] === "function" && "pending" in a[0] && "fulfilled" in a[0] && "rejected" in a[0];
}
function isPending(...asyncThunks) {
    if (asyncThunks.length === 0) return (action)=>hasExpectedRequestMetadata(action, [
            "pending"
        ]);
    if (!isAsyncThunkArray(asyncThunks)) return isPending()(asyncThunks[0]);
    return isAnyOf(...asyncThunks.map((asyncThunk)=>asyncThunk.pending));
}
function isRejected(...asyncThunks) {
    if (asyncThunks.length === 0) return (action)=>hasExpectedRequestMetadata(action, [
            "rejected"
        ]);
    if (!isAsyncThunkArray(asyncThunks)) return isRejected()(asyncThunks[0]);
    return isAnyOf(...asyncThunks.map((asyncThunk)=>asyncThunk.rejected));
}
function isRejectedWithValue(...asyncThunks) {
    const hasFlag = (action)=>{
        return action && action.meta && action.meta.rejectedWithValue;
    };
    if (asyncThunks.length === 0) return isAllOf(isRejected(...asyncThunks), hasFlag);
    if (!isAsyncThunkArray(asyncThunks)) return isRejectedWithValue()(asyncThunks[0]);
    return isAllOf(isRejected(...asyncThunks), hasFlag);
}
function isFulfilled(...asyncThunks) {
    if (asyncThunks.length === 0) return (action)=>hasExpectedRequestMetadata(action, [
            "fulfilled"
        ]);
    if (!isAsyncThunkArray(asyncThunks)) return isFulfilled()(asyncThunks[0]);
    return isAnyOf(...asyncThunks.map((asyncThunk)=>asyncThunk.fulfilled));
}
function isAsyncThunkAction(...asyncThunks) {
    if (asyncThunks.length === 0) return (action)=>hasExpectedRequestMetadata(action, [
            "pending",
            "fulfilled",
            "rejected"
        ]);
    if (!isAsyncThunkArray(asyncThunks)) return isAsyncThunkAction()(asyncThunks[0]);
    return isAnyOf(...asyncThunks.flatMap((asyncThunk)=>[
            asyncThunk.pending,
            asyncThunk.rejected,
            asyncThunk.fulfilled
        ]));
}
// src/nanoid.ts
var urlAlphabet = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW";
var nanoid = (size = 21)=>{
    let id = "";
    let i = size;
    while(i--)id += urlAlphabet[Math.random() * 64 | 0];
    return id;
};
// src/createAsyncThunk.ts
var commonProperties = [
    "name",
    "message",
    "stack",
    "code"
];
var RejectWithValue = class {
    constructor(payload, meta){
        this.payload = payload;
        this.meta = meta;
        /*
    type-only property to distinguish between RejectWithValue and FulfillWithMeta
    does not exist at runtime
    */ __publicField(this, "_type");
    }
};
var FulfillWithMeta = class {
    constructor(payload, meta){
        this.payload = payload;
        this.meta = meta;
        /*
    type-only property to distinguish between RejectWithValue and FulfillWithMeta
    does not exist at runtime
    */ __publicField(this, "_type");
    }
};
var miniSerializeError = (value)=>{
    if (typeof value === "object" && value !== null) {
        const simpleError = {};
        for (const property of commonProperties)if (typeof value[property] === "string") simpleError[property] = value[property];
        return simpleError;
    }
    return {
        message: String(value)
    };
};
var externalAbortMessage = "External signal was aborted";
var createAsyncThunk = /* @__PURE__ */ (()=>{
    function createAsyncThunk2(typePrefix, payloadCreator, options) {
        const fulfilled = createAction(typePrefix + "/fulfilled", (payload, requestId, arg, meta)=>({
                payload,
                meta: __spreadProps(__spreadValues({}, meta || {}), {
                    arg,
                    requestId,
                    requestStatus: "fulfilled"
                })
            }));
        const pending = createAction(typePrefix + "/pending", (requestId, arg, meta)=>({
                payload: void 0,
                meta: __spreadProps(__spreadValues({}, meta || {}), {
                    arg,
                    requestId,
                    requestStatus: "pending"
                })
            }));
        const rejected = createAction(typePrefix + "/rejected", (error, requestId, arg, payload, meta)=>({
                payload,
                error: (options && options.serializeError || miniSerializeError)(error || "Rejected"),
                meta: __spreadProps(__spreadValues({}, meta || {}), {
                    arg,
                    requestId,
                    rejectedWithValue: !!payload,
                    requestStatus: "rejected",
                    aborted: (error == null ? void 0 : error.name) === "AbortError",
                    condition: (error == null ? void 0 : error.name) === "ConditionError"
                })
            }));
        function actionCreator(arg, { signal } = {}) {
            return (dispatch, getState, extra)=>{
                const requestId = (options == null ? void 0 : options.idGenerator) ? options.idGenerator(arg) : nanoid();
                const abortController = new AbortController();
                let abortHandler;
                let abortReason;
                function abort(reason) {
                    abortReason = reason;
                    abortController.abort();
                }
                if (signal) {
                    if (signal.aborted) abort(externalAbortMessage);
                    else signal.addEventListener("abort", ()=>abort(externalAbortMessage), {
                        once: true
                    });
                }
                const promise = async function() {
                    var _a, _b;
                    let finalAction;
                    try {
                        let conditionResult = (_a = options == null ? void 0 : options.condition) == null ? void 0 : _a.call(options, arg, {
                            getState,
                            extra
                        });
                        if (isThenable(conditionResult)) conditionResult = await conditionResult;
                        if (conditionResult === false || abortController.signal.aborted) throw {
                            name: "ConditionError",
                            message: "Aborted due to condition callback returning false."
                        };
                        const abortedPromise = new Promise((_, reject)=>{
                            abortHandler = ()=>{
                                reject({
                                    name: "AbortError",
                                    message: abortReason || "Aborted"
                                });
                            };
                            abortController.signal.addEventListener("abort", abortHandler);
                        });
                        dispatch(pending(requestId, arg, (_b = options == null ? void 0 : options.getPendingMeta) == null ? void 0 : _b.call(options, {
                            requestId,
                            arg
                        }, {
                            getState,
                            extra
                        })));
                        finalAction = await Promise.race([
                            abortedPromise,
                            Promise.resolve(payloadCreator(arg, {
                                dispatch,
                                getState,
                                extra,
                                requestId,
                                signal: abortController.signal,
                                abort,
                                rejectWithValue: (value, meta)=>{
                                    return new RejectWithValue(value, meta);
                                },
                                fulfillWithValue: (value, meta)=>{
                                    return new FulfillWithMeta(value, meta);
                                }
                            })).then((result)=>{
                                if (result instanceof RejectWithValue) throw result;
                                if (result instanceof FulfillWithMeta) return fulfilled(result.payload, requestId, arg, result.meta);
                                return fulfilled(result, requestId, arg);
                            })
                        ]);
                    } catch (err) {
                        finalAction = err instanceof RejectWithValue ? rejected(null, requestId, arg, err.payload, err.meta) : rejected(err, requestId, arg);
                    } finally{
                        if (abortHandler) abortController.signal.removeEventListener("abort", abortHandler);
                    }
                    const skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && finalAction.meta.condition;
                    if (!skipDispatch) dispatch(finalAction);
                    return finalAction;
                }();
                return Object.assign(promise, {
                    abort,
                    requestId,
                    arg,
                    unwrap () {
                        return promise.then(unwrapResult);
                    }
                });
            };
        }
        return Object.assign(actionCreator, {
            pending,
            rejected,
            fulfilled,
            settled: isAnyOf(rejected, fulfilled),
            typePrefix
        });
    }
    createAsyncThunk2.withTypes = ()=>createAsyncThunk2;
    return createAsyncThunk2;
})();
function unwrapResult(action) {
    if (action.meta && action.meta.rejectedWithValue) throw action.payload;
    if (action.error) throw action.error;
    return action.payload;
}
function isThenable(value) {
    return value !== null && typeof value === "object" && typeof value.then === "function";
}
// src/createSlice.ts
var asyncThunkSymbol = /* @__PURE__ */ Symbol.for("rtk-slice-createasyncthunk");
var asyncThunkCreator = {
    [asyncThunkSymbol]: createAsyncThunk
};
var ReducerType = /* @__PURE__ */ ((ReducerType2)=>{
    ReducerType2["reducer"] = "reducer";
    ReducerType2["reducerWithPrepare"] = "reducerWithPrepare";
    ReducerType2["asyncThunk"] = "asyncThunk";
    return ReducerType2;
})(ReducerType || {});
function getType(slice, actionKey) {
    return `${slice}/${actionKey}`;
}
function buildCreateSlice({ creators } = {}) {
    var _a;
    const cAT = (_a = creators == null ? void 0 : creators.asyncThunk) == null ? void 0 : _a[asyncThunkSymbol];
    return function createSlice2(options) {
        const { name, reducerPath = name } = options;
        if (!name) throw new Error("`name` is a required option for createSlice");
        const reducers = (typeof options.reducers === "function" ? options.reducers(buildReducerCreators()) : options.reducers) || {};
        const reducerNames = Object.keys(reducers);
        const context = {
            sliceCaseReducersByName: {},
            sliceCaseReducersByType: {},
            actionCreators: {},
            sliceMatchers: []
        };
        const contextMethods = {
            addCase (typeOrActionCreator, reducer2) {
                const type = typeof typeOrActionCreator === "string" ? typeOrActionCreator : typeOrActionCreator.type;
                if (!type) throw new Error("`context.addCase` cannot be called with an empty action type");
                if (type in context.sliceCaseReducersByType) throw new Error("`context.addCase` cannot be called with two reducers for the same action type: " + type);
                context.sliceCaseReducersByType[type] = reducer2;
                return contextMethods;
            },
            addMatcher (matcher, reducer2) {
                context.sliceMatchers.push({
                    matcher,
                    reducer: reducer2
                });
                return contextMethods;
            },
            exposeAction (name2, actionCreator) {
                context.actionCreators[name2] = actionCreator;
                return contextMethods;
            },
            exposeCaseReducer (name2, reducer2) {
                context.sliceCaseReducersByName[name2] = reducer2;
                return contextMethods;
            }
        };
        reducerNames.forEach((reducerName)=>{
            const reducerDefinition = reducers[reducerName];
            const reducerDetails = {
                reducerName,
                type: getType(name, reducerName),
                createNotation: typeof options.reducers === "function"
            };
            if (isAsyncThunkSliceReducerDefinition(reducerDefinition)) handleThunkCaseReducerDefinition(reducerDetails, reducerDefinition, contextMethods, cAT);
            else handleNormalReducerDefinition(reducerDetails, reducerDefinition, contextMethods);
        });
        function buildReducer() {
            if (typeof options.extraReducers === "object") throw new Error("The object notation for `createSlice.extraReducers` has been removed. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createSlice");
            const [extraReducers = {}, actionMatchers = [], defaultCaseReducer] = typeof options.extraReducers === "function" ? executeReducerBuilderCallback(options.extraReducers) : [
                options.extraReducers
            ];
            const finalCaseReducers = __spreadValues(__spreadValues({}, extraReducers), context.sliceCaseReducersByType);
            return createReducer(options.initialState, (builder)=>{
                for(let key in finalCaseReducers)builder.addCase(key, finalCaseReducers[key]);
                for (let sM of context.sliceMatchers)builder.addMatcher(sM.matcher, sM.reducer);
                for (let m of actionMatchers)builder.addMatcher(m.matcher, m.reducer);
                if (defaultCaseReducer) builder.addDefaultCase(defaultCaseReducer);
            });
        }
        const selectSelf = (state)=>state;
        const injectedSelectorCache = /* @__PURE__ */ new Map();
        let _reducer;
        function reducer(state, action) {
            if (!_reducer) _reducer = buildReducer();
            return _reducer(state, action);
        }
        function getInitialState() {
            if (!_reducer) _reducer = buildReducer();
            return _reducer.getInitialState();
        }
        function makeSelectorProps(reducerPath2, injected = false) {
            function selectSlice(state) {
                let sliceState = state[reducerPath2];
                if (typeof sliceState === "undefined") {
                    if (injected) sliceState = getInitialState();
                    else throw new Error("selectSlice returned undefined for an uninjected slice reducer");
                }
                return sliceState;
            }
            function getSelectors(selectState = selectSelf) {
                const selectorCache = getOrInsertComputed(injectedSelectorCache, injected, ()=>/* @__PURE__ */ new WeakMap());
                return getOrInsertComputed(selectorCache, selectState, ()=>{
                    var _a2;
                    const map = {};
                    for (const [name2, selector] of Object.entries((_a2 = options.selectors) != null ? _a2 : {}))map[name2] = wrapSelector(selector, selectState, getInitialState, injected);
                    return map;
                });
            }
            return {
                reducerPath: reducerPath2,
                getSelectors,
                get selectors () {
                    return getSelectors(selectSlice);
                },
                selectSlice
            };
        }
        const slice = __spreadProps(__spreadValues({
            name,
            reducer,
            actions: context.actionCreators,
            caseReducers: context.sliceCaseReducersByName,
            getInitialState
        }, makeSelectorProps(reducerPath)), {
            injectInto (injectable, _a2 = {}) {
                var _b = _a2, { reducerPath: pathOpt } = _b, config = __objRest(_b, [
                    "reducerPath"
                ]);
                const newReducerPath = pathOpt != null ? pathOpt : reducerPath;
                injectable.inject({
                    reducerPath: newReducerPath,
                    reducer
                }, config);
                return __spreadValues(__spreadValues({}, slice), makeSelectorProps(newReducerPath, true));
            }
        });
        return slice;
    };
}
function wrapSelector(selector, selectState, getInitialState, injected) {
    function wrapper(rootState, ...args) {
        let sliceState = selectState(rootState);
        if (typeof sliceState === "undefined") {
            if (injected) sliceState = getInitialState();
            else throw new Error("selectState returned undefined for an uninjected slice reducer");
        }
        return selector(sliceState, ...args);
    }
    wrapper.unwrapped = selector;
    return wrapper;
}
var createSlice = /* @__PURE__ */ buildCreateSlice();
function buildReducerCreators() {
    function asyncThunk(payloadCreator, config) {
        return __spreadValues({
            _reducerDefinitionType: "asyncThunk" /* asyncThunk */ ,
            payloadCreator
        }, config);
    }
    asyncThunk.withTypes = ()=>asyncThunk;
    return {
        reducer (caseReducer) {
            return Object.assign({
                // hack so the wrapping function has the same name as the original
                // we need to create a wrapper so the `reducerDefinitionType` is not assigned to the original
                [caseReducer.name] (...args) {
                    return caseReducer(...args);
                }
            }[caseReducer.name], {
                _reducerDefinitionType: "reducer" /* reducer */ 
            });
        },
        preparedReducer (prepare, reducer) {
            return {
                _reducerDefinitionType: "reducerWithPrepare" /* reducerWithPrepare */ ,
                prepare,
                reducer
            };
        },
        asyncThunk
    };
}
function handleNormalReducerDefinition({ type, reducerName, createNotation }, maybeReducerWithPrepare, context) {
    let caseReducer;
    let prepareCallback;
    if ("reducer" in maybeReducerWithPrepare) {
        if (createNotation && !isCaseReducerWithPrepareDefinition(maybeReducerWithPrepare)) throw new Error("Please use the `create.preparedReducer` notation for prepared action creators with the `create` notation.");
        caseReducer = maybeReducerWithPrepare.reducer;
        prepareCallback = maybeReducerWithPrepare.prepare;
    } else caseReducer = maybeReducerWithPrepare;
    context.addCase(type, caseReducer).exposeCaseReducer(reducerName, caseReducer).exposeAction(reducerName, prepareCallback ? createAction(type, prepareCallback) : createAction(type));
}
function isAsyncThunkSliceReducerDefinition(reducerDefinition) {
    return reducerDefinition._reducerDefinitionType === "asyncThunk" /* asyncThunk */ ;
}
function isCaseReducerWithPrepareDefinition(reducerDefinition) {
    return reducerDefinition._reducerDefinitionType === "reducerWithPrepare" /* reducerWithPrepare */ ;
}
function handleThunkCaseReducerDefinition({ type, reducerName }, reducerDefinition, context, cAT) {
    if (!cAT) throw new Error("Cannot use `create.asyncThunk` in the built-in `createSlice`. Use `buildCreateSlice({ creators: { asyncThunk: asyncThunkCreator } })` to create a customised version of `createSlice`.");
    const { payloadCreator, fulfilled, pending, rejected, settled, options } = reducerDefinition;
    const thunk = cAT(type, payloadCreator, options);
    context.exposeAction(reducerName, thunk);
    if (fulfilled) context.addCase(thunk.fulfilled, fulfilled);
    if (pending) context.addCase(thunk.pending, pending);
    if (rejected) context.addCase(thunk.rejected, rejected);
    if (settled) context.addMatcher(thunk.settled, settled);
    context.exposeCaseReducer(reducerName, {
        fulfilled: fulfilled || noop,
        pending: pending || noop,
        rejected: rejected || noop,
        settled: settled || noop
    });
}
function noop() {}
// src/entities/entity_state.ts
function getInitialEntityState() {
    return {
        ids: [],
        entities: {}
    };
}
function createInitialStateFactory(stateAdapter) {
    function getInitialState(additionalState = {}, entities) {
        const state = Object.assign(getInitialEntityState(), additionalState);
        return entities ? stateAdapter.setAll(state, entities) : state;
    }
    return {
        getInitialState
    };
}
// src/entities/state_selectors.ts
function createSelectorsFactory() {
    function getSelectors(selectState, options = {}) {
        const { createSelector: createSelector2 = createDraftSafeSelector } = options;
        const selectIds = (state)=>state.ids;
        const selectEntities = (state)=>state.entities;
        const selectAll = createSelector2(selectIds, selectEntities, (ids, entities)=>ids.map((id)=>entities[id]));
        const selectId = (_, id)=>id;
        const selectById = (entities, id)=>entities[id];
        const selectTotal = createSelector2(selectIds, (ids)=>ids.length);
        if (!selectState) return {
            selectIds,
            selectEntities,
            selectAll,
            selectTotal,
            selectById: createSelector2(selectEntities, selectId, selectById)
        };
        const selectGlobalizedEntities = createSelector2(selectState, selectEntities);
        return {
            selectIds: createSelector2(selectState, selectIds),
            selectEntities: selectGlobalizedEntities,
            selectAll: createSelector2(selectState, selectAll),
            selectTotal: createSelector2(selectState, selectTotal),
            selectById: createSelector2(selectGlobalizedEntities, selectId, selectById)
        };
    }
    return {
        getSelectors
    };
}
var isDraftTyped = (0, _immer.isDraft);
function createSingleArgumentStateOperator(mutator) {
    const operator = createStateOperator((_, state)=>mutator(state));
    return function operation(state) {
        return operator(state, void 0);
    };
}
function createStateOperator(mutator) {
    return function operation(state, arg) {
        function isPayloadActionArgument(arg2) {
            return isFSA(arg2);
        }
        const runMutator = (draft)=>{
            if (isPayloadActionArgument(arg)) mutator(arg.payload, draft);
            else mutator(arg, draft);
        };
        if (isDraftTyped(state)) {
            runMutator(state);
            return state;
        }
        return (0, _immer.produce)(state, runMutator);
    };
}
function selectIdValue(entity, selectId) {
    const key = selectId(entity);
    if (key === void 0) console.warn("The entity passed to the `selectId` implementation returned undefined.", "You should probably provide your own `selectId` implementation.", "The entity that was passed:", entity, "The `selectId` implementation:", selectId.toString());
    return key;
}
function ensureEntitiesArray(entities) {
    if (!Array.isArray(entities)) entities = Object.values(entities);
    return entities;
}
function getCurrent(value) {
    return (0, _immer.isDraft)(value) ? (0, _immer.current)(value) : value;
}
function splitAddedUpdatedEntities(newEntities, selectId, state) {
    newEntities = ensureEntitiesArray(newEntities);
    const existingIdsArray = getCurrent(state.ids);
    const existingIds = new Set(existingIdsArray);
    const added = [];
    const updated = [];
    for (const entity of newEntities){
        const id = selectIdValue(entity, selectId);
        if (existingIds.has(id)) updated.push({
            id,
            changes: entity
        });
        else added.push(entity);
    }
    return [
        added,
        updated,
        existingIdsArray
    ];
}
// src/entities/unsorted_state_adapter.ts
function createUnsortedStateAdapter(selectId) {
    function addOneMutably(entity, state) {
        const key = selectIdValue(entity, selectId);
        if (key in state.entities) return;
        state.ids.push(key);
        state.entities[key] = entity;
    }
    function addManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        for (const entity of newEntities)addOneMutably(entity, state);
    }
    function setOneMutably(entity, state) {
        const key = selectIdValue(entity, selectId);
        if (!(key in state.entities)) state.ids.push(key);
        state.entities[key] = entity;
    }
    function setManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        for (const entity of newEntities)setOneMutably(entity, state);
    }
    function setAllMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        state.ids = [];
        state.entities = {};
        addManyMutably(newEntities, state);
    }
    function removeOneMutably(key, state) {
        return removeManyMutably([
            key
        ], state);
    }
    function removeManyMutably(keys, state) {
        let didMutate = false;
        keys.forEach((key)=>{
            if (key in state.entities) {
                delete state.entities[key];
                didMutate = true;
            }
        });
        if (didMutate) state.ids = state.ids.filter((id)=>id in state.entities);
    }
    function removeAllMutably(state) {
        Object.assign(state, {
            ids: [],
            entities: {}
        });
    }
    function takeNewKey(keys, update, state) {
        const original3 = state.entities[update.id];
        if (original3 === void 0) return false;
        const updated = Object.assign({}, original3, update.changes);
        const newKey = selectIdValue(updated, selectId);
        const hasNewKey = newKey !== update.id;
        if (hasNewKey) {
            keys[update.id] = newKey;
            delete state.entities[update.id];
        }
        state.entities[newKey] = updated;
        return hasNewKey;
    }
    function updateOneMutably(update, state) {
        return updateManyMutably([
            update
        ], state);
    }
    function updateManyMutably(updates, state) {
        const newKeys = {};
        const updatesPerEntity = {};
        updates.forEach((update)=>{
            var _a;
            if (update.id in state.entities) updatesPerEntity[update.id] = {
                id: update.id,
                // Spreads ignore falsy values, so this works even if there isn't
                // an existing update already at this key
                changes: __spreadValues(__spreadValues({}, (_a = updatesPerEntity[update.id]) == null ? void 0 : _a.changes), update.changes)
            };
        });
        updates = Object.values(updatesPerEntity);
        const didMutateEntities = updates.length > 0;
        if (didMutateEntities) {
            const didMutateIds = updates.filter((update)=>takeNewKey(newKeys, update, state)).length > 0;
            if (didMutateIds) state.ids = Object.values(state.entities).map((e)=>selectIdValue(e, selectId));
        }
    }
    function upsertOneMutably(entity, state) {
        return upsertManyMutably([
            entity
        ], state);
    }
    function upsertManyMutably(newEntities, state) {
        const [added, updated] = splitAddedUpdatedEntities(newEntities, selectId, state);
        updateManyMutably(updated, state);
        addManyMutably(added, state);
    }
    return {
        removeAll: createSingleArgumentStateOperator(removeAllMutably),
        addOne: createStateOperator(addOneMutably),
        addMany: createStateOperator(addManyMutably),
        setOne: createStateOperator(setOneMutably),
        setMany: createStateOperator(setManyMutably),
        setAll: createStateOperator(setAllMutably),
        updateOne: createStateOperator(updateOneMutably),
        updateMany: createStateOperator(updateManyMutably),
        upsertOne: createStateOperator(upsertOneMutably),
        upsertMany: createStateOperator(upsertManyMutably),
        removeOne: createStateOperator(removeOneMutably),
        removeMany: createStateOperator(removeManyMutably)
    };
}
// src/entities/sorted_state_adapter.ts
function findInsertIndex(sortedItems, item, comparisonFunction) {
    let lowIndex = 0;
    let highIndex = sortedItems.length;
    while(lowIndex < highIndex){
        let middleIndex = lowIndex + highIndex >>> 1;
        const currentItem = sortedItems[middleIndex];
        const res = comparisonFunction(item, currentItem);
        if (res >= 0) lowIndex = middleIndex + 1;
        else highIndex = middleIndex;
    }
    return lowIndex;
}
function insert(sortedItems, item, comparisonFunction) {
    const insertAtIndex = findInsertIndex(sortedItems, item, comparisonFunction);
    sortedItems.splice(insertAtIndex, 0, item);
    return sortedItems;
}
function createSortedStateAdapter(selectId, comparer) {
    const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(selectId);
    function addOneMutably(entity, state) {
        return addManyMutably([
            entity
        ], state);
    }
    function addManyMutably(newEntities, state, existingIds) {
        newEntities = ensureEntitiesArray(newEntities);
        const existingKeys = new Set(existingIds != null ? existingIds : getCurrent(state.ids));
        const models = newEntities.filter((model)=>!existingKeys.has(selectIdValue(model, selectId)));
        if (models.length !== 0) mergeFunction(state, models);
    }
    function setOneMutably(entity, state) {
        return setManyMutably([
            entity
        ], state);
    }
    function setManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        if (newEntities.length !== 0) {
            for (const item of newEntities)delete state.entities[selectId(item)];
            mergeFunction(state, newEntities);
        }
    }
    function setAllMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        state.entities = {};
        state.ids = [];
        addManyMutably(newEntities, state, []);
    }
    function updateOneMutably(update, state) {
        return updateManyMutably([
            update
        ], state);
    }
    function updateManyMutably(updates, state) {
        let appliedUpdates = false;
        let replacedIds = false;
        for (let update of updates){
            const entity = state.entities[update.id];
            if (!entity) continue;
            appliedUpdates = true;
            Object.assign(entity, update.changes);
            const newId = selectId(entity);
            if (update.id !== newId) {
                replacedIds = true;
                delete state.entities[update.id];
                const oldIndex = state.ids.indexOf(update.id);
                state.ids[oldIndex] = newId;
                state.entities[newId] = entity;
            }
        }
        if (appliedUpdates) mergeFunction(state, [], appliedUpdates, replacedIds);
    }
    function upsertOneMutably(entity, state) {
        return upsertManyMutably([
            entity
        ], state);
    }
    function upsertManyMutably(newEntities, state) {
        const [added, updated, existingIdsArray] = splitAddedUpdatedEntities(newEntities, selectId, state);
        if (updated.length) updateManyMutably(updated, state);
        if (added.length) addManyMutably(added, state, existingIdsArray);
    }
    function areArraysEqual(a, b) {
        if (a.length !== b.length) return false;
        for(let i = 0; i < a.length; i++){
            if (a[i] === b[i]) continue;
            return false;
        }
        return true;
    }
    const mergeFunction = (state, addedItems, appliedUpdates, replacedIds)=>{
        const currentEntities = getCurrent(state.entities);
        const currentIds = getCurrent(state.ids);
        const stateEntities = state.entities;
        let ids = currentIds;
        if (replacedIds) ids = new Set(currentIds);
        let sortedEntities = [];
        for (const id of ids){
            const entity = currentEntities[id];
            if (entity) sortedEntities.push(entity);
        }
        const wasPreviouslyEmpty = sortedEntities.length === 0;
        for (const item of addedItems){
            stateEntities[selectId(item)] = item;
            if (!wasPreviouslyEmpty) insert(sortedEntities, item, comparer);
        }
        if (wasPreviouslyEmpty) sortedEntities = addedItems.slice().sort(comparer);
        else if (appliedUpdates) sortedEntities.sort(comparer);
        const newSortedIds = sortedEntities.map(selectId);
        if (!areArraysEqual(currentIds, newSortedIds)) state.ids = newSortedIds;
    };
    return {
        removeOne,
        removeMany,
        removeAll,
        addOne: createStateOperator(addOneMutably),
        updateOne: createStateOperator(updateOneMutably),
        upsertOne: createStateOperator(upsertOneMutably),
        setOne: createStateOperator(setOneMutably),
        setMany: createStateOperator(setManyMutably),
        setAll: createStateOperator(setAllMutably),
        addMany: createStateOperator(addManyMutably),
        updateMany: createStateOperator(updateManyMutably),
        upsertMany: createStateOperator(upsertManyMutably)
    };
}
// src/entities/create_adapter.ts
function createEntityAdapter(options = {}) {
    const { selectId, sortComparer } = __spreadValues({
        sortComparer: false,
        selectId: (instance)=>instance.id
    }, options);
    const stateAdapter = sortComparer ? createSortedStateAdapter(selectId, sortComparer) : createUnsortedStateAdapter(selectId);
    const stateFactory = createInitialStateFactory(stateAdapter);
    const selectorsFactory = createSelectorsFactory();
    return __spreadValues(__spreadValues(__spreadValues({
        selectId,
        sortComparer
    }, stateFactory), selectorsFactory), stateAdapter);
}
// src/listenerMiddleware/exceptions.ts
var task = "task";
var listener = "listener";
var completed = "completed";
var cancelled = "cancelled";
var taskCancelled = `task-${cancelled}`;
var taskCompleted = `task-${completed}`;
var listenerCancelled = `${listener}-${cancelled}`;
var listenerCompleted = `${listener}-${completed}`;
var TaskAbortError = class {
    constructor(code){
        this.code = code;
        __publicField(this, "name", "TaskAbortError");
        __publicField(this, "message");
        this.message = `${task} ${cancelled} (reason: ${code})`;
    }
};
// src/listenerMiddleware/utils.ts
var assertFunction = (func, expected)=>{
    if (typeof func !== "function") throw new TypeError(`${expected} is not a function`);
};
var noop2 = ()=>{};
var catchRejection = (promise, onError = noop2)=>{
    promise.catch(onError);
    return promise;
};
var addAbortSignalListener = (abortSignal, callback)=>{
    abortSignal.addEventListener("abort", callback, {
        once: true
    });
    return ()=>abortSignal.removeEventListener("abort", callback);
};
var abortControllerWithReason = (abortController, reason)=>{
    const signal = abortController.signal;
    if (signal.aborted) return;
    if (!("reason" in signal)) Object.defineProperty(signal, "reason", {
        enumerable: true,
        value: reason,
        configurable: true,
        writable: true
    });
    abortController.abort(reason);
};
// src/listenerMiddleware/task.ts
var validateActive = (signal)=>{
    if (signal.aborted) {
        const { reason } = signal;
        throw new TaskAbortError(reason);
    }
};
function raceWithSignal(signal, promise) {
    let cleanup = noop2;
    return new Promise((resolve, reject)=>{
        const notifyRejection = ()=>reject(new TaskAbortError(signal.reason));
        if (signal.aborted) {
            notifyRejection();
            return;
        }
        cleanup = addAbortSignalListener(signal, notifyRejection);
        promise.finally(()=>cleanup()).then(resolve, reject);
    }).finally(()=>{
        cleanup = noop2;
    });
}
var runTask = async (task2, cleanUp)=>{
    try {
        await Promise.resolve();
        const value = await task2();
        return {
            status: "ok",
            value
        };
    } catch (error) {
        return {
            status: error instanceof TaskAbortError ? "cancelled" : "rejected",
            error
        };
    } finally{
        cleanUp == null || cleanUp();
    }
};
var createPause = (signal)=>{
    return (promise)=>{
        return catchRejection(raceWithSignal(signal, promise).then((output)=>{
            validateActive(signal);
            return output;
        }));
    };
};
var createDelay = (signal)=>{
    const pause = createPause(signal);
    return (timeoutMs)=>{
        return pause(new Promise((resolve)=>setTimeout(resolve, timeoutMs)));
    };
};
// src/listenerMiddleware/index.ts
var { assign } = Object;
var INTERNAL_NIL_TOKEN = {};
var alm = "listenerMiddleware";
var createFork = (parentAbortSignal, parentBlockingPromises)=>{
    const linkControllers = (controller)=>addAbortSignalListener(parentAbortSignal, ()=>abortControllerWithReason(controller, parentAbortSignal.reason));
    return (taskExecutor, opts)=>{
        assertFunction(taskExecutor, "taskExecutor");
        const childAbortController = new AbortController();
        linkControllers(childAbortController);
        const result = runTask(async ()=>{
            validateActive(parentAbortSignal);
            validateActive(childAbortController.signal);
            const result2 = await taskExecutor({
                pause: createPause(childAbortController.signal),
                delay: createDelay(childAbortController.signal),
                signal: childAbortController.signal
            });
            validateActive(childAbortController.signal);
            return result2;
        }, ()=>abortControllerWithReason(childAbortController, taskCompleted));
        if (opts == null ? void 0 : opts.autoJoin) parentBlockingPromises.push(result.catch(noop2));
        return {
            result: createPause(parentAbortSignal)(result),
            cancel () {
                abortControllerWithReason(childAbortController, taskCancelled);
            }
        };
    };
};
var createTakePattern = (startListening, signal)=>{
    const take = async (predicate, timeout)=>{
        validateActive(signal);
        let unsubscribe = ()=>{};
        const tuplePromise = new Promise((resolve, reject)=>{
            let stopListening = startListening({
                predicate,
                effect: (action, listenerApi)=>{
                    listenerApi.unsubscribe();
                    resolve([
                        action,
                        listenerApi.getState(),
                        listenerApi.getOriginalState()
                    ]);
                }
            });
            unsubscribe = ()=>{
                stopListening();
                reject();
            };
        });
        const promises = [
            tuplePromise
        ];
        if (timeout != null) promises.push(new Promise((resolve)=>setTimeout(resolve, timeout, null)));
        try {
            const output = await raceWithSignal(signal, Promise.race(promises));
            validateActive(signal);
            return output;
        } finally{
            unsubscribe();
        }
    };
    return (predicate, timeout)=>catchRejection(take(predicate, timeout));
};
var getListenerEntryPropsFrom = (options)=>{
    let { type, actionCreator, matcher, predicate, effect } = options;
    if (type) predicate = createAction(type).match;
    else if (actionCreator) {
        type = actionCreator.type;
        predicate = actionCreator.match;
    } else if (matcher) predicate = matcher;
    else if (predicate) ;
    else throw new Error("Creating or removing a listener requires one of the known fields for matching an action");
    assertFunction(effect, "options.listener");
    return {
        predicate,
        type,
        effect
    };
};
var createListenerEntry = /* @__PURE__ */ assign((options)=>{
    const { type, predicate, effect } = getListenerEntryPropsFrom(options);
    const entry = {
        id: nanoid(),
        effect,
        type,
        predicate,
        pending: /* @__PURE__ */ new Set(),
        unsubscribe: ()=>{
            throw new Error("Unsubscribe not initialized");
        }
    };
    return entry;
}, {
    withTypes: ()=>createListenerEntry
});
var findListenerEntry = (listenerMap, options)=>{
    const { type, effect, predicate } = getListenerEntryPropsFrom(options);
    return Array.from(listenerMap.values()).find((entry)=>{
        const matchPredicateOrType = typeof type === "string" ? entry.type === type : entry.predicate === predicate;
        return matchPredicateOrType && entry.effect === effect;
    });
};
var cancelActiveListeners = (entry)=>{
    entry.pending.forEach((controller)=>{
        abortControllerWithReason(controller, listenerCancelled);
    });
};
var createClearListenerMiddleware = (listenerMap)=>{
    return ()=>{
        listenerMap.forEach(cancelActiveListeners);
        listenerMap.clear();
    };
};
var safelyNotifyError = (errorHandler, errorToNotify, errorInfo)=>{
    try {
        errorHandler(errorToNotify, errorInfo);
    } catch (errorHandlerError) {
        setTimeout(()=>{
            throw errorHandlerError;
        }, 0);
    }
};
var addListener = /* @__PURE__ */ assign(/* @__PURE__ */ createAction(`${alm}/add`), {
    withTypes: ()=>addListener
});
var clearAllListeners = /* @__PURE__ */ createAction(`${alm}/removeAll`);
var removeListener = /* @__PURE__ */ assign(/* @__PURE__ */ createAction(`${alm}/remove`), {
    withTypes: ()=>removeListener
});
var defaultErrorHandler = (...args)=>{
    console.error(`${alm}/error`, ...args);
};
var createListenerMiddleware = (middlewareOptions = {})=>{
    const listenerMap = /* @__PURE__ */ new Map();
    const { extra, onError = defaultErrorHandler } = middlewareOptions;
    assertFunction(onError, "onError");
    const insertEntry = (entry)=>{
        entry.unsubscribe = ()=>listenerMap.delete(entry.id);
        listenerMap.set(entry.id, entry);
        return (cancelOptions)=>{
            entry.unsubscribe();
            if (cancelOptions == null ? void 0 : cancelOptions.cancelActive) cancelActiveListeners(entry);
        };
    };
    const startListening = (options)=>{
        var _a;
        const entry = (_a = findListenerEntry(listenerMap, options)) != null ? _a : createListenerEntry(options);
        return insertEntry(entry);
    };
    assign(startListening, {
        withTypes: ()=>startListening
    });
    const stopListening = (options)=>{
        const entry = findListenerEntry(listenerMap, options);
        if (entry) {
            entry.unsubscribe();
            if (options.cancelActive) cancelActiveListeners(entry);
        }
        return !!entry;
    };
    assign(stopListening, {
        withTypes: ()=>stopListening
    });
    const notifyListener = async (entry, action, api, getOriginalState)=>{
        const internalTaskController = new AbortController();
        const take = createTakePattern(startListening, internalTaskController.signal);
        const autoJoinPromises = [];
        try {
            entry.pending.add(internalTaskController);
            await Promise.resolve(entry.effect(action, // Use assign() rather than ... to avoid extra helper functions added to bundle
            assign({}, api, {
                getOriginalState,
                condition: (predicate, timeout)=>take(predicate, timeout).then(Boolean),
                take,
                delay: createDelay(internalTaskController.signal),
                pause: createPause(internalTaskController.signal),
                extra,
                signal: internalTaskController.signal,
                fork: createFork(internalTaskController.signal, autoJoinPromises),
                unsubscribe: entry.unsubscribe,
                subscribe: ()=>{
                    listenerMap.set(entry.id, entry);
                },
                cancelActiveListeners: ()=>{
                    entry.pending.forEach((controller, _, set)=>{
                        if (controller !== internalTaskController) {
                            abortControllerWithReason(controller, listenerCancelled);
                            set.delete(controller);
                        }
                    });
                },
                cancel: ()=>{
                    abortControllerWithReason(internalTaskController, listenerCancelled);
                    entry.pending.delete(internalTaskController);
                },
                throwIfCancelled: ()=>{
                    validateActive(internalTaskController.signal);
                }
            })));
        } catch (listenerError) {
            if (!(listenerError instanceof TaskAbortError)) safelyNotifyError(onError, listenerError, {
                raisedBy: "effect"
            });
        } finally{
            await Promise.all(autoJoinPromises);
            abortControllerWithReason(internalTaskController, listenerCompleted);
            entry.pending.delete(internalTaskController);
        }
    };
    const clearListenerMiddleware = createClearListenerMiddleware(listenerMap);
    const middleware = (api)=>(next)=>(action)=>{
                if (!(0, _redux.isAction)(action)) return next(action);
                if (addListener.match(action)) return startListening(action.payload);
                if (clearAllListeners.match(action)) {
                    clearListenerMiddleware();
                    return;
                }
                if (removeListener.match(action)) return stopListening(action.payload);
                let originalState = api.getState();
                const getOriginalState = ()=>{
                    if (originalState === INTERNAL_NIL_TOKEN) throw new Error(`${alm}: getOriginalState can only be called synchronously`);
                    return originalState;
                };
                let result;
                try {
                    result = next(action);
                    if (listenerMap.size > 0) {
                        const currentState = api.getState();
                        const listenerEntries = Array.from(listenerMap.values());
                        for (const entry of listenerEntries){
                            let runListener = false;
                            try {
                                runListener = entry.predicate(action, currentState, originalState);
                            } catch (predicateError) {
                                runListener = false;
                                safelyNotifyError(onError, predicateError, {
                                    raisedBy: "predicate"
                                });
                            }
                            if (!runListener) continue;
                            notifyListener(entry, action, api, getOriginalState);
                        }
                    }
                } finally{
                    originalState = INTERNAL_NIL_TOKEN;
                }
                return result;
            };
    return {
        middleware,
        startListening,
        stopListening,
        clearListeners: clearListenerMiddleware
    };
};
var createMiddlewareEntry = (middleware)=>({
        middleware,
        applied: /* @__PURE__ */ new Map()
    });
var matchInstance = (instanceId)=>(action)=>{
        var _a;
        return ((_a = action == null ? void 0 : action.meta) == null ? void 0 : _a.instanceId) === instanceId;
    };
var createDynamicMiddleware = ()=>{
    const instanceId = nanoid();
    const middlewareMap = /* @__PURE__ */ new Map();
    const withMiddleware = Object.assign(createAction("dynamicMiddleware/add", (...middlewares)=>({
            payload: middlewares,
            meta: {
                instanceId
            }
        })), {
        withTypes: ()=>withMiddleware
    });
    const addMiddleware = Object.assign(function addMiddleware2(...middlewares) {
        middlewares.forEach((middleware2)=>{
            getOrInsertComputed(middlewareMap, middleware2, createMiddlewareEntry);
        });
    }, {
        withTypes: ()=>addMiddleware
    });
    const getFinalMiddleware = (api)=>{
        const appliedMiddleware = Array.from(middlewareMap.values()).map((entry)=>getOrInsertComputed(entry.applied, api, entry.middleware));
        return (0, _redux.compose)(...appliedMiddleware);
    };
    const isWithMiddleware = isAllOf(withMiddleware, matchInstance(instanceId));
    const middleware = (api)=>(next)=>(action)=>{
                if (isWithMiddleware(action)) {
                    addMiddleware(...action.payload);
                    return api.dispatch;
                }
                return getFinalMiddleware(api)(next)(action);
            };
    return {
        middleware,
        addMiddleware,
        withMiddleware,
        instanceId
    };
};
var isSliceLike = (maybeSliceLike)=>"reducerPath" in maybeSliceLike && typeof maybeSliceLike.reducerPath === "string";
var getReducers = (slices)=>slices.flatMap((sliceOrMap)=>isSliceLike(sliceOrMap) ? [
            [
                sliceOrMap.reducerPath,
                sliceOrMap.reducer
            ]
        ] : Object.entries(sliceOrMap));
var ORIGINAL_STATE = Symbol.for("rtk-state-proxy-original");
var isStateProxy = (value)=>!!value && !!value[ORIGINAL_STATE];
var stateProxyMap = /* @__PURE__ */ new WeakMap();
var createStateProxy = (state, reducerMap)=>getOrInsertComputed(stateProxyMap, state, ()=>new Proxy(state, {
            get: (target, prop, receiver)=>{
                if (prop === ORIGINAL_STATE) return target;
                const result = Reflect.get(target, prop, receiver);
                if (typeof result === "undefined") {
                    const reducer = reducerMap[prop.toString()];
                    if (reducer) {
                        const reducerResult = reducer(void 0, {
                            type: nanoid()
                        });
                        if (typeof reducerResult === "undefined") throw new Error(`The slice reducer for key "${prop.toString()}" returned undefined when called for selector(). If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.`);
                        return reducerResult;
                    }
                }
                return result;
            }
        }));
var original = (state)=>{
    if (!isStateProxy(state)) throw new Error("original must be used on state Proxy");
    return state[ORIGINAL_STATE];
};
var noopReducer = (state = {})=>state;
function combineSlices(...slices) {
    const reducerMap = Object.fromEntries(getReducers(slices));
    const getReducer = ()=>Object.keys(reducerMap).length ? (0, _redux.combineReducers)(reducerMap) : noopReducer;
    let reducer = getReducer();
    function combinedReducer(state, action) {
        return reducer(state, action);
    }
    combinedReducer.withLazyLoadedSlices = ()=>combinedReducer;
    const inject = (slice, config = {})=>{
        const { reducerPath, reducer: reducerToInject } = slice;
        const currentReducer = reducerMap[reducerPath];
        if (!config.overrideExisting && currentReducer && currentReducer !== reducerToInject) return combinedReducer;
        reducerMap[reducerPath] = reducerToInject;
        reducer = getReducer();
        return combinedReducer;
    };
    const selector = Object.assign(function makeSelector(selectorFn, selectState) {
        return function selector2(state, ...args) {
            return selectorFn(createStateProxy(selectState ? selectState(state, ...args) : state, reducerMap), ...args);
        };
    }, {
        original
    });
    return Object.assign(combinedReducer, {
        inject,
        selector
    });
}
// src/formatProdErrorMessage.ts
function formatProdErrorMessage(code) {
    return `Minified Redux Toolkit error #${code}; visit https://redux-toolkit.js.org/Errors?code=${code} for the full message or use the non-minified dev environment for full errors. `;
}

},{"redux":"7RvxM","immer":"a41lx","reselect":"48i3i","redux-thunk":"kK39q","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7RvxM":[function(require,module,exports,__globalThis) {
// src/utils/formatProdErrorMessage.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__DO_NOT_USE__ActionTypes", ()=>actionTypes_default);
parcelHelpers.export(exports, "applyMiddleware", ()=>applyMiddleware);
parcelHelpers.export(exports, "bindActionCreators", ()=>bindActionCreators);
parcelHelpers.export(exports, "combineReducers", ()=>combineReducers);
parcelHelpers.export(exports, "compose", ()=>compose);
parcelHelpers.export(exports, "createStore", ()=>createStore);
parcelHelpers.export(exports, "isAction", ()=>isAction);
parcelHelpers.export(exports, "isPlainObject", ()=>isPlainObject);
parcelHelpers.export(exports, "legacy_createStore", ()=>legacy_createStore);
function formatProdErrorMessage(code) {
    return `Minified Redux error #${code}; visit https://redux.js.org/Errors?code=${code} for the full message or use the non-minified dev environment for full errors. `;
}
// src/utils/symbol-observable.ts
var $$observable = /* @__PURE__ */ (()=>typeof Symbol === "function" && Symbol.observable || "@@observable")();
var symbol_observable_default = $$observable;
// src/utils/actionTypes.ts
var randomString = ()=>Math.random().toString(36).substring(7).split("").join(".");
var ActionTypes = {
    INIT: `@@redux/INIT${randomString()}`,
    REPLACE: `@@redux/REPLACE${randomString()}`,
    PROBE_UNKNOWN_ACTION: ()=>`@@redux/PROBE_UNKNOWN_ACTION${randomString()}`
};
var actionTypes_default = ActionTypes;
// src/utils/isPlainObject.ts
function isPlainObject(obj) {
    if (typeof obj !== "object" || obj === null) return false;
    let proto = obj;
    while(Object.getPrototypeOf(proto) !== null)proto = Object.getPrototypeOf(proto);
    return Object.getPrototypeOf(obj) === proto || Object.getPrototypeOf(obj) === null;
}
// src/utils/kindOf.ts
function miniKindOf(val) {
    if (val === void 0) return "undefined";
    if (val === null) return "null";
    const type = typeof val;
    switch(type){
        case "boolean":
        case "string":
        case "number":
        case "symbol":
        case "function":
            return type;
    }
    if (Array.isArray(val)) return "array";
    if (isDate(val)) return "date";
    if (isError(val)) return "error";
    const constructorName = ctorName(val);
    switch(constructorName){
        case "Symbol":
        case "Promise":
        case "WeakMap":
        case "WeakSet":
        case "Map":
        case "Set":
            return constructorName;
    }
    return Object.prototype.toString.call(val).slice(8, -1).toLowerCase().replace(/\s/g, "");
}
function ctorName(val) {
    return typeof val.constructor === "function" ? val.constructor.name : null;
}
function isError(val) {
    return val instanceof Error || typeof val.message === "string" && val.constructor && typeof val.constructor.stackTraceLimit === "number";
}
function isDate(val) {
    if (val instanceof Date) return true;
    return typeof val.toDateString === "function" && typeof val.getDate === "function" && typeof val.setDate === "function";
}
function kindOf(val) {
    let typeOfVal = typeof val;
    typeOfVal = miniKindOf(val);
    return typeOfVal;
}
// src/createStore.ts
function createStore(reducer, preloadedState, enhancer) {
    if (typeof reducer !== "function") throw new Error(`Expected the root reducer to be a function. Instead, received: '${kindOf(reducer)}'`);
    if (typeof preloadedState === "function" && typeof enhancer === "function" || typeof enhancer === "function" && typeof arguments[3] === "function") throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.");
    if (typeof preloadedState === "function" && typeof enhancer === "undefined") {
        enhancer = preloadedState;
        preloadedState = void 0;
    }
    if (typeof enhancer !== "undefined") {
        if (typeof enhancer !== "function") throw new Error(`Expected the enhancer to be a function. Instead, received: '${kindOf(enhancer)}'`);
        return enhancer(createStore)(reducer, preloadedState);
    }
    let currentReducer = reducer;
    let currentState = preloadedState;
    let currentListeners = /* @__PURE__ */ new Map();
    let nextListeners = currentListeners;
    let listenerIdCounter = 0;
    let isDispatching = false;
    function ensureCanMutateNextListeners() {
        if (nextListeners === currentListeners) {
            nextListeners = /* @__PURE__ */ new Map();
            currentListeners.forEach((listener, key)=>{
                nextListeners.set(key, listener);
            });
        }
    }
    function getState() {
        if (isDispatching) throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");
        return currentState;
    }
    function subscribe(listener) {
        if (typeof listener !== "function") throw new Error(`Expected the listener to be a function. Instead, received: '${kindOf(listener)}'`);
        if (isDispatching) throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api/store#subscribelistener for more details.");
        let isSubscribed = true;
        ensureCanMutateNextListeners();
        const listenerId = listenerIdCounter++;
        nextListeners.set(listenerId, listener);
        return function unsubscribe() {
            if (!isSubscribed) return;
            if (isDispatching) throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api/store#subscribelistener for more details.");
            isSubscribed = false;
            ensureCanMutateNextListeners();
            nextListeners.delete(listenerId);
            currentListeners = null;
        };
    }
    function dispatch(action) {
        if (!isPlainObject(action)) throw new Error(`Actions must be plain objects. Instead, the actual type was: '${kindOf(action)}'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.`);
        if (typeof action.type === "undefined") throw new Error('Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
        if (typeof action.type !== "string") throw new Error(`Action "type" property must be a string. Instead, the actual type was: '${kindOf(action.type)}'. Value was: '${action.type}' (stringified)`);
        if (isDispatching) throw new Error("Reducers may not dispatch actions.");
        try {
            isDispatching = true;
            currentState = currentReducer(currentState, action);
        } finally{
            isDispatching = false;
        }
        const listeners = currentListeners = nextListeners;
        listeners.forEach((listener)=>{
            listener();
        });
        return action;
    }
    function replaceReducer(nextReducer) {
        if (typeof nextReducer !== "function") throw new Error(`Expected the nextReducer to be a function. Instead, received: '${kindOf(nextReducer)}`);
        currentReducer = nextReducer;
        dispatch({
            type: actionTypes_default.REPLACE
        });
    }
    function observable() {
        const outerSubscribe = subscribe;
        return {
            /**
       * The minimal observable subscription method.
       * @param observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */ subscribe (observer) {
                if (typeof observer !== "object" || observer === null) throw new Error(`Expected the observer to be an object. Instead, received: '${kindOf(observer)}'`);
                function observeState() {
                    const observerAsObserver = observer;
                    if (observerAsObserver.next) observerAsObserver.next(getState());
                }
                observeState();
                const unsubscribe = outerSubscribe(observeState);
                return {
                    unsubscribe
                };
            },
            [symbol_observable_default] () {
                return this;
            }
        };
    }
    dispatch({
        type: actionTypes_default.INIT
    });
    const store = {
        dispatch,
        subscribe,
        getState,
        replaceReducer,
        [symbol_observable_default]: observable
    };
    return store;
}
function legacy_createStore(reducer, preloadedState, enhancer) {
    return createStore(reducer, preloadedState, enhancer);
}
// src/utils/warning.ts
function warning(message) {
    if (typeof console !== "undefined" && typeof console.error === "function") console.error(message);
    try {
        throw new Error(message);
    } catch (e) {}
}
// src/combineReducers.ts
function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
    const reducerKeys = Object.keys(reducers);
    const argumentName = action && action.type === actionTypes_default.INIT ? "preloadedState argument passed to createStore" : "previous state received by the reducer";
    if (reducerKeys.length === 0) return "Store does not have a valid reducer. Make sure the argument passed to combineReducers is an object whose values are reducers.";
    if (!isPlainObject(inputState)) return `The ${argumentName} has unexpected type of "${kindOf(inputState)}". Expected argument to be an object with the following keys: "${reducerKeys.join('", "')}"`;
    const unexpectedKeys = Object.keys(inputState).filter((key)=>!reducers.hasOwnProperty(key) && !unexpectedKeyCache[key]);
    unexpectedKeys.forEach((key)=>{
        unexpectedKeyCache[key] = true;
    });
    if (action && action.type === actionTypes_default.REPLACE) return;
    if (unexpectedKeys.length > 0) return `Unexpected ${unexpectedKeys.length > 1 ? "keys" : "key"} "${unexpectedKeys.join('", "')}" found in ${argumentName}. Expected to find one of the known reducer keys instead: "${reducerKeys.join('", "')}". Unexpected keys will be ignored.`;
}
function assertReducerShape(reducers) {
    Object.keys(reducers).forEach((key)=>{
        const reducer = reducers[key];
        const initialState = reducer(void 0, {
            type: actionTypes_default.INIT
        });
        if (typeof initialState === "undefined") throw new Error(`The slice reducer for key "${key}" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.`);
        if (typeof reducer(void 0, {
            type: actionTypes_default.PROBE_UNKNOWN_ACTION()
        }) === "undefined") throw new Error(`The slice reducer for key "${key}" returned undefined when probed with a random type. Don't try to handle '${actionTypes_default.INIT}' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.`);
    });
}
function combineReducers(reducers) {
    const reducerKeys = Object.keys(reducers);
    const finalReducers = {};
    for(let i = 0; i < reducerKeys.length; i++){
        const key = reducerKeys[i];
        if (typeof reducers[key] === "undefined") warning(`No reducer provided for key "${key}"`);
        if (typeof reducers[key] === "function") finalReducers[key] = reducers[key];
    }
    const finalReducerKeys = Object.keys(finalReducers);
    let unexpectedKeyCache;
    unexpectedKeyCache = {};
    let shapeAssertionError;
    try {
        assertReducerShape(finalReducers);
    } catch (e) {
        shapeAssertionError = e;
    }
    return function combination(state = {}, action) {
        if (shapeAssertionError) throw shapeAssertionError;
        {
            const warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
            if (warningMessage) warning(warningMessage);
        }
        let hasChanged = false;
        const nextState = {};
        for(let i = 0; i < finalReducerKeys.length; i++){
            const key = finalReducerKeys[i];
            const reducer = finalReducers[key];
            const previousStateForKey = state[key];
            const nextStateForKey = reducer(previousStateForKey, action);
            if (typeof nextStateForKey === "undefined") {
                const actionType = action && action.type;
                throw new Error(`When called with an action of type ${actionType ? `"${String(actionType)}"` : "(unknown type)"}, the slice reducer for key "${key}" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.`);
            }
            nextState[key] = nextStateForKey;
            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
        }
        hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
        return hasChanged ? nextState : state;
    };
}
// src/bindActionCreators.ts
function bindActionCreator(actionCreator, dispatch) {
    return function(...args) {
        return dispatch(actionCreator.apply(this, args));
    };
}
function bindActionCreators(actionCreators, dispatch) {
    if (typeof actionCreators === "function") return bindActionCreator(actionCreators, dispatch);
    if (typeof actionCreators !== "object" || actionCreators === null) throw new Error(`bindActionCreators expected an object or a function, but instead received: '${kindOf(actionCreators)}'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?`);
    const boundActionCreators = {};
    for(const key in actionCreators){
        const actionCreator = actionCreators[key];
        if (typeof actionCreator === "function") boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
    return boundActionCreators;
}
// src/compose.ts
function compose(...funcs) {
    if (funcs.length === 0) return (arg)=>arg;
    if (funcs.length === 1) return funcs[0];
    return funcs.reduce((a, b)=>(...args)=>a(b(...args)));
}
// src/applyMiddleware.ts
function applyMiddleware(...middlewares) {
    return (createStore2)=>(reducer, preloadedState)=>{
            const store = createStore2(reducer, preloadedState);
            let dispatch = ()=>{
                throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.");
            };
            const middlewareAPI = {
                getState: store.getState,
                dispatch: (action, ...args)=>dispatch(action, ...args)
            };
            const chain = middlewares.map((middleware)=>middleware(middlewareAPI));
            dispatch = compose(...chain)(store.dispatch);
            return {
                ...store,
                dispatch
            };
        };
}
// src/utils/isAction.ts
function isAction(action) {
    return isPlainObject(action) && "type" in action && typeof action.type === "string";
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"a41lx":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Immer", ()=>Immer2);
parcelHelpers.export(exports, "applyPatches", ()=>applyPatches);
parcelHelpers.export(exports, "castDraft", ()=>castDraft);
parcelHelpers.export(exports, "castImmutable", ()=>castImmutable);
parcelHelpers.export(exports, "createDraft", ()=>createDraft);
parcelHelpers.export(exports, "current", ()=>current);
parcelHelpers.export(exports, "enableMapSet", ()=>enableMapSet);
parcelHelpers.export(exports, "enablePatches", ()=>enablePatches);
parcelHelpers.export(exports, "finishDraft", ()=>finishDraft);
parcelHelpers.export(exports, "freeze", ()=>freeze);
parcelHelpers.export(exports, "immerable", ()=>DRAFTABLE);
parcelHelpers.export(exports, "isDraft", ()=>isDraft);
parcelHelpers.export(exports, "isDraftable", ()=>isDraftable);
parcelHelpers.export(exports, "nothing", ()=>NOTHING);
parcelHelpers.export(exports, "original", ()=>original);
parcelHelpers.export(exports, "produce", ()=>produce);
parcelHelpers.export(exports, "produceWithPatches", ()=>produceWithPatches);
parcelHelpers.export(exports, "setAutoFreeze", ()=>setAutoFreeze);
parcelHelpers.export(exports, "setUseStrictShallowCopy", ()=>setUseStrictShallowCopy);
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {
        enumerable: true,
        configurable: true,
        writable: true,
        value
    }) : obj[key] = value;
var __spreadValues = (a, b)=>{
    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols) {
        for (var prop of __getOwnPropSymbols(b))if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    }
    return a;
};
// src/utils/env.ts
var NOTHING = Symbol.for("immer-nothing");
var DRAFTABLE = Symbol.for("immer-draftable");
var DRAFT_STATE = Symbol.for("immer-state");
// src/utils/errors.ts
var errors = [
    // All error codes, starting by 0:
    function(plugin) {
        return `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \`enable${plugin}()\` when initializing your application.`;
    },
    function(thing) {
        return `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`;
    },
    "This object has been frozen and should not be mutated",
    function(data) {
        return "Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? " + data;
    },
    "An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.",
    "Immer forbids circular references",
    "The first or second argument to `produce` must be a function",
    "The third argument to `produce` must be a function or undefined",
    "First argument to `createDraft` must be a plain object, an array, or an immerable object",
    "First argument to `finishDraft` must be a draft returned by `createDraft`",
    function(thing) {
        return `'current' expects a draft, got: ${thing}`;
    },
    "Object.defineProperty() cannot be used on an Immer draft",
    "Object.setPrototypeOf() cannot be used on an Immer draft",
    "Immer only supports deleting array indices",
    "Immer only supports setting array indices and the 'length' property",
    function(thing) {
        return `'original' expects a draft, got: ${thing}`;
    }
];
function die(error, ...args) {
    {
        const e = errors[error];
        const msg = typeof e === "function" ? e.apply(null, args) : e;
        throw new Error(`[Immer] ${msg}`);
    }
    throw new Error(`[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`);
}
// src/utils/common.ts
var getPrototypeOf = Object.getPrototypeOf;
function isDraft(value) {
    return !!value && !!value[DRAFT_STATE];
}
function isDraftable(value) {
    var _a;
    if (!value) return false;
    return isPlainObject(value) || Array.isArray(value) || !!value[DRAFTABLE] || !!((_a = value.constructor) == null ? void 0 : _a[DRAFTABLE]) || isMap(value) || isSet(value);
}
var objectCtorString = Object.prototype.constructor.toString();
function isPlainObject(value) {
    if (!value || typeof value !== "object") return false;
    const proto = getPrototypeOf(value);
    if (proto === null) return true;
    const Ctor = Object.hasOwnProperty.call(proto, "constructor") && proto.constructor;
    if (Ctor === Object) return true;
    return typeof Ctor == "function" && Function.toString.call(Ctor) === objectCtorString;
}
function original(value) {
    if (!isDraft(value)) die(15, value);
    return value[DRAFT_STATE].base_;
}
function each(obj, iter) {
    if (getArchtype(obj) === 0 /* Object */ ) Reflect.ownKeys(obj).forEach((key)=>{
        iter(key, obj[key], obj);
    });
    else obj.forEach((entry, index)=>iter(index, entry, obj));
}
function getArchtype(thing) {
    const state = thing[DRAFT_STATE];
    return state ? state.type_ : Array.isArray(thing) ? 1 /* Array */  : isMap(thing) ? 2 /* Map */  : isSet(thing) ? 3 /* Set */  : 0 /* Object */ ;
}
function has(thing, prop) {
    return getArchtype(thing) === 2 /* Map */  ? thing.has(prop) : Object.prototype.hasOwnProperty.call(thing, prop);
}
function get(thing, prop) {
    return getArchtype(thing) === 2 /* Map */  ? thing.get(prop) : thing[prop];
}
function set(thing, propOrOldValue, value) {
    const t = getArchtype(thing);
    if (t === 2 /* Map */ ) thing.set(propOrOldValue, value);
    else if (t === 3 /* Set */ ) thing.add(value);
    else thing[propOrOldValue] = value;
}
function is(x, y) {
    if (x === y) return x !== 0 || 1 / x === 1 / y;
    else return x !== x && y !== y;
}
function isMap(target) {
    return target instanceof Map;
}
function isSet(target) {
    return target instanceof Set;
}
function latest(state) {
    return state.copy_ || state.base_;
}
function shallowCopy(base, strict) {
    if (isMap(base)) return new Map(base);
    if (isSet(base)) return new Set(base);
    if (Array.isArray(base)) return Array.prototype.slice.call(base);
    const isPlain = isPlainObject(base);
    if (strict === true || strict === "class_only" && !isPlain) {
        const descriptors = Object.getOwnPropertyDescriptors(base);
        delete descriptors[DRAFT_STATE];
        let keys = Reflect.ownKeys(descriptors);
        for(let i = 0; i < keys.length; i++){
            const key = keys[i];
            const desc = descriptors[key];
            if (desc.writable === false) {
                desc.writable = true;
                desc.configurable = true;
            }
            if (desc.get || desc.set) descriptors[key] = {
                configurable: true,
                writable: true,
                // could live with !!desc.set as well here...
                enumerable: desc.enumerable,
                value: base[key]
            };
        }
        return Object.create(getPrototypeOf(base), descriptors);
    } else {
        const proto = getPrototypeOf(base);
        if (proto !== null && isPlain) return __spreadValues({}, base);
        const obj = Object.create(proto);
        return Object.assign(obj, base);
    }
}
function freeze(obj, deep = false) {
    if (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj;
    if (getArchtype(obj) > 1) obj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections;
    Object.freeze(obj);
    if (deep) Object.entries(obj).forEach(([key, value])=>freeze(value, true));
    return obj;
}
function dontMutateFrozenCollections() {
    die(2);
}
function isFrozen(obj) {
    return Object.isFrozen(obj);
}
// src/utils/plugins.ts
var plugins = {};
function getPlugin(pluginKey) {
    const plugin = plugins[pluginKey];
    if (!plugin) die(0, pluginKey);
    return plugin;
}
function loadPlugin(pluginKey, implementation) {
    if (!plugins[pluginKey]) plugins[pluginKey] = implementation;
}
// src/core/scope.ts
var currentScope;
function getCurrentScope() {
    return currentScope;
}
function createScope(parent_, immer_) {
    return {
        drafts_: [],
        parent_,
        immer_,
        // Whenever the modified draft contains a draft from another scope, we
        // need to prevent auto-freezing so the unowned draft can be finalized.
        canAutoFreeze_: true,
        unfinalizedDrafts_: 0
    };
}
function usePatchesInScope(scope, patchListener) {
    if (patchListener) {
        getPlugin("Patches");
        scope.patches_ = [];
        scope.inversePatches_ = [];
        scope.patchListener_ = patchListener;
    }
}
function revokeScope(scope) {
    leaveScope(scope);
    scope.drafts_.forEach(revokeDraft);
    scope.drafts_ = null;
}
function leaveScope(scope) {
    if (scope === currentScope) currentScope = scope.parent_;
}
function enterScope(immer2) {
    return currentScope = createScope(currentScope, immer2);
}
function revokeDraft(draft) {
    const state = draft[DRAFT_STATE];
    if (state.type_ === 0 /* Object */  || state.type_ === 1 /* Array */ ) state.revoke_();
    else state.revoked_ = true;
}
// src/core/finalize.ts
function processResult(result, scope) {
    scope.unfinalizedDrafts_ = scope.drafts_.length;
    const baseDraft = scope.drafts_[0];
    const isReplaced = result !== void 0 && result !== baseDraft;
    if (isReplaced) {
        if (baseDraft[DRAFT_STATE].modified_) {
            revokeScope(scope);
            die(4);
        }
        if (isDraftable(result)) {
            result = finalize(scope, result);
            if (!scope.parent_) maybeFreeze(scope, result);
        }
        if (scope.patches_) getPlugin("Patches").generateReplacementPatches_(baseDraft[DRAFT_STATE].base_, result, scope.patches_, scope.inversePatches_);
    } else result = finalize(scope, baseDraft, []);
    revokeScope(scope);
    if (scope.patches_) scope.patchListener_(scope.patches_, scope.inversePatches_);
    return result !== NOTHING ? result : void 0;
}
function finalize(rootScope, value, path) {
    if (isFrozen(value)) return value;
    const state = value[DRAFT_STATE];
    if (!state) {
        each(value, (key, childValue)=>finalizeProperty(rootScope, state, value, key, childValue, path));
        return value;
    }
    if (state.scope_ !== rootScope) return value;
    if (!state.modified_) {
        maybeFreeze(rootScope, state.base_, true);
        return state.base_;
    }
    if (!state.finalized_) {
        state.finalized_ = true;
        state.scope_.unfinalizedDrafts_--;
        const result = state.copy_;
        let resultEach = result;
        let isSet2 = false;
        if (state.type_ === 3 /* Set */ ) {
            resultEach = new Set(result);
            result.clear();
            isSet2 = true;
        }
        each(resultEach, (key, childValue)=>finalizeProperty(rootScope, state, result, key, childValue, path, isSet2));
        maybeFreeze(rootScope, result, false);
        if (path && rootScope.patches_) getPlugin("Patches").generatePatches_(state, path, rootScope.patches_, rootScope.inversePatches_);
    }
    return state.copy_;
}
function finalizeProperty(rootScope, parentState, targetObject, prop, childValue, rootPath, targetIsSet) {
    if (childValue === targetObject) die(5);
    if (isDraft(childValue)) {
        const path = rootPath && parentState && parentState.type_ !== 3 /* Set */  && // Set objects are atomic since they have no keys.
        !has(parentState.assigned_, prop) ? rootPath.concat(prop) : void 0;
        const res = finalize(rootScope, childValue, path);
        set(targetObject, prop, res);
        if (isDraft(res)) rootScope.canAutoFreeze_ = false;
        else return;
    } else if (targetIsSet) targetObject.add(childValue);
    if (isDraftable(childValue) && !isFrozen(childValue)) {
        if (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) return;
        finalize(rootScope, childValue);
        if ((!parentState || !parentState.scope_.parent_) && typeof prop !== "symbol" && Object.prototype.propertyIsEnumerable.call(targetObject, prop)) maybeFreeze(rootScope, childValue);
    }
}
function maybeFreeze(scope, value, deep = false) {
    if (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) freeze(value, deep);
}
// src/core/proxy.ts
function createProxyProxy(base, parent) {
    const isArray = Array.isArray(base);
    const state = {
        type_: isArray ? 1 /* Array */  : 0 /* Object */ ,
        // Track which produce call this is associated with.
        scope_: parent ? parent.scope_ : getCurrentScope(),
        // True for both shallow and deep changes.
        modified_: false,
        // Used during finalization.
        finalized_: false,
        // Track which properties have been assigned (true) or deleted (false).
        assigned_: {},
        // The parent draft state.
        parent_: parent,
        // The base state.
        base_: base,
        // The base proxy.
        draft_: null,
        // set below
        // The base copy with any updated values.
        copy_: null,
        // Called by the `produce` function.
        revoke_: null,
        isManual_: false
    };
    let target = state;
    let traps = objectTraps;
    if (isArray) {
        target = [
            state
        ];
        traps = arrayTraps;
    }
    const { revoke, proxy } = Proxy.revocable(target, traps);
    state.draft_ = proxy;
    state.revoke_ = revoke;
    return proxy;
}
var objectTraps = {
    get (state, prop) {
        if (prop === DRAFT_STATE) return state;
        const source = latest(state);
        if (!has(source, prop)) return readPropFromProto(state, source, prop);
        const value = source[prop];
        if (state.finalized_ || !isDraftable(value)) return value;
        if (value === peek(state.base_, prop)) {
            prepareCopy(state);
            return state.copy_[prop] = createProxy(value, state);
        }
        return value;
    },
    has (state, prop) {
        return prop in latest(state);
    },
    ownKeys (state) {
        return Reflect.ownKeys(latest(state));
    },
    set (state, prop, value) {
        const desc = getDescriptorFromProto(latest(state), prop);
        if (desc == null ? void 0 : desc.set) {
            desc.set.call(state.draft_, value);
            return true;
        }
        if (!state.modified_) {
            const current2 = peek(latest(state), prop);
            const currentState = current2 == null ? void 0 : current2[DRAFT_STATE];
            if (currentState && currentState.base_ === value) {
                state.copy_[prop] = value;
                state.assigned_[prop] = false;
                return true;
            }
            if (is(value, current2) && (value !== void 0 || has(state.base_, prop))) return true;
            prepareCopy(state);
            markChanged(state);
        }
        if (state.copy_[prop] === value && // special case: handle new props with value 'undefined'
        (value !== void 0 || prop in state.copy_) || // special case: NaN
        Number.isNaN(value) && Number.isNaN(state.copy_[prop])) return true;
        state.copy_[prop] = value;
        state.assigned_[prop] = true;
        return true;
    },
    deleteProperty (state, prop) {
        if (peek(state.base_, prop) !== void 0 || prop in state.base_) {
            state.assigned_[prop] = false;
            prepareCopy(state);
            markChanged(state);
        } else delete state.assigned_[prop];
        if (state.copy_) delete state.copy_[prop];
        return true;
    },
    // Note: We never coerce `desc.value` into an Immer draft, because we can't make
    // the same guarantee in ES5 mode.
    getOwnPropertyDescriptor (state, prop) {
        const owner = latest(state);
        const desc = Reflect.getOwnPropertyDescriptor(owner, prop);
        if (!desc) return desc;
        return {
            writable: true,
            configurable: state.type_ !== 1 /* Array */  || prop !== "length",
            enumerable: desc.enumerable,
            value: owner[prop]
        };
    },
    defineProperty () {
        die(11);
    },
    getPrototypeOf (state) {
        return getPrototypeOf(state.base_);
    },
    setPrototypeOf () {
        die(12);
    }
};
var arrayTraps = {};
each(objectTraps, (key, fn)=>{
    arrayTraps[key] = function() {
        arguments[0] = arguments[0][0];
        return fn.apply(this, arguments);
    };
});
arrayTraps.deleteProperty = function(state, prop) {
    if (isNaN(parseInt(prop))) die(13);
    return arrayTraps.set.call(this, state, prop, void 0);
};
arrayTraps.set = function(state, prop, value) {
    if (prop !== "length" && isNaN(parseInt(prop))) die(14);
    return objectTraps.set.call(this, state[0], prop, value, state[0]);
};
function peek(draft, prop) {
    const state = draft[DRAFT_STATE];
    const source = state ? latest(state) : draft;
    return source[prop];
}
function readPropFromProto(state, source, prop) {
    var _a;
    const desc = getDescriptorFromProto(source, prop);
    return desc ? `value` in desc ? desc.value : // This is a very special case, if the prop is a getter defined by the
    // prototype, we should invoke it with the draft as context!
    (_a = desc.get) == null ? void 0 : _a.call(state.draft_) : void 0;
}
function getDescriptorFromProto(source, prop) {
    if (!(prop in source)) return void 0;
    let proto = getPrototypeOf(source);
    while(proto){
        const desc = Object.getOwnPropertyDescriptor(proto, prop);
        if (desc) return desc;
        proto = getPrototypeOf(proto);
    }
    return void 0;
}
function markChanged(state) {
    if (!state.modified_) {
        state.modified_ = true;
        if (state.parent_) markChanged(state.parent_);
    }
}
function prepareCopy(state) {
    if (!state.copy_) state.copy_ = shallowCopy(state.base_, state.scope_.immer_.useStrictShallowCopy_);
}
// src/core/immerClass.ts
var Immer2 = class {
    constructor(config){
        this.autoFreeze_ = true;
        this.useStrictShallowCopy_ = false;
        /**
     * The `produce` function takes a value and a "recipe function" (whose
     * return value often depends on the base state). The recipe function is
     * free to mutate its first argument however it wants. All mutations are
     * only ever applied to a __copy__ of the base state.
     *
     * Pass only a function to create a "curried producer" which relieves you
     * from passing the recipe function every time.
     *
     * Only plain objects and arrays are made mutable. All other objects are
     * considered uncopyable.
     *
     * Note: This function is __bound__ to its `Immer` instance.
     *
     * @param {any} base - the initial state
     * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified
     * @param {Function} patchListener - optional function that will be called with all the patches produced here
     * @returns {any} a new state, or the initial state if nothing was modified
     */ this.produce = (base, recipe, patchListener)=>{
            if (typeof base === "function" && typeof recipe !== "function") {
                const defaultBase = recipe;
                recipe = base;
                const self = this;
                return function curriedProduce(base2 = defaultBase, ...args) {
                    return self.produce(base2, (draft)=>recipe.call(this, draft, ...args));
                };
            }
            if (typeof recipe !== "function") die(6);
            if (patchListener !== void 0 && typeof patchListener !== "function") die(7);
            let result;
            if (isDraftable(base)) {
                const scope = enterScope(this);
                const proxy = createProxy(base, void 0);
                let hasError = true;
                try {
                    result = recipe(proxy);
                    hasError = false;
                } finally{
                    if (hasError) revokeScope(scope);
                    else leaveScope(scope);
                }
                usePatchesInScope(scope, patchListener);
                return processResult(result, scope);
            } else if (!base || typeof base !== "object") {
                result = recipe(base);
                if (result === void 0) result = base;
                if (result === NOTHING) result = void 0;
                if (this.autoFreeze_) freeze(result, true);
                if (patchListener) {
                    const p = [];
                    const ip = [];
                    getPlugin("Patches").generateReplacementPatches_(base, result, p, ip);
                    patchListener(p, ip);
                }
                return result;
            } else die(1, base);
        };
        this.produceWithPatches = (base, recipe)=>{
            if (typeof base === "function") return (state, ...args)=>this.produceWithPatches(state, (draft)=>base(draft, ...args));
            let patches, inversePatches;
            const result = this.produce(base, recipe, (p, ip)=>{
                patches = p;
                inversePatches = ip;
            });
            return [
                result,
                patches,
                inversePatches
            ];
        };
        if (typeof (config == null ? void 0 : config.autoFreeze) === "boolean") this.setAutoFreeze(config.autoFreeze);
        if (typeof (config == null ? void 0 : config.useStrictShallowCopy) === "boolean") this.setUseStrictShallowCopy(config.useStrictShallowCopy);
    }
    createDraft(base) {
        if (!isDraftable(base)) die(8);
        if (isDraft(base)) base = current(base);
        const scope = enterScope(this);
        const proxy = createProxy(base, void 0);
        proxy[DRAFT_STATE].isManual_ = true;
        leaveScope(scope);
        return proxy;
    }
    finishDraft(draft, patchListener) {
        const state = draft && draft[DRAFT_STATE];
        if (!state || !state.isManual_) die(9);
        const { scope_: scope } = state;
        usePatchesInScope(scope, patchListener);
        return processResult(void 0, scope);
    }
    /**
   * Pass true to automatically freeze all copies created by Immer.
   *
   * By default, auto-freezing is enabled.
   */ setAutoFreeze(value) {
        this.autoFreeze_ = value;
    }
    /**
   * Pass true to enable strict shallow copy.
   *
   * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.
   */ setUseStrictShallowCopy(value) {
        this.useStrictShallowCopy_ = value;
    }
    applyPatches(base, patches) {
        let i;
        for(i = patches.length - 1; i >= 0; i--){
            const patch = patches[i];
            if (patch.path.length === 0 && patch.op === "replace") {
                base = patch.value;
                break;
            }
        }
        if (i > -1) patches = patches.slice(i + 1);
        const applyPatchesImpl = getPlugin("Patches").applyPatches_;
        if (isDraft(base)) return applyPatchesImpl(base, patches);
        return this.produce(base, (draft)=>applyPatchesImpl(draft, patches));
    }
};
function createProxy(value, parent) {
    const draft = isMap(value) ? getPlugin("MapSet").proxyMap_(value, parent) : isSet(value) ? getPlugin("MapSet").proxySet_(value, parent) : createProxyProxy(value, parent);
    const scope = parent ? parent.scope_ : getCurrentScope();
    scope.drafts_.push(draft);
    return draft;
}
// src/core/current.ts
function current(value) {
    if (!isDraft(value)) die(10, value);
    return currentImpl(value);
}
function currentImpl(value) {
    if (!isDraftable(value) || isFrozen(value)) return value;
    const state = value[DRAFT_STATE];
    let copy;
    if (state) {
        if (!state.modified_) return state.base_;
        state.finalized_ = true;
        copy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_);
    } else copy = shallowCopy(value, true);
    each(copy, (key, childValue)=>{
        set(copy, key, currentImpl(childValue));
    });
    if (state) state.finalized_ = false;
    return copy;
}
// src/plugins/patches.ts
function enablePatches() {
    const errorOffset = 16;
    errors.push('Sets cannot have "replace" patches.', function(op) {
        return "Unsupported patch operation: " + op;
    }, function(path) {
        return "Cannot apply patch, path doesn't resolve: " + path;
    }, "Patching reserved attributes like __proto__, prototype and constructor is not allowed");
    const REPLACE = "replace";
    const ADD = "add";
    const REMOVE = "remove";
    function generatePatches_(state, basePath, patches, inversePatches) {
        switch(state.type_){
            case 0 /* Object */ :
            case 2 /* Map */ :
                return generatePatchesFromAssigned(state, basePath, patches, inversePatches);
            case 1 /* Array */ :
                return generateArrayPatches(state, basePath, patches, inversePatches);
            case 3 /* Set */ :
                return generateSetPatches(state, basePath, patches, inversePatches);
        }
    }
    function generateArrayPatches(state, basePath, patches, inversePatches) {
        let { base_, assigned_ } = state;
        let copy_ = state.copy_;
        if (copy_.length < base_.length) {
            [base_, copy_] = [
                copy_,
                base_
            ];
            [patches, inversePatches] = [
                inversePatches,
                patches
            ];
        }
        for(let i = 0; i < base_.length; i++)if (assigned_[i] && copy_[i] !== base_[i]) {
            const path = basePath.concat([
                i
            ]);
            patches.push({
                op: REPLACE,
                path,
                // Need to maybe clone it, as it can in fact be the original value
                // due to the base/copy inversion at the start of this function
                value: clonePatchValueIfNeeded(copy_[i])
            });
            inversePatches.push({
                op: REPLACE,
                path,
                value: clonePatchValueIfNeeded(base_[i])
            });
        }
        for(let i = base_.length; i < copy_.length; i++){
            const path = basePath.concat([
                i
            ]);
            patches.push({
                op: ADD,
                path,
                // Need to maybe clone it, as it can in fact be the original value
                // due to the base/copy inversion at the start of this function
                value: clonePatchValueIfNeeded(copy_[i])
            });
        }
        for(let i = copy_.length - 1; base_.length <= i; --i){
            const path = basePath.concat([
                i
            ]);
            inversePatches.push({
                op: REMOVE,
                path
            });
        }
    }
    function generatePatchesFromAssigned(state, basePath, patches, inversePatches) {
        const { base_, copy_ } = state;
        each(state.assigned_, (key, assignedValue)=>{
            const origValue = get(base_, key);
            const value = get(copy_, key);
            const op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD;
            if (origValue === value && op === REPLACE) return;
            const path = basePath.concat(key);
            patches.push(op === REMOVE ? {
                op,
                path
            } : {
                op,
                path,
                value
            });
            inversePatches.push(op === ADD ? {
                op: REMOVE,
                path
            } : op === REMOVE ? {
                op: ADD,
                path,
                value: clonePatchValueIfNeeded(origValue)
            } : {
                op: REPLACE,
                path,
                value: clonePatchValueIfNeeded(origValue)
            });
        });
    }
    function generateSetPatches(state, basePath, patches, inversePatches) {
        let { base_, copy_ } = state;
        let i = 0;
        base_.forEach((value)=>{
            if (!copy_.has(value)) {
                const path = basePath.concat([
                    i
                ]);
                patches.push({
                    op: REMOVE,
                    path,
                    value
                });
                inversePatches.unshift({
                    op: ADD,
                    path,
                    value
                });
            }
            i++;
        });
        i = 0;
        copy_.forEach((value)=>{
            if (!base_.has(value)) {
                const path = basePath.concat([
                    i
                ]);
                patches.push({
                    op: ADD,
                    path,
                    value
                });
                inversePatches.unshift({
                    op: REMOVE,
                    path,
                    value
                });
            }
            i++;
        });
    }
    function generateReplacementPatches_(baseValue, replacement, patches, inversePatches) {
        patches.push({
            op: REPLACE,
            path: [],
            value: replacement === NOTHING ? void 0 : replacement
        });
        inversePatches.push({
            op: REPLACE,
            path: [],
            value: baseValue
        });
    }
    function applyPatches_(draft, patches) {
        patches.forEach((patch)=>{
            const { path, op } = patch;
            let base = draft;
            for(let i = 0; i < path.length - 1; i++){
                const parentType = getArchtype(base);
                let p = path[i];
                if (typeof p !== "string" && typeof p !== "number") p = "" + p;
                if ((parentType === 0 /* Object */  || parentType === 1 /* Array */ ) && (p === "__proto__" || p === "constructor")) die(errorOffset + 3);
                if (typeof base === "function" && p === "prototype") die(errorOffset + 3);
                base = get(base, p);
                if (typeof base !== "object") die(errorOffset + 2, path.join("/"));
            }
            const type = getArchtype(base);
            const value = deepClonePatchValue(patch.value);
            const key = path[path.length - 1];
            switch(op){
                case REPLACE:
                    switch(type){
                        case 2 /* Map */ :
                            return base.set(key, value);
                        case 3 /* Set */ :
                            die(errorOffset);
                        default:
                            return base[key] = value;
                    }
                case ADD:
                    switch(type){
                        case 1 /* Array */ :
                            return key === "-" ? base.push(value) : base.splice(key, 0, value);
                        case 2 /* Map */ :
                            return base.set(key, value);
                        case 3 /* Set */ :
                            return base.add(value);
                        default:
                            return base[key] = value;
                    }
                case REMOVE:
                    switch(type){
                        case 1 /* Array */ :
                            return base.splice(key, 1);
                        case 2 /* Map */ :
                            return base.delete(key);
                        case 3 /* Set */ :
                            return base.delete(patch.value);
                        default:
                            return delete base[key];
                    }
                default:
                    die(errorOffset + 1, op);
            }
        });
        return draft;
    }
    function deepClonePatchValue(obj) {
        if (!isDraftable(obj)) return obj;
        if (Array.isArray(obj)) return obj.map(deepClonePatchValue);
        if (isMap(obj)) return new Map(Array.from(obj.entries()).map(([k, v])=>[
                k,
                deepClonePatchValue(v)
            ]));
        if (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue));
        const cloned = Object.create(getPrototypeOf(obj));
        for(const key in obj)cloned[key] = deepClonePatchValue(obj[key]);
        if (has(obj, DRAFTABLE)) cloned[DRAFTABLE] = obj[DRAFTABLE];
        return cloned;
    }
    function clonePatchValueIfNeeded(obj) {
        if (isDraft(obj)) return deepClonePatchValue(obj);
        else return obj;
    }
    loadPlugin("Patches", {
        applyPatches_,
        generatePatches_,
        generateReplacementPatches_
    });
}
// src/plugins/mapset.ts
function enableMapSet() {
    class DraftMap extends Map {
        constructor(target, parent){
            super();
            this[DRAFT_STATE] = {
                type_: 2 /* Map */ ,
                parent_: parent,
                scope_: parent ? parent.scope_ : getCurrentScope(),
                modified_: false,
                finalized_: false,
                copy_: void 0,
                assigned_: void 0,
                base_: target,
                draft_: this,
                isManual_: false,
                revoked_: false
            };
        }
        get size() {
            return latest(this[DRAFT_STATE]).size;
        }
        has(key) {
            return latest(this[DRAFT_STATE]).has(key);
        }
        set(key, value) {
            const state = this[DRAFT_STATE];
            assertUnrevoked(state);
            if (!latest(state).has(key) || latest(state).get(key) !== value) {
                prepareMapCopy(state);
                markChanged(state);
                state.assigned_.set(key, true);
                state.copy_.set(key, value);
                state.assigned_.set(key, true);
            }
            return this;
        }
        delete(key) {
            if (!this.has(key)) return false;
            const state = this[DRAFT_STATE];
            assertUnrevoked(state);
            prepareMapCopy(state);
            markChanged(state);
            if (state.base_.has(key)) state.assigned_.set(key, false);
            else state.assigned_.delete(key);
            state.copy_.delete(key);
            return true;
        }
        clear() {
            const state = this[DRAFT_STATE];
            assertUnrevoked(state);
            if (latest(state).size) {
                prepareMapCopy(state);
                markChanged(state);
                state.assigned_ = /* @__PURE__ */ new Map();
                each(state.base_, (key)=>{
                    state.assigned_.set(key, false);
                });
                state.copy_.clear();
            }
        }
        forEach(cb, thisArg) {
            const state = this[DRAFT_STATE];
            latest(state).forEach((_value, key, _map)=>{
                cb.call(thisArg, this.get(key), key, this);
            });
        }
        get(key) {
            const state = this[DRAFT_STATE];
            assertUnrevoked(state);
            const value = latest(state).get(key);
            if (state.finalized_ || !isDraftable(value)) return value;
            if (value !== state.base_.get(key)) return value;
            const draft = createProxy(value, state);
            prepareMapCopy(state);
            state.copy_.set(key, draft);
            return draft;
        }
        keys() {
            return latest(this[DRAFT_STATE]).keys();
        }
        values() {
            const iterator = this.keys();
            return {
                [Symbol.iterator]: ()=>this.values(),
                next: ()=>{
                    const r = iterator.next();
                    if (r.done) return r;
                    const value = this.get(r.value);
                    return {
                        done: false,
                        value
                    };
                }
            };
        }
        entries() {
            const iterator = this.keys();
            return {
                [Symbol.iterator]: ()=>this.entries(),
                next: ()=>{
                    const r = iterator.next();
                    if (r.done) return r;
                    const value = this.get(r.value);
                    return {
                        done: false,
                        value: [
                            r.value,
                            value
                        ]
                    };
                }
            };
        }
        [(DRAFT_STATE, Symbol.iterator)]() {
            return this.entries();
        }
    }
    function proxyMap_(target, parent) {
        return new DraftMap(target, parent);
    }
    function prepareMapCopy(state) {
        if (!state.copy_) {
            state.assigned_ = /* @__PURE__ */ new Map();
            state.copy_ = new Map(state.base_);
        }
    }
    class DraftSet extends Set {
        constructor(target, parent){
            super();
            this[DRAFT_STATE] = {
                type_: 3 /* Set */ ,
                parent_: parent,
                scope_: parent ? parent.scope_ : getCurrentScope(),
                modified_: false,
                finalized_: false,
                copy_: void 0,
                base_: target,
                draft_: this,
                drafts_: /* @__PURE__ */ new Map(),
                revoked_: false,
                isManual_: false
            };
        }
        get size() {
            return latest(this[DRAFT_STATE]).size;
        }
        has(value) {
            const state = this[DRAFT_STATE];
            assertUnrevoked(state);
            if (!state.copy_) return state.base_.has(value);
            if (state.copy_.has(value)) return true;
            if (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value))) return true;
            return false;
        }
        add(value) {
            const state = this[DRAFT_STATE];
            assertUnrevoked(state);
            if (!this.has(value)) {
                prepareSetCopy(state);
                markChanged(state);
                state.copy_.add(value);
            }
            return this;
        }
        delete(value) {
            if (!this.has(value)) return false;
            const state = this[DRAFT_STATE];
            assertUnrevoked(state);
            prepareSetCopy(state);
            markChanged(state);
            return state.copy_.delete(value) || (state.drafts_.has(value) ? state.copy_.delete(state.drafts_.get(value)) : /* istanbul ignore next */ false);
        }
        clear() {
            const state = this[DRAFT_STATE];
            assertUnrevoked(state);
            if (latest(state).size) {
                prepareSetCopy(state);
                markChanged(state);
                state.copy_.clear();
            }
        }
        values() {
            const state = this[DRAFT_STATE];
            assertUnrevoked(state);
            prepareSetCopy(state);
            return state.copy_.values();
        }
        entries() {
            const state = this[DRAFT_STATE];
            assertUnrevoked(state);
            prepareSetCopy(state);
            return state.copy_.entries();
        }
        keys() {
            return this.values();
        }
        [(DRAFT_STATE, Symbol.iterator)]() {
            return this.values();
        }
        forEach(cb, thisArg) {
            const iterator = this.values();
            let result = iterator.next();
            while(!result.done){
                cb.call(thisArg, result.value, result.value, this);
                result = iterator.next();
            }
        }
    }
    function proxySet_(target, parent) {
        return new DraftSet(target, parent);
    }
    function prepareSetCopy(state) {
        if (!state.copy_) {
            state.copy_ = /* @__PURE__ */ new Set();
            state.base_.forEach((value)=>{
                if (isDraftable(value)) {
                    const draft = createProxy(value, state);
                    state.drafts_.set(value, draft);
                    state.copy_.add(draft);
                } else state.copy_.add(value);
            });
        }
    }
    function assertUnrevoked(state) {
        if (state.revoked_) die(3, JSON.stringify(latest(state)));
    }
    loadPlugin("MapSet", {
        proxyMap_,
        proxySet_
    });
}
// src/immer.ts
var immer = new Immer2();
var produce = immer.produce;
var produceWithPatches = immer.produceWithPatches.bind(immer);
var setAutoFreeze = immer.setAutoFreeze.bind(immer);
var setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer);
var applyPatches = immer.applyPatches.bind(immer);
var createDraft = immer.createDraft.bind(immer);
var finishDraft = immer.finishDraft.bind(immer);
function castDraft(value) {
    return value;
}
function castImmutable(value) {
    return value;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"48i3i":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createSelector", ()=>createSelector);
parcelHelpers.export(exports, "createSelectorCreator", ()=>createSelectorCreator);
parcelHelpers.export(exports, "createStructuredSelector", ()=>createStructuredSelector);
parcelHelpers.export(exports, "lruMemoize", ()=>lruMemoize);
parcelHelpers.export(exports, "referenceEqualityCheck", ()=>referenceEqualityCheck);
parcelHelpers.export(exports, "setGlobalDevModeChecks", ()=>setGlobalDevModeChecks);
parcelHelpers.export(exports, "unstable_autotrackMemoize", ()=>autotrackMemoize);
parcelHelpers.export(exports, "weakMapMemoize", ()=>weakMapMemoize);
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {
        enumerable: true,
        configurable: true,
        writable: true,
        value
    }) : obj[key] = value;
var __spreadValues = (a, b)=>{
    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols) {
        for (var prop of __getOwnPropSymbols(b))if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    }
    return a;
};
var __publicField = (obj, key, value)=>{
    __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
    return value;
};
// src/devModeChecks/identityFunctionCheck.ts
var runIdentityFunctionCheck = (resultFunc, inputSelectorsResults, outputSelectorResult)=>{
    if (inputSelectorsResults.length === 1 && inputSelectorsResults[0] === outputSelectorResult) {
        let isInputSameAsOutput = false;
        try {
            const emptyObject = {};
            if (resultFunc(emptyObject) === emptyObject) isInputSameAsOutput = true;
        } catch (e) {}
        if (isInputSameAsOutput) {
            let stack = void 0;
            try {
                throw new Error();
            } catch (e) {
                ({ stack } = e);
            }
            console.warn("The result function returned its own inputs without modification. e.g\n`createSelector([state => state.todos], todos => todos)`\nThis could lead to inefficient memoization and unnecessary re-renders.\nEnsure transformation logic is in the result function, and extraction logic is in the input selectors.", {
                stack
            });
        }
    }
};
// src/devModeChecks/inputStabilityCheck.ts
var runInputStabilityCheck = (inputSelectorResultsObject, options, inputSelectorArgs)=>{
    const { memoize, memoizeOptions } = options;
    const { inputSelectorResults, inputSelectorResultsCopy } = inputSelectorResultsObject;
    const createAnEmptyObject = memoize(()=>({}), ...memoizeOptions);
    const areInputSelectorResultsEqual = createAnEmptyObject.apply(null, inputSelectorResults) === createAnEmptyObject.apply(null, inputSelectorResultsCopy);
    if (!areInputSelectorResultsEqual) {
        let stack = void 0;
        try {
            throw new Error();
        } catch (e) {
            ({ stack } = e);
        }
        console.warn("An input selector returned a different result when passed same arguments.\nThis means your output selector will likely run more frequently than intended.\nAvoid returning a new reference inside your input selector, e.g.\n`createSelector([state => state.todos.map(todo => todo.id)], todoIds => todoIds.length)`", {
            arguments: inputSelectorArgs,
            firstInputs: inputSelectorResults,
            secondInputs: inputSelectorResultsCopy,
            stack
        });
    }
};
// src/devModeChecks/setGlobalDevModeChecks.ts
var globalDevModeChecks = {
    inputStabilityCheck: "once",
    identityFunctionCheck: "once"
};
var setGlobalDevModeChecks = (devModeChecks)=>{
    Object.assign(globalDevModeChecks, devModeChecks);
};
// src/utils.ts
var NOT_FOUND = /* @__PURE__ */ Symbol("NOT_FOUND");
function assertIsFunction(func, errorMessage = `expected a function, instead received ${typeof func}`) {
    if (typeof func !== "function") throw new TypeError(errorMessage);
}
function assertIsObject(object, errorMessage = `expected an object, instead received ${typeof object}`) {
    if (typeof object !== "object") throw new TypeError(errorMessage);
}
function assertIsArrayOfFunctions(array, errorMessage = `expected all items to be functions, instead received the following types: `) {
    if (!array.every((item)=>typeof item === "function")) {
        const itemTypes = array.map((item)=>typeof item === "function" ? `function ${item.name || "unnamed"}()` : typeof item).join(", ");
        throw new TypeError(`${errorMessage}[${itemTypes}]`);
    }
}
var ensureIsArray = (item)=>{
    return Array.isArray(item) ? item : [
        item
    ];
};
function getDependencies(createSelectorArgs) {
    const dependencies = Array.isArray(createSelectorArgs[0]) ? createSelectorArgs[0] : createSelectorArgs;
    assertIsArrayOfFunctions(dependencies, `createSelector expects all input-selectors to be functions, but received the following types: `);
    return dependencies;
}
function collectInputSelectorResults(dependencies, inputSelectorArgs) {
    const inputSelectorResults = [];
    const { length } = dependencies;
    for(let i = 0; i < length; i++)inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs));
    return inputSelectorResults;
}
var getDevModeChecksExecutionInfo = (firstRun, devModeChecks)=>{
    const { identityFunctionCheck, inputStabilityCheck } = __spreadValues(__spreadValues({}, globalDevModeChecks), devModeChecks);
    return {
        identityFunctionCheck: {
            shouldRun: identityFunctionCheck === "always" || identityFunctionCheck === "once" && firstRun,
            run: runIdentityFunctionCheck
        },
        inputStabilityCheck: {
            shouldRun: inputStabilityCheck === "always" || inputStabilityCheck === "once" && firstRun,
            run: runInputStabilityCheck
        }
    };
};
// src/autotrackMemoize/autotracking.ts
var $REVISION = 0;
var CURRENT_TRACKER = null;
var Cell = class {
    constructor(initialValue, isEqual = tripleEq){
        __publicField(this, "revision", $REVISION);
        __publicField(this, "_value");
        __publicField(this, "_lastValue");
        __publicField(this, "_isEqual", tripleEq);
        this._value = this._lastValue = initialValue;
        this._isEqual = isEqual;
    }
    // Whenever a storage value is read, it'll add itself to the current tracker if
    // one exists, entangling its state with that cache.
    get value() {
        CURRENT_TRACKER == null || CURRENT_TRACKER.add(this);
        return this._value;
    }
    // Whenever a storage value is updated, we bump the global revision clock,
    // assign the revision for this storage to the new value, _and_ we schedule a
    // rerender. This is important, and it's what makes autotracking  _pull_
    // based. We don't actively tell the caches which depend on the storage that
    // anything has happened. Instead, we recompute the caches when needed.
    set value(newValue) {
        if (this.value === newValue) return;
        this._value = newValue;
        this.revision = ++$REVISION;
    }
};
function tripleEq(a, b) {
    return a === b;
}
var TrackingCache = class {
    constructor(fn){
        __publicField(this, "_cachedValue");
        __publicField(this, "_cachedRevision", -1);
        __publicField(this, "_deps", []);
        __publicField(this, "hits", 0);
        __publicField(this, "fn");
        this.fn = fn;
    }
    clear() {
        this._cachedValue = void 0;
        this._cachedRevision = -1;
        this._deps = [];
        this.hits = 0;
    }
    get value() {
        if (this.revision > this._cachedRevision) {
            const { fn } = this;
            const currentTracker = /* @__PURE__ */ new Set();
            const prevTracker = CURRENT_TRACKER;
            CURRENT_TRACKER = currentTracker;
            this._cachedValue = fn();
            CURRENT_TRACKER = prevTracker;
            this.hits++;
            this._deps = Array.from(currentTracker);
            this._cachedRevision = this.revision;
        }
        CURRENT_TRACKER == null || CURRENT_TRACKER.add(this);
        return this._cachedValue;
    }
    get revision() {
        return Math.max(...this._deps.map((d)=>d.revision), 0);
    }
};
function getValue(cell) {
    if (!(cell instanceof Cell)) console.warn("Not a valid cell! ", cell);
    return cell.value;
}
function setValue(storage, value) {
    if (!(storage instanceof Cell)) throw new TypeError("setValue must be passed a tracked store created with `createStorage`.");
    storage.value = storage._lastValue = value;
}
function createCell(initialValue, isEqual = tripleEq) {
    return new Cell(initialValue, isEqual);
}
function createCache(fn) {
    assertIsFunction(fn, "the first parameter to `createCache` must be a function");
    return new TrackingCache(fn);
}
// src/autotrackMemoize/tracking.ts
var neverEq = (a, b)=>false;
function createTag() {
    return createCell(null, neverEq);
}
function dirtyTag(tag, value) {
    setValue(tag, value);
}
var consumeCollection = (node)=>{
    let tag = node.collectionTag;
    if (tag === null) tag = node.collectionTag = createTag();
    getValue(tag);
};
var dirtyCollection = (node)=>{
    const tag = node.collectionTag;
    if (tag !== null) dirtyTag(tag, null);
};
// src/autotrackMemoize/proxy.ts
var REDUX_PROXY_LABEL = Symbol();
var nextId = 0;
var proto = Object.getPrototypeOf({});
var ObjectTreeNode = class {
    constructor(value){
        this.value = value;
        __publicField(this, "proxy", new Proxy(this, objectProxyHandler));
        __publicField(this, "tag", createTag());
        __publicField(this, "tags", {});
        __publicField(this, "children", {});
        __publicField(this, "collectionTag", null);
        __publicField(this, "id", nextId++);
        this.value = value;
        this.tag.value = value;
    }
};
var objectProxyHandler = {
    get (node, key) {
        function calculateResult() {
            const { value } = node;
            const childValue = Reflect.get(value, key);
            if (typeof key === "symbol") return childValue;
            if (key in proto) return childValue;
            if (typeof childValue === "object" && childValue !== null) {
                let childNode = node.children[key];
                if (childNode === void 0) childNode = node.children[key] = createNode(childValue);
                if (childNode.tag) getValue(childNode.tag);
                return childNode.proxy;
            } else {
                let tag = node.tags[key];
                if (tag === void 0) {
                    tag = node.tags[key] = createTag();
                    tag.value = childValue;
                }
                getValue(tag);
                return childValue;
            }
        }
        const res = calculateResult();
        return res;
    },
    ownKeys (node) {
        consumeCollection(node);
        return Reflect.ownKeys(node.value);
    },
    getOwnPropertyDescriptor (node, prop) {
        return Reflect.getOwnPropertyDescriptor(node.value, prop);
    },
    has (node, prop) {
        return Reflect.has(node.value, prop);
    }
};
var ArrayTreeNode = class {
    constructor(value){
        this.value = value;
        __publicField(this, "proxy", new Proxy([
            this
        ], arrayProxyHandler));
        __publicField(this, "tag", createTag());
        __publicField(this, "tags", {});
        __publicField(this, "children", {});
        __publicField(this, "collectionTag", null);
        __publicField(this, "id", nextId++);
        this.value = value;
        this.tag.value = value;
    }
};
var arrayProxyHandler = {
    get ([node], key) {
        if (key === "length") consumeCollection(node);
        return objectProxyHandler.get(node, key);
    },
    ownKeys ([node]) {
        return objectProxyHandler.ownKeys(node);
    },
    getOwnPropertyDescriptor ([node], prop) {
        return objectProxyHandler.getOwnPropertyDescriptor(node, prop);
    },
    has ([node], prop) {
        return objectProxyHandler.has(node, prop);
    }
};
function createNode(value) {
    if (Array.isArray(value)) return new ArrayTreeNode(value);
    return new ObjectTreeNode(value);
}
function updateNode(node, newValue) {
    const { value, tags, children } = node;
    node.value = newValue;
    if (Array.isArray(value) && Array.isArray(newValue) && value.length !== newValue.length) dirtyCollection(node);
    else if (value !== newValue) {
        let oldKeysSize = 0;
        let newKeysSize = 0;
        let anyKeysAdded = false;
        for(const _key in value)oldKeysSize++;
        for(const key in newValue){
            newKeysSize++;
            if (!(key in value)) {
                anyKeysAdded = true;
                break;
            }
        }
        const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize;
        if (isDifferent) dirtyCollection(node);
    }
    for(const key in tags){
        const childValue = value[key];
        const newChildValue = newValue[key];
        if (childValue !== newChildValue) {
            dirtyCollection(node);
            dirtyTag(tags[key], newChildValue);
        }
        if (typeof newChildValue === "object" && newChildValue !== null) delete tags[key];
    }
    for(const key in children){
        const childNode = children[key];
        const newChildValue = newValue[key];
        const childValue = childNode.value;
        if (childValue === newChildValue) continue;
        else if (typeof newChildValue === "object" && newChildValue !== null) updateNode(childNode, newChildValue);
        else {
            deleteNode(childNode);
            delete children[key];
        }
    }
}
function deleteNode(node) {
    if (node.tag) dirtyTag(node.tag, null);
    dirtyCollection(node);
    for(const key in node.tags)dirtyTag(node.tags[key], null);
    for(const key in node.children)deleteNode(node.children[key]);
}
// src/lruMemoize.ts
function createSingletonCache(equals) {
    let entry;
    return {
        get (key) {
            if (entry && equals(entry.key, key)) return entry.value;
            return NOT_FOUND;
        },
        put (key, value) {
            entry = {
                key,
                value
            };
        },
        getEntries () {
            return entry ? [
                entry
            ] : [];
        },
        clear () {
            entry = void 0;
        }
    };
}
function createLruCache(maxSize, equals) {
    let entries = [];
    function get(key) {
        const cacheIndex = entries.findIndex((entry)=>equals(key, entry.key));
        if (cacheIndex > -1) {
            const entry = entries[cacheIndex];
            if (cacheIndex > 0) {
                entries.splice(cacheIndex, 1);
                entries.unshift(entry);
            }
            return entry.value;
        }
        return NOT_FOUND;
    }
    function put(key, value) {
        if (get(key) === NOT_FOUND) {
            entries.unshift({
                key,
                value
            });
            if (entries.length > maxSize) entries.pop();
        }
    }
    function getEntries() {
        return entries;
    }
    function clear() {
        entries = [];
    }
    return {
        get,
        put,
        getEntries,
        clear
    };
}
var referenceEqualityCheck = (a, b)=>a === b;
function createCacheKeyComparator(equalityCheck) {
    return function areArgumentsShallowlyEqual(prev, next) {
        if (prev === null || next === null || prev.length !== next.length) return false;
        const { length } = prev;
        for(let i = 0; i < length; i++){
            if (!equalityCheck(prev[i], next[i])) return false;
        }
        return true;
    };
}
function lruMemoize(func, equalityCheckOrOptions) {
    const providedOptions = typeof equalityCheckOrOptions === "object" ? equalityCheckOrOptions : {
        equalityCheck: equalityCheckOrOptions
    };
    const { equalityCheck = referenceEqualityCheck, maxSize = 1, resultEqualityCheck } = providedOptions;
    const comparator = createCacheKeyComparator(equalityCheck);
    let resultsCount = 0;
    const cache = maxSize <= 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator);
    function memoized() {
        let value = cache.get(arguments);
        if (value === NOT_FOUND) {
            value = func.apply(null, arguments);
            resultsCount++;
            if (resultEqualityCheck) {
                const entries = cache.getEntries();
                const matchingEntry = entries.find((entry)=>resultEqualityCheck(entry.value, value));
                if (matchingEntry) {
                    value = matchingEntry.value;
                    resultsCount !== 0 && resultsCount--;
                }
            }
            cache.put(arguments, value);
        }
        return value;
    }
    memoized.clearCache = ()=>{
        cache.clear();
        memoized.resetResultsCount();
    };
    memoized.resultsCount = ()=>resultsCount;
    memoized.resetResultsCount = ()=>{
        resultsCount = 0;
    };
    return memoized;
}
// src/autotrackMemoize/autotrackMemoize.ts
function autotrackMemoize(func) {
    const node = createNode([]);
    let lastArgs = null;
    const shallowEqual = createCacheKeyComparator(referenceEqualityCheck);
    const cache = createCache(()=>{
        const res = func.apply(null, node.proxy);
        return res;
    });
    function memoized() {
        if (!shallowEqual(lastArgs, arguments)) {
            updateNode(node, arguments);
            lastArgs = arguments;
        }
        return cache.value;
    }
    memoized.clearCache = ()=>{
        return cache.clear();
    };
    return memoized;
}
// src/weakMapMemoize.ts
var StrongRef = class {
    constructor(value){
        this.value = value;
    }
    deref() {
        return this.value;
    }
};
var Ref = typeof WeakRef !== "undefined" ? WeakRef : StrongRef;
var UNTERMINATED = 0;
var TERMINATED = 1;
function createCacheNode() {
    return {
        s: UNTERMINATED,
        v: void 0,
        o: null,
        p: null
    };
}
function weakMapMemoize(func, options = {}) {
    let fnNode = createCacheNode();
    const { resultEqualityCheck } = options;
    let lastResult;
    let resultsCount = 0;
    function memoized() {
        var _a, _b;
        let cacheNode = fnNode;
        const { length } = arguments;
        for(let i = 0, l = length; i < l; i++){
            const arg = arguments[i];
            if (typeof arg === "function" || typeof arg === "object" && arg !== null) {
                let objectCache = cacheNode.o;
                if (objectCache === null) cacheNode.o = objectCache = /* @__PURE__ */ new WeakMap();
                const objectNode = objectCache.get(arg);
                if (objectNode === void 0) {
                    cacheNode = createCacheNode();
                    objectCache.set(arg, cacheNode);
                } else cacheNode = objectNode;
            } else {
                let primitiveCache = cacheNode.p;
                if (primitiveCache === null) cacheNode.p = primitiveCache = /* @__PURE__ */ new Map();
                const primitiveNode = primitiveCache.get(arg);
                if (primitiveNode === void 0) {
                    cacheNode = createCacheNode();
                    primitiveCache.set(arg, cacheNode);
                } else cacheNode = primitiveNode;
            }
        }
        const terminatedNode = cacheNode;
        let result;
        if (cacheNode.s === TERMINATED) result = cacheNode.v;
        else {
            result = func.apply(null, arguments);
            resultsCount++;
            if (resultEqualityCheck) {
                const lastResultValue = (_b = (_a = lastResult == null ? void 0 : lastResult.deref) == null ? void 0 : _a.call(lastResult)) != null ? _b : lastResult;
                if (lastResultValue != null && resultEqualityCheck(lastResultValue, result)) {
                    result = lastResultValue;
                    resultsCount !== 0 && resultsCount--;
                }
                const needsWeakRef = typeof result === "object" && result !== null || typeof result === "function";
                lastResult = needsWeakRef ? new Ref(result) : result;
            }
        }
        terminatedNode.s = TERMINATED;
        terminatedNode.v = result;
        return result;
    }
    memoized.clearCache = ()=>{
        fnNode = createCacheNode();
        memoized.resetResultsCount();
    };
    memoized.resultsCount = ()=>resultsCount;
    memoized.resetResultsCount = ()=>{
        resultsCount = 0;
    };
    return memoized;
}
// src/createSelectorCreator.ts
function createSelectorCreator(memoizeOrOptions, ...memoizeOptionsFromArgs) {
    const createSelectorCreatorOptions = typeof memoizeOrOptions === "function" ? {
        memoize: memoizeOrOptions,
        memoizeOptions: memoizeOptionsFromArgs
    } : memoizeOrOptions;
    const createSelector2 = (...createSelectorArgs)=>{
        let recomputations = 0;
        let dependencyRecomputations = 0;
        let lastResult;
        let directlyPassedOptions = {};
        let resultFunc = createSelectorArgs.pop();
        if (typeof resultFunc === "object") {
            directlyPassedOptions = resultFunc;
            resultFunc = createSelectorArgs.pop();
        }
        assertIsFunction(resultFunc, `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`);
        const combinedOptions = __spreadValues(__spreadValues({}, createSelectorCreatorOptions), directlyPassedOptions);
        const { memoize, memoizeOptions = [], argsMemoize = weakMapMemoize, argsMemoizeOptions = [], devModeChecks = {} } = combinedOptions;
        const finalMemoizeOptions = ensureIsArray(memoizeOptions);
        const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions);
        const dependencies = getDependencies(createSelectorArgs);
        const memoizedResultFunc = memoize(function recomputationWrapper() {
            recomputations++;
            return resultFunc.apply(null, arguments);
        }, ...finalMemoizeOptions);
        let firstRun = true;
        const selector = argsMemoize(function dependenciesChecker() {
            dependencyRecomputations++;
            const inputSelectorResults = collectInputSelectorResults(dependencies, arguments);
            lastResult = memoizedResultFunc.apply(null, inputSelectorResults);
            {
                const { identityFunctionCheck, inputStabilityCheck } = getDevModeChecksExecutionInfo(firstRun, devModeChecks);
                if (identityFunctionCheck.shouldRun) identityFunctionCheck.run(resultFunc, inputSelectorResults, lastResult);
                if (inputStabilityCheck.shouldRun) {
                    const inputSelectorResultsCopy = collectInputSelectorResults(dependencies, arguments);
                    inputStabilityCheck.run({
                        inputSelectorResults,
                        inputSelectorResultsCopy
                    }, {
                        memoize,
                        memoizeOptions: finalMemoizeOptions
                    }, arguments);
                }
                if (firstRun) firstRun = false;
            }
            return lastResult;
        }, ...finalArgsMemoizeOptions);
        return Object.assign(selector, {
            resultFunc,
            memoizedResultFunc,
            dependencies,
            dependencyRecomputations: ()=>dependencyRecomputations,
            resetDependencyRecomputations: ()=>{
                dependencyRecomputations = 0;
            },
            lastResult: ()=>lastResult,
            recomputations: ()=>recomputations,
            resetRecomputations: ()=>{
                recomputations = 0;
            },
            memoize,
            argsMemoize
        });
    };
    Object.assign(createSelector2, {
        withTypes: ()=>createSelector2
    });
    return createSelector2;
}
var createSelector = /* @__PURE__ */ createSelectorCreator(weakMapMemoize);
// src/createStructuredSelector.ts
var createStructuredSelector = Object.assign((inputSelectorsObject, selectorCreator = createSelector)=>{
    assertIsObject(inputSelectorsObject, `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof inputSelectorsObject}`);
    const inputSelectorKeys = Object.keys(inputSelectorsObject);
    const dependencies = inputSelectorKeys.map((key)=>inputSelectorsObject[key]);
    const structuredSelector = selectorCreator(dependencies, (...inputSelectorResults)=>{
        return inputSelectorResults.reduce((composition, value, index)=>{
            composition[inputSelectorKeys[index]] = value;
            return composition;
        }, {});
    });
    return structuredSelector;
}, {
    withTypes: ()=>createStructuredSelector
});

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kK39q":[function(require,module,exports,__globalThis) {
// src/index.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "thunk", ()=>thunk);
parcelHelpers.export(exports, "withExtraArgument", ()=>withExtraArgument);
function createThunkMiddleware(extraArgument) {
    const middleware = ({ dispatch, getState })=>(next)=>(action)=>{
                if (typeof action === "function") return action(dispatch, getState, extraArgument);
                return next(action);
            };
    return middleware;
}
var thunk = createThunkMiddleware();
var withExtraArgument = createThunkMiddleware;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4eCZY":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$1d97 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$1d97.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$1d97.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactRedux = require("react-redux");
// import { login } from "../store/authSlice";
var _reactRouter = require("react-router");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _s = $RefreshSig$();
const Signup = ()=>{
    _s();
    const [email, setEmail] = (0, _react.useState)("");
    const [password, setPassword] = (0, _react.useState)("");
    const [name, setName] = (0, _react.useState)("");
    const [contactNo, setContactNo] = (0, _react.useState)("");
    const [error, setError] = (0, _react.useState)("");
    const dispatch = (0, _reactRedux.useDispatch)();
    const navigate = (0, _reactRouter.useNavigate)();
    const handleSignup = async (e)=>{
        e.preventDefault();
        setError('');
        try {
            const response = await (0, _axiosDefault.default).post('http://localhost:5000/user/register', {
                name,
                email,
                password,
                contactNo
            }, {
                withCredentials: true
            });
            if (response.status != 200) {
                const errorData = await response.json();
                setError(errorData.message || 'Login Failed');
                return;
            }
            const data = await response.data;
            setCookie('accessToken', data.accessToken, {
                path: '/',
                secure: true,
                sameSite: 'strict',
                maxAge: 259200 // expires in 1 hour
            });
            localStorage.setItem('user', data.user.name);
            localStorage.setItem('token', data.accessToken);
            dispatch(setUser({
                name: data.user.name,
                email: data.user.email
            }));
            navigate("/");
        } catch (error) {
            console.log(error);
            setError(error.message);
        }
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "flex flex-col justify-center px-6 py-12 lg:px-8",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "sm:mx-auto sm:w-full sm:max-w-sm",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                        className: "mx-auto h-10 w-auto",
                        src: "https://tailwindcss.com/plus-assets/img/logos/mark.svg?color=indigo&shade=600",
                        alt: "Your Company"
                    }, void 0, false, {
                        fileName: "src/components/Authentication/Signup.js",
                        lineNumber: 57,
                        columnNumber: 7
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h2", {
                        className: "mt-10 text-center text-2xl/9 font-bold tracking-tight text-gray-900",
                        children: "Sign in to your account"
                    }, void 0, false, {
                        fileName: "src/components/Authentication/Signup.js",
                        lineNumber: 58,
                        columnNumber: 7
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/components/Authentication/Signup.js",
                lineNumber: 56,
                columnNumber: 5
            }, undefined),
            error && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                className: "text-red-500 mb-4 text-center",
                children: error
            }, void 0, false, {
                fileName: "src/components/Authentication/Signup.js",
                lineNumber: 60,
                columnNumber: 15
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "mt-10 sm:mx-auto sm:w-full sm:max-w-sm",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("form", {
                        className: "space-y-6",
                        action: "#",
                        method: "POST",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                        htmlFor: "name",
                                        className: "block text-sm/6 font-medium text-gray-900",
                                        children: "Name"
                                    }, void 0, false, {
                                        fileName: "src/components/Authentication/Signup.js",
                                        lineNumber: 64,
                                        columnNumber: 11
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "mt-2",
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            name: "name",
                                            id: "name",
                                            autoComplete: "name",
                                            placeholder: "Name",
                                            value: name,
                                            onChange: (e)=>setName(e.target.value),
                                            required: true,
                                            className: "block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6"
                                        }, void 0, false, {
                                            fileName: "src/components/Authentication/Signup.js",
                                            lineNumber: 66,
                                            columnNumber: 13
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/components/Authentication/Signup.js",
                                        lineNumber: 65,
                                        columnNumber: 11
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/Authentication/Signup.js",
                                lineNumber: 63,
                                columnNumber: 7
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                        htmlFor: "email",
                                        className: "block text-sm/6 font-medium text-gray-900",
                                        children: "Email address"
                                    }, void 0, false, {
                                        fileName: "src/components/Authentication/Signup.js",
                                        lineNumber: 78,
                                        columnNumber: 11
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "mt-2",
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "email",
                                            name: "email",
                                            id: "email",
                                            autoComplete: "email",
                                            placeholder: "Email",
                                            value: email,
                                            onChange: (e)=>setEmail(e.target.value),
                                            required: true,
                                            className: "block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6"
                                        }, void 0, false, {
                                            fileName: "src/components/Authentication/Signup.js",
                                            lineNumber: 80,
                                            columnNumber: 13
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/components/Authentication/Signup.js",
                                        lineNumber: 79,
                                        columnNumber: 11
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/Authentication/Signup.js",
                                lineNumber: 77,
                                columnNumber: 9
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "flex items-center justify-between",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                                htmlFor: "password",
                                                className: "block text-sm/6 font-medium text-gray-900",
                                                children: "Password"
                                            }, void 0, false, {
                                                fileName: "src/components/Authentication/Signup.js",
                                                lineNumber: 94,
                                                columnNumber: 13
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "text-sm",
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("a", {
                                                    href: "#",
                                                    className: "font-semibold text-indigo-600 hover:text-indigo-500",
                                                    children: "Forgot password?"
                                                }, void 0, false, {
                                                    fileName: "src/components/Authentication/Signup.js",
                                                    lineNumber: 96,
                                                    columnNumber: 15
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/components/Authentication/Signup.js",
                                                lineNumber: 95,
                                                columnNumber: 13
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/components/Authentication/Signup.js",
                                        lineNumber: 93,
                                        columnNumber: 11
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "mt-2",
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "password",
                                            name: "Password",
                                            id: "password",
                                            placeholder: "Password",
                                            value: password,
                                            onChange: (e)=>setPassword(e.target.value),
                                            autoComplete: "current-password",
                                            required: true,
                                            className: "block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6"
                                        }, void 0, false, {
                                            fileName: "src/components/Authentication/Signup.js",
                                            lineNumber: 100,
                                            columnNumber: 13
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/components/Authentication/Signup.js",
                                        lineNumber: 99,
                                        columnNumber: 11
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/Authentication/Signup.js",
                                lineNumber: 92,
                                columnNumber: 9
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "flex items-center justify-between",
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            htmlFor: "contact",
                                            className: "block text-sm/6 font-medium text-gray-900",
                                            children: "Contact"
                                        }, void 0, false, {
                                            fileName: "src/components/Authentication/Signup.js",
                                            lineNumber: 113,
                                            columnNumber: 13
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/components/Authentication/Signup.js",
                                        lineNumber: 112,
                                        columnNumber: 11
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "mt-2",
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "tel",
                                            name: "contact",
                                            id: "contact",
                                            placeholder: "Contact No",
                                            value: contactNo,
                                            onChange: (e)=>setContactNo(e.target.value),
                                            autoComplete: "contact",
                                            required: true,
                                            className: "block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6"
                                        }, void 0, false, {
                                            fileName: "src/components/Authentication/Signup.js",
                                            lineNumber: 116,
                                            columnNumber: 13
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/components/Authentication/Signup.js",
                                        lineNumber: 115,
                                        columnNumber: 11
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/Authentication/Signup.js",
                                lineNumber: 111,
                                columnNumber: 9
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    type: "submit",
                                    onClick: handleSignup,
                                    className: "flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-xs hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600",
                                    children: "Sign in"
                                }, void 0, false, {
                                    fileName: "src/components/Authentication/Signup.js",
                                    lineNumber: 127,
                                    columnNumber: 11
                                }, undefined)
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Signup.js",
                                lineNumber: 126,
                                columnNumber: 9
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Authentication/Signup.js",
                        lineNumber: 62,
                        columnNumber: 7
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                        className: "mt-10 text-center text-sm/6 text-gray-500",
                        children: [
                            "Don't have an account?",
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("a", {
                                href: "#",
                                className: "font-semibold text-indigo-600 hover:text-indigo-500",
                                children: "Signup"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Signup.js",
                                lineNumber: 136,
                                columnNumber: 9
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Authentication/Signup.js",
                        lineNumber: 134,
                        columnNumber: 7
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/components/Authentication/Signup.js",
                lineNumber: 61,
                columnNumber: 5
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/components/Authentication/Signup.js",
        lineNumber: 55,
        columnNumber: 5
    }, undefined);
};
_s(Signup, "keGcX5zvl4uxIUXCJXPGsABv2iU=", false, function() {
    return [
        (0, _reactRedux.useDispatch),
        (0, _reactRouter.useNavigate)
    ];
});
_c = Signup;
exports.default = Signup;
var _c;
$RefreshReg$(_c, "Signup");

  $parcel$ReactRefreshHelpers$1d97.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-redux":"hbNxT","react-router":"2jawN","axios":"kooH4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"kju1t":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$5a66 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$5a66.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$5a66.prelude(module);

try {
// import React from 'react'
// import { Outlet, useNavigate } from 'react-router'
// import Navbar from '../Navbar/Navbar'
// import { useEffect, useState } from 'react'
// import { useCookies } from 'react-cookie';
// import axios from 'axios';
// const Dashboard = () => {
//   const navigate=useNavigate();
//   const [cookies, setCookie, removeCookie] = useCookies(['accessToken']);
//   const [isLoading, setLoading]=useState(true);
//   const [name,setName]=useState("");
//   useEffect(()=>{
//     const verifyCookie=async()=>{
//       console.log(cookies.accessToken)
//       if(!cookies || !cookies.accessToken){
//         return navigate("/login")
//       }
//       try {
//         // Use the verification endpoint
//         const response = await axios.post('http://localhost:5000/user/verify', {}, {
//           headers: {
//             'Authorization': `Bearer ${cookies.accessToken}`
//           },
//           // Also send cookies with the request
//           withCredentials: true
//         });
//         console.log(response.data)
//         const { status, user } = response.data;
//         if (user && user.name) {
//           setName(user.name);
//         }
//         if (status !== 200) {
//           removeCookie("accessToken");
//           navigate("/login");
//         }
//       } catch (error) {
//         console.error("Cookie verification error:", error);
//         removeCookie("accessToken");
//         navigate("/login");
//       }
//     }
//     verifyCookie();
//   },[cookies.accessToken,navigate,removeCookie]);
//   if(isLoading){
//     return <div className="flex justify-center items-center h-screen"><h1 className="text-2xl font-bold">Loading...</h1></div>
//   }
//   return (
//     <div>
//     <Navbar/>
//     <Outlet  name={name}/>
//     </div>
//   )
// }
// export default Dashboard
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouter = require("react-router");
var _navbar = require("../Navbar/Navbar");
var _navbarDefault = parcelHelpers.interopDefault(_navbar);
var _reactCookie = require("react-cookie");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _car = require("../Car/Car");
var _carDefault = parcelHelpers.interopDefault(_car);
var _reactRedux = require("react-redux");
var _authSlice = require("../../store/authSlice");
var _s = $RefreshSig$();
const Dashboard = ()=>{
    _s();
    const navigate = (0, _reactRouter.useNavigate)();
    const [cookies, , removeCookie] = (0, _reactCookie.useCookies)([
        'accessToken'
    ]);
    const [name, setName] = (0, _react.useState)("");
    const dispatch = (0, _reactRedux.useDispatch)();
    const [loading, setLoading] = (0, _react.useState)(true); // <- add loading state
    (0, _react.useEffect)(()=>{
        const verifyCookie = async ()=>{
            if (!cookies.accessToken) {
                navigate("/login");
                return;
            }
            try {
                const response = await (0, _axiosDefault.default).post('http://localhost:5000/user/verify', {}, {
                    headers: {
                        'Authorization': `Bearer ${cookies.accessToken}`
                    },
                    withCredentials: true
                });
                const { user } = response.data;
                if (!user) {
                    removeCookie("accessToken");
                    navigate("/login");
                } else {
                    setName(user.name);
                    localStorage.setItem('user', JSON.stringify(user));
                    dispatch((0, _authSlice.setUser)({
                        name: user.name,
                        email: user.email
                    }));
                }
            } catch (err) {
                console.error("Cookie verification failed:", err);
                removeCookie("accessToken");
                navigate("/login");
            } finally{
                setLoading(false); // <- allow render after verification
            }
        };
        verifyCookie();
    }, [
        cookies,
        navigate,
        removeCookie
    ]);
    if (loading) return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        children: "Loading..."
    }, void 0, false, {
        fileName: "src/components/Home/Dashboard.js",
        lineNumber: 119,
        columnNumber: 12
    }, undefined); // or a spinner
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _carDefault.default), {}, void 0, false, {
            fileName: "src/components/Home/Dashboard.js",
            lineNumber: 124,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/Home/Dashboard.js",
        lineNumber: 123,
        columnNumber: 5
    }, undefined);
};
_s(Dashboard, "n3K1DKcOOr/zdWqEdZAMXX40bRM=", false, function() {
    return [
        (0, _reactRouter.useNavigate),
        (0, _reactCookie.useCookies),
        (0, _reactRedux.useDispatch)
    ];
});
_c = Dashboard;
exports.default = Dashboard;
var _c;
$RefreshReg$(_c, "Dashboard");

  $parcel$ReactRefreshHelpers$5a66.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-router":"2jawN","../Navbar/Navbar":"8vx9L","react-cookie":"59JzK","axios":"kooH4","../Car/Car":"aiApD","react-redux":"hbNxT","../../store/authSlice":"9kBex","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"8vx9L":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$f569 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$f569.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$f569.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouter = require("react-router");
var _reactCookie = require("react-cookie");
var _reactRedux = require("react-redux");
var _authSlice = require("../../store/authSlice");
var _s = $RefreshSig$();
const Navbar = ()=>{
    _s();
    const dispatch = (0, _reactRedux.useDispatch)();
    const name = (0, _reactRedux.useSelector)((state)=>state.auth.name);
    const isAuthenticated = (0, _reactRedux.useSelector)((state)=>state.auth.isAuthenticated);
    console.log((0, _reactRedux.useSelector)((state)=>state.auth));
    const navigate = (0, _reactRouter.useNavigate)();
    const [cookies, , removeCookie] = (0, _reactCookie.useCookies)([
        'accessToken'
    ]);
    const handleSignOut = ()=>{
        removeCookie('accessToken');
        localStorage.removeItem('user'); // Clear user data from local storage
        dispatch((0, _authSlice.clearUser)()); // Clear user data from Redux store
        navigate("/login") // Redirect to login page after sign-out
        ;
    };
    const [isDropdownOpen, setIsDropdownOpen] = (0, _react.useState)(false);
    const toggleDropdown = ()=>{
        setIsDropdownOpen(!isDropdownOpen);
    };
    const closeDropdown = ()=>{
        setIsDropdownOpen(false);
    };
    if (!name) return null;
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("nav", {
            className: "bg-white border-gray-200 shadow-md ",
            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                        to: "/",
                        className: "text-black flex items-center space-x-3 rtl:space-x-reverse",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                src: "https://flowbite.com/docs/images/logo.svg",
                                className: "h-8",
                                alt: "Flowbite Logo"
                            }, void 0, false, {
                                fileName: "src/components/Navbar/Navbar.js",
                                lineNumber: 54,
                                columnNumber: 9
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                className: "text-black self-center text-2xl font-semibold whitespace-nowrap",
                                children: "Many Miles"
                            }, void 0, false, {
                                fileName: "src/components/Navbar/Navbar.js",
                                lineNumber: 55,
                                columnNumber: 9
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Navbar/Navbar.js",
                        lineNumber: 53,
                        columnNumber: 5
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                        "data-collapse-toggle": "navbar-default",
                        type: "button",
                        className: "inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600",
                        "aria-controls": "navbar-default",
                        "aria-expanded": "false",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                className: "sr-only",
                                children: "Open main menu"
                            }, void 0, false, {
                                fileName: "src/components/Navbar/Navbar.js",
                                lineNumber: 58,
                                columnNumber: 9
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
                                className: "w-5 h-5",
                                "aria-hidden": "true",
                                xmlns: "http://www.w3.org/2000/svg",
                                fill: "none",
                                viewBox: "0 0 17 14",
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                                    stroke: "currentColor",
                                    strokeLinecap: "round",
                                    strokeLinejoin: "round",
                                    strokeWidth: "2",
                                    d: "M1 1h15M1 7h15M1 13h15"
                                }, void 0, false, {
                                    fileName: "src/components/Navbar/Navbar.js",
                                    lineNumber: 60,
                                    columnNumber: 13
                                }, undefined)
                            }, void 0, false, {
                                fileName: "src/components/Navbar/Navbar.js",
                                lineNumber: 59,
                                columnNumber: 9
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Navbar/Navbar.js",
                        lineNumber: 57,
                        columnNumber: 5
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "hidden w-full md:block md:w-auto",
                        id: "navbar-default",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("ul", {
                            className: "font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-white text-gray-800 md:text-gray-900 dark:border-gray-700",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                                        to: "/",
                                        className: "block py-2 px-3 text-white bg-blue-700 rounded-sm md:bg-transparent md:text-blue-700 md:p-0 dark:text-white md:dark:text-blue-500",
                                        "aria-current": "page",
                                        children: "Home"
                                    }, void 0, false, {
                                        fileName: "src/components/Navbar/Navbar.js",
                                        lineNumber: 66,
                                        columnNumber: 11
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/components/Navbar/Navbar.js",
                                    lineNumber: 65,
                                    columnNumber: 9
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                                        to: "/about",
                                        className: "block py-2 px-3 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0  md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent",
                                        children: "About"
                                    }, void 0, false, {
                                        fileName: "src/components/Navbar/Navbar.js",
                                        lineNumber: 69,
                                        columnNumber: 11
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/components/Navbar/Navbar.js",
                                    lineNumber: 68,
                                    columnNumber: 9
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                                        to: "/contact",
                                        className: "block py-2 px-3 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0  md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent",
                                        children: "Contact"
                                    }, void 0, false, {
                                        fileName: "src/components/Navbar/Navbar.js",
                                        lineNumber: 78,
                                        columnNumber: 11
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/components/Navbar/Navbar.js",
                                    lineNumber: 77,
                                    columnNumber: 9
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                                        to: "/addCar",
                                        className: "block py-2 px-3 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0  md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent",
                                        children: "Become Host"
                                    }, void 0, false, {
                                        fileName: "src/components/Navbar/Navbar.js",
                                        lineNumber: 82,
                                        columnNumber: 11
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/components/Navbar/Navbar.js",
                                    lineNumber: 81,
                                    columnNumber: 9
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                    className: "relative",
                                    children: isAuthenticated ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "relative",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                                onClick: toggleDropdown,
                                                className: "block py-2 px-3 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0  md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent",
                                                children: [
                                                    "Welcome, ",
                                                    name
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/components/Navbar/Navbar.js",
                                                lineNumber: 95,
                                                columnNumber: 21
                                            }, undefined),
                                            isDropdownOpen && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "absolute bg-white shadow-lg rounded-md w-40 mt-2",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                                                        to: "/profile",
                                                        className: "block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100",
                                                        onClick: closeDropdown,
                                                        children: "Profile"
                                                    }, void 0, false, {
                                                        fileName: "src/components/Navbar/Navbar.js",
                                                        lineNumber: 103,
                                                        columnNumber: 25
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                                        onClick: ()=>{
                                                            handleSignOut();
                                                            closeDropdown(); // Close dropdown after sign-out
                                                        },
                                                        className: "block w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 text-left",
                                                        children: "Sign Out"
                                                    }, void 0, false, {
                                                        fileName: "src/components/Navbar/Navbar.js",
                                                        lineNumber: 110,
                                                        columnNumber: 25
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/components/Navbar/Navbar.js",
                                                lineNumber: 102,
                                                columnNumber: 23
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/components/Navbar/Navbar.js",
                                        lineNumber: 94,
                                        columnNumber: 19
                                    }, undefined) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                                        to: "/login",
                                        className: "block py-2 px-3 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent",
                                        children: "Login"
                                    }, void 0, false, {
                                        fileName: "src/components/Navbar/Navbar.js",
                                        lineNumber: 123,
                                        columnNumber: 19
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/components/Navbar/Navbar.js",
                                    lineNumber: 92,
                                    columnNumber: 9
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/components/Navbar/Navbar.js",
                            lineNumber: 64,
                            columnNumber: 7
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/components/Navbar/Navbar.js",
                        lineNumber: 63,
                        columnNumber: 5
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/components/Navbar/Navbar.js",
                lineNumber: 52,
                columnNumber: 3
            }, undefined)
        }, void 0, false, {
            fileName: "src/components/Navbar/Navbar.js",
            lineNumber: 51,
            columnNumber: 1
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/Navbar/Navbar.js",
        lineNumber: 48,
        columnNumber: 5
    }, undefined);
};
_s(Navbar, "DdudKzyZ/YpdcXz1aJuHkdQSJ/8=", false, function() {
    return [
        (0, _reactRedux.useDispatch),
        (0, _reactRedux.useSelector),
        (0, _reactRedux.useSelector),
        (0, _reactRedux.useSelector),
        (0, _reactRouter.useNavigate),
        (0, _reactCookie.useCookies)
    ];
});
_c = Navbar;
exports.default = Navbar;
var _c;
$RefreshReg$(_c, "Navbar");

  $parcel$ReactRefreshHelpers$f569.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-router":"2jawN","react-cookie":"59JzK","react-redux":"hbNxT","../../store/authSlice":"9kBex","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"aiApD":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$6ee8 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$6ee8.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$6ee8.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouter = require("react-router");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactCookie = require("react-cookie");
var _carCard = require("./CarCard");
var _carCardDefault = parcelHelpers.interopDefault(_carCard);
var _reactToastify = require("react-toastify");
var _reactToastifyCss = require("react-toastify/dist/ReactToastify.css");
var _s = $RefreshSig$();
const Car = ()=>{
    _s();
    const [carData, setCarData] = (0, _react.useState)([]);
    const [cookies] = (0, _reactCookie.useCookies)([
        'accessToken'
    ]);
    const [searchQuery, setSearchQuery] = (0, _react.useState)('');
    (0, _react.useEffect)(()=>{
        const getCar = async ()=>{
            try {
                const token = cookies.accessToken;
                if (!token) navigate("/login");
                const response = await (0, _axiosDefault.default).get('http://localhost:5000/car/getAllCars', {
                    headers: {
                        'Authorization': `Bearer ${cookies.accessToken}`
                    },
                    withCredentials: true
                });
                if (response.status != 200) {
                    const errorData = await response.json();
                    setError(errorData.message || 'Login Failed');
                    return;
                }
                const data = await response.data;
                console.log(data);
                setCarData(data);
            } catch (error) {
                (0, _reactToastify.toast).error('Failed to fetch profile. Please try again.');
            }
        };
        getCar();
    }, []);
    const handleSearchChange = (e)=>{
        setSearchQuery(e.target.value);
    };
    const filteredCars = carData.filter((car)=>car.make.toLowerCase().includes(searchQuery.toLowerCase()) || car.model.toLowerCase().includes(searchQuery.toLowerCase()));
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: " mx-4 my-4",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col items-center justify-center mb-4",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                        className: "text-2xl font-bold",
                        children: "Available Cars"
                    }, void 0, false, {
                        fileName: "src/components/Car/Car.js",
                        lineNumber: 56,
                        columnNumber: 7
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "mb-6",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                            type: "text",
                            placeholder: "Search by make or model",
                            value: searchQuery,
                            onChange: handleSearchChange,
                            className: "w-full my-2 p-2  border border-gray-300 rounded-2xl"
                        }, void 0, false, {
                            fileName: "src/components/Car/Car.js",
                            lineNumber: 59,
                            columnNumber: 7
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/components/Car/Car.js",
                        lineNumber: 58,
                        columnNumber: 7
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/components/Car/Car.js",
                lineNumber: 54,
                columnNumber: 5
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-wrap justify-center",
                children: filteredCars.length > 0 ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6",
                    children: filteredCars.map((car)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _carCardDefault.default), {
                            car: car
                        }, car._id, false, {
                            fileName: "src/components/Car/Car.js",
                            lineNumber: 74,
                            columnNumber: 13
                        }, undefined))
                }, void 0, false, {
                    fileName: "src/components/Car/Car.js",
                    lineNumber: 71,
                    columnNumber: 9
                }, undefined) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                    children: "No cars match your search."
                }, void 0, false, {
                    fileName: "src/components/Car/Car.js",
                    lineNumber: 78,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/components/Car/Car.js",
                lineNumber: 69,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/components/Car/Car.js",
        lineNumber: 53,
        columnNumber: 5
    }, undefined);
};
_s(Car, "jvyBYkCfx4S6Jj5hKmGlcfJ3qoc=", false, function() {
    return [
        (0, _reactCookie.useCookies)
    ];
});
_c = Car;
exports.default = Car;
var _c;
$RefreshReg$(_c, "Car");

  $parcel$ReactRefreshHelpers$6ee8.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-router":"2jawN","axios":"kooH4","react-cookie":"59JzK","./CarCard":"cHNq8","react-toastify":"xSqu1","react-toastify/dist/ReactToastify.css":"gJP2Y","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"cHNq8":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$de0e = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$de0e.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$de0e.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouter = require("react-router");
var _s = $RefreshSig$();
const CarCard = ({ car })=>{
    _s();
    console.log(car.images[0]);
    const navigate = (0, _reactRouter.useNavigate)();
    const handleSubmit = (e)=>{
        e.preventDefault();
        navigate(`/car/${car._id}`);
    // Add your logic to handle the form submission here
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "max-w-sm  overflow-hidden shadow-lg  bg-white  rounded-2xl border border-gray-200 ",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                    className: "w-full h-48 object-cover rounded-t-2xl",
                    src: car.images[0] || 'https://via.placeholder.com/300',
                    alt: car.model
                }, void 0, false, {
                    fileName: "src/components/Car/CarCard.js",
                    lineNumber: 17,
                    columnNumber: 5
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "p-4",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "font-bold text-xl text-gray-900 ",
                            children: [
                                car.make,
                                " ",
                                car.model
                            ]
                        }, void 0, true, {
                            fileName: "src/components/Car/CarCard.js",
                            lineNumber: 19,
                            columnNumber: 7
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            className: "text-gray-700 text-base ",
                            children: car.description.length > 100 ? car.description.slice(0, 100) + '...' : car.description
                        }, void 0, false, {
                            fileName: "src/components/Car/CarCard.js",
                            lineNumber: 20,
                            columnNumber: 7
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "flex justify-between items-center mt-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                    className: "text-lg font-semibold text-gray-800 mx-4 ",
                                    children: [
                                        "$",
                                        car.pricePerDay,
                                        " / day"
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/CarCard.js",
                                    lineNumber: 24,
                                    columnNumber: 9
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    onClick: handleSubmit,
                                    className: " cursor-pointer bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-2xl shadow-lg",
                                    children: "View Details"
                                }, void 0, false, {
                                    fileName: "src/components/Car/CarCard.js",
                                    lineNumber: 25,
                                    columnNumber: 9
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/components/Car/CarCard.js",
                            lineNumber: 23,
                            columnNumber: 7
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/components/Car/CarCard.js",
                    lineNumber: 18,
                    columnNumber: 7
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/components/Car/CarCard.js",
            lineNumber: 16,
            columnNumber: 5
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/Car/CarCard.js",
        lineNumber: 14,
        columnNumber: 5
    }, undefined);
};
_s(CarCard, "CzcTeTziyjMsSrAVmHuCCb6+Bfg=", false, function() {
    return [
        (0, _reactRouter.useNavigate)
    ];
});
_c = CarCard;
exports.default = CarCard;
var _c;
$RefreshReg$(_c, "CarCard");

  $parcel$ReactRefreshHelpers$de0e.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-router":"2jawN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"xSqu1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Bounce", ()=>lt);
parcelHelpers.export(exports, "Flip", ()=>uo);
parcelHelpers.export(exports, "Icons", ()=>W);
parcelHelpers.export(exports, "Slide", ()=>mo);
parcelHelpers.export(exports, "ToastContainer", ()=>Lt);
parcelHelpers.export(exports, "Zoom", ()=>po);
parcelHelpers.export(exports, "collapseToast", ()=>Z);
parcelHelpers.export(exports, "cssTransition", ()=>$);
parcelHelpers.export(exports, "toast", ()=>y);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
"use client";
function Mt(t) {
    if (!t || typeof document == "undefined") return;
    let o = document.head || document.getElementsByTagName("head")[0], e = document.createElement("style");
    e.type = "text/css", o.firstChild ? o.insertBefore(e, o.firstChild) : o.appendChild(e), e.styleSheet ? e.styleSheet.cssText = t : e.appendChild(document.createTextNode(t));
}
Mt(`:root{--toastify-color-light: #fff;--toastify-color-dark: #121212;--toastify-color-info: #3498db;--toastify-color-success: #07bc0c;--toastify-color-warning: #f1c40f;--toastify-color-error: hsl(6, 78%, 57%);--toastify-color-transparent: rgba(255, 255, 255, .7);--toastify-icon-color-info: var(--toastify-color-info);--toastify-icon-color-success: var(--toastify-color-success);--toastify-icon-color-warning: var(--toastify-color-warning);--toastify-icon-color-error: var(--toastify-color-error);--toastify-container-width: fit-content;--toastify-toast-width: 320px;--toastify-toast-offset: 16px;--toastify-toast-top: max(var(--toastify-toast-offset), env(safe-area-inset-top));--toastify-toast-right: max(var(--toastify-toast-offset), env(safe-area-inset-right));--toastify-toast-left: max(var(--toastify-toast-offset), env(safe-area-inset-left));--toastify-toast-bottom: max(var(--toastify-toast-offset), env(safe-area-inset-bottom));--toastify-toast-background: #fff;--toastify-toast-padding: 14px;--toastify-toast-min-height: 64px;--toastify-toast-max-height: 800px;--toastify-toast-bd-radius: 6px;--toastify-toast-shadow: 0px 4px 12px rgba(0, 0, 0, .1);--toastify-font-family: sans-serif;--toastify-z-index: 9999;--toastify-text-color-light: #757575;--toastify-text-color-dark: #fff;--toastify-text-color-info: #fff;--toastify-text-color-success: #fff;--toastify-text-color-warning: #fff;--toastify-text-color-error: #fff;--toastify-spinner-color: #616161;--toastify-spinner-color-empty-area: #e0e0e0;--toastify-color-progress-light: linear-gradient(to right, #4cd964, #5ac8fa, #007aff, #34aadc, #5856d6, #ff2d55);--toastify-color-progress-dark: #bb86fc;--toastify-color-progress-info: var(--toastify-color-info);--toastify-color-progress-success: var(--toastify-color-success);--toastify-color-progress-warning: var(--toastify-color-warning);--toastify-color-progress-error: var(--toastify-color-error);--toastify-color-progress-bgo: .2}.Toastify__toast-container{z-index:var(--toastify-z-index);-webkit-transform:translate3d(0,0,var(--toastify-z-index));position:fixed;width:var(--toastify-container-width);box-sizing:border-box;color:#fff;display:flex;flex-direction:column}.Toastify__toast-container--top-left{top:var(--toastify-toast-top);left:var(--toastify-toast-left)}.Toastify__toast-container--top-center{top:var(--toastify-toast-top);left:50%;transform:translate(-50%);align-items:center}.Toastify__toast-container--top-right{top:var(--toastify-toast-top);right:var(--toastify-toast-right);align-items:end}.Toastify__toast-container--bottom-left{bottom:var(--toastify-toast-bottom);left:var(--toastify-toast-left)}.Toastify__toast-container--bottom-center{bottom:var(--toastify-toast-bottom);left:50%;transform:translate(-50%);align-items:center}.Toastify__toast-container--bottom-right{bottom:var(--toastify-toast-bottom);right:var(--toastify-toast-right);align-items:end}.Toastify__toast{--y: 0;position:relative;touch-action:none;width:var(--toastify-toast-width);min-height:var(--toastify-toast-min-height);box-sizing:border-box;margin-bottom:1rem;padding:var(--toastify-toast-padding);border-radius:var(--toastify-toast-bd-radius);box-shadow:var(--toastify-toast-shadow);max-height:var(--toastify-toast-max-height);font-family:var(--toastify-font-family);z-index:0;display:flex;flex:1 auto;align-items:center;word-break:break-word}@media only screen and (max-width: 480px){.Toastify__toast-container{width:100vw;left:env(safe-area-inset-left);margin:0}.Toastify__toast-container--top-left,.Toastify__toast-container--top-center,.Toastify__toast-container--top-right{top:env(safe-area-inset-top);transform:translate(0)}.Toastify__toast-container--bottom-left,.Toastify__toast-container--bottom-center,.Toastify__toast-container--bottom-right{bottom:env(safe-area-inset-bottom);transform:translate(0)}.Toastify__toast-container--rtl{right:env(safe-area-inset-right);left:initial}.Toastify__toast{--toastify-toast-width: 100%;margin-bottom:0;border-radius:0}}.Toastify__toast-container[data-stacked=true]{width:var(--toastify-toast-width)}.Toastify__toast--stacked{position:absolute;width:100%;transform:translate3d(0,var(--y),0) scale(var(--s));transition:transform .3s}.Toastify__toast--stacked[data-collapsed] .Toastify__toast-body,.Toastify__toast--stacked[data-collapsed] .Toastify__close-button{transition:opacity .1s}.Toastify__toast--stacked[data-collapsed=false]{overflow:visible}.Toastify__toast--stacked[data-collapsed=true]:not(:last-child)>*{opacity:0}.Toastify__toast--stacked:after{content:"";position:absolute;left:0;right:0;height:calc(var(--g) * 1px);bottom:100%}.Toastify__toast--stacked[data-pos=top]{top:0}.Toastify__toast--stacked[data-pos=bot]{bottom:0}.Toastify__toast--stacked[data-pos=bot].Toastify__toast--stacked:before{transform-origin:top}.Toastify__toast--stacked[data-pos=top].Toastify__toast--stacked:before{transform-origin:bottom}.Toastify__toast--stacked:before{content:"";position:absolute;left:0;right:0;bottom:0;height:100%;transform:scaleY(3);z-index:-1}.Toastify__toast--rtl{direction:rtl}.Toastify__toast--close-on-click{cursor:pointer}.Toastify__toast-icon{margin-inline-end:10px;width:22px;flex-shrink:0;display:flex}.Toastify--animate{animation-fill-mode:both;animation-duration:.5s}.Toastify--animate-icon{animation-fill-mode:both;animation-duration:.3s}.Toastify__toast-theme--dark{background:var(--toastify-color-dark);color:var(--toastify-text-color-dark)}.Toastify__toast-theme--light,.Toastify__toast-theme--colored.Toastify__toast--default{background:var(--toastify-color-light);color:var(--toastify-text-color-light)}.Toastify__toast-theme--colored.Toastify__toast--info{color:var(--toastify-text-color-info);background:var(--toastify-color-info)}.Toastify__toast-theme--colored.Toastify__toast--success{color:var(--toastify-text-color-success);background:var(--toastify-color-success)}.Toastify__toast-theme--colored.Toastify__toast--warning{color:var(--toastify-text-color-warning);background:var(--toastify-color-warning)}.Toastify__toast-theme--colored.Toastify__toast--error{color:var(--toastify-text-color-error);background:var(--toastify-color-error)}.Toastify__progress-bar-theme--light{background:var(--toastify-color-progress-light)}.Toastify__progress-bar-theme--dark{background:var(--toastify-color-progress-dark)}.Toastify__progress-bar--info{background:var(--toastify-color-progress-info)}.Toastify__progress-bar--success{background:var(--toastify-color-progress-success)}.Toastify__progress-bar--warning{background:var(--toastify-color-progress-warning)}.Toastify__progress-bar--error{background:var(--toastify-color-progress-error)}.Toastify__progress-bar-theme--colored.Toastify__progress-bar--info,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--success,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--warning,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--error{background:var(--toastify-color-transparent)}.Toastify__close-button{color:#fff;position:absolute;top:6px;right:6px;background:transparent;outline:none;border:none;padding:0;cursor:pointer;opacity:.7;transition:.3s ease;z-index:1}.Toastify__toast--rtl .Toastify__close-button{left:6px;right:unset}.Toastify__close-button--light{color:#000;opacity:.3}.Toastify__close-button>svg{fill:currentColor;height:16px;width:14px}.Toastify__close-button:hover,.Toastify__close-button:focus{opacity:1}@keyframes Toastify__trackProgress{0%{transform:scaleX(1)}to{transform:scaleX(0)}}.Toastify__progress-bar{position:absolute;bottom:0;left:0;width:100%;height:100%;z-index:1;opacity:.7;transform-origin:left}.Toastify__progress-bar--animated{animation:Toastify__trackProgress linear 1 forwards}.Toastify__progress-bar--controlled{transition:transform .2s}.Toastify__progress-bar--rtl{right:0;left:initial;transform-origin:right;border-bottom-left-radius:initial}.Toastify__progress-bar--wrp{position:absolute;overflow:hidden;bottom:0;left:0;width:100%;height:5px;border-bottom-left-radius:var(--toastify-toast-bd-radius);border-bottom-right-radius:var(--toastify-toast-bd-radius)}.Toastify__progress-bar--wrp[data-hidden=true]{opacity:0}.Toastify__progress-bar--bg{opacity:var(--toastify-color-progress-bgo);width:100%;height:100%}.Toastify__spinner{width:20px;height:20px;box-sizing:border-box;border:2px solid;border-radius:100%;border-color:var(--toastify-spinner-color-empty-area);border-right-color:var(--toastify-spinner-color);animation:Toastify__spin .65s linear infinite}@keyframes Toastify__bounceInRight{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes Toastify__bounceOutRight{20%{opacity:1;transform:translate3d(-20px,var(--y),0)}to{opacity:0;transform:translate3d(2000px,var(--y),0)}}@keyframes Toastify__bounceInLeft{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(-3000px,0,0)}60%{opacity:1;transform:translate3d(25px,0,0)}75%{transform:translate3d(-10px,0,0)}90%{transform:translate3d(5px,0,0)}to{transform:none}}@keyframes Toastify__bounceOutLeft{20%{opacity:1;transform:translate3d(20px,var(--y),0)}to{opacity:0;transform:translate3d(-2000px,var(--y),0)}}@keyframes Toastify__bounceInUp{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,3000px,0)}60%{opacity:1;transform:translate3d(0,-20px,0)}75%{transform:translate3d(0,10px,0)}90%{transform:translate3d(0,-5px,0)}to{transform:translateZ(0)}}@keyframes Toastify__bounceOutUp{20%{transform:translate3d(0,calc(var(--y) - 10px),0)}40%,45%{opacity:1;transform:translate3d(0,calc(var(--y) + 20px),0)}to{opacity:0;transform:translate3d(0,-2000px,0)}}@keyframes Toastify__bounceInDown{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,-3000px,0)}60%{opacity:1;transform:translate3d(0,25px,0)}75%{transform:translate3d(0,-10px,0)}90%{transform:translate3d(0,5px,0)}to{transform:none}}@keyframes Toastify__bounceOutDown{20%{transform:translate3d(0,calc(var(--y) - 10px),0)}40%,45%{opacity:1;transform:translate3d(0,calc(var(--y) + 20px),0)}to{opacity:0;transform:translate3d(0,2000px,0)}}.Toastify__bounce-enter--top-left,.Toastify__bounce-enter--bottom-left{animation-name:Toastify__bounceInLeft}.Toastify__bounce-enter--top-right,.Toastify__bounce-enter--bottom-right{animation-name:Toastify__bounceInRight}.Toastify__bounce-enter--top-center{animation-name:Toastify__bounceInDown}.Toastify__bounce-enter--bottom-center{animation-name:Toastify__bounceInUp}.Toastify__bounce-exit--top-left,.Toastify__bounce-exit--bottom-left{animation-name:Toastify__bounceOutLeft}.Toastify__bounce-exit--top-right,.Toastify__bounce-exit--bottom-right{animation-name:Toastify__bounceOutRight}.Toastify__bounce-exit--top-center{animation-name:Toastify__bounceOutUp}.Toastify__bounce-exit--bottom-center{animation-name:Toastify__bounceOutDown}@keyframes Toastify__zoomIn{0%{opacity:0;transform:scale3d(.3,.3,.3)}50%{opacity:1}}@keyframes Toastify__zoomOut{0%{opacity:1}50%{opacity:0;transform:translate3d(0,var(--y),0) scale3d(.3,.3,.3)}to{opacity:0}}.Toastify__zoom-enter{animation-name:Toastify__zoomIn}.Toastify__zoom-exit{animation-name:Toastify__zoomOut}@keyframes Toastify__flipIn{0%{transform:perspective(400px) rotateX(90deg);animation-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotateX(-20deg);animation-timing-function:ease-in}60%{transform:perspective(400px) rotateX(10deg);opacity:1}80%{transform:perspective(400px) rotateX(-5deg)}to{transform:perspective(400px)}}@keyframes Toastify__flipOut{0%{transform:translate3d(0,var(--y),0) perspective(400px)}30%{transform:translate3d(0,var(--y),0) perspective(400px) rotateX(-20deg);opacity:1}to{transform:translate3d(0,var(--y),0) perspective(400px) rotateX(90deg);opacity:0}}.Toastify__flip-enter{animation-name:Toastify__flipIn}.Toastify__flip-exit{animation-name:Toastify__flipOut}@keyframes Toastify__slideInRight{0%{transform:translate3d(110%,0,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInLeft{0%{transform:translate3d(-110%,0,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInUp{0%{transform:translate3d(0,110%,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInDown{0%{transform:translate3d(0,-110%,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideOutRight{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(110%,var(--y),0)}}@keyframes Toastify__slideOutLeft{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(-110%,var(--y),0)}}@keyframes Toastify__slideOutDown{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(0,500px,0)}}@keyframes Toastify__slideOutUp{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(0,-500px,0)}}.Toastify__slide-enter--top-left,.Toastify__slide-enter--bottom-left{animation-name:Toastify__slideInLeft}.Toastify__slide-enter--top-right,.Toastify__slide-enter--bottom-right{animation-name:Toastify__slideInRight}.Toastify__slide-enter--top-center{animation-name:Toastify__slideInDown}.Toastify__slide-enter--bottom-center{animation-name:Toastify__slideInUp}.Toastify__slide-exit--top-left,.Toastify__slide-exit--bottom-left{animation-name:Toastify__slideOutLeft;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--top-right,.Toastify__slide-exit--bottom-right{animation-name:Toastify__slideOutRight;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--top-center{animation-name:Toastify__slideOutUp;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--bottom-center{animation-name:Toastify__slideOutDown;animation-timing-function:ease-in;animation-duration:.3s}@keyframes Toastify__spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}
`);
var L = (t)=>typeof t == "number" && !isNaN(t), N = (t)=>typeof t == "string", P = (t)=>typeof t == "function", mt = (t)=>N(t) || L(t), B = (t)=>N(t) || P(t) ? t : null, pt = (t, o)=>t === !1 || L(t) && t > 0 ? t : o, z = (t)=>(0, _react.isValidElement)(t) || N(t) || P(t) || L(t);
function Z(t, o, e = 300) {
    let { scrollHeight: r, style: s } = t;
    requestAnimationFrame(()=>{
        s.minHeight = "initial", s.height = r + "px", s.transition = `all ${e}ms`, requestAnimationFrame(()=>{
            s.height = "0", s.padding = "0", s.margin = "0", setTimeout(o, e);
        });
    });
}
function $({ enter: t, exit: o, appendPosition: e = !1, collapse: r = !0, collapseDuration: s = 300 }) {
    return function({ children: a, position: d, preventExitTransition: c, done: T, nodeRef: g, isIn: v, playToast: x }) {
        let C = e ? `${t}--${d}` : t, S = e ? `${o}--${d}` : o, E = (0, _react.useRef)(0);
        return (0, _react.useLayoutEffect)(()=>{
            let f = g.current, p = C.split(" "), b = (n)=>{
                n.target === g.current && (x(), f.removeEventListener("animationend", b), f.removeEventListener("animationcancel", b), E.current === 0 && n.type !== "animationcancel" && f.classList.remove(...p));
            };
            (()=>{
                f.classList.add(...p), f.addEventListener("animationend", b), f.addEventListener("animationcancel", b);
            })();
        }, []), (0, _react.useEffect)(()=>{
            let f = g.current, p = ()=>{
                f.removeEventListener("animationend", p), r ? Z(f, T, s) : T();
            };
            v || (c ? p() : (()=>{
                E.current = 1, f.className += ` ${S}`, f.addEventListener("animationend", p);
            })());
        }, [
            v
        ]), (0, _reactDefault.default).createElement((0, _reactDefault.default).Fragment, null, a);
    };
}
function J(t, o) {
    return {
        content: tt(t.content, t.props),
        containerId: t.props.containerId,
        id: t.props.toastId,
        theme: t.props.theme,
        type: t.props.type,
        data: t.props.data || {},
        isLoading: t.props.isLoading,
        icon: t.props.icon,
        reason: t.removalReason,
        status: o
    };
}
function tt(t, o, e = !1) {
    return (0, _react.isValidElement)(t) && !N(t.type) ? (0, _react.cloneElement)(t, {
        closeToast: o.closeToast,
        toastProps: o,
        data: o.data,
        isPaused: e
    }) : P(t) ? t({
        closeToast: o.closeToast,
        toastProps: o,
        data: o.data,
        isPaused: e
    }) : t;
}
function yt({ closeToast: t, theme: o, ariaLabel: e = "close" }) {
    return (0, _reactDefault.default).createElement("button", {
        className: `Toastify__close-button Toastify__close-button--${o}`,
        type: "button",
        onClick: (r)=>{
            r.stopPropagation(), t(!0);
        },
        "aria-label": e
    }, (0, _reactDefault.default).createElement("svg", {
        "aria-hidden": "true",
        viewBox: "0 0 14 16"
    }, (0, _reactDefault.default).createElement("path", {
        fillRule: "evenodd",
        d: "M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"
    })));
}
function gt({ delay: t, isRunning: o, closeToast: e, type: r = "default", hide: s, className: l, controlledProgress: a, progress: d, rtl: c, isIn: T, theme: g }) {
    let v = s || a && d === 0, x = {
        animationDuration: `${t}ms`,
        animationPlayState: o ? "running" : "paused"
    };
    a && (x.transform = `scaleX(${d})`);
    let C = (0, _clsxDefault.default)("Toastify__progress-bar", a ? "Toastify__progress-bar--controlled" : "Toastify__progress-bar--animated", `Toastify__progress-bar-theme--${g}`, `Toastify__progress-bar--${r}`, {
        ["Toastify__progress-bar--rtl"]: c
    }), S = P(l) ? l({
        rtl: c,
        type: r,
        defaultClassName: C
    }) : (0, _clsxDefault.default)(C, l), E = {
        [a && d >= 1 ? "onTransitionEnd" : "onAnimationEnd"]: a && d < 1 ? null : ()=>{
            T && e();
        }
    };
    return (0, _reactDefault.default).createElement("div", {
        className: "Toastify__progress-bar--wrp",
        "data-hidden": v
    }, (0, _reactDefault.default).createElement("div", {
        className: `Toastify__progress-bar--bg Toastify__progress-bar-theme--${g} Toastify__progress-bar--${r}`
    }), (0, _reactDefault.default).createElement("div", {
        role: "progressbar",
        "aria-hidden": v ? "true" : "false",
        "aria-label": "notification timer",
        className: S,
        style: x,
        ...E
    }));
}
var Xt = 1, at = ()=>`${Xt++}`;
function _t(t, o, e) {
    let r = 1, s = 0, l = [], a = [], d = o, c = new Map, T = new Set, g = (i)=>(T.add(i), ()=>T.delete(i)), v = ()=>{
        a = Array.from(c.values()), T.forEach((i)=>i());
    }, x = ({ containerId: i, toastId: n, updateId: u })=>{
        let h = i ? i !== t : t !== 1, m = c.has(n) && u == null;
        return h || m;
    }, C = (i, n)=>{
        c.forEach((u)=>{
            var h;
            (n == null || n === u.props.toastId) && ((h = u.toggle) == null || h.call(u, i));
        });
    }, S = (i)=>{
        var n, u;
        (u = (n = i.props) == null ? void 0 : n.onClose) == null || u.call(n, i.removalReason), i.isActive = !1;
    }, E = (i)=>{
        if (i == null) c.forEach(S);
        else {
            let n = c.get(i);
            n && S(n);
        }
        v();
    }, f = ()=>{
        s -= l.length, l = [];
    }, p = (i)=>{
        var m, _;
        let { toastId: n, updateId: u } = i.props, h = u == null;
        i.staleId && c.delete(i.staleId), i.isActive = !0, c.set(n, i), v(), e(J(i, h ? "added" : "updated")), h && ((_ = (m = i.props).onOpen) == null || _.call(m));
    };
    return {
        id: t,
        props: d,
        observe: g,
        toggle: C,
        removeToast: E,
        toasts: c,
        clearQueue: f,
        buildToast: (i, n)=>{
            if (x(n)) return;
            let { toastId: u, updateId: h, data: m, staleId: _, delay: k } = n, M = h == null;
            M && s++;
            let A = {
                ...d,
                style: d.toastStyle,
                key: r++,
                ...Object.fromEntries(Object.entries(n).filter(([D, Y])=>Y != null)),
                toastId: u,
                updateId: h,
                data: m,
                isIn: !1,
                className: B(n.className || d.toastClassName),
                progressClassName: B(n.progressClassName || d.progressClassName),
                autoClose: n.isLoading ? !1 : pt(n.autoClose, d.autoClose),
                closeToast (D) {
                    c.get(u).removalReason = D, E(u);
                },
                deleteToast () {
                    let D = c.get(u);
                    if (D != null) {
                        if (e(J(D, "removed")), c.delete(u), s--, s < 0 && (s = 0), l.length > 0) {
                            p(l.shift());
                            return;
                        }
                        v();
                    }
                }
            };
            A.closeButton = d.closeButton, n.closeButton === !1 || z(n.closeButton) ? A.closeButton = n.closeButton : n.closeButton === !0 && (A.closeButton = z(d.closeButton) ? d.closeButton : !0);
            let R = {
                content: i,
                props: A,
                staleId: _
            };
            d.limit && d.limit > 0 && s > d.limit && M ? l.push(R) : L(k) ? setTimeout(()=>{
                p(R);
            }, k) : p(R);
        },
        setProps (i) {
            d = i;
        },
        setToggle: (i, n)=>{
            let u = c.get(i);
            u && (u.toggle = n);
        },
        isToastActive: (i)=>{
            var n;
            return (n = c.get(i)) == null ? void 0 : n.isActive;
        },
        getSnapshot: ()=>a
    };
}
var I = new Map, F = [], st = new Set, Vt = (t)=>st.forEach((o)=>o(t)), bt = ()=>I.size > 0;
function Qt() {
    F.forEach((t)=>nt(t.content, t.options)), F = [];
}
var vt = (t, { containerId: o })=>{
    var e;
    return (e = I.get(o || 1)) == null ? void 0 : e.toasts.get(t);
};
function X(t, o) {
    var r;
    if (o) return !!((r = I.get(o)) != null && r.isToastActive(t));
    let e = !1;
    return I.forEach((s)=>{
        s.isToastActive(t) && (e = !0);
    }), e;
}
function ht(t) {
    if (!bt()) {
        F = F.filter((o)=>t != null && o.options.toastId !== t);
        return;
    }
    if (t == null || mt(t)) I.forEach((o)=>{
        o.removeToast(t);
    });
    else if (t && ("containerId" in t || "id" in t)) {
        let o = I.get(t.containerId);
        o ? o.removeToast(t.id) : I.forEach((e)=>{
            e.removeToast(t.id);
        });
    }
}
var Ct = (t = {})=>{
    I.forEach((o)=>{
        o.props.limit && (!t.containerId || o.id === t.containerId) && o.clearQueue();
    });
};
function nt(t, o) {
    z(t) && (bt() || F.push({
        content: t,
        options: o
    }), I.forEach((e)=>{
        e.buildToast(t, o);
    }));
}
function xt(t) {
    var o;
    (o = I.get(t.containerId || 1)) == null || o.setToggle(t.id, t.fn);
}
function rt(t, o) {
    I.forEach((e)=>{
        (o == null || !(o != null && o.containerId) || (o == null ? void 0 : o.containerId) === e.id) && e.toggle(t, o == null ? void 0 : o.id);
    });
}
function Et(t) {
    let o = t.containerId || 1;
    return {
        subscribe (e) {
            let r = _t(o, t, Vt);
            I.set(o, r);
            let s = r.observe(e);
            return Qt(), ()=>{
                s(), I.delete(o);
            };
        },
        setProps (e) {
            var r;
            (r = I.get(o)) == null || r.setProps(e);
        },
        getSnapshot () {
            var e;
            return (e = I.get(o)) == null ? void 0 : e.getSnapshot();
        }
    };
}
function Pt(t) {
    return st.add(t), ()=>{
        st.delete(t);
    };
}
function Wt(t) {
    return t && (N(t.toastId) || L(t.toastId)) ? t.toastId : at();
}
function U(t, o) {
    return nt(t, o), o.toastId;
}
function V(t, o) {
    return {
        ...o,
        type: o && o.type || t,
        toastId: Wt(o)
    };
}
function Q(t) {
    return (o, e)=>U(o, V(t, e));
}
function y(t, o) {
    return U(t, V("default", o));
}
y.loading = (t, o)=>U(t, V("default", {
        isLoading: !0,
        autoClose: !1,
        closeOnClick: !1,
        closeButton: !1,
        draggable: !1,
        ...o
    }));
function Gt(t, { pending: o, error: e, success: r }, s) {
    let l;
    o && (l = N(o) ? y.loading(o, s) : y.loading(o.render, {
        ...s,
        ...o
    }));
    let a = {
        isLoading: null,
        autoClose: null,
        closeOnClick: null,
        closeButton: null,
        draggable: null
    }, d = (T, g, v)=>{
        if (g == null) {
            y.dismiss(l);
            return;
        }
        let x = {
            type: T,
            ...a,
            ...s,
            data: v
        }, C = N(g) ? {
            render: g
        } : g;
        return l ? y.update(l, {
            ...x,
            ...C
        }) : y(C.render, {
            ...x,
            ...C
        }), v;
    }, c = P(t) ? t() : t;
    return c.then((T)=>d("success", r, T)).catch((T)=>d("error", e, T)), c;
}
y.promise = Gt;
y.success = Q("success");
y.info = Q("info");
y.error = Q("error");
y.warning = Q("warning");
y.warn = y.warning;
y.dark = (t, o)=>U(t, V("default", {
        theme: "dark",
        ...o
    }));
function qt(t) {
    ht(t);
}
y.dismiss = qt;
y.clearWaitingQueue = Ct;
y.isActive = X;
y.update = (t, o = {})=>{
    let e = vt(t, o);
    if (e) {
        let { props: r, content: s } = e, l = {
            delay: 100,
            ...r,
            ...o,
            toastId: o.toastId || t,
            updateId: at()
        };
        l.toastId !== t && (l.staleId = t);
        let a = l.render || s;
        delete l.render, U(a, l);
    }
};
y.done = (t)=>{
    y.update(t, {
        progress: 1
    });
};
y.onChange = Pt;
y.play = (t)=>rt(!0, t);
y.pause = (t)=>rt(!1, t);
function It(t) {
    var a;
    let { subscribe: o, getSnapshot: e, setProps: r } = (0, _react.useRef)(Et(t)).current;
    r(t);
    let s = (a = (0, _react.useSyncExternalStore)(o, e, e)) == null ? void 0 : a.slice();
    function l(d) {
        if (!s) return [];
        let c = new Map;
        return t.newestOnTop && s.reverse(), s.forEach((T)=>{
            let { position: g } = T.props;
            c.has(g) || c.set(g, []), c.get(g).push(T);
        }), Array.from(c, (T)=>d(T[0], T[1]));
    }
    return {
        getToastToRender: l,
        isToastActive: X,
        count: s == null ? void 0 : s.length
    };
}
function At(t) {
    let [o, e] = (0, _react.useState)(!1), [r, s] = (0, _react.useState)(!1), l = (0, _react.useRef)(null), a = (0, _react.useRef)({
        start: 0,
        delta: 0,
        removalDistance: 0,
        canCloseOnClick: !0,
        canDrag: !1,
        didMove: !1
    }).current, { autoClose: d, pauseOnHover: c, closeToast: T, onClick: g, closeOnClick: v } = t;
    xt({
        id: t.toastId,
        containerId: t.containerId,
        fn: e
    }), (0, _react.useEffect)(()=>{
        if (t.pauseOnFocusLoss) return x(), ()=>{
            C();
        };
    }, [
        t.pauseOnFocusLoss
    ]);
    function x() {
        document.hasFocus() || p(), window.addEventListener("focus", f), window.addEventListener("blur", p);
    }
    function C() {
        window.removeEventListener("focus", f), window.removeEventListener("blur", p);
    }
    function S(m) {
        if (t.draggable === !0 || t.draggable === m.pointerType) {
            b();
            let _ = l.current;
            a.canCloseOnClick = !0, a.canDrag = !0, _.style.transition = "none", t.draggableDirection === "x" ? (a.start = m.clientX, a.removalDistance = _.offsetWidth * (t.draggablePercent / 100)) : (a.start = m.clientY, a.removalDistance = _.offsetHeight * (t.draggablePercent === 80 ? t.draggablePercent * 1.5 : t.draggablePercent) / 100);
        }
    }
    function E(m) {
        let { top: _, bottom: k, left: M, right: A } = l.current.getBoundingClientRect();
        m.nativeEvent.type !== "touchend" && t.pauseOnHover && m.clientX >= M && m.clientX <= A && m.clientY >= _ && m.clientY <= k ? p() : f();
    }
    function f() {
        e(!0);
    }
    function p() {
        e(!1);
    }
    function b() {
        a.didMove = !1, document.addEventListener("pointermove", n), document.addEventListener("pointerup", u);
    }
    function i() {
        document.removeEventListener("pointermove", n), document.removeEventListener("pointerup", u);
    }
    function n(m) {
        let _ = l.current;
        if (a.canDrag && _) {
            a.didMove = !0, o && p(), t.draggableDirection === "x" ? a.delta = m.clientX - a.start : a.delta = m.clientY - a.start, a.start !== m.clientX && (a.canCloseOnClick = !1);
            let k = t.draggableDirection === "x" ? `${a.delta}px, var(--y)` : `0, calc(${a.delta}px + var(--y))`;
            _.style.transform = `translate3d(${k},0)`, _.style.opacity = `${1 - Math.abs(a.delta / a.removalDistance)}`;
        }
    }
    function u() {
        i();
        let m = l.current;
        if (a.canDrag && a.didMove && m) {
            if (a.canDrag = !1, Math.abs(a.delta) > a.removalDistance) {
                s(!0), t.closeToast(!0), t.collapseAll();
                return;
            }
            m.style.transition = "transform 0.2s, opacity 0.2s", m.style.removeProperty("transform"), m.style.removeProperty("opacity");
        }
    }
    let h = {
        onPointerDown: S,
        onPointerUp: E
    };
    return d && c && (h.onMouseEnter = p, t.stacked || (h.onMouseLeave = f)), v && (h.onClick = (m)=>{
        g && g(m), a.canCloseOnClick && T(!0);
    }), {
        playToast: f,
        pauseToast: p,
        isRunning: o,
        preventExitTransition: r,
        toastRef: l,
        eventHandlers: h
    };
}
var Ot = typeof window != "undefined" ? (0, _react.useLayoutEffect) : (0, _react.useEffect);
var G = ({ theme: t, type: o, isLoading: e, ...r })=>(0, _reactDefault.default).createElement("svg", {
        viewBox: "0 0 24 24",
        width: "100%",
        height: "100%",
        fill: t === "colored" ? "currentColor" : `var(--toastify-icon-color-${o})`,
        ...r
    });
function ao(t) {
    return (0, _reactDefault.default).createElement(G, {
        ...t
    }, (0, _reactDefault.default).createElement("path", {
        d: "M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z"
    }));
}
function so(t) {
    return (0, _reactDefault.default).createElement(G, {
        ...t
    }, (0, _reactDefault.default).createElement("path", {
        d: "M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z"
    }));
}
function no(t) {
    return (0, _reactDefault.default).createElement(G, {
        ...t
    }, (0, _reactDefault.default).createElement("path", {
        d: "M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z"
    }));
}
function ro(t) {
    return (0, _reactDefault.default).createElement(G, {
        ...t
    }, (0, _reactDefault.default).createElement("path", {
        d: "M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z"
    }));
}
function io() {
    return (0, _reactDefault.default).createElement("div", {
        className: "Toastify__spinner"
    });
}
var W = {
    info: so,
    warning: ao,
    success: no,
    error: ro,
    spinner: io
}, lo = (t)=>t in W;
function Nt({ theme: t, type: o, isLoading: e, icon: r }) {
    let s = null, l = {
        theme: t,
        type: o
    };
    return r === !1 || (P(r) ? s = r({
        ...l,
        isLoading: e
    }) : (0, _react.isValidElement)(r) ? s = (0, _react.cloneElement)(r, l) : e ? s = W.spinner() : lo(o) && (s = W[o](l))), s;
}
var wt = (t)=>{
    let { isRunning: o, preventExitTransition: e, toastRef: r, eventHandlers: s, playToast: l } = At(t), { closeButton: a, children: d, autoClose: c, onClick: T, type: g, hideProgressBar: v, closeToast: x, transition: C, position: S, className: E, style: f, progressClassName: p, updateId: b, role: i, progress: n, rtl: u, toastId: h, deleteToast: m, isIn: _, isLoading: k, closeOnClick: M, theme: A, ariaLabel: R } = t, D = (0, _clsxDefault.default)("Toastify__toast", `Toastify__toast-theme--${A}`, `Toastify__toast--${g}`, {
        ["Toastify__toast--rtl"]: u
    }, {
        ["Toastify__toast--close-on-click"]: M
    }), Y = P(E) ? E({
        rtl: u,
        position: S,
        type: g,
        defaultClassName: D
    }) : (0, _clsxDefault.default)(D, E), ft = Nt(t), dt = !!n || !c, j = {
        closeToast: x,
        type: g,
        theme: A
    }, H = null;
    return a === !1 || (P(a) ? H = a(j) : (0, _react.isValidElement)(a) ? H = (0, _react.cloneElement)(a, j) : H = yt(j)), (0, _reactDefault.default).createElement(C, {
        isIn: _,
        done: m,
        position: S,
        preventExitTransition: e,
        nodeRef: r,
        playToast: l
    }, (0, _reactDefault.default).createElement("div", {
        id: h,
        tabIndex: 0,
        onClick: T,
        "data-in": _,
        className: Y,
        ...s,
        style: f,
        ref: r,
        ..._ && {
            role: i,
            "aria-label": R
        }
    }, ft != null && (0, _reactDefault.default).createElement("div", {
        className: (0, _clsxDefault.default)("Toastify__toast-icon", {
            ["Toastify--animate-icon Toastify__zoom-enter"]: !k
        })
    }, ft), tt(d, t, !o), H, !t.customProgressBar && (0, _reactDefault.default).createElement(gt, {
        ...b && !dt ? {
            key: `p-${b}`
        } : {},
        rtl: u,
        theme: A,
        delay: c,
        isRunning: o,
        isIn: _,
        closeToast: x,
        hide: v,
        type: g,
        className: p,
        controlledProgress: dt,
        progress: n || 0
    })));
};
var K = (t, o = !1)=>({
        enter: `Toastify--animate Toastify__${t}-enter`,
        exit: `Toastify--animate Toastify__${t}-exit`,
        appendPosition: o
    }), lt = $(K("bounce", !0)), mo = $(K("slide", !0)), po = $(K("zoom")), uo = $(K("flip"));
var _o = {
    position: "top-right",
    transition: lt,
    autoClose: 5e3,
    closeButton: !0,
    pauseOnHover: !0,
    pauseOnFocusLoss: !0,
    draggable: "touch",
    draggablePercent: 80,
    draggableDirection: "x",
    role: "alert",
    theme: "light",
    "aria-label": "Notifications Alt+T",
    hotKeys: (t)=>t.altKey && t.code === "KeyT"
};
function Lt(t) {
    let o = {
        ..._o,
        ...t
    }, e = t.stacked, [r, s] = (0, _react.useState)(!0), l = (0, _react.useRef)(null), { getToastToRender: a, isToastActive: d, count: c } = It(o), { className: T, style: g, rtl: v, containerId: x, hotKeys: C } = o;
    function S(f) {
        let p = (0, _clsxDefault.default)("Toastify__toast-container", `Toastify__toast-container--${f}`, {
            ["Toastify__toast-container--rtl"]: v
        });
        return P(T) ? T({
            position: f,
            rtl: v,
            defaultClassName: p
        }) : (0, _clsxDefault.default)(p, B(T));
    }
    function E() {
        e && (s(!0), y.play());
    }
    return Ot(()=>{
        var f;
        if (e) {
            let p = l.current.querySelectorAll('[data-in="true"]'), b = 12, i = (f = o.position) == null ? void 0 : f.includes("top"), n = 0, u = 0;
            Array.from(p).reverse().forEach((h, m)=>{
                let _ = h;
                _.classList.add("Toastify__toast--stacked"), m > 0 && (_.dataset.collapsed = `${r}`), _.dataset.pos || (_.dataset.pos = i ? "top" : "bot");
                let k = n * (r ? .2 : 1) + (r ? 0 : b * m);
                _.style.setProperty("--y", `${i ? k : k * -1}px`), _.style.setProperty("--g", `${b}`), _.style.setProperty("--s", `${1 - (r ? u : 0)}`), n += _.offsetHeight, u += .025;
            });
        }
    }, [
        r,
        c,
        e
    ]), (0, _react.useEffect)(()=>{
        function f(p) {
            var i;
            let b = l.current;
            C(p) && ((i = b.querySelector('[tabIndex="0"]')) == null || i.focus(), s(!1), y.pause()), p.key === "Escape" && (document.activeElement === b || b != null && b.contains(document.activeElement)) && (s(!0), y.play());
        }
        return document.addEventListener("keydown", f), ()=>{
            document.removeEventListener("keydown", f);
        };
    }, [
        C
    ]), (0, _reactDefault.default).createElement("section", {
        ref: l,
        className: "Toastify",
        id: x,
        onMouseEnter: ()=>{
            e && (s(!1), y.pause());
        },
        onMouseLeave: E,
        "aria-live": "polite",
        "aria-atomic": "false",
        "aria-relevant": "additions text",
        "aria-label": o["aria-label"]
    }, a((f, p)=>{
        let b = p.length ? {
            ...g
        } : {
            ...g,
            pointerEvents: "none"
        };
        return (0, _reactDefault.default).createElement("div", {
            tabIndex: -1,
            className: S(f),
            "data-stacked": e,
            style: b,
            key: `c-${f}`
        }, p.map(({ content: i, props: n })=>(0, _reactDefault.default).createElement(wt, {
                ...n,
                stacked: e,
                collapseAll: E,
                isIn: d(n.toastId, n.containerId),
                key: `t-${n.key}`
            }, i)));
    }));
}

},{"react":"jMk1U","clsx":"dOSJC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dOSJC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "clsx", ()=>clsx);
function r(e) {
    var t, f, n = "";
    if ("string" == typeof e || "number" == typeof e) n += e;
    else if ("object" == typeof e) {
        if (Array.isArray(e)) {
            var o = e.length;
            for(t = 0; t < o; t++)e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
        } else for(f in e)e[f] && (n && (n += " "), n += f);
    }
    return n;
}
function clsx() {
    for(var e, t, f = 0, n = "", o = arguments.length; f < o; f++)(e = arguments[f]) && (t = r(e)) && (n && (n += " "), n += t);
    return n;
}
exports.default = clsx;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gJP2Y":[function() {},{}],"lodru":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$149f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$149f.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$149f.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
// import { useSelector } from 'react-redux';
var _reactRouter = require("react-router");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactCookie = require("react-cookie");
var _reactToastify = require("react-toastify");
var _reactToastifyCss = require("react-toastify/dist/ReactToastify.css");
var _car = require("../../../../ManyMiles-backend/models/Car");
var _carDefault = parcelHelpers.interopDefault(_car);
var _carCard = require("../Car/CarCard");
var _carCardDefault = parcelHelpers.interopDefault(_carCard);
var _s = $RefreshSig$();
const Profile = ()=>{
    _s();
    const navigate = (0, _reactRouter.useNavigate)();
    const [cookies] = (0, _reactCookie.useCookies)([
        'accessToken'
    ]);
    const [profileData, setProfileData] = (0, _react.useState)(null);
    const [carData, setCarData] = (0, _react.useState)([]);
    (0, _react.useEffect)(()=>{
        const fetchProfile = async ()=>{
            try {
                if (!cookies.accessToken) {
                    navigate("/login");
                    return;
                }
                const res = await (0, _axiosDefault.default).get('http://localhost:5000/user/profile', {
                    headers: {
                        'Authorization': `Bearer ${cookies.accessToken}`
                    },
                    withCredentials: true
                });
                setProfileData(res.data.profileData.user); // Adjust based on your API response
                setCarData(res.data.profileData.car); // Adjust based on your API response
            //   const userAddedCar=await axios.get('http://localhost:5000/car/getCarByUserId',{ 
            //     headers: {
            //     'Authorization': `Bearer ${cookies.accessToken}`, 
            //   },
            //   withCredentials: true
            // });
            } catch (err) {
                console.error('Error fetching profile:', err);
                (0, _reactToastify.toast).error('Failed to fetch profile. Please try again.');
                navigate('/login');
            }
        };
        if (cookies.accessToken) fetchProfile();
        else navigate('/login');
    }, [
        cookies,
        navigate
    ]);
    if (!profileData) return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "flex justify-center items-center h-screen",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
            children: "Loading profile..."
        }, void 0, false, {
            fileName: "src/components/Authentication/Profile.js",
            lineNumber: 57,
            columnNumber: 11
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/Authentication/Profile.js",
        lineNumber: 56,
        columnNumber: 9
    }, undefined);
    const handleChange = (e)=>{
        const { name, value } = e.target;
        setProfileData({
            ...profileData,
            [name]: value
        });
    };
    const handleUpdate = async ()=>{
        try {
            const res = await (0, _axiosDefault.default).patch(`http://localhost:5000/user/update`, {
                ...profileData
            }, {
                headers: {
                    'Authorization': `Bearer ${cookies.accessToken}`
                },
                withCredentials: true
            });
            (0, _reactToastify.toast).success('Profile updated successfully!');
            setProfileData(res.data.user);
            navigate('/');
        } catch (error) {
            console.log(error);
            (0, _reactToastify.toast).error('Failed to update profile. Please try again.');
        }
    };
    const handleCancel = ()=>{
        navigate('/');
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "container mx-auto p-4",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h1", {
                className: "text-2xl font-semibold mb-4",
                children: "Profile"
            }, void 0, false, {
                fileName: "src/components/Authentication/Profile.js",
                lineNumber: 93,
                columnNumber: 5
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactToastify.ToastContainer), {}, void 0, false, {
                fileName: "src/components/Authentication/Profile.js",
                lineNumber: 94,
                columnNumber: 5
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "bg-white shadow rounded-lg p-6",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "mb-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                                className: "block mb-2",
                                children: "Name:"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 97,
                                columnNumber: 9
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                type: "text",
                                name: "name",
                                value: profileData.name || '',
                                onChange: handleChange,
                                className: "border p-2 w-full"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 98,
                                columnNumber: 9
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Authentication/Profile.js",
                        lineNumber: 96,
                        columnNumber: 7
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "mb-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                                className: "block mb-2",
                                children: "Email:"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 108,
                                columnNumber: 9
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                type: "email",
                                name: "email",
                                value: profileData.email || '',
                                onChange: handleChange,
                                className: "border p-2 w-full"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 109,
                                columnNumber: 9
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Authentication/Profile.js",
                        lineNumber: 107,
                        columnNumber: 7
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "mb-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                                className: "block mb-2",
                                children: "Contact Number:"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 119,
                                columnNumber: 9
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                type: "text",
                                name: "contactNo",
                                value: profileData.contactNo || '',
                                onChange: handleChange,
                                className: "border p-2 w-full"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 120,
                                columnNumber: 9
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Authentication/Profile.js",
                        lineNumber: 118,
                        columnNumber: 7
                    }, undefined),
                    profileData.driverLicense && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "mb-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                                className: "block mb-2",
                                children: "Driver's License:"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 131,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                children: "Number:"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 132,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                type: "text",
                                name: "driverLicense.number",
                                value: profileData.driverLicense.number || '',
                                onChange: handleChange,
                                className: "border p-2 w-full"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 133,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                children: "Expiry Date:"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 140,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                type: "date",
                                name: "driverLicense.expiryDate",
                                value: profileData.driverLicense.expiryDate ? new Date(profileData.driverLicense.expiryDate).toISOString().split('T')[0] : '',
                                onChange: handleChange,
                                className: "border p-2 w-full"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 141,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                children: [
                                    "Verified: ",
                                    profileData.driverLicense.verified ? 'Yes' : 'No'
                                ]
                            }, void 0, true, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 148,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Authentication/Profile.js",
                        lineNumber: 130,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "mb-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                                className: "block mb-2",
                                children: "Car Owner:"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 153,
                                columnNumber: 9
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("select", {
                                name: "isCarOwner",
                                value: profileData.isCarOwner,
                                onChange: handleChange,
                                className: "border p-2 w-full",
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("option", {
                                        value: true,
                                        children: "Yes"
                                    }, void 0, false, {
                                        fileName: "src/components/Authentication/Profile.js",
                                        lineNumber: 160,
                                        columnNumber: 11
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("option", {
                                        value: false,
                                        children: "No"
                                    }, void 0, false, {
                                        fileName: "src/components/Authentication/Profile.js",
                                        lineNumber: 161,
                                        columnNumber: 11
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 154,
                                columnNumber: 9
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Authentication/Profile.js",
                        lineNumber: 152,
                        columnNumber: 7
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex justify-end mt-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                onClick: handleUpdate,
                                className: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-2",
                                children: "Update"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 166,
                                columnNumber: 9
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                onClick: handleCancel,
                                className: "bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded",
                                children: "Cancel"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 172,
                                columnNumber: 9
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Authentication/Profile.js",
                        lineNumber: 165,
                        columnNumber: 7
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h1", {
                                className: "text-2xl font-semibold mb-4 mt-8",
                                children: "My Cars"
                            }, void 0, false, {
                                fileName: "src/components/Authentication/Profile.js",
                                lineNumber: 180,
                                columnNumber: 9
                            }, undefined),
                            carData.map((car)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _carCardDefault.default), {
                                    car: car
                                }, car._id, false, {
                                    fileName: "src/components/Authentication/Profile.js",
                                    lineNumber: 182,
                                    columnNumber: 19
                                }, undefined))
                        ]
                    }, void 0, true, {
                        fileName: "src/components/Authentication/Profile.js",
                        lineNumber: 179,
                        columnNumber: 7
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/components/Authentication/Profile.js",
                lineNumber: 95,
                columnNumber: 5
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/components/Authentication/Profile.js",
        lineNumber: 92,
        columnNumber: 5
    }, undefined);
};
_s(Profile, "QrmphtvDXy6foH5Hk9kbHpbGrF8=", false, function() {
    return [
        (0, _reactRouter.useNavigate),
        (0, _reactCookie.useCookies)
    ];
});
_c = Profile;
exports.default = Profile;
var _c;
$RefreshReg$(_c, "Profile");

  $parcel$ReactRefreshHelpers$149f.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-router":"2jawN","axios":"kooH4","react-cookie":"59JzK","react-toastify":"xSqu1","react-toastify/dist/ReactToastify.css":"gJP2Y","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi","../../../../ManyMiles-backend/models/Car":"hfFhU","../Car/CarCard":"cHNq8"}],"gJP2Y":[function() {},{}],"hfFhU":[function(require,module,exports,__globalThis) {
const mongoose = require("7c01137cae397996");
//CAR SCHEMA FOR THE DATABASE
/* FIELDS IN THE USER SCHEMA
    - Owner
    - make
    - model
    - year
    - licensePlate
    - photos
    - description
    - features
    - pricePerDay
    - location
        - type
        - coordinates
        - address
        - city
        - state
        - zipCode
    - availability
        - startDate
        - endDate
    - insurance
        - policyNumber
        - provider
        - coverageType
        - expiryDate
        - verified
    - reviews
        - user
        - rating
        - comment
    - averageRating
    - createdAt

 */ const CarSchema = new mongoose.Schema({
    owner: {
        type: mongoose.Schema.ObjectId,
        ref: 'User',
        required: true
    },
    make: {
        type: String,
        required: [
            true,
            'Please add the car make'
        ]
    },
    model: {
        type: String,
        required: [
            true,
            'Please add the car model'
        ]
    },
    year: {
        type: Number,
        required: [
            true,
            'Please add the car year'
        ]
    },
    licensePlate: {
        type: String,
        required: [
            true,
            'Please add license plate number'
        ],
        unique: true
    },
    images: [
        String
    ],
    description: {
        type: String,
        required: [
            true,
            'Please add a description'
        ],
        maxlength: [
            500,
            'Description cannot be more than 500 characters'
        ]
    },
    features: [
        String
    ],
    pricePerDay: {
        type: Number,
        required: [
            true,
            'Please add a price per day'
        ]
    },
    location: {
        type: {
            type: String,
            enum: [
                'Point'
            ],
            default: 'Point'
        },
        coordinates: {
            type: [
                Number
            ],
            index: '2dsphere'
        },
        address: String,
        city: String,
        state: String,
        zipCode: String
    },
    availability: [
        {
            startDate: Date,
            startTime: String,
            endDate: Date,
            endTime: String
        }
    ],
    insurance: {
        policyNumber: String,
        provider: String,
        coverageType: String,
        expiryDate: Date,
        verified: {
            type: Boolean,
            default: false
        }
    },
    reviews: [
        {
            user: {
                type: mongoose.Schema.ObjectId,
                ref: 'User',
                required: true
            },
            rating: {
                type: Number,
                min: 1,
                max: 5,
                required: true
            },
            comment: String,
            createdAt: {
                type: Date,
                default: Date.now
            }
        }
    ],
    averageRating: {
        type: Number,
        min: 1,
        max: 5
    },
    createdAt: {
        type: Date,
        default: Date.now
    }
});
module.exports = mongoose.model('Car', CarSchema);

},{"7c01137cae397996":"bV8zn"}],"bV8zn":[function(require,module,exports,__globalThis) {
/*! For license information please see browser.umd.js.LICENSE.txt */ !function(t, e) {
    module.exports = e();
}("undefined" != typeof self ? self : this, ()=>(()=>{
        var t = {
            2: (t, e, r)=>{
                var n = r(5832), i = n.Buffer;
                function o(t, e) {
                    for(var r in t)e[r] = t[r];
                }
                function a(t, e, r) {
                    return i(t, e, r);
                }
                i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t.exports = n : (o(n, e), e.Buffer = a), o(i, a), a.from = function(t, e, r) {
                    if ("number" == typeof t) throw new TypeError("Argument must not be a number");
                    return i(t, e, r);
                }, a.alloc = function(t, e, r) {
                    if ("number" != typeof t) throw new TypeError("Argument must be a number");
                    var n = i(t);
                    return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n;
                }, a.allocUnsafe = function(t) {
                    if ("number" != typeof t) throw new TypeError("Argument must be a number");
                    return i(t);
                }, a.allocUnsafeSlow = function(t) {
                    if ("number" != typeof t) throw new TypeError("Argument must be a number");
                    return n.SlowBuffer(t);
                };
            },
            68: (t, e, r)=>{
                var n = r(1679), i = r(1485), o = r(9732).Buffer, a = [
                    1518500249,
                    1859775393,
                    -1894007588,
                    -899497514
                ], s = new Array(80);
                function u() {
                    this.init(), this._w = s, i.call(this, 64, 56);
                }
                function c(t) {
                    return t << 5 | t >>> 27;
                }
                function f(t) {
                    return t << 30 | t >>> 2;
                }
                function l(t, e, r, n) {
                    return 0 === t ? e & r | ~e & n : 2 === t ? e & r | e & n | r & n : e ^ r ^ n;
                }
                n(u, i), u.prototype.init = function() {
                    return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
                }, u.prototype._update = function(t) {
                    for(var e, r = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, s = 0 | this._d, u = 0 | this._e, h = 0; h < 16; ++h)r[h] = t.readInt32BE(4 * h);
                    for(; h < 80; ++h)r[h] = (e = r[h - 3] ^ r[h - 8] ^ r[h - 14] ^ r[h - 16]) << 1 | e >>> 31;
                    for(var p = 0; p < 80; ++p){
                        var d = ~~(p / 20), y = c(n) + l(d, i, o, s) + u + r[p] + a[d] | 0;
                        u = s, s = o, o = f(i), i = n, n = y;
                    }
                    this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = s + this._d | 0, this._e = u + this._e | 0;
                }, u.prototype._hash = function() {
                    var t = o.allocUnsafe(20);
                    return t.writeInt32BE(0 | this._a, 0), t.writeInt32BE(0 | this._b, 4), t.writeInt32BE(0 | this._c, 8), t.writeInt32BE(0 | this._d, 12), t.writeInt32BE(0 | this._e, 16), t;
                }, t.exports = u;
            },
            118: (t)=>{
                "use strict";
                t.exports = function(t) {
                    return t != t;
                };
            },
            136: (t, e, r)=>{
                "use strict";
                var n = r(2).Buffer, i = n.isEncoding || function(t) {
                    switch((t = "" + t) && t.toLowerCase()){
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                        case "raw":
                            return !0;
                        default:
                            return !1;
                    }
                };
                function o(t) {
                    var e;
                    switch(this.encoding = function(t) {
                        var e = function(t) {
                            if (!t) return "utf8";
                            for(var e;;)switch(t){
                                case "utf8":
                                case "utf-8":
                                    return "utf8";
                                case "ucs2":
                                case "ucs-2":
                                case "utf16le":
                                case "utf-16le":
                                    return "utf16le";
                                case "latin1":
                                case "binary":
                                    return "latin1";
                                case "base64":
                                case "ascii":
                                case "hex":
                                    return t;
                                default:
                                    if (e) return;
                                    t = ("" + t).toLowerCase(), e = !0;
                            }
                        }(t);
                        if ("string" != typeof e && (n.isEncoding === i || !i(t))) throw new Error("Unknown encoding: " + t);
                        return e || t;
                    }(t), this.encoding){
                        case "utf16le":
                            this.text = u, this.end = c, e = 4;
                            break;
                        case "utf8":
                            this.fillLast = s, e = 4;
                            break;
                        case "base64":
                            this.text = f, this.end = l, e = 3;
                            break;
                        default:
                            return this.write = h, void (this.end = p);
                    }
                    this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n.allocUnsafe(e);
                }
                function a(t) {
                    return t <= 127 ? 0 : t >> 5 == 6 ? 2 : t >> 4 == 14 ? 3 : t >> 3 == 30 ? 4 : t >> 6 == 2 ? -1 : -2;
                }
                function s(t) {
                    var e = this.lastTotal - this.lastNeed, r = function(t, e) {
                        if (128 != (192 & e[0])) return t.lastNeed = 0, "\uFFFD";
                        if (t.lastNeed > 1 && e.length > 1) {
                            if (128 != (192 & e[1])) return t.lastNeed = 1, "\uFFFD";
                            if (t.lastNeed > 2 && e.length > 2 && 128 != (192 & e[2])) return t.lastNeed = 2, "\uFFFD";
                        }
                    }(this, t);
                    return void 0 !== r ? r : this.lastNeed <= t.length ? (t.copy(this.lastChar, e, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (t.copy(this.lastChar, e, 0, t.length), void (this.lastNeed -= t.length));
                }
                function u(t, e) {
                    if ((t.length - e) % 2 == 0) {
                        var r = t.toString("utf16le", e);
                        if (r) {
                            var n = r.charCodeAt(r.length - 1);
                            if (n >= 55296 && n <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1], r.slice(0, -1);
                        }
                        return r;
                    }
                    return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t[t.length - 1], t.toString("utf16le", e, t.length - 1);
                }
                function c(t) {
                    var e = t && t.length ? this.write(t) : "";
                    if (this.lastNeed) {
                        var r = this.lastTotal - this.lastNeed;
                        return e + this.lastChar.toString("utf16le", 0, r);
                    }
                    return e;
                }
                function f(t, e) {
                    var r = (t.length - e) % 3;
                    return 0 === r ? t.toString("base64", e) : (this.lastNeed = 3 - r, this.lastTotal = 3, 1 === r ? this.lastChar[0] = t[t.length - 1] : (this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1]), t.toString("base64", e, t.length - r));
                }
                function l(t) {
                    var e = t && t.length ? this.write(t) : "";
                    return this.lastNeed ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e;
                }
                function h(t) {
                    return t.toString(this.encoding);
                }
                function p(t) {
                    return t && t.length ? this.write(t) : "";
                }
                e.I = o, o.prototype.write = function(t) {
                    if (0 === t.length) return "";
                    var e, r;
                    if (this.lastNeed) {
                        if (void 0 === (e = this.fillLast(t))) return "";
                        r = this.lastNeed, this.lastNeed = 0;
                    } else r = 0;
                    return r < t.length ? e ? e + this.text(t, r) : this.text(t, r) : e || "";
                }, o.prototype.end = function(t) {
                    var e = t && t.length ? this.write(t) : "";
                    return this.lastNeed ? e + "\uFFFD" : e;
                }, o.prototype.text = function(t, e) {
                    var r = function(t, e, r) {
                        var n = e.length - 1;
                        if (n < r) return 0;
                        var i = a(e[n]);
                        return i >= 0 ? (i > 0 && (t.lastNeed = i - 1), i) : --n < r || -2 === i ? 0 : (i = a(e[n])) >= 0 ? (i > 0 && (t.lastNeed = i - 2), i) : --n < r || -2 === i ? 0 : (i = a(e[n])) >= 0 ? (i > 0 && (2 === i ? i = 0 : t.lastNeed = i - 3), i) : 0;
                    }(this, t, e);
                    if (!this.lastNeed) return t.toString("utf8", e);
                    this.lastTotal = r;
                    var n = t.length - (r - this.lastNeed);
                    return t.copy(this.lastChar, 0, n), t.toString("utf8", e, n);
                }, o.prototype.fillLast = function(t) {
                    if (this.lastNeed <= t.length) return t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                    t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length), this.lastNeed -= t.length;
                };
            },
            170: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(3609), o = r(8995), a = r(7768), s = r(7236), u = new Set([
                    "$and",
                    "$or"
                ]), c = new Set([
                    "$cmp",
                    "$eq",
                    "$lt",
                    "$lte",
                    "$gt",
                    "$gte"
                ]), f = new Set([
                    "$multiply",
                    "$divide",
                    "$log",
                    "$mod",
                    "$trunc",
                    "$avg",
                    "$max",
                    "$min",
                    "$stdDevPop",
                    "$stdDevSamp",
                    "$sum"
                ]), l = new Set([
                    "$abs",
                    "$exp",
                    "$ceil",
                    "$floor",
                    "$ln",
                    "$log10",
                    "$sqrt",
                    "$sin",
                    "$cos",
                    "$tan",
                    "$asin",
                    "$acos",
                    "$atan",
                    "$atan2",
                    "$asinh",
                    "$acosh",
                    "$atanh",
                    "$sinh",
                    "$cosh",
                    "$tanh",
                    "$degreesToRadians",
                    "$radiansToDegrees"
                ]), h = new Set([
                    "$arrayElemAt",
                    "$first",
                    "$last"
                ]), p = new Set([
                    "$year",
                    "$month",
                    "$week",
                    "$dayOfMonth",
                    "$dayOfYear",
                    "$hour",
                    "$minute",
                    "$second",
                    "$isoDayOfWeek",
                    "$isoWeekYear",
                    "$isoWeek",
                    "$millisecond"
                ]), d = new Set([
                    "$not"
                ]);
                function y(t, e, r) {
                    if (g(t) || null === t) return t;
                    null != t.$cond ? Array.isArray(t.$cond) ? t.$cond = t.$cond.map(function(t) {
                        return y(t, e, r);
                    }) : (t.$cond.if = y(t.$cond.if, e, r), t.$cond.then = y(t.$cond.then, e, r), t.$cond.else = y(t.$cond.else, e, r)) : null != t.$ifNull ? t.$ifNull.map(function(t) {
                        return y(t, e, r);
                    }) : null != t.$switch && (Array.isArray(t.$switch.branches) && (t.$switch.branches = t.$switch.branches.map(function(t) {
                        return y(t, e, r);
                    })), "default" in t.$switch && (t.$switch.default = y(t.$switch.default, e, r)));
                    for(var n = 0, a = Object.keys(t); n < a.length; n++){
                        var h = a[n];
                        u.has(h) ? t[h] = t[h].map(function(t) {
                            return y(t, e, r);
                        }) : c.has(h) ? t[h] = v(t[h], e, r) : f.has(h) ? t[h] = m(t[h]) : l.has(h) ? t[h] = b(t[h]) : d.has(h) && (t[h] = y(t[h], e, r));
                    }
                    if (t.$in && (t.$in = function(t, e, r) {
                        var n = t[1];
                        if (!g(n)) return t;
                        var i = t[0], a = e.path(n.slice(1));
                        if (null !== a) {
                            if (!a.$isMongooseArray) throw new Error("Path must be an array for $in");
                            return [
                                a.$isMongooseDocumentArray ? a.$embeddedSchemaType.cast(i) : a.caster.cast(i),
                                n
                            ];
                        }
                        if (!1 === r) return t;
                        if ("throw" === r) throw new o("$in");
                    }(t.$in, e, r)), t.$size && (t.$size = b(t.$size)), t.$round) {
                        var p = t.$round;
                        if (!Array.isArray(p) || p.length < 1 || p.length > 2) throw new i("Array", p, "$round");
                        t.$round = p.map(function(t) {
                            return b(t);
                        });
                    }
                    return s(t), t;
                }
                function b(t) {
                    if (!_(t)) return t;
                    try {
                        return a(t);
                    } catch (e) {
                        throw new i("Number", t);
                    }
                }
                function m(t) {
                    if (!Array.isArray(t)) {
                        if (!_(t)) return t;
                        try {
                            return a(t);
                        } catch (e) {
                            throw new i("Number", t);
                        }
                    }
                    return t.map(function(t) {
                        if (!_(t)) return t;
                        try {
                            return a(t);
                        } catch (e) {
                            throw new i("Number", t);
                        }
                    });
                }
                function v(t, e, r) {
                    if (!Array.isArray(t) || 2 !== t.length) throw new Error("Comparison operator must be an array of length 2");
                    t[0] = y(t[0], e, r);
                    var s = t[0];
                    if (_(t[1])) {
                        var u = null, c = null, f = null;
                        if (g(s)) u = s.slice(1), c = e.path(u);
                        else if ("object" === n(s) && null != s) for(var l = 0, d = Object.keys(s); l < d.length; l++){
                            var b = d[l];
                            p.has(b) && g(s[b]) ? (u = s[b].slice(1) + "." + b, f = a) : h.has(b) && g(s[b]) && (u = s[b].slice(1) + "." + b, null != (c = e.path(s[b].slice(1))) && (c.$isMongooseDocumentArray ? c = c.$embeddedSchemaType : c.$isMongooseArray && (c = c.caster)));
                        }
                        var m = "object" === n(t[1]) && null != t[1] && null != t[1].$literal;
                        if (null != c) t[1] = m ? {
                            $literal: c.cast(t[1].$literal)
                        } : c.cast(t[1]);
                        else if (null != f) {
                            if (m) try {
                                t[1] = {
                                    $literal: f(t[1].$literal)
                                };
                            } catch (e) {
                                throw new i(f.name.replace(/^cast/, ""), t[1], u + ".$literal");
                            }
                            else try {
                                t[1] = f(t[1]);
                            } catch (e) {
                                throw new i(f.name.replace(/^cast/, ""), t[1], u);
                            }
                        } else {
                            if (null != u && !0 === r) return;
                            if (null != u && "throw" === r) throw new o(u);
                        }
                    } else t[1] = y(t[1]);
                    return t;
                }
                function g(t) {
                    return "string" == typeof t && "$" === t[0];
                }
                function _(t) {
                    return !("string" == typeof t && "$" === t[0] || "object" === n(t) && null !== t && Object.keys(t).find(function(t) {
                        return "$" === t[0];
                    }) && null == t.$literal);
                }
                t.exports = function(t, e, r) {
                    if ("object" !== n(t) || null === t) throw new Error("`$expr` must be an object");
                    return y(t, e, r);
                };
            },
            198: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                var r = {};
                function n(t, e, n) {
                    n || (n = Error);
                    var i = function(t) {
                        var r, n;
                        function i(r, n, i) {
                            return t.call(this, function(t, r, n) {
                                return "string" == typeof e ? e : e(t, r, n);
                            }(r, n, i)) || this;
                        }
                        return n = t, (r = i).prototype = Object.create(n.prototype), r.prototype.constructor = r, r.__proto__ = n, i;
                    }(n);
                    i.prototype.name = n.name, i.prototype.code = t, r[t] = i;
                }
                function i(t, e) {
                    if (Array.isArray(t)) {
                        var r = t.length;
                        return t = t.map(function(t) {
                            return String(t);
                        }), r > 2 ? "one of ".concat(e, " ").concat(t.slice(0, r - 1).join(", "), ", or ") + t[r - 1] : 2 === r ? "one of ".concat(e, " ").concat(t[0], " or ").concat(t[1]) : "of ".concat(e, " ").concat(t[0]);
                    }
                    return "of ".concat(e, " ").concat(String(t));
                }
                n("ERR_INVALID_OPT_VALUE", function(t, e) {
                    return 'The value "' + e + '" is invalid for option "' + t + '"';
                }, TypeError), n("ERR_INVALID_ARG_TYPE", function(t, r, n) {
                    var o, a, s, u, c;
                    if ("string" == typeof r && (a = "not ", r.substr(0, 4) === a) ? (o = "must not be", r = r.replace(/^not /, "")) : o = "must be", function(t, e, r) {
                        return (void 0 === r || r > t.length) && (r = t.length), t.substring(r - 9, r) === e;
                    }(t, " argument")) s = "The ".concat(t, " ").concat(o, " ").concat(i(r, "type"));
                    else {
                        var f = ("number" != typeof c && (c = 0), c + 1 > (u = t).length || -1 === u.indexOf(".", c) ? "argument" : "property");
                        s = 'The "'.concat(t, '" ').concat(f, " ").concat(o, " ").concat(i(r, "type"));
                    }
                    return s + ". Received type ".concat(e(n));
                }, TypeError), n("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), n("ERR_METHOD_NOT_IMPLEMENTED", function(t) {
                    return "The " + t + " method is not implemented";
                }), n("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), n("ERR_STREAM_DESTROYED", function(t) {
                    return "Cannot call " + t + " after a stream was destroyed";
                }), n("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), n("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), n("ERR_STREAM_WRITE_AFTER_END", "write after end"), n("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), n("ERR_UNKNOWN_ENCODING", function(t) {
                    return "Unknown encoding: " + t;
                }, TypeError), n("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), t.exports.F = r;
            },
            208: (t, e, r)=>{
                "use strict";
                var n = r(1970), i = n.assert, o = n.parseBytes, a = n.cachedProperty;
                function s(t, e) {
                    this.eddsa = t, this._secret = o(e.secret), t.isPoint(e.pub) ? this._pub = e.pub : this._pubBytes = o(e.pub);
                }
                s.fromPublic = function(t, e) {
                    return e instanceof s ? e : new s(t, {
                        pub: e
                    });
                }, s.fromSecret = function(t, e) {
                    return e instanceof s ? e : new s(t, {
                        secret: e
                    });
                }, s.prototype.secret = function() {
                    return this._secret;
                }, a(s, "pubBytes", function() {
                    return this.eddsa.encodePoint(this.pub());
                }), a(s, "pub", function() {
                    return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
                }), a(s, "privBytes", function() {
                    var t = this.eddsa, e = this.hash(), r = t.encodingLength - 1, n = e.slice(0, t.encodingLength);
                    return n[0] &= 248, n[r] &= 127, n[r] |= 64, n;
                }), a(s, "priv", function() {
                    return this.eddsa.decodeInt(this.privBytes());
                }), a(s, "hash", function() {
                    return this.eddsa.hash().update(this.secret()).digest();
                }), a(s, "messagePrefix", function() {
                    return this.hash().slice(this.eddsa.encodingLength);
                }), s.prototype.sign = function(t) {
                    return i(this._secret, "KeyPair can only verify"), this.eddsa.sign(t, this);
                }, s.prototype.verify = function(t, e) {
                    return this.eddsa.verify(t, e, this);
                }, s.prototype.getSecret = function(t) {
                    return i(this._secret, "KeyPair is public only"), n.encode(this.secret(), t);
                }, s.prototype.getPublic = function(t) {
                    return n.encode(this.pubBytes(), t);
                }, t.exports = s;
            },
            209: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(2403), o = r(5825), a = r(8964);
                t.exports = i ? function(t) {
                    return i(t);
                } : o ? function(t) {
                    if (!t || "object" !== n(t) && "function" != typeof t) throw new TypeError("getProto: not an object");
                    return o(t);
                } : a ? function(t) {
                    return a(t);
                } : null;
            },
            241: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e() {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, arguments);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8879)), u = r(5761);
                Object.defineProperty(s.prototype, "of", u), t.exports = s;
            },
            245: (t, e, r)=>{
                var n = r(3989), i = r(1058), o = r(3261), a = r(9732).Buffer, s = r(9217), u = r(594), c = r(6661), f = a.alloc(128), l = {
                    md5: 16,
                    sha1: 20,
                    sha224: 28,
                    sha256: 32,
                    sha384: 48,
                    sha512: 64,
                    rmd160: 20,
                    ripemd160: 20
                };
                function h(t, e, r) {
                    var s = function(t) {
                        return "rmd160" === t || "ripemd160" === t ? function(t) {
                            return (new i).update(t).digest();
                        } : "md5" === t ? n : function(e) {
                            return o(t).update(e).digest();
                        };
                    }(t), u = "sha512" === t || "sha384" === t ? 128 : 64;
                    e.length > u ? e = s(e) : e.length < u && (e = a.concat([
                        e,
                        f
                    ], u));
                    for(var c = a.allocUnsafe(u + l[t]), h = a.allocUnsafe(u + l[t]), p = 0; p < u; p++)c[p] = 54 ^ e[p], h[p] = 92 ^ e[p];
                    var d = a.allocUnsafe(u + r + 4);
                    c.copy(d, 0, 0, u), this.ipad1 = d, this.ipad2 = c, this.opad = h, this.alg = t, this.blocksize = u, this.hash = s, this.size = l[t];
                }
                h.prototype.run = function(t, e) {
                    return t.copy(e, this.blocksize), this.hash(e).copy(this.opad, this.blocksize), this.hash(this.opad);
                }, t.exports = function(t, e, r, n, i) {
                    s(r, n);
                    var o = new h(i = i || "sha1", t = c(t, u, "Password"), (e = c(e, u, "Salt")).length), f = a.allocUnsafe(n), p = a.allocUnsafe(e.length + 4);
                    e.copy(p, 0, 0, e.length);
                    for(var d = 0, y = l[i], b = Math.ceil(n / y), m = 1; m <= b; m++){
                        p.writeUInt32BE(m, e.length);
                        for(var v = o.run(p, o.ipad1), g = v, _ = 1; _ < r; _++){
                            g = o.run(g, o.ipad2);
                            for(var w = 0; w < y; w++)v[w] ^= g[w];
                        }
                        v.copy(f, d), d += y;
                    }
                    return f;
                };
            },
            354: (t)=>{
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                var r = 1e3, n = 60 * r, i = 60 * n, o = 24 * i, a = 7 * o;
                function s(t, e, r, n) {
                    var i = e >= 1.5 * r;
                    return Math.round(t / r) + " " + n + (i ? "s" : "");
                }
                t.exports = function(t, u) {
                    u = u || {};
                    var c, f, l = e(t);
                    if ("string" === l && t.length > 0) return function(t) {
                        if (!((t = String(t)).length > 100)) {
                            var e = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);
                            if (e) {
                                var s = parseFloat(e[1]);
                                switch((e[2] || "ms").toLowerCase()){
                                    case "years":
                                    case "year":
                                    case "yrs":
                                    case "yr":
                                    case "y":
                                        return 315576e5 * s;
                                    case "weeks":
                                    case "week":
                                    case "w":
                                        return s * a;
                                    case "days":
                                    case "day":
                                    case "d":
                                        return s * o;
                                    case "hours":
                                    case "hour":
                                    case "hrs":
                                    case "hr":
                                    case "h":
                                        return s * i;
                                    case "minutes":
                                    case "minute":
                                    case "mins":
                                    case "min":
                                    case "m":
                                        return s * n;
                                    case "seconds":
                                    case "second":
                                    case "secs":
                                    case "sec":
                                    case "s":
                                        return s * r;
                                    case "milliseconds":
                                    case "millisecond":
                                    case "msecs":
                                    case "msec":
                                    case "ms":
                                        return s;
                                    default:
                                        return;
                                }
                            }
                        }
                    }(t);
                    if ("number" === l && isFinite(t)) return u.long ? (c = t, (f = Math.abs(c)) >= o ? s(c, f, o, "day") : f >= i ? s(c, f, i, "hour") : f >= n ? s(c, f, n, "minute") : f >= r ? s(c, f, r, "second") : c + " ms") : function(t) {
                        var e = Math.abs(t);
                        return e >= o ? Math.round(t / o) + "d" : e >= i ? Math.round(t / i) + "h" : e >= n ? Math.round(t / n) + "m" : e >= r ? Math.round(t / r) + "s" : t + "ms";
                    }(t);
                    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t));
                };
            },
            365: (t, e, r)=>{
                "use strict";
                var n = r(3528);
                function i(t) {
                    this.options = t, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0, this.padding = !1 !== t.padding;
                }
                t.exports = i, i.prototype._init = function() {}, i.prototype.update = function(t) {
                    return 0 === t.length ? [] : "decrypt" === this.type ? this._updateDecrypt(t) : this._updateEncrypt(t);
                }, i.prototype._buffer = function(t, e) {
                    for(var r = Math.min(this.buffer.length - this.bufferOff, t.length - e), n = 0; n < r; n++)this.buffer[this.bufferOff + n] = t[e + n];
                    return this.bufferOff += r, r;
                }, i.prototype._flushBuffer = function(t, e) {
                    return this._update(this.buffer, 0, t, e), this.bufferOff = 0, this.blockSize;
                }, i.prototype._updateEncrypt = function(t) {
                    var e = 0, r = 0, n = (this.bufferOff + t.length) / this.blockSize | 0, i = new Array(n * this.blockSize);
                    0 !== this.bufferOff && (e += this._buffer(t, e), this.bufferOff === this.buffer.length && (r += this._flushBuffer(i, r)));
                    for(var o = t.length - (t.length - e) % this.blockSize; e < o; e += this.blockSize)this._update(t, e, i, r), r += this.blockSize;
                    for(; e < t.length; e++, this.bufferOff++)this.buffer[this.bufferOff] = t[e];
                    return i;
                }, i.prototype._updateDecrypt = function(t) {
                    for(var e = 0, r = 0, n = Math.ceil((this.bufferOff + t.length) / this.blockSize) - 1, i = new Array(n * this.blockSize); n > 0; n--)e += this._buffer(t, e), r += this._flushBuffer(i, r);
                    return e += this._buffer(t, e), i;
                }, i.prototype.final = function(t) {
                    var e, r;
                    return t && (e = this.update(t)), r = "encrypt" === this.type ? this._finalEncrypt() : this._finalDecrypt(), e ? e.concat(r) : r;
                }, i.prototype._pad = function(t, e) {
                    if (0 === e) return !1;
                    for(; e < t.length;)t[e++] = 0;
                    return !0;
                }, i.prototype._finalEncrypt = function() {
                    if (!this._pad(this.buffer, this.bufferOff)) return [];
                    var t = new Array(this.blockSize);
                    return this._update(this.buffer, 0, t, 0), t;
                }, i.prototype._unpad = function(t) {
                    return t;
                }, i.prototype._finalDecrypt = function() {
                    n.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
                    var t = new Array(this.blockSize);
                    return this._flushBuffer(t, 0), this._unpad(t);
                };
            },
            425: (t, e, r)=>{
                var n = r(8050);
                e.tagClass = {
                    0: "universal",
                    1: "application",
                    2: "context",
                    3: "private"
                }, e.tagClassByName = n._reverse(e.tagClass), e.tag = {
                    0: "end",
                    1: "bool",
                    2: "int",
                    3: "bitstr",
                    4: "octstr",
                    5: "null_",
                    6: "objid",
                    7: "objDesc",
                    8: "external",
                    9: "real",
                    10: "enum",
                    11: "embed",
                    12: "utf8str",
                    13: "relativeOid",
                    16: "seq",
                    17: "set",
                    18: "numstr",
                    19: "printstr",
                    20: "t61str",
                    21: "videostr",
                    22: "ia5str",
                    23: "utctime",
                    24: "gentime",
                    25: "graphstr",
                    26: "iso646str",
                    27: "genstr",
                    28: "unistr",
                    29: "charstr",
                    30: "bmpstr"
                }, e.tagByName = n._reverse(e.tag);
            },
            433: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? i(Object(r), !0).forEach(function(e) {
                            a(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function a(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var s = r(3609), u = r(6426), c = r(5413), f = r(4327), l = r(9460);
                function h(t, e) {
                    u.call(this, t, e, "Int32");
                }
                function p(t, e) {
                    return this.castForQuery(null, t, e);
                }
                h.schemaName = "Int32", h.defaultOptions = {}, h.prototype = Object.create(u.prototype), h.prototype.constructor = h, h._cast = c, h.set = u.set, h.setters = [], h.get = u.get, h._defaultCaster = function(t) {
                    if (null != t && ("number" != typeof t || t !== (0 | t) || t < -2147483648 || t > 2147483647)) throw new Error;
                    return t;
                }, h.cast = function(t) {
                    return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
                }, h._checkRequired = function(t) {
                    return null != t;
                }, h.checkRequired = u.checkRequired, h.prototype.checkRequired = function(t) {
                    return this.constructor._checkRequired(t);
                }, h.prototype.cast = function(t) {
                    var e;
                    e = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : h.cast();
                    try {
                        return e(t);
                    } catch (e) {
                        throw new s("Int32", t, this.path, e, this);
                    }
                }, h.$conditionalHandlers = o(o({}, u.prototype.$conditionalHandlers), {}, {
                    $gt: p,
                    $gte: p,
                    $lt: p,
                    $lte: p,
                    $bitsAllClear: l,
                    $bitsAnyClear: l,
                    $bitsAllSet: l,
                    $bitsAnySet: l
                }), h.prototype.castForQuery = function(t, e, r) {
                    var n;
                    if (null != t) return (n = h.$conditionalHandlers[t]) ? n.call(this, e) : this.applySetters(e, r);
                    try {
                        return this.applySetters(e, r);
                    } catch (t) {
                        throw t instanceof s && t.path === this.path && null != this.$fullPath && (t.path = this.$fullPath), t;
                    }
                }, h.prototype.toJSONSchema = function(t) {
                    var e = this.options.required && "function" != typeof this.options.required;
                    return f("number", "int", null == t ? void 0 : t.useBsonType, e);
                }, t.exports = h;
            },
            486: (t)=>{
                "use strict";
                t.exports = function(t) {
                    var e = {
                        _id: {
                            auto: !0
                        }
                    };
                    e._id[t.options.typeKey] = "ObjectId", t.add(e);
                };
            },
            533: (t, e, r)=>{
                "use strict";
                var n = r(8213), i = r(7352);
                t.exports = function(t, e) {
                    if ("string" != typeof t && "function" != typeof t) throw new n('Invalid ref at path "' + e + '". Got ' + i.inspect(t, {
                        depth: 0
                    }));
                };
            },
            542: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                t.exports = function(t) {
                    return !!t && ("object" === e(t) || "function" == typeof t) && "function" == typeof t.then;
                };
            },
            594: (t, e, r)=>{
                var n;
                n = r.g.process && r.g.process.browser ? "utf-8" : r.g.process && r.g.process.version ? parseInt(({
                    env: {}
                }).version.split(".")[0].slice(1), 10) >= 6 ? "utf-8" : "binary" : "utf-8", t.exports = n;
            },
            601: (t, e, r)=>{
                "use strict";
                var n = r(4685), i = r(7695), o = n.rotl32, a = n.sum32, s = n.sum32_3, u = n.sum32_4, c = i.BlockHash;
                function f() {
                    if (!(this instanceof f)) return new f;
                    c.call(this), this.h = [
                        1732584193,
                        4023233417,
                        2562383102,
                        271733878,
                        3285377520
                    ], this.endian = "little";
                }
                function l(t, e, r, n) {
                    return t <= 15 ? e ^ r ^ n : t <= 31 ? e & r | ~e & n : t <= 47 ? (e | ~r) ^ n : t <= 63 ? e & n | r & ~n : e ^ (r | ~n);
                }
                function h(t) {
                    return t <= 15 ? 0 : t <= 31 ? 1518500249 : t <= 47 ? 1859775393 : t <= 63 ? 2400959708 : 2840853838;
                }
                function p(t) {
                    return t <= 15 ? 1352829926 : t <= 31 ? 1548603684 : t <= 47 ? 1836072691 : t <= 63 ? 2053994217 : 0;
                }
                n.inherits(f, c), e.ripemd160 = f, f.blockSize = 512, f.outSize = 160, f.hmacStrength = 192, f.padLength = 64, f.prototype._update = function(t, e) {
                    for(var r = this.h[0], n = this.h[1], i = this.h[2], c = this.h[3], f = this.h[4], v = r, g = n, _ = i, w = c, S = f, O = 0; O < 80; O++){
                        var j = a(o(u(r, l(O, n, i, c), t[d[O] + e], h(O)), b[O]), f);
                        r = f, f = c, c = o(i, 10), i = n, n = j, j = a(o(u(v, l(79 - O, g, _, w), t[y[O] + e], p(O)), m[O]), S), v = S, S = w, w = o(_, 10), _ = g, g = j;
                    }
                    j = s(this.h[1], i, w), this.h[1] = s(this.h[2], c, S), this.h[2] = s(this.h[3], f, v), this.h[3] = s(this.h[4], r, g), this.h[4] = s(this.h[0], n, _), this.h[0] = j;
                }, f.prototype._digest = function(t) {
                    return "hex" === t ? n.toHex32(this.h, "little") : n.split32(this.h, "little");
                };
                var d = [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    7,
                    4,
                    13,
                    1,
                    10,
                    6,
                    15,
                    3,
                    12,
                    0,
                    9,
                    5,
                    2,
                    14,
                    11,
                    8,
                    3,
                    10,
                    14,
                    4,
                    9,
                    15,
                    8,
                    1,
                    2,
                    7,
                    0,
                    6,
                    13,
                    11,
                    5,
                    12,
                    1,
                    9,
                    11,
                    10,
                    0,
                    8,
                    12,
                    4,
                    13,
                    3,
                    7,
                    15,
                    14,
                    5,
                    6,
                    2,
                    4,
                    0,
                    5,
                    9,
                    7,
                    12,
                    2,
                    10,
                    14,
                    1,
                    3,
                    8,
                    11,
                    6,
                    15,
                    13
                ], y = [
                    5,
                    14,
                    7,
                    0,
                    9,
                    2,
                    11,
                    4,
                    13,
                    6,
                    15,
                    8,
                    1,
                    10,
                    3,
                    12,
                    6,
                    11,
                    3,
                    7,
                    0,
                    13,
                    5,
                    10,
                    14,
                    15,
                    8,
                    12,
                    4,
                    9,
                    1,
                    2,
                    15,
                    5,
                    1,
                    3,
                    7,
                    14,
                    6,
                    9,
                    11,
                    8,
                    12,
                    2,
                    10,
                    0,
                    4,
                    13,
                    8,
                    6,
                    4,
                    1,
                    3,
                    11,
                    15,
                    0,
                    5,
                    12,
                    2,
                    13,
                    9,
                    7,
                    10,
                    14,
                    12,
                    15,
                    10,
                    4,
                    1,
                    5,
                    8,
                    7,
                    6,
                    2,
                    13,
                    14,
                    0,
                    3,
                    9,
                    11
                ], b = [
                    11,
                    14,
                    15,
                    12,
                    5,
                    8,
                    7,
                    9,
                    11,
                    13,
                    14,
                    15,
                    6,
                    7,
                    9,
                    8,
                    7,
                    6,
                    8,
                    13,
                    11,
                    9,
                    7,
                    15,
                    7,
                    12,
                    15,
                    9,
                    11,
                    7,
                    13,
                    12,
                    11,
                    13,
                    6,
                    7,
                    14,
                    9,
                    13,
                    15,
                    14,
                    8,
                    13,
                    6,
                    5,
                    12,
                    7,
                    5,
                    11,
                    12,
                    14,
                    15,
                    14,
                    15,
                    9,
                    8,
                    9,
                    14,
                    5,
                    6,
                    8,
                    6,
                    5,
                    12,
                    9,
                    15,
                    5,
                    11,
                    6,
                    8,
                    13,
                    12,
                    5,
                    12,
                    13,
                    14,
                    11,
                    8,
                    5,
                    6
                ], m = [
                    8,
                    9,
                    9,
                    11,
                    13,
                    15,
                    15,
                    5,
                    7,
                    7,
                    8,
                    11,
                    14,
                    14,
                    12,
                    6,
                    9,
                    13,
                    15,
                    7,
                    12,
                    8,
                    9,
                    11,
                    7,
                    7,
                    12,
                    7,
                    6,
                    15,
                    13,
                    11,
                    9,
                    7,
                    15,
                    11,
                    8,
                    6,
                    6,
                    14,
                    12,
                    13,
                    5,
                    14,
                    13,
                    13,
                    7,
                    5,
                    15,
                    5,
                    8,
                    11,
                    14,
                    14,
                    6,
                    14,
                    6,
                    9,
                    12,
                    9,
                    12,
                    5,
                    15,
                    8,
                    8,
                    5,
                    12,
                    9,
                    12,
                    5,
                    14,
                    6,
                    8,
                    13,
                    6,
                    5,
                    15,
                    13,
                    11,
                    11
                ];
            },
            608: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                t.exports = function(t) {
                    return n.isBuffer(t) || "[object Object]" === Object.prototype.toString.call(t);
                };
            },
            622: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return i(t, e);
                                var r = ({}).toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? i(t, e) : void 0;
                            }
                        }(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, o = function() {};
                            return {
                                s: o,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: o
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a, s = !0, u = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return s = t.done, t;
                        },
                        e: function(t) {
                            u = !0, a = t;
                        },
                        f: function() {
                            try {
                                s || null == r.return || r.return();
                            } finally{
                                if (u) throw a;
                            }
                        }
                    };
                }
                function i(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var o = r(4009), a = r(8768), s = r(7930).modelSymbol;
                function u(t, e) {
                    this.path = e, this.getters = [], this.setters = [], this.options = Object.assign({}, t);
                }
                u.prototype._applyDefaultGetters = function() {
                    if (!(this.getters.length > 0 || this.setters.length > 0)) {
                        var t = "$" + this.path;
                        this.getters.push(function() {
                            return this.$locals[t];
                        }), this.setters.push(function(e) {
                            this.$locals[t] = e;
                        });
                    }
                }, u.prototype.clone = function() {
                    var t = new u(this.options, this.path);
                    return t.getters = [].concat(this.getters), t.setters = [].concat(this.setters), t;
                }, u.prototype.get = function(t) {
                    return this.getters.push(t), this;
                }, u.prototype.set = function(t) {
                    return this.setters.push(t), this;
                }, u.prototype.applyGetters = function(t, e) {
                    a.hasUserDefinedProperty(this.options, [
                        "ref",
                        "refPath"
                    ]) && e.$$populatedVirtuals && e.$$populatedVirtuals.hasOwnProperty(this.path) && (t = e.$$populatedVirtuals[this.path]);
                    var r, i = t, o = n(this.getters);
                    try {
                        for(o.s(); !(r = o.n()).done;)i = r.value.call(e, i, this, e);
                    } catch (t) {
                        o.e(t);
                    } finally{
                        o.f();
                    }
                    return i;
                }, u.prototype.applySetters = function(t, e) {
                    var r, i = t, o = n(this.setters);
                    try {
                        for(o.s(); !(r = o.n()).done;)i = r.value.call(e, i, this, e);
                    } catch (t) {
                        o.e(t);
                    } finally{
                        o.f();
                    }
                    return i;
                }, u.prototype._getModelNamesForPopulate = function(t) {
                    if (this.options.refPath) return o(this.options.refPath, t, this.path);
                    var e;
                    return null == (e = "function" != typeof this.options.ref || this.options.ref[s] ? this.options.ref : this.options.ref.call(t, t)) || Array.isArray(e) ? e : [
                        e
                    ];
                }, t.exports = u;
            },
            668: (t, e, r)=>{
                "use strict";
                var n = Array.prototype.slice, i = r(6312), o = Object.keys, a = o ? function(t) {
                    return o(t);
                } : r(6544), s = Object.keys;
                a.shim = function() {
                    if (Object.keys) {
                        var t = function() {
                            var t = Object.keys(arguments);
                            return t && t.length === arguments.length;
                        }(1, 2);
                        t || (Object.keys = function(t) {
                            return i(t) ? s(n.call(t)) : s(t);
                        });
                    } else Object.keys = a;
                    return Object.keys || a;
                }, t.exports = a;
            },
            674: (t, e, r)=>{
                "use strict";
                var n = r(3414);
                t.exports = function(t) {
                    return n(t) || 0 === t ? t : t < 0 ? -1 : 1;
                };
            },
            690: (t, e, r)=>{
                "use strict";
                e.sha1 = r(4042), e.sha224 = r(3329), e.sha256 = r(2344), e.sha384 = r(3420), e.sha512 = r(6749);
            },
            766: (t, e)=>{
                "use strict";
                var r = t.exports = {};
                r.DocumentNotFoundError = null, r.general = {}, r.general.default = "Validator failed for path `{PATH}` with value `{VALUE}`", r.general.required = "Path `{PATH}` is required.", r.Number = {}, r.Number.min = "Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).", r.Number.max = "Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).", r.Number.enum = "`{VALUE}` is not a valid enum value for path `{PATH}`.", r.Date = {}, r.Date.min = "Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).", r.Date.max = "Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).", r.String = {}, r.String.enum = "`{VALUE}` is not a valid enum value for path `{PATH}`.", r.String.match = "Path `{PATH}` is invalid ({VALUE}).", r.String.minlength = "Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).", r.String.maxlength = "Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).";
            },
            783: (t)=>{
                "use strict";
                t.exports = ReferenceError;
            },
            791: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return i(t, e);
                                var r = ({}).toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? i(t, e) : void 0;
                            }
                        }(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, o = function() {};
                            return {
                                s: o,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: o
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a, s = !0, u = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return s = t.done, t;
                        },
                        e: function(t) {
                            u = !0, a = t;
                        },
                        f: function() {
                            try {
                                s || null == r.return || r.return();
                            } finally{
                                if (u) throw a;
                            }
                        }
                    };
                }
                function i(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var o = r(3703);
                t.exports = function(t, e, r) {
                    var i, a = null != r ? Object.keys(o(t.tree, r, {})) : Object.keys(t.tree), s = new Set(Object.keys(e));
                    if (s.size > 1) {
                        i = new Set;
                        var u, c = n(a);
                        try {
                            for(c.s(); !(u = c.n()).done;){
                                var f = u.value;
                                s.has(f) && i.add(f);
                            }
                        } catch (t) {
                            c.e(t);
                        } finally{
                            c.f();
                        }
                        var l, h = n(s);
                        try {
                            for(h.s(); !(l = h.n()).done;){
                                var p = l.value;
                                i.has(p) || i.add(p);
                            }
                        } catch (t) {
                            h.e(t);
                        } finally{
                            h.f();
                        }
                        i = Array.from(i);
                    } else i = Array.from(s);
                    return i;
                };
            },
            863: (t, e, r)=>{
                "use strict";
                var n = r(3305), i = r(5549);
                t.exports = function(t) {
                    if (null == t) return t;
                    if (n(t, "ObjectId")) return t;
                    if (t._id) {
                        if (n(t._id, "ObjectId")) return t._id;
                        if (t._id.toString instanceof Function) return new i(t._id.toString());
                    }
                    return t.toString instanceof Function ? new i(t.toString()) : new i(t);
                };
            },
            953: (t, e, r)=>{
                "use strict";
                var n = r(5484);
                t.exports = function() {
                    return n() && !!Symbol.toStringTag;
                };
            },
            988: (t)=>{
                "use strict";
                var e = Object.defineProperty || !1;
                if (e) try {
                    e({}, "a", {
                        value: 1
                    });
                } catch (t) {
                    e = !1;
                }
                t.exports = e;
            },
            1005: (t, e, r)=>{
                var n = r(5832).Buffer, i = r(7312), o = r(7799);
                t.exports = function(t) {
                    return new s(t);
                };
                var a = {
                    secp256k1: {
                        name: "secp256k1",
                        byteLength: 32
                    },
                    secp224r1: {
                        name: "p224",
                        byteLength: 28
                    },
                    prime256v1: {
                        name: "p256",
                        byteLength: 32
                    },
                    prime192v1: {
                        name: "p192",
                        byteLength: 24
                    },
                    ed25519: {
                        name: "ed25519",
                        byteLength: 32
                    },
                    secp384r1: {
                        name: "p384",
                        byteLength: 48
                    },
                    secp521r1: {
                        name: "p521",
                        byteLength: 66
                    }
                };
                function s(t) {
                    this.curveType = a[t], this.curveType || (this.curveType = {
                        name: t
                    }), this.curve = new i.ec(this.curveType.name), this.keys = void 0;
                }
                function u(t, e, r) {
                    Array.isArray(t) || (t = t.toArray());
                    var i = new n(t);
                    if (r && i.length < r) {
                        var o = new n(r - i.length);
                        o.fill(0), i = n.concat([
                            o,
                            i
                        ]);
                    }
                    return e ? i.toString(e) : i;
                }
                a.p224 = a.secp224r1, a.p256 = a.secp256r1 = a.prime256v1, a.p192 = a.secp192r1 = a.prime192v1, a.p384 = a.secp384r1, a.p521 = a.secp521r1, s.prototype.generateKeys = function(t, e) {
                    return this.keys = this.curve.genKeyPair(), this.getPublicKey(t, e);
                }, s.prototype.computeSecret = function(t, e, r) {
                    return e = e || "utf8", n.isBuffer(t) || (t = new n(t, e)), u(this.curve.keyFromPublic(t).getPublic().mul(this.keys.getPrivate()).getX(), r, this.curveType.byteLength);
                }, s.prototype.getPublicKey = function(t, e) {
                    var r = this.keys.getPublic("compressed" === e, !0);
                    return "hybrid" === e && (r[r.length - 1] % 2 ? r[0] = 7 : r[0] = 6), u(r, t);
                }, s.prototype.getPrivateKey = function(t) {
                    return u(this.keys.getPrivate(), t);
                }, s.prototype.setPublicKey = function(t, e) {
                    return e = e || "utf8", n.isBuffer(t) || (t = new n(t, e)), this.keys._importPublic(t), this;
                }, s.prototype.setPrivateKey = function(t, e) {
                    e = e || "utf8", n.isBuffer(t) || (t = new n(t, e));
                    var r = new o(t);
                    return r = r.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(r), this;
                };
            },
            1007: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e() {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, arguments);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8879)), u = r(5761);
                Object.defineProperty(s.prototype, "min", u), Object.defineProperty(s.prototype, "max", u), Object.defineProperty(s.prototype, "enum", u), Object.defineProperty(s.prototype, "populate", u), t.exports = s;
            },
            1026: (t, e, r)=>{
                "use strict";
                t.exports = i;
                var n = r(8784);
                function i(t) {
                    if (!(this instanceof i)) return new i(t);
                    n.call(this, t);
                }
                r(1679)(i, n), i.prototype._transform = function(t, e, r) {
                    r(null, t);
                };
            },
            1048: (t, e, r)=>{
                "use strict";
                var n = r(3528), i = r(1679), o = r(9473), a = r(365);
                function s() {
                    this.tmp = new Array(2), this.keys = null;
                }
                function u(t) {
                    a.call(this, t);
                    var e = new s;
                    this._desState = e, this.deriveKeys(e, t.key);
                }
                i(u, a), t.exports = u, u.create = function(t) {
                    return new u(t);
                };
                var c = [
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    1
                ];
                u.prototype.deriveKeys = function(t, e) {
                    t.keys = new Array(32), n.equal(e.length, this.blockSize, "Invalid key length");
                    var r = o.readUInt32BE(e, 0), i = o.readUInt32BE(e, 4);
                    o.pc1(r, i, t.tmp, 0), r = t.tmp[0], i = t.tmp[1];
                    for(var a = 0; a < t.keys.length; a += 2){
                        var s = c[a >>> 1];
                        r = o.r28shl(r, s), i = o.r28shl(i, s), o.pc2(r, i, t.keys, a);
                    }
                }, u.prototype._update = function(t, e, r, n) {
                    var i = this._desState, a = o.readUInt32BE(t, e), s = o.readUInt32BE(t, e + 4);
                    o.ip(a, s, i.tmp, 0), a = i.tmp[0], s = i.tmp[1], "encrypt" === this.type ? this._encrypt(i, a, s, i.tmp, 0) : this._decrypt(i, a, s, i.tmp, 0), a = i.tmp[0], s = i.tmp[1], o.writeUInt32BE(r, a, n), o.writeUInt32BE(r, s, n + 4);
                }, u.prototype._pad = function(t, e) {
                    if (!1 === this.padding) return !1;
                    for(var r = t.length - e, n = e; n < t.length; n++)t[n] = r;
                    return !0;
                }, u.prototype._unpad = function(t) {
                    if (!1 === this.padding) return t;
                    for(var e = t[t.length - 1], r = t.length - e; r < t.length; r++)n.equal(t[r], e);
                    return t.slice(0, t.length - e);
                }, u.prototype._encrypt = function(t, e, r, n, i) {
                    for(var a = e, s = r, u = 0; u < t.keys.length; u += 2){
                        var c = t.keys[u], f = t.keys[u + 1];
                        o.expand(s, t.tmp, 0), c ^= t.tmp[0], f ^= t.tmp[1];
                        var l = o.substitute(c, f), h = s;
                        s = (a ^ o.permute(l)) >>> 0, a = h;
                    }
                    o.rip(s, a, n, i);
                }, u.prototype._decrypt = function(t, e, r, n, i) {
                    for(var a = r, s = e, u = t.keys.length - 2; u >= 0; u -= 2){
                        var c = t.keys[u], f = t.keys[u + 1];
                        o.expand(a, t.tmp, 0), c ^= t.tmp[0], f ^= t.tmp[1];
                        var l = o.substitute(c, f), h = a;
                        a = (s ^ o.permute(l)) >>> 0, s = h;
                    }
                    o.rip(a, s, n, i);
                };
            },
            1058: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer, i = r(1679), o = r(6936), a = new Array(16), s = [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    7,
                    4,
                    13,
                    1,
                    10,
                    6,
                    15,
                    3,
                    12,
                    0,
                    9,
                    5,
                    2,
                    14,
                    11,
                    8,
                    3,
                    10,
                    14,
                    4,
                    9,
                    15,
                    8,
                    1,
                    2,
                    7,
                    0,
                    6,
                    13,
                    11,
                    5,
                    12,
                    1,
                    9,
                    11,
                    10,
                    0,
                    8,
                    12,
                    4,
                    13,
                    3,
                    7,
                    15,
                    14,
                    5,
                    6,
                    2,
                    4,
                    0,
                    5,
                    9,
                    7,
                    12,
                    2,
                    10,
                    14,
                    1,
                    3,
                    8,
                    11,
                    6,
                    15,
                    13
                ], u = [
                    5,
                    14,
                    7,
                    0,
                    9,
                    2,
                    11,
                    4,
                    13,
                    6,
                    15,
                    8,
                    1,
                    10,
                    3,
                    12,
                    6,
                    11,
                    3,
                    7,
                    0,
                    13,
                    5,
                    10,
                    14,
                    15,
                    8,
                    12,
                    4,
                    9,
                    1,
                    2,
                    15,
                    5,
                    1,
                    3,
                    7,
                    14,
                    6,
                    9,
                    11,
                    8,
                    12,
                    2,
                    10,
                    0,
                    4,
                    13,
                    8,
                    6,
                    4,
                    1,
                    3,
                    11,
                    15,
                    0,
                    5,
                    12,
                    2,
                    13,
                    9,
                    7,
                    10,
                    14,
                    12,
                    15,
                    10,
                    4,
                    1,
                    5,
                    8,
                    7,
                    6,
                    2,
                    13,
                    14,
                    0,
                    3,
                    9,
                    11
                ], c = [
                    11,
                    14,
                    15,
                    12,
                    5,
                    8,
                    7,
                    9,
                    11,
                    13,
                    14,
                    15,
                    6,
                    7,
                    9,
                    8,
                    7,
                    6,
                    8,
                    13,
                    11,
                    9,
                    7,
                    15,
                    7,
                    12,
                    15,
                    9,
                    11,
                    7,
                    13,
                    12,
                    11,
                    13,
                    6,
                    7,
                    14,
                    9,
                    13,
                    15,
                    14,
                    8,
                    13,
                    6,
                    5,
                    12,
                    7,
                    5,
                    11,
                    12,
                    14,
                    15,
                    14,
                    15,
                    9,
                    8,
                    9,
                    14,
                    5,
                    6,
                    8,
                    6,
                    5,
                    12,
                    9,
                    15,
                    5,
                    11,
                    6,
                    8,
                    13,
                    12,
                    5,
                    12,
                    13,
                    14,
                    11,
                    8,
                    5,
                    6
                ], f = [
                    8,
                    9,
                    9,
                    11,
                    13,
                    15,
                    15,
                    5,
                    7,
                    7,
                    8,
                    11,
                    14,
                    14,
                    12,
                    6,
                    9,
                    13,
                    15,
                    7,
                    12,
                    8,
                    9,
                    11,
                    7,
                    7,
                    12,
                    7,
                    6,
                    15,
                    13,
                    11,
                    9,
                    7,
                    15,
                    11,
                    8,
                    6,
                    6,
                    14,
                    12,
                    13,
                    5,
                    14,
                    13,
                    13,
                    7,
                    5,
                    15,
                    5,
                    8,
                    11,
                    14,
                    14,
                    6,
                    14,
                    6,
                    9,
                    12,
                    9,
                    12,
                    5,
                    15,
                    8,
                    8,
                    5,
                    12,
                    9,
                    12,
                    5,
                    14,
                    6,
                    8,
                    13,
                    6,
                    5,
                    15,
                    13,
                    11,
                    11
                ], l = [
                    0,
                    1518500249,
                    1859775393,
                    2400959708,
                    2840853838
                ], h = [
                    1352829926,
                    1548603684,
                    1836072691,
                    2053994217,
                    0
                ];
                function p() {
                    o.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
                }
                function d(t, e) {
                    return t << e | t >>> 32 - e;
                }
                function y(t, e, r, n, i, o, a, s) {
                    return d(t + (e ^ r ^ n) + o + a | 0, s) + i | 0;
                }
                function b(t, e, r, n, i, o, a, s) {
                    return d(t + (e & r | ~e & n) + o + a | 0, s) + i | 0;
                }
                function m(t, e, r, n, i, o, a, s) {
                    return d(t + ((e | ~r) ^ n) + o + a | 0, s) + i | 0;
                }
                function v(t, e, r, n, i, o, a, s) {
                    return d(t + (e & n | r & ~n) + o + a | 0, s) + i | 0;
                }
                function g(t, e, r, n, i, o, a, s) {
                    return d(t + (e ^ (r | ~n)) + o + a | 0, s) + i | 0;
                }
                i(p, o), p.prototype._update = function() {
                    for(var t = a, e = 0; e < 16; ++e)t[e] = this._block.readInt32LE(4 * e);
                    for(var r = 0 | this._a, n = 0 | this._b, i = 0 | this._c, o = 0 | this._d, p = 0 | this._e, _ = 0 | this._a, w = 0 | this._b, S = 0 | this._c, O = 0 | this._d, j = 0 | this._e, $ = 0; $ < 80; $ += 1){
                        var E, A;
                        $ < 16 ? (E = y(r, n, i, o, p, t[s[$]], l[0], c[$]), A = g(_, w, S, O, j, t[u[$]], h[0], f[$])) : $ < 32 ? (E = b(r, n, i, o, p, t[s[$]], l[1], c[$]), A = v(_, w, S, O, j, t[u[$]], h[1], f[$])) : $ < 48 ? (E = m(r, n, i, o, p, t[s[$]], l[2], c[$]), A = m(_, w, S, O, j, t[u[$]], h[2], f[$])) : $ < 64 ? (E = v(r, n, i, o, p, t[s[$]], l[3], c[$]), A = b(_, w, S, O, j, t[u[$]], h[3], f[$])) : (E = g(r, n, i, o, p, t[s[$]], l[4], c[$]), A = y(_, w, S, O, j, t[u[$]], h[4], f[$])), r = p, p = o, o = d(i, 10), i = n, n = E, _ = j, j = O, O = d(S, 10), S = w, w = A;
                    }
                    var P = this._b + i + O | 0;
                    this._b = this._c + o + j | 0, this._c = this._d + p + _ | 0, this._d = this._e + r + w | 0, this._e = this._a + n + S | 0, this._a = P;
                }, p.prototype._digest = function() {
                    this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
                    var t = n.alloc ? n.alloc(20) : new n(20);
                    return t.writeInt32LE(this._a, 0), t.writeInt32LE(this._b, 4), t.writeInt32LE(this._c, 8), t.writeInt32LE(this._d, 12), t.writeInt32LE(this._e, 16), t;
                }, t.exports = p;
            },
            1085: (t, e, r)=>{
                var n = r(5401), i = r(9732).Buffer, o = r(2533), a = r(1679), s = r(9363), u = r(6876), c = r(9003);
                function f(t, e, r, a) {
                    o.call(this);
                    var u = i.alloc(4, 0);
                    this._cipher = new n.AES(e);
                    var f = this._cipher.encryptBlock(u);
                    this._ghash = new s(f), r = function(t, e, r) {
                        if (12 === e.length) return t._finID = i.concat([
                            e,
                            i.from([
                                0,
                                0,
                                0,
                                1
                            ])
                        ]), i.concat([
                            e,
                            i.from([
                                0,
                                0,
                                0,
                                2
                            ])
                        ]);
                        var n = new s(r), o = e.length, a = o % 16;
                        n.update(e), a && (a = 16 - a, n.update(i.alloc(a, 0))), n.update(i.alloc(8, 0));
                        var u = 8 * o, f = i.alloc(8);
                        f.writeUIntBE(u, 0, 8), n.update(f), t._finID = n.state;
                        var l = i.from(t._finID);
                        return c(l), l;
                    }(this, r, f), this._prev = i.from(r), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = a, this._alen = 0, this._len = 0, this._mode = t, this._authTag = null, this._called = !1;
                }
                a(f, o), f.prototype._update = function(t) {
                    if (!this._called && this._alen) {
                        var e = 16 - this._alen % 16;
                        e < 16 && (e = i.alloc(e, 0), this._ghash.update(e));
                    }
                    this._called = !0;
                    var r = this._mode.encrypt(this, t);
                    return this._decrypt ? this._ghash.update(t) : this._ghash.update(r), this._len += t.length, r;
                }, f.prototype._final = function() {
                    if (this._decrypt && !this._authTag) throw new Error("Unsupported state or unable to authenticate data");
                    var t = u(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
                    if (this._decrypt && function(t, e) {
                        var r = 0;
                        t.length !== e.length && r++;
                        for(var n = Math.min(t.length, e.length), i = 0; i < n; ++i)r += t[i] ^ e[i];
                        return r;
                    }(t, this._authTag)) throw new Error("Unsupported state or unable to authenticate data");
                    this._authTag = t, this._cipher.scrub();
                }, f.prototype.getAuthTag = function() {
                    if (this._decrypt || !i.isBuffer(this._authTag)) throw new Error("Attempting to get auth tag in unsupported state");
                    return this._authTag;
                }, f.prototype.setAuthTag = function(t) {
                    if (!this._decrypt) throw new Error("Attempting to set auth tag in unsupported state");
                    this._authTag = t;
                }, f.prototype.setAAD = function(t) {
                    if (this._called) throw new Error("Attempting to set AAD in unsupported state");
                    this._ghash.update(t), this._alen += t.length;
                }, t.exports = f;
            },
            1091: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                t.exports = function(t) {
                    return null != t && "object" === e(t) && null == t.$slice && null == t.$elemMatch && null == t.$meta && null == t.$;
                };
            },
            1095: (t, e, r)=>{
                "use strict";
                var n = r(7799), i = r(4276), o = r(9732).Buffer;
                function a(t) {
                    var e, r = t.modulus.byteLength();
                    do e = new n(i(r));
                    while (e.cmp(t.modulus) >= 0 || !e.umod(t.prime1) || !e.umod(t.prime2));
                    return e;
                }
                function s(t, e) {
                    var r = function(t) {
                        var e = a(t);
                        return {
                            blinder: e.toRed(n.mont(t.modulus)).redPow(new n(t.publicExponent)).fromRed(),
                            unblinder: e.invm(t.modulus)
                        };
                    }(e), i = e.modulus.byteLength(), s = new n(t).mul(r.blinder).umod(e.modulus), u = s.toRed(n.mont(e.prime1)), c = s.toRed(n.mont(e.prime2)), f = e.coefficient, l = e.prime1, h = e.prime2, p = u.redPow(e.exponent1).fromRed(), d = c.redPow(e.exponent2).fromRed(), y = p.isub(d).imul(f).umod(l).imul(h);
                    return d.iadd(y).imul(r.unblinder).umod(e.modulus).toArrayLike(o, "be", i);
                }
                s.getr = a, t.exports = s;
            },
            1129: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = r(8213), u = r(7352), c = function(t) {
                    function e(t, r, a, c) {
                        var f;
                        !function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e);
                        var l = s.messages;
                        return (f = function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            null != l.DocumentNotFoundError ? "function" == typeof l.DocumentNotFoundError ? l.DocumentNotFoundError(t, r) : l.DocumentNotFoundError : 'No document found for query "' + u.inspect(t) + '" on model "' + r + '"'
                        ])).result = c, f.numAffected = a, f.filter = t, f.query = t, f;
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(s);
                Object.defineProperty(c.prototype, "name", {
                    value: "DocumentNotFoundError"
                }), t.exports = c;
            },
            1144: (t, e, r)=>{
                "use strict";
                var n, i = r(198).F, o = i.ERR_MISSING_ARGS, a = i.ERR_STREAM_DESTROYED;
                function s(t) {
                    if (t) throw t;
                }
                function u(t) {
                    t();
                }
                function c(t, e) {
                    return t.pipe(e);
                }
                t.exports = function() {
                    for(var t = arguments.length, e = new Array(t), i = 0; i < t; i++)e[i] = arguments[i];
                    var f, l = function(t) {
                        return t.length ? "function" != typeof t[t.length - 1] ? s : t.pop() : s;
                    }(e);
                    if (Array.isArray(e[0]) && (e = e[0]), e.length < 2) throw new o("streams");
                    var h = e.map(function(t, i) {
                        var o = i < e.length - 1;
                        return function(t, e, i, o) {
                            o = function(t) {
                                var e = !1;
                                return function() {
                                    e || (e = !0, t.apply(void 0, arguments));
                                };
                            }(o);
                            var s = !1;
                            t.on("close", function() {
                                s = !0;
                            }), void 0 === n && (n = r(8500)), n(t, {
                                readable: e,
                                writable: i
                            }, function(t) {
                                if (t) return o(t);
                                s = !0, o();
                            });
                            var u = !1;
                            return function(e) {
                                if (!s && !u) return u = !0, function(t) {
                                    return t.setHeader && "function" == typeof t.abort;
                                }(t) ? t.abort() : "function" == typeof t.destroy ? t.destroy() : void o(e || new a("pipe"));
                            };
                        }(t, o, i > 0, function(t) {
                            f || (f = t), t && h.forEach(u), o || (h.forEach(u), l(f));
                        });
                    });
                    return e.reduce(c);
                };
            },
            1190: (t)=>{
                t.exports = function(t, e) {
                    for(var r = t.length, n = -1; ++n < r;)t[n] ^= e[n];
                    return t;
                };
            },
            1191: (t, e, r)=>{
                "use strict";
                t.exports = a;
                var n = r(1313), i = Object.create(r(7919));
                function o(t, e) {
                    var r = this._transformState;
                    r.transforming = !1;
                    var n = r.writecb;
                    if (!n) return this.emit("error", new Error("write callback called multiple times"));
                    r.writechunk = null, r.writecb = null, null != e && this.push(e), n(t);
                    var i = this._readableState;
                    i.reading = !1, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
                }
                function a(t) {
                    if (!(this instanceof a)) return new a(t);
                    n.call(this, t), this._transformState = {
                        afterTransform: o.bind(this),
                        needTransform: !1,
                        transforming: !1,
                        writecb: null,
                        writechunk: null,
                        writeencoding: null
                    }, this._readableState.needReadable = !0, this._readableState.sync = !1, t && ("function" == typeof t.transform && (this._transform = t.transform), "function" == typeof t.flush && (this._flush = t.flush)), this.on("prefinish", s);
                }
                function s() {
                    var t = this;
                    "function" == typeof this._flush ? this._flush(function(e, r) {
                        u(t, e, r);
                    }) : u(this, null, null);
                }
                function u(t, e, r) {
                    if (e) return t.emit("error", e);
                    if (null != r && t.push(r), t._writableState.length) throw new Error("Calling transform done when ws.length != 0");
                    if (t._transformState.transforming) throw new Error("Calling transform done when still transforming");
                    return t.push(null);
                }
                i.inherits = r(1679), i.inherits(a, n), a.prototype.push = function(t, e) {
                    return this._transformState.needTransform = !1, n.prototype.push.call(this, t, e);
                }, a.prototype._transform = function(t, e, r) {
                    throw new Error("_transform() is not implemented");
                }, a.prototype._write = function(t, e, r) {
                    var n = this._transformState;
                    if (n.writecb = r, n.writechunk = t, n.writeencoding = e, !n.transforming) {
                        var i = this._readableState;
                        (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
                    }
                }, a.prototype._read = function(t) {
                    var e = this._transformState;
                    null !== e.writechunk && e.writecb && !e.transforming ? (e.transforming = !0, this._transform(e.writechunk, e.writeencoding, e.afterTransform)) : e.needTransform = !0;
                }, a.prototype._destroy = function(t, e) {
                    var r = this;
                    n.prototype._destroy.call(this, t, function(t) {
                        e(t), r.emit("close");
                    });
                };
            },
            1199: (t)=>{
                "use strict";
                t.exports = function(t, e) {
                    var r = Object.keys(t), n = Object.keys(e);
                    if (r.length !== n.length) return !1;
                    for(var i = 0; i < r.length; i++){
                        var o = r[i];
                        if (o !== n[i] || t[o] !== e[o]) return !1;
                    }
                    return !0;
                };
            },
            1226: (t)=>{
                "use strict";
                t.exports = function(t) {
                    return null == t ? null : Object.keys(t)[0];
                };
            },
            1243: (t, e)=>{
                "use strict";
                e.isMongooseArray = function(t) {
                    return Array.isArray(t) && t.isMongooseArray;
                };
            },
            1244: (t, e, r)=>{
                "use strict";
                var n = r(3609);
                t.exports = function(t, e) {
                    if (null == t) return t;
                    if (t._id && "string" == typeof t._id) return t._id;
                    if (t.toString && t.toString !== Object.prototype.toString && !Array.isArray(t)) return t.toString();
                    throw new n("string", t, e);
                };
            },
            1257: (t, e, r)=>{
                var n = r(7799), i = r(8904);
                function o(t) {
                    this.rand = t || new i.Rand;
                }
                t.exports = o, o.create = function(t) {
                    return new o(t);
                }, o.prototype._randbelow = function(t) {
                    var e = t.bitLength(), r = Math.ceil(e / 8);
                    do var i = new n(this.rand.generate(r));
                    while (i.cmp(t) >= 0);
                    return i;
                }, o.prototype._randrange = function(t, e) {
                    var r = e.sub(t);
                    return t.add(this._randbelow(r));
                }, o.prototype.test = function(t, e, r) {
                    var i = t.bitLength(), o = n.mont(t), a = new n(1).toRed(o);
                    e || (e = Math.max(1, i / 48 | 0));
                    for(var s = t.subn(1), u = 0; !s.testn(u); u++);
                    for(var c = t.shrn(u), f = s.toRed(o); e > 0; e--){
                        var l = this._randrange(new n(2), s);
                        r && r(l);
                        var h = l.toRed(o).redPow(c);
                        if (0 !== h.cmp(a) && 0 !== h.cmp(f)) {
                            for(var p = 1; p < u; p++){
                                if (0 === (h = h.redSqr()).cmp(a)) return !1;
                                if (0 === h.cmp(f)) break;
                            }
                            if (p === u) return !1;
                        }
                    }
                    return !0;
                }, o.prototype.getDivisor = function(t, e) {
                    var r = t.bitLength(), i = n.mont(t), o = new n(1).toRed(i);
                    e || (e = Math.max(1, r / 48 | 0));
                    for(var a = t.subn(1), s = 0; !a.testn(s); s++);
                    for(var u = t.shrn(s), c = a.toRed(i); e > 0; e--){
                        var f = this._randrange(new n(2), a), l = t.gcd(f);
                        if (0 !== l.cmpn(1)) return l;
                        var h = f.toRed(i).redPow(u);
                        if (0 !== h.cmp(o) && 0 !== h.cmp(c)) {
                            for(var p = 1; p < s; p++){
                                if (0 === (h = h.redSqr()).cmp(o)) return h.fromRed().subn(1).gcd(t);
                                if (0 === h.cmp(c)) break;
                            }
                            if (p === s) return (h = h.redSqr()).fromRed().subn(1).gcd(t);
                        }
                    }
                    return !1;
                };
            },
            1260: (t, e)=>{
                "use strict";
                var r = Object.freeze([
                    "countDocuments",
                    "distinct",
                    "estimatedDocumentCount",
                    "find",
                    "findOne",
                    "findOneAndReplace",
                    "findOneAndUpdate",
                    "replaceOne",
                    "updateMany",
                    "updateOne",
                    "deleteMany",
                    "deleteOne",
                    "findOneAndDelete"
                ]).concat([
                    "validate"
                ]);
                e.Ut = r;
            },
            1313: (t, e, r)=>{
                "use strict";
                var n = r(4758), i = Object.keys || function(t) {
                    var e = [];
                    for(var r in t)e.push(r);
                    return e;
                };
                t.exports = l;
                var o = Object.create(r(7919));
                o.inherits = r(1679);
                var a = r(7991), s = r(9147);
                o.inherits(l, a);
                for(var u = i(s.prototype), c = 0; c < u.length; c++){
                    var f = u[c];
                    l.prototype[f] || (l.prototype[f] = s.prototype[f]);
                }
                function l(t) {
                    if (!(this instanceof l)) return new l(t);
                    a.call(this, t), s.call(this, t), t && !1 === t.readable && (this.readable = !1), t && !1 === t.writable && (this.writable = !1), this.allowHalfOpen = !0, t && !1 === t.allowHalfOpen && (this.allowHalfOpen = !1), this.once("end", h);
                }
                function h() {
                    this.allowHalfOpen || this._writableState.ended || n.nextTick(p, this);
                }
                function p(t) {
                    t.end();
                }
                Object.defineProperty(l.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.highWaterMark;
                    }
                }), Object.defineProperty(l.prototype, "destroyed", {
                    get: function() {
                        return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
                    },
                    set: function(t) {
                        void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t, this._writableState.destroyed = t);
                    }
                }), l.prototype._destroy = function(t, e) {
                    this.push(null), this.end(), n.nextTick(e, t);
                };
            },
            1344: (t, e, r)=>{
                "use strict";
                t.exports = r(3633).UUID;
            },
            1347: (t, e)=>{
                "use strict";
                e.isMongooseDocumentArray = function(t) {
                    return Array.isArray(t) && t.isMongooseDocumentArray;
                };
            },
            1350: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e(t, r, a) {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            'Parameter "' + r + '" to ' + a + '() must be an object, got "' + t.toString() + '" (type ' + n(t) + ")"
                        ]);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8213));
                Object.defineProperty(s.prototype, "name", {
                    value: "ObjectParameterError"
                }), t.exports = s;
            },
            1368: (t, e, r)=>{
                "use strict";
                var n = r(3528), i = r(1679), o = r(365), a = r(1048);
                function s(t, e) {
                    n.equal(e.length, 24, "Invalid key length");
                    var r = e.slice(0, 8), i = e.slice(8, 16), o = e.slice(16, 24);
                    this.ciphers = "encrypt" === t ? [
                        a.create({
                            type: "encrypt",
                            key: r
                        }),
                        a.create({
                            type: "decrypt",
                            key: i
                        }),
                        a.create({
                            type: "encrypt",
                            key: o
                        })
                    ] : [
                        a.create({
                            type: "decrypt",
                            key: o
                        }),
                        a.create({
                            type: "encrypt",
                            key: i
                        }),
                        a.create({
                            type: "decrypt",
                            key: r
                        })
                    ];
                }
                function u(t) {
                    o.call(this, t);
                    var e = new s(this.type, this.options.key);
                    this._edeState = e;
                }
                i(u, o), t.exports = u, u.create = function(t) {
                    return new u(t);
                }, u.prototype._update = function(t, e, r, n) {
                    var i = this._edeState;
                    i.ciphers[0]._update(t, e, r, n), i.ciphers[1]._update(r, n, r, n), i.ciphers[2]._update(r, n, r, n);
                }, u.prototype._pad = a.prototype._pad, u.prototype._unpad = a.prototype._unpad;
            },
            1417: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e(t) {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            "For your own good, using `document.save()` to update an array which was selected using an $elemMatch projection OR populated using skip, limit, query conditions, or exclusion of the _id field when the operation results in a $pop or $set of the entire array is not supported. The following path(s) would have been modified unsafely:\n  " + t.join("\n  ") + "\nUse Model.updateOne() to update these arrays instead."
                        ]);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8213));
                Object.defineProperty(s.prototype, "name", {
                    value: "DivergentArrayError"
                }), t.exports = s;
            },
            1419: (t, e, r)=>{
                var n = e;
                n.bignum = r(7799), n.define = r(2392).define, n.base = r(1620), n.constants = r(8050), n.decoders = r(2240), n.encoders = r(9176);
            },
            1464: (t, e, r)=>{
                "use strict";
                var n = r(5807);
                if (n) try {
                    n([], "length");
                } catch (t) {
                    n = null;
                }
                t.exports = n;
            },
            1469: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function a(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return s(t, e);
                                var r = ({}).toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? s(t, e) : void 0;
                            }
                        }(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, i = function() {};
                            return {
                                s: i,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: i
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var o, a = !0, u = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return a = t.done, t;
                        },
                        e: function(t) {
                            u = !0, o = t;
                        },
                        f: function() {
                            try {
                                a || null == r.return || r.return();
                            } finally{
                                if (u) throw o;
                            }
                        }
                    };
                }
                function s(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var u = r(5022), c = r(8442), f = r(4450), l = r(2068).X, h = r(3703), p = r(8768), d = r(4301), y = {
                    toJSON: !0,
                    toObject: !0,
                    _id: !0,
                    id: !0,
                    virtuals: !0,
                    methods: !0
                };
                t.exports = function(t, e, r, n, s, b, m) {
                    if (!r || !r.instanceOfSchema) throw new Error("You must pass a valid discriminator Schema");
                    if (b = null == b || b, t.schema.discriminatorMapping && !t.schema.discriminatorMapping.isRoot) throw new Error('Discriminator "' + e + '" can only be a discriminator of the root model');
                    if (s) {
                        var v = h(t.base, "options.applyPluginsToDiscriminators", !1) || !b;
                        t.base._applyPlugins(r, {
                            skipTopLevel: !v
                        });
                    } else b || c(r);
                    var g = t.schema.options.discriminatorKey, _ = t.schema.path(g);
                    if (null != _) p.hasUserDefinedProperty(_.options, "select") || (_.options.select = !0), _.options.$skipDiscriminatorCheck = !0;
                    else {
                        var w = {};
                        w[g] = {
                            default: void 0,
                            select: !0,
                            $skipDiscriminatorCheck: !0
                        }, w[g][t.schema.options.typeKey] = String, t.schema.add(w), l({
                            prop: g,
                            prototype: t.prototype,
                            options: t.schema.options
                        });
                    }
                    if (r.path(g) && !0 !== r.path(g).options.$skipDiscriminatorCheck) throw new Error('Discriminator "' + e + '" cannot have field with name "' + g + '"');
                    var S = e;
                    if (("string" == typeof n && n.length || null != n) && (S = n), function(e, r) {
                        e._baseSchema = r, r.paths._id && r.paths._id.options && !r.paths._id.options.auto && e.remove("_id");
                        for(var n = [], c = 0, l = Object.keys(r.paths); c < l.length; c++){
                            var h = l[c];
                            if (e.nested[h]) n.push(h);
                            else if (-1 !== h.indexOf(".")) {
                                var m, v = "", w = a(h.split(".").slice(0, -1));
                                try {
                                    for(w.s(); !(m = w.n()).done;){
                                        var O = m.value;
                                        v += (v.length ? "." : "") + O, (e.paths[v] instanceof u || e.singleNestedPaths[v] instanceof u) && n.push(h);
                                    }
                                } catch (t) {
                                    w.e(t);
                                } finally{
                                    w.f();
                                }
                            }
                        }
                        e.obj = function(t) {
                            for(var e = 1; e < arguments.length; e++){
                                var r = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? i(Object(r), !0).forEach(function(e) {
                                    o(t, e, r[e]);
                                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                                });
                            }
                            return t;
                        }({}, e.obj), d(e, r), e._gatherChildSchemas();
                        for(var j = 0, $ = n; j < $.length; j++){
                            var E = $[j];
                            delete e.paths[E];
                        }
                        e.childSchemas.forEach(function(t) {
                            t.model.prototype.$__setSchema(t.schema);
                        });
                        var A = {};
                        A[g] = {
                            default: S,
                            select: !0,
                            set: function(t) {
                                if (t === S || Array.isArray(S) && p.deepEqual(t, S)) return S;
                                throw new Error("Can't set discriminator key \"" + g + '"');
                            },
                            $skipDiscriminatorCheck: !0
                        }, A[g][e.options.typeKey] = _ ? _.options[e.options.typeKey] : String, e.add(A), e.discriminatorMapping = {
                            key: g,
                            value: S,
                            isRoot: !1
                        }, r.options.collection && (e.options.collection = r.options.collection);
                        var P = e.options.toJSON, x = e.options.toObject, k = e.options._id, M = e.options.id, T = Object.keys(e.options);
                        e.options.discriminatorKey = r.options.discriminatorKey;
                        for(var B = e._userProvidedOptions, I = 0, R = T; I < R.length; I++){
                            var N = R[I];
                            if (!y[N] && N in B && !p.deepEqual(e.options[N], r.options[N])) throw new Error("Can't customize discriminator option " + N + " (can only modify " + Object.keys(y).join(", ") + ")");
                        }
                        e.options = f(r.options);
                        for(var D = 0, L = Object.keys(B); D < L.length; D++){
                            var C = L[D];
                            e.options[C] = B[C];
                        }
                        P && (e.options.toJSON = P), x && (e.options.toObject = x), void 0 !== k && (e.options._id = k), e.options.id = M, b && (e.s.hooks = t.schema.s.hooks.merge(e.s.hooks)), s && (e.plugins = Array.prototype.slice.call(r.plugins)), e.callQueue = r.callQueue.concat(e.callQueue), delete e._requiredpaths;
                    }(r, t.schema), t.discriminators || (t.discriminators = {}), t.schema.discriminatorMapping || (t.schema.discriminatorMapping = {
                        key: g,
                        value: null,
                        isRoot: !0
                    }), t.schema.discriminators || (t.schema.discriminators = {}), t.schema.discriminators[e] = r, t.discriminators[e] && !r.options.overwriteModels && !m) throw new Error('Discriminator with name "' + e + '" already exists');
                    return r;
                };
            },
            1471: (t, e, r)=>{
                "use strict";
                e.utils = r(9473), e.Cipher = r(365), e.DES = r(1048), e.CBC = r(6754), e.EDE = r(1368);
            },
            1485: (t, e, r)=>{
                var n = r(9732).Buffer;
                function i(t, e) {
                    this._block = n.alloc(t), this._finalSize = e, this._blockSize = t, this._len = 0;
                }
                i.prototype.update = function(t, e) {
                    "string" == typeof t && (e = e || "utf8", t = n.from(t, e));
                    for(var r = this._block, i = this._blockSize, o = t.length, a = this._len, s = 0; s < o;){
                        for(var u = a % i, c = Math.min(o - s, i - u), f = 0; f < c; f++)r[u + f] = t[s + f];
                        s += c, (a += c) % i == 0 && this._update(r);
                    }
                    return this._len += o, this;
                }, i.prototype.digest = function(t) {
                    var e = this._len % this._blockSize;
                    this._block[e] = 128, this._block.fill(0, e + 1), e >= this._finalSize && (this._update(this._block), this._block.fill(0));
                    var r = 8 * this._len;
                    if (r <= 4294967295) this._block.writeUInt32BE(r, this._blockSize - 4);
                    else {
                        var n = (4294967295 & r) >>> 0, i = (r - n) / 4294967296;
                        this._block.writeUInt32BE(i, this._blockSize - 8), this._block.writeUInt32BE(n, this._blockSize - 4);
                    }
                    this._update(this._block);
                    var o = this._hash();
                    return t ? o.toString(t) : o;
                }, i.prototype._update = function() {
                    throw new Error("_update must be implemented by subclass");
                }, t.exports = i;
            },
            1505: (t)=>{
                "use strict";
                t.exports = function(t, e, r, n, i) {
                    var o = null != e && !1 === e.updatedAt, a = null != e && !1 === e.createdAt, s = null != r ? r() : t.ownerDocument().constructor.base.now();
                    if (!a && (t.isNew || t.$isSubdocument) && n && !t.$__getValue(n) && t.$__isSelected(n) && t.$set(n, s, void 0, {
                        overwriteImmutable: !0
                    }), !o && i && (t.isNew || t.$isModified())) {
                        var u = s;
                        t.isNew && null != n && (u = t.$__getValue(n)), t.$set(i, u);
                    }
                };
            },
            1620: (t, e, r)=>{
                var n = e;
                n.Reporter = r(6555).a, n.DecoderBuffer = r(8260).t, n.EncoderBuffer = r(8260).d, n.Node = r(4258);
            },
            1635: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e(t) {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            "Can't validate() the same doc multiple times in parallel. Document: " + t._doc._id
                        ]);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8213));
                Object.defineProperty(s.prototype, "name", {
                    value: "ParallelValidateError"
                }), t.exports = s;
            },
            1636: (t)=>{
                "use strict";
                t.exports = {
                    rE: "6.6.1"
                };
            },
            1673: (t, e, r)=>{
                var n = r(4276);
                t.exports = v, v.simpleSieve = b, v.fermatTest = m;
                var i = r(7799), o = new i(24), a = new (r(1257)), s = new i(1), u = new i(2), c = new i(5), f = (new i(16), new i(8), new i(10)), l = new i(3), h = (new i(7), new i(11)), p = new i(4), d = (new i(12), null);
                function y() {
                    if (null !== d) return d;
                    var t = [];
                    t[0] = 2;
                    for(var e = 1, r = 3; r < 1048576; r += 2){
                        for(var n = Math.ceil(Math.sqrt(r)), i = 0; i < e && t[i] <= n && r % t[i] != 0; i++);
                        e !== i && t[i] <= n || (t[e++] = r);
                    }
                    return d = t, t;
                }
                function b(t) {
                    for(var e = y(), r = 0; r < e.length; r++)if (0 === t.modn(e[r])) return 0 === t.cmpn(e[r]);
                    return !0;
                }
                function m(t) {
                    var e = i.mont(t);
                    return 0 === u.toRed(e).redPow(t.subn(1)).fromRed().cmpn(1);
                }
                function v(t, e) {
                    if (t < 16) return new i(2 === e || 5 === e ? [
                        140,
                        123
                    ] : [
                        140,
                        39
                    ]);
                    var r, d;
                    for(e = new i(e);;){
                        for(r = new i(n(Math.ceil(t / 8))); r.bitLength() > t;)r.ishrn(1);
                        if (r.isEven() && r.iadd(s), r.testn(1) || r.iadd(u), e.cmp(u)) {
                            if (!e.cmp(c)) for(; r.mod(f).cmp(l);)r.iadd(p);
                        } else for(; r.mod(o).cmp(h);)r.iadd(p);
                        if (b(d = r.shrn(1)) && b(r) && m(d) && m(r) && a.test(d) && a.test(r)) return r;
                    }
                }
            },
            1679: (t)=>{
                "function" == typeof Object.create ? t.exports = function(t, e) {
                    e && (t.super_ = e, t.prototype = Object.create(e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }));
                } : t.exports = function(t, e) {
                    if (e) {
                        t.super_ = e;
                        var r = function() {};
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t;
                    }
                };
            },
            1685: (t, e, r)=>{
                var n = r(9732).Buffer, i = r(2635);
                t.exports = function(t, e, r, o) {
                    if (n.isBuffer(t) || (t = n.from(t, "binary")), e && (n.isBuffer(e) || (e = n.from(e, "binary")), 8 !== e.length)) throw new RangeError("salt should be Buffer with 8 byte length");
                    for(var a = r / 8, s = n.alloc(a), u = n.alloc(o || 0), c = n.alloc(0); a > 0 || o > 0;){
                        var f = new i;
                        f.update(c), f.update(t), e && f.update(e), c = f.digest();
                        var l = 0;
                        if (a > 0) {
                            var h = s.length - a;
                            l = Math.min(a, c.length), c.copy(s, h, 0, l), a -= l;
                        }
                        if (l < c.length && o > 0) {
                            var p = u.length - o, d = Math.min(o, c.length - l);
                            c.copy(u, p, l, l + d), o -= d;
                        }
                    }
                    return c.fill(0), {
                        key: s,
                        iv: u
                    };
                };
            },
            1697: (t)=>{
                "use strict";
                t.exports = Math.max;
            },
            1732: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? i(Object(r), !0).forEach(function(e) {
                            a(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function a(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var s = r(3609), u = r(6426), c = r(3704), f = r(4327);
                function l(t, e) {
                    u.call(this, t, e, "Double");
                }
                function h(t) {
                    return this.cast(t);
                }
                l.schemaName = "Double", l.defaultOptions = {}, l.prototype = Object.create(u.prototype), l.prototype.constructor = l, l._cast = c, l.set = u.set, l.setters = [], l.get = u.get, l._defaultCaster = function(t) {
                    if (null != t && "Double" !== t._bsontype) throw new Error;
                    return t;
                }, l.cast = function(t) {
                    return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
                }, l._checkRequired = function(t) {
                    return null != t;
                }, l.checkRequired = u.checkRequired, l.prototype.checkRequired = function(t) {
                    return this.constructor._checkRequired(t);
                }, l.prototype.cast = function(t) {
                    var e;
                    e = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : l.cast();
                    try {
                        return e(t);
                    } catch (e) {
                        throw new s("Double", t, this.path, e, this);
                    }
                }, l.prototype.$conditionalHandlers = o(o({}, u.prototype.$conditionalHandlers), {}, {
                    $gt: h,
                    $gte: h,
                    $lt: h,
                    $lte: h
                }), l.prototype.toJSONSchema = function(t) {
                    var e = this.options.required && "function" != typeof this.options.required;
                    return f("number", "double", null == t ? void 0 : t.useBsonType, e);
                }, t.exports = l;
            },
            1793: (t, e, r)=>{
                "use strict";
                var n = r(7300), i = r(2789);
                t.exports = function t(e) {
                    if (null == e) return null;
                    var r = Object.keys(e), o = null;
                    if (1 === r.length && "_id" === r[0]) o = !e._id;
                    else for(var a = 0; a < r.length; ++a){
                        var s, u = r[a];
                        if ("_id" !== u && n(e[u]) && null != (o = i(e[u]) ? null !== (s = t(e[u])) && void 0 !== s ? s : o : !e[u])) break;
                    }
                    return o;
                };
            },
            1808: (t, e, r)=>{
                var n = r(1085), i = r(9732).Buffer, o = r(8629), a = r(5407), s = r(2533), u = r(5401), c = r(1685);
                function f(t, e, r) {
                    s.call(this), this._cache = new l, this._last = void 0, this._cipher = new u.AES(e), this._prev = i.from(r), this._mode = t, this._autopadding = !0;
                }
                function l() {
                    this.cache = i.allocUnsafe(0);
                }
                function h(t, e, r) {
                    var s = o[t.toLowerCase()];
                    if (!s) throw new TypeError("invalid suite type");
                    if ("string" == typeof r && (r = i.from(r)), "GCM" !== s.mode && r.length !== s.iv) throw new TypeError("invalid iv length " + r.length);
                    if ("string" == typeof e && (e = i.from(e)), e.length !== s.key / 8) throw new TypeError("invalid key length " + e.length);
                    return "stream" === s.type ? new a(s.module, e, r, !0) : "auth" === s.type ? new n(s.module, e, r, !0) : new f(s.module, e, r);
                }
                r(1679)(f, s), f.prototype._update = function(t) {
                    var e, r;
                    this._cache.add(t);
                    for(var n = []; e = this._cache.get(this._autopadding);)r = this._mode.decrypt(this, e), n.push(r);
                    return i.concat(n);
                }, f.prototype._final = function() {
                    var t = this._cache.flush();
                    if (this._autopadding) return function(t) {
                        var e = t[15];
                        if (e < 1 || e > 16) throw new Error("unable to decrypt data");
                        for(var r = -1; ++r < e;)if (t[r + (16 - e)] !== e) throw new Error("unable to decrypt data");
                        if (16 !== e) return t.slice(0, 16 - e);
                    }(this._mode.decrypt(this, t));
                    if (t) throw new Error("data not multiple of block length");
                }, f.prototype.setAutoPadding = function(t) {
                    return this._autopadding = !!t, this;
                }, l.prototype.add = function(t) {
                    this.cache = i.concat([
                        this.cache,
                        t
                    ]);
                }, l.prototype.get = function(t) {
                    var e;
                    if (t) {
                        if (this.cache.length > 16) return e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e;
                    } else if (this.cache.length >= 16) return e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e;
                    return null;
                }, l.prototype.flush = function() {
                    if (this.cache.length) return this.cache;
                }, e.createDecipher = function(t, e) {
                    var r = o[t.toLowerCase()];
                    if (!r) throw new TypeError("invalid suite type");
                    var n = c(e, !1, r.key, r.iv);
                    return h(t, n.key, n.iv);
                }, e.createDecipheriv = h;
            },
            1824: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(3703);
                t.exports = function(t, e, r, o, a, s) {
                    var u = o, c = u, f = i(a, "timestamps", !0);
                    if (!f || null == u) return o;
                    var l, h, p, d = null != f && !1 === f.createdAt, y = null != f && !1 === f.updatedAt;
                    if (s) return o && o.$set && (o = o.$set, u.$set = {}, c = u.$set), y || !r || o[r] || (c[r] = t), d || !e || o[e] || (c[e] = t), u;
                    if (o = o || {}, Array.isArray(u)) return null == r || u.push({
                        $set: (l = {}, h = r, p = t, (h = function(t) {
                            var e = function(t) {
                                if ("object" != n(t) || !t) return t;
                                var e = t[Symbol.toPrimitive];
                                if (void 0 !== e) {
                                    var r = e.call(t, "string");
                                    if ("object" != n(r)) return r;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return String(t);
                            }(t);
                            return "symbol" == n(e) ? e : e + "";
                        }(h)) in l ? Object.defineProperty(l, h, {
                            value: p,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }) : l[h] = p, l)
                    }), u;
                    if (u.$set = u.$set || {}, !y && r && (!o.$currentDate || !o.$currentDate[r])) {
                        var b = !1;
                        if (-1 !== r.indexOf(".")) for(var m = r.split("."), v = 1; v < m.length; ++v){
                            var g = m.slice(-v).join("."), _ = m.slice(0, -v).join(".");
                            if (null != o[_]) {
                                o[_][g] = t, b = !0;
                                break;
                            }
                            if (o.$set && o.$set[_]) {
                                o.$set[_][g] = t, b = !0;
                                break;
                            }
                        }
                        b || (u.$set[r] = t), u.hasOwnProperty(r) && delete u[r];
                    }
                    if (!d && e) {
                        o[e] && delete o[e], o.$set && o.$set[e] && delete o.$set[e];
                        var w = !1;
                        if (-1 !== e.indexOf(".")) for(var S = e.split("."), O = 1; O < S.length; ++O){
                            var j = S.slice(-O).join("."), $ = S.slice(0, -O).join(".");
                            if (null != o[$]) {
                                o[$][j] = t, w = !0;
                                break;
                            }
                            if (o.$set && o.$set[$]) {
                                o.$set[$][j] = t, w = !0;
                                break;
                            }
                        }
                        w || (u.$setOnInsert = u.$setOnInsert || {}, u.$setOnInsert[e] = t);
                    }
                    return 0 === Object.keys(u.$set).length && delete u.$set, u;
                };
            },
            1849: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var i = r(8768);
                t.exports = function(t, e) {
                    if (null != t._doc._id && null != e && 0 !== e.length) {
                        var r, o = String(t._doc._id), a = function(t, e) {
                            var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (!r) {
                                if (Array.isArray(t) || (r = function(t, e) {
                                    if (t) {
                                        if ("string" == typeof t) return n(t, e);
                                        var r = ({}).toString.call(t).slice(8, -1);
                                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? n(t, e) : void 0;
                                    }
                                }(t)) || e && t && "number" == typeof t.length) {
                                    r && (t = r);
                                    var i = 0, o = function() {};
                                    return {
                                        s: o,
                                        n: function() {
                                            return i >= t.length ? {
                                                done: !0
                                            } : {
                                                done: !1,
                                                value: t[i++]
                                            };
                                        },
                                        e: function(t) {
                                            throw t;
                                        },
                                        f: o
                                    };
                                }
                                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                            }
                            var a, s = !0, u = !1;
                            return {
                                s: function() {
                                    r = r.call(t);
                                },
                                n: function() {
                                    var t = r.next();
                                    return s = t.done, t;
                                },
                                e: function(t) {
                                    u = !0, a = t;
                                },
                                f: function() {
                                    try {
                                        s || null == r.return || r.return();
                                    } finally{
                                        if (u) throw a;
                                    }
                                }
                            };
                        }(e);
                        try {
                            for(a.s(); !(r = a.n()).done;){
                                var s = r.value;
                                if (!s.isVirtual) for(var u = s.path.split("."), c = 0; c < u.length - 1; ++c){
                                    var f = u.slice(0, c + 1).join("."), l = u.slice(c + 1).join("."), h = t.get(f);
                                    if (null != h && i.isMongooseDocumentArray(h)) {
                                        for(var p = 0; p < h.length; ++p)h[p] && h[p].populated(l, null == s._docs[o] ? void 0 : s._docs[o][p], s);
                                        break;
                                    }
                                }
                            }
                        } catch (t) {
                            a.e(t);
                        } finally{
                            a.f();
                        }
                    }
                };
            },
            1875: (t)=>{
                "use strict";
                t.exports = function(t) {
                    for(var e, r = Object.keys(t.errors || {}), n = r.length, i = [], o = 0; o < n; ++o)e = r[o], t !== t.errors[e] && i.push(e + ": " + t.errors[e].message);
                    return i.join(", ");
                };
            },
            1898: (t, e, r)=>{
                "use strict";
                e.saveSubdocs = r(4432), e.sharding = r(2824), e.trackTransaction = r(5889), e.validateBeforeSave = r(9848);
            },
            1905: (t, e, r)=>{
                "use strict";
                var n, i = r(3071), o = r(2724)(/^\s*(?:function)?\*/), a = r(953)(), s = r(209), u = i("Object.prototype.toString"), c = i("Function.prototype.toString");
                t.exports = function(t) {
                    if ("function" != typeof t) return !1;
                    if (o(c(t))) return !0;
                    if (!a) return "[object GeneratorFunction]" === u(t);
                    if (!s) return !1;
                    if (void 0 === n) {
                        var e = function() {
                            if (!a) return !1;
                            try {
                                return Function("return function*() {}")();
                            } catch (t) {}
                        }();
                        n = !!e && s(e);
                    }
                    return s(t) === n;
                };
            },
            1970: (t, e, r)=>{
                "use strict";
                var n = e, i = r(7799), o = r(3528), a = r(6706);
                n.assert = o, n.toArray = a.toArray, n.zero2 = a.zero2, n.toHex = a.toHex, n.encode = a.encode, n.getNAF = function(t, e, r) {
                    var n, i = new Array(Math.max(t.bitLength(), r) + 1);
                    for(n = 0; n < i.length; n += 1)i[n] = 0;
                    var o = 1 << e + 1, a = t.clone();
                    for(n = 0; n < i.length; n++){
                        var s, u = a.andln(o - 1);
                        a.isOdd() ? (s = u > (o >> 1) - 1 ? (o >> 1) - u : u, a.isubn(s)) : s = 0, i[n] = s, a.iushrn(1);
                    }
                    return i;
                }, n.getJSF = function(t, e) {
                    var r = [
                        [],
                        []
                    ];
                    t = t.clone(), e = e.clone();
                    for(var n, i = 0, o = 0; t.cmpn(-i) > 0 || e.cmpn(-o) > 0;){
                        var a, s, u = t.andln(3) + i & 3, c = e.andln(3) + o & 3;
                        3 === u && (u = -1), 3 === c && (c = -1), a = 1 & u ? 3 != (n = t.andln(7) + i & 7) && 5 !== n || 2 !== c ? u : -u : 0, r[0].push(a), s = 1 & c ? 3 != (n = e.andln(7) + o & 7) && 5 !== n || 2 !== u ? c : -c : 0, r[1].push(s), 2 * i === a + 1 && (i = 1 - i), 2 * o === s + 1 && (o = 1 - o), t.iushrn(1), e.iushrn(1);
                    }
                    return r;
                }, n.cachedProperty = function(t, e, r) {
                    var n = "_" + e;
                    t.prototype[e] = function() {
                        return void 0 !== this[n] ? this[n] : this[n] = r.call(this);
                    };
                }, n.parseBytes = function(t) {
                    return "string" == typeof t ? n.toArray(t, "hex") : t;
                }, n.intFromLE = function(t) {
                    return new i(t, "hex", "le");
                };
            },
            2003: (t, e, r)=>{
                "use strict";
                var n = r(3703), i = r(608), o = r(2423);
                t.exports = function(t) {
                    var e = [], r = new WeakMap, a = t.constructor.indexTypes, s = new Map;
                    return function t(u, c, f) {
                        if (!r.has(u)) {
                            r.set(u, !0), c = c || "";
                            for(var l = 0, h = Object.keys(u.paths); l < h.length; l++){
                                var p = h[l], d = u.paths[p];
                                if (null == f || !f.paths[p]) {
                                    if (null != d._duplicateKeyErrorMessage && (u._duplicateKeyErrorMessagesByPath = u._duplicateKeyErrorMessagesByPath || {}, u._duplicateKeyErrorMessagesByPath[p] = d._duplicateKeyErrorMessage), d.$isMongooseDocumentArray || d.$isSingleNested) {
                                        if (!0 !== n(d, "options.excludeIndexes") && !0 !== n(d, "schemaOptions.excludeIndexes") && !0 !== n(d, "schema.options.excludeIndexes") && t(d.schema, c + p + "."), null != d.schema.discriminators) for(var y = d.schema.discriminators, b = 0, m = Object.keys(y); b < m.length; b++)t(y[m[b]], c + p + ".", d.schema);
                                        if (d.$isMongooseDocumentArray) continue;
                                    }
                                    var v = d._index || d.caster && d.caster._index;
                                    if (!1 !== v && null != v) {
                                        var g = {}, _ = i(v), w = _ ? v : {}, S = "string" == typeof v ? v : !!_ && v.type;
                                        if (S && -1 !== a.indexOf(S)) g[c + p] = S;
                                        else if (w.text) g[c + p] = "text", delete w.text;
                                        else {
                                            var O;
                                            O = "descending" === v || "desc" === v || "ascending" !== v && "asc" !== v && -1 === Number(v), g[c + p] = O ? -1 : 1;
                                        }
                                        delete w.type, "background" in w || (w.background = !0), null != u.options.autoIndex && (w._autoIndex = u.options.autoIndex);
                                        var j = w && w.name;
                                        "string" == typeof j && s.has(j) ? Object.assign(s.get(j), g) : (e.push([
                                            g,
                                            w
                                        ]), s.set(j, g));
                                    }
                                }
                            }
                            r.delete(u), c ? function(t, r) {
                                for(var n = t._indexes, i = n.length, o = 0; o < i; ++o){
                                    for(var a = n[o][0], s = n[o][1], u = Object.keys(a), c = u.length, f = {}, l = 0; l < c; ++l){
                                        var h = u[l];
                                        f[r + h] = a[h];
                                    }
                                    var p = Object.assign({}, s);
                                    if (null != s && null != s.partialFilterExpression) {
                                        p.partialFilterExpression = {};
                                        for(var d = s.partialFilterExpression, y = 0, b = Object.keys(d); y < b.length; y++){
                                            var m = b[y];
                                            p.partialFilterExpression[r + m] = d[m];
                                        }
                                    }
                                    e.push([
                                        f,
                                        p
                                    ]);
                                }
                            }(u, c) : (u._indexes.forEach(function(t) {
                                var e = t[1];
                                "background" in e || (e.background = !0), o(u, e);
                            }), e = e.concat(u._indexes));
                        }
                    }(t), e;
                };
            },
            2046: (t, e, r)=>{
                "use strict";
                var n = r(1679), i = r(6583), o = r(2533), a = r(9732).Buffer, s = r(3989), u = r(1058), c = r(3261), f = a.alloc(128);
                function l(t, e) {
                    o.call(this, "digest"), "string" == typeof e && (e = a.from(e));
                    var r = "sha512" === t || "sha384" === t ? 128 : 64;
                    this._alg = t, this._key = e, e.length > r ? e = ("rmd160" === t ? new u : c(t)).update(e).digest() : e.length < r && (e = a.concat([
                        e,
                        f
                    ], r));
                    for(var n = this._ipad = a.allocUnsafe(r), i = this._opad = a.allocUnsafe(r), s = 0; s < r; s++)n[s] = 54 ^ e[s], i[s] = 92 ^ e[s];
                    this._hash = "rmd160" === t ? new u : c(t), this._hash.update(n);
                }
                n(l, o), l.prototype._update = function(t) {
                    this._hash.update(t);
                }, l.prototype._final = function() {
                    var t = this._hash.digest();
                    return ("rmd160" === this._alg ? new u : c(this._alg)).update(this._opad).update(t).digest();
                }, t.exports = function(t, e) {
                    return "rmd160" === (t = t.toLowerCase()) || "ripemd160" === t ? new l("rmd160", e) : "md5" === t ? new i(s, e) : new l(t, e);
                };
            },
            2064: (t, e, r)=>{
                "use strict";
                var n = r(2273), i = r(9122), o = r(4756), a = r(2481), s = r(9247), u = i(a(), Object);
                n(u, {
                    getPolyfill: a,
                    implementation: o,
                    shim: s
                }), t.exports = u;
            },
            2068: (t, e, r)=>{
                "use strict";
                var n, i = r(4450), o = r(7930).documentSchemaSymbol, a = r(3303)._, s = r(8768), u = r(7930).getSymbol, c = r(7930).scopeSymbol, f = s.isPOJO;
                e.w = p, e.X = d;
                var l = Object.freeze({
                    minimize: !0,
                    virtuals: !1,
                    getters: !1,
                    transform: !1
                }), h = Object.freeze({
                    noDottedPath: !0
                });
                function p(t, e, i, o) {
                    n = n || r(2400);
                    for(var a = o.typeKey, s = 0, u = Object.keys(t); s < u.length; s++){
                        var c = u[s], l = t[c];
                        d({
                            prop: c,
                            subprops: f(l) && Object.keys(l).length > 0 && (!l[a] || "type" === a && f(l.type) && l.type.type) ? l : null,
                            prototype: e,
                            prefix: i,
                            options: o
                        });
                    }
                }
                function d(t) {
                    var e = t.prop, s = t.subprops, f = t.prototype, d = t.prefix, y = t.options;
                    n = n || r(2400);
                    var b = (d ? d + "." : "") + e, m = (d = d || "") ? Object.freeze({}) : h;
                    s ? Object.defineProperty(f, e, {
                        enumerable: !0,
                        configurable: !0,
                        get: function() {
                            var t, e, r = this;
                            if (this.$__.getters || (this.$__.getters = {}), !this.$__.getters[b]) {
                                var a = Object.create(n.prototype, (t = this, e = {}, Object.getOwnPropertyNames(t).forEach(function(r) {
                                    -1 === [
                                        "isNew",
                                        "$__",
                                        "$errors",
                                        "errors",
                                        "_doc",
                                        "$locals",
                                        "$op",
                                        "__parentArray",
                                        "__index",
                                        "$isDocumentArrayElement"
                                    ].indexOf(r) || (e[r] = Object.getOwnPropertyDescriptor(t, r), e[r].enumerable = !1);
                                }), e));
                                d || (a.$__[c] = this), a.$__.nestedPath = b, Object.defineProperty(a, "schema", {
                                    enumerable: !1,
                                    configurable: !0,
                                    writable: !1,
                                    value: f.schema
                                }), Object.defineProperty(a, "$__schema", {
                                    enumerable: !1,
                                    configurable: !0,
                                    writable: !1,
                                    value: f.schema
                                }), Object.defineProperty(a, o, {
                                    enumerable: !1,
                                    configurable: !0,
                                    writable: !1,
                                    value: f.schema
                                }), Object.defineProperty(a, "toObject", {
                                    enumerable: !1,
                                    configurable: !0,
                                    writable: !1,
                                    value: function() {
                                        return i(r.get(b, null, {
                                            virtuals: this && this.schema && this.schema.options && this.schema.options.toObject && this.schema.options.toObject.virtuals || null
                                        }));
                                    }
                                }), Object.defineProperty(a, "$__get", {
                                    enumerable: !1,
                                    configurable: !0,
                                    writable: !1,
                                    value: function() {
                                        return r.get(b, null, {
                                            virtuals: this && this.schema && this.schema.options && this.schema.options.toObject && this.schema.options.toObject.virtuals || null
                                        });
                                    }
                                }), Object.defineProperty(a, "toJSON", {
                                    enumerable: !1,
                                    configurable: !0,
                                    writable: !1,
                                    value: function() {
                                        return r.get(b, null, {
                                            virtuals: this && this.schema && this.schema.options && this.schema.options.toJSON && this.schema.options.toJSON.virtuals || null
                                        });
                                    }
                                }), Object.defineProperty(a, "$__isNested", {
                                    enumerable: !1,
                                    configurable: !0,
                                    writable: !1,
                                    value: !0
                                }), Object.defineProperty(a, "$isEmpty", {
                                    enumerable: !1,
                                    configurable: !0,
                                    writable: !1,
                                    value: function() {
                                        return 0 === Object.keys(this.get(b, null, l) || {}).length;
                                    }
                                }), Object.defineProperty(a, "$__parent", {
                                    enumerable: !1,
                                    configurable: !0,
                                    writable: !1,
                                    value: this
                                }), p(s, a, b, y), this.$__.getters[b] = a;
                            }
                            return this.$__.getters[b];
                        },
                        set: function(t) {
                            null != t && t.$__isNested ? t = t.$__get() : t instanceof n && !t.$__isNested && (t = t.$toObject(a)), (this.$__[c] || this).$set(b, t);
                        }
                    }) : Object.defineProperty(f, e, {
                        enumerable: !0,
                        configurable: !0,
                        get: function() {
                            return this[u].call(this.$__[c] || this, b, null, m);
                        },
                        set: function(t) {
                            this.$set.call(this.$__[c] || this, b, t);
                        }
                    });
                }
            },
            2069: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, a(n.key), n);
                    }
                }
                function o(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), t;
                }
                function a(t) {
                    var e = function(t) {
                        if ("object" != n(t) || !t) return t;
                        var e = t[Symbol.toPrimitive];
                        if (void 0 !== e) {
                            var r = e.call(t, "string");
                            if ("object" != n(r)) return r;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return String(t);
                    }(t);
                    return "symbol" == n(e) ? e : e + "";
                }
                var s = r(5761), u = o(function t(e) {
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, t), Object.assign(this, e), null != e && null != e.options && (this.options = Object.assign({}, e.options));
                });
                Object.defineProperty(u.prototype, "ref", s), Object.defineProperty(u.prototype, "refPath", s), Object.defineProperty(u.prototype, "localField", s), Object.defineProperty(u.prototype, "foreignField", s), Object.defineProperty(u.prototype, "justOne", s), Object.defineProperty(u.prototype, "count", s), Object.defineProperty(u.prototype, "match", s), Object.defineProperty(u.prototype, "options", s), Object.defineProperty(u.prototype, "skip", s), Object.defineProperty(u.prototype, "limit", s), Object.defineProperty(u.prototype, "perDocumentLimit", s), t.exports = u;
            },
            2073: (t)=>{
                "use strict";
                t.exports = function t(e) {
                    if (!Array.isArray(e)) return {
                        min: 0,
                        max: 0,
                        containsNonArrayItem: !0
                    };
                    if (0 === e.length) return {
                        min: 1,
                        max: 1,
                        containsNonArrayItem: !1
                    };
                    if (1 === e.length && !Array.isArray(e[0])) return {
                        min: 1,
                        max: 1,
                        containsNonArrayItem: !1
                    };
                    for(var r = t(e[0]), n = 1; n < e.length; ++n){
                        var i = t(e[n]);
                        i.min < r.min && (r.min = i.min), i.max > r.max && (r.max = i.max), r.containsNonArrayItem = r.containsNonArrayItem || i.containsNonArrayItem;
                    }
                    return r.min = r.min + 1, r.max = r.max + 1, r;
                };
            },
            2081: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return o(t, e);
                                var r = ({}).toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? o(t, e) : void 0;
                            }
                        }(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, i = function() {};
                            return {
                                s: i,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: i
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a, s = !0, u = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return s = t.done, t;
                        },
                        e: function(t) {
                            u = !0, a = t;
                        },
                        f: function() {
                            try {
                                s || null == r.return || r.return();
                            } finally{
                                if (u) throw a;
                            }
                        }
                    };
                }
                function o(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function a(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, s(n.key), n);
                    }
                }
                function s(t) {
                    var e = function(t) {
                        if ("object" != n(t) || !t) return t;
                        var e = t[Symbol.toPrimitive];
                        if (void 0 !== e) {
                            var r = e.call(t, "string");
                            if ("object" != n(r)) return r;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return String(t);
                    }(t);
                    return "symbol" == n(e) ? e : e + "";
                }
                function u(t, e, r, n) {
                    var i = c(p(1 & n ? t.prototype : t), e, r);
                    return 2 & n && "function" == typeof i ? function(t) {
                        return i.apply(r, t);
                    } : i;
                }
                function c() {
                    return c = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(t, e, r) {
                        var n = function(t, e) {
                            for(; !({}).hasOwnProperty.call(t, e) && null !== (t = p(t)););
                            return t;
                        }(t, e);
                        if (n) {
                            var i = Object.getOwnPropertyDescriptor(n, e);
                            return i.get ? i.get.call(arguments.length < 3 ? t : r) : i.value;
                        }
                    }, c.apply(null, arguments);
                }
                function f(t) {
                    var e = "function" == typeof Map ? new Map : void 0;
                    return f = function(t) {
                        if (null === t || !function(t) {
                            try {
                                return -1 !== Function.toString.call(t).indexOf("[native code]");
                            } catch (e) {
                                return "function" == typeof t;
                            }
                        }(t)) return t;
                        if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
                        if (void 0 !== e) {
                            if (e.has(t)) return e.get(t);
                            e.set(t, r);
                        }
                        function r() {
                            return function(t, e, r) {
                                if (l()) return Reflect.construct.apply(null, arguments);
                                var n = [
                                    null
                                ];
                                n.push.apply(n, e);
                                var i = new (t.bind.apply(t, n));
                                return r && h(i, r.prototype), i;
                            }(t, arguments, p(this).constructor);
                        }
                        return r.prototype = Object.create(t.prototype, {
                            constructor: {
                                value: r,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), h(r, t);
                    }, f(t);
                }
                function l() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (l = function() {
                        return !!t;
                    })();
                }
                function h(t, e) {
                    return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, h(t, e);
                }
                function p(t) {
                    return p = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, p(t);
                }
                var d = r(5022), y = r(8213), b = r(4450), m = r(8768).deepEqual, v = r(5879), g = r(3216), _ = r(7352), w = r(2793), S = r(3305), O = r(4473), j = r(7930).populateModelSymbol, $ = function(t) {
                    function e(t, r, i, o) {
                        var a;
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), "Object" === v(t) && (t = Object.keys(t).reduce(function(e, r) {
                            return e.concat([
                                [
                                    r,
                                    t[r]
                                ]
                            ]);
                        }, [])), (a = function(t, e, r) {
                            return e = p(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, l() ? Reflect.construct(e, r || [], p(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            t
                        ])).$__parent = null != i && null != i.$__ ? i : null, a.$__path = r, a.$__schemaType = null == o ? new d(r) : o, a.$__runDeferred(), a;
                    }
                    var r, o;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && h(t, e);
                    }(e, t), r = e, o = [
                        {
                            key: "$init",
                            value: function(t, r) {
                                E(t), u(e, "set", this, 3)([
                                    t,
                                    r
                                ]), null != r && r.$isSingleNested && (r.$basePath = this.$__path + "." + t);
                            }
                        },
                        {
                            key: "$__set",
                            value: function(t, r) {
                                u(e, "set", this, 3)([
                                    t,
                                    r
                                ]);
                            }
                        },
                        {
                            key: "get",
                            value: function(t, r) {
                                return S(t, "ObjectId") && (t = t.toString()), !1 === (r = r || {}).getters ? u(e, "get", this, 3)([
                                    t
                                ]) : this.$__schemaType.applyGetters(u(e, "get", this, 3)([
                                    t
                                ]), this.$__parent);
                            }
                        },
                        {
                            key: "set",
                            value: function(t, r) {
                                if (S(t, "ObjectId") && (t = t.toString()), E(t), r = g(r), null == this.$__schemaType) return this.$__deferred = this.$__deferred || [], void this.$__deferred.push({
                                    key: t,
                                    value: r
                                });
                                var n, i = this.$__parent, o = null != i && i.$__ && i.$__.populated ? i.$populated(f.call(this), !0) || i.$populated(this.$__path, !0) : null, a = this.get(t);
                                if (null != o) {
                                    if (this.$__schemaType.$isSingleNested) throw new y("Cannot manually populate single nested subdoc underneath Map " + 'at path "'.concat(this.$__path, '". Try using an array instead of a Map.'));
                                    Array.isArray(r) && this.$__schemaType.$isMongooseArray ? r = r.map(function(t) {
                                        return null == t.$__ && (t = new o.options[j](t)), t.$__.wasPopulated = {
                                            value: t._doc._id
                                        }, t;
                                    }) : null != r && (null == r.$__ && (r = new o.options[j](r)), r.$__.wasPopulated = {
                                        value: r._doc._id
                                    });
                                } else try {
                                    var s = this.$__schemaType.$isMongooseDocumentArray || this.$__schemaType.$isSingleNested ? {
                                        path: f.call(this)
                                    } : null;
                                    r = this.$__schemaType.applySetters(r, this.$__parent, !1, this.get(t), s);
                                } catch (t) {
                                    if (null != this.$__parent && null != this.$__parent.$__) return void this.$__parent.invalidate(f.call(this), t);
                                    throw t;
                                }
                                if (u(e, "set", this, 3)([
                                    t,
                                    r
                                ]), null != i && null != i.$__ && !m(r, a)) {
                                    var c = f.call(this);
                                    i.markModified(c), (this.$__schemaType.$isMongooseDocumentArray || this.$__schemaType.$isSingleNested) && O(i, c);
                                }
                                function f() {
                                    return n || (n = this.$__path + "." + t);
                                }
                            }
                        },
                        {
                            key: "clear",
                            value: function() {
                                u(e, "clear", this, 3)([]);
                                var t = this.$__parent;
                                null != t && t.markModified(this.$__path);
                            }
                        },
                        {
                            key: "delete",
                            value: function(t) {
                                return S(t, "ObjectId") && (t = t.toString()), this.set(t, void 0), u(e, "delete", this, 3)([
                                    t
                                ]);
                            }
                        },
                        {
                            key: "toBSON",
                            value: function() {
                                return new Map(this);
                            }
                        },
                        {
                            key: "toObject",
                            value: function(t) {
                                if (t && t.flattenMaps) {
                                    var e, r = {}, n = i(this.keys());
                                    try {
                                        for(n.s(); !(e = n.n()).done;){
                                            var o = e.value;
                                            r[o] = b(this.get(o), t);
                                        }
                                    } catch (t) {
                                        n.e(t);
                                    } finally{
                                        n.f();
                                    }
                                    return r;
                                }
                                return new Map(this);
                            }
                        },
                        {
                            key: "$toObject",
                            value: function() {
                                return this.constructor.prototype.toObject.apply(this, arguments);
                            }
                        },
                        {
                            key: "toJSON",
                            value: function(t) {
                                if ("boolean" != typeof (t && t.flattenMaps) || t.flattenMaps) {
                                    var e, r = {}, n = i(this.keys());
                                    try {
                                        for(n.s(); !(e = n.n()).done;){
                                            var o = e.value;
                                            r[o] = b(this.get(o), t);
                                        }
                                    } catch (t) {
                                        n.e(t);
                                    } finally{
                                        n.f();
                                    }
                                    return r;
                                }
                                return new Map(this);
                            }
                        },
                        {
                            key: "inspect",
                            value: function() {
                                return new Map(this);
                            }
                        },
                        {
                            key: "$__runDeferred",
                            value: function() {
                                if (this.$__deferred) {
                                    var t, e = i(this.$__deferred);
                                    try {
                                        for(e.s(); !(t = e.n()).done;){
                                            var r = t.value;
                                            this.set(r.key, r.value);
                                        }
                                    } catch (t) {
                                        e.e(t);
                                    } finally{
                                        e.f();
                                    }
                                    this.$__deferred = null;
                                }
                            }
                        }
                    ], o && a(r.prototype, o), Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(f(Map));
                function E(t) {
                    var e = n(t);
                    if ("string" !== e) throw new TypeError("Mongoose maps only support string keys, got ".concat(e));
                    if (t.startsWith("$")) throw new Error('Mongoose maps do not support keys that start with "$", got "'.concat(t, '"'));
                    if (t.includes(".")) throw new Error('Mongoose maps do not support keys that contain ".", got "'.concat(t, '"'));
                    if (w.has(t)) throw new Error('Mongoose maps do not support reserved key name "'.concat(t, '"'));
                }
                _.inspect.custom && Object.defineProperty($.prototype, _.inspect.custom, {
                    enumerable: !1,
                    writable: !1,
                    configurable: !1,
                    value: $.prototype.inspect
                }), Object.defineProperty($.prototype, "$__set", {
                    enumerable: !1,
                    writable: !0,
                    configurable: !1
                }), Object.defineProperty($.prototype, "$__parent", {
                    enumerable: !1,
                    writable: !0,
                    configurable: !1
                }), Object.defineProperty($.prototype, "$__path", {
                    enumerable: !1,
                    writable: !0,
                    configurable: !1
                }), Object.defineProperty($.prototype, "$__schemaType", {
                    enumerable: !1,
                    writable: !0,
                    configurable: !1
                }), Object.defineProperty($.prototype, "$isMongooseMap", {
                    enumerable: !1,
                    writable: !1,
                    configurable: !1,
                    value: !0
                }), Object.defineProperty($.prototype, "$__deferredCalls", {
                    enumerable: !1,
                    writable: !1,
                    configurable: !1,
                    value: !0
                }), t.exports = $;
            },
            2097: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function o(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var a = r(9166), s = r(1824), u = r(3703), c = r(3696), f = r(1505), l = r(7160), h = new Set([
                    "replaceOne",
                    "findOneAndReplace"
                ]);
                t.exports = function(t, e) {
                    var r = t.childSchemas.find(function(t) {
                        return !!t.schema.options.timestamps;
                    });
                    if (e || r) {
                        var n = c(e, "createdAt"), p = c(e, "updatedAt"), d = null != e && e.hasOwnProperty("currentTime") ? e.currentTime : null, y = {};
                        if (t.$timestamps = {
                            createdAt: n,
                            updatedAt: p
                        }, n && !t.paths[n]) {
                            var b = null != t.base ? t.base.get("timestamps.createdAt.immutable") : null, m = null == b || b;
                            y[n] = o(o({}, t.options.typeKey || "type", Date), "immutable", m);
                        }
                        p && !t.paths[p] && (y[p] = Date), t.add(y), t.pre("save", function(t) {
                            var e = u(this, "$__.saveOptions.timestamps");
                            if (!1 === e) return t();
                            f(this, e, d, n, p), t();
                        }), t.methods.initializeTimestamps = function() {
                            var t = null != d ? d() : this.constructor.base.now();
                            if (n && !this.get(n) && this.$set(n, t), p && !this.get(p) && this.$set(p, t), this.$isSubdocument) return this;
                            var e, r = function(t, e) {
                                var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                                if (!r) {
                                    if (Array.isArray(t) || (r = function(t, e) {
                                        if (t) {
                                            if ("string" == typeof t) return i(t, e);
                                            var r = ({}).toString.call(t).slice(8, -1);
                                            return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? i(t, e) : void 0;
                                        }
                                    }(t)) || e && t && "number" == typeof t.length) {
                                        r && (t = r);
                                        var n = 0, o = function() {};
                                        return {
                                            s: o,
                                            n: function() {
                                                return n >= t.length ? {
                                                    done: !0
                                                } : {
                                                    done: !1,
                                                    value: t[n++]
                                                };
                                            },
                                            e: function(t) {
                                                throw t;
                                            },
                                            f: o
                                        };
                                    }
                                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                }
                                var a, s = !0, u = !1;
                                return {
                                    s: function() {
                                        r = r.call(t);
                                    },
                                    n: function() {
                                        var t = r.next();
                                        return s = t.done, t;
                                    },
                                    e: function(t) {
                                        u = !0, a = t;
                                    },
                                    f: function() {
                                        try {
                                            s || null == r.return || r.return();
                                        } finally{
                                            if (u) throw a;
                                        }
                                    }
                                };
                            }(this.$getAllSubdocs());
                            try {
                                for(r.s(); !(e = r.n()).done;){
                                    var o = e.value;
                                    o.initializeTimestamps && o.initializeTimestamps();
                                }
                            } catch (t) {
                                r.e(t);
                            } finally{
                                r.f();
                            }
                            return this;
                        }, g[l.builtInMiddleware] = !0;
                        var v = {
                            query: !0,
                            model: !1
                        };
                        t.pre("findOneAndReplace", v, g), t.pre("findOneAndUpdate", v, g), t.pre("replaceOne", v, g), t.pre("update", v, g), t.pre("updateOne", v, g), t.pre("updateMany", v, g);
                    }
                    function g(t) {
                        var e = null != d ? d() : this.model.base.now();
                        h.has(this.op) && null == this.getUpdate() && this.setUpdate({}), s(e, n, p, this.getUpdate(), this._mongooseOptions, h.has(this.op)), a(e, this.getUpdate(), this.model.schema), t();
                    }
                };
            },
            2098: (t, e, r)=>{
                var n = r(3604), i = r(1808), o = r(3219);
                e.createCipher = e.Cipher = n.createCipher, e.createCipheriv = e.Cipheriv = n.createCipheriv, e.createDecipher = e.Decipher = i.createDecipher, e.createDecipheriv = e.Decipheriv = i.createDecipheriv, e.listCiphers = e.getCiphers = function() {
                    return Object.keys(o);
                };
            },
            2134: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                function i(t) {
                    return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, i(t);
                }
                function o(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function a(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? o(Object(r), !0).forEach(function(e) {
                            s(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : o(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function s(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != i(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != i(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == i(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var u = r(6365), c = r(6426), f = c.CastError, l = r(8250), h = r(4327), p = r(8768), d = r(9460), y = l.UUID_FORMAT, b = u.Binary;
                function m(t) {
                    var e;
                    return "string" != typeof t && null != t ? (e = t.toString("hex")).substring(0, 8) + "-" + e.substring(8, 12) + "-" + e.substring(12, 16) + "-" + e.substring(16, 20) + "-" + e.substring(20, 32) : t;
                }
                function v(t, e) {
                    c.call(this, t, e, "UUID"), this.getters.push(function(t) {
                        return null != t && null != t.$__ ? t : n.isBuffer(t) ? m(t) : t instanceof b ? m(t.buffer) : p.isPOJO(t) && "Buffer" === t.type && Array.isArray(t.data) ? m(n.from(t.data)) : t;
                    });
                }
                function g(t) {
                    return this.cast(t);
                }
                function _(t) {
                    var e = this;
                    return t.map(function(t) {
                        return e.cast(t);
                    });
                }
                v.schemaName = "UUID", v.defaultOptions = {}, v.prototype = Object.create(c.prototype), v.prototype.constructor = v, v._cast = l, v.get = c.get, v.set = c.set, v.setters = [], v.cast = function(t) {
                    return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
                }, v._checkRequired = function(t) {
                    return null != t;
                }, v.checkRequired = c.checkRequired, v.prototype.checkRequired = function(t) {
                    return n.isBuffer(t) && (t = m(t)), null != t && y.test(t);
                }, v.prototype.cast = function(t, e, r, n, i) {
                    if (p.isNonBuiltinObject(t) && c._isRef(this, t, e, r)) return this._castRef(t, e, r, i);
                    var o;
                    o = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : v.cast();
                    try {
                        return o(t);
                    } catch (e) {
                        throw new f(v.schemaName, t, this.path, e, this);
                    }
                }, v.prototype.$conditionalHandlers = a(a({}, c.prototype.$conditionalHandlers), {}, {
                    $bitsAllClear: d,
                    $bitsAnyClear: d,
                    $bitsAllSet: d,
                    $bitsAnySet: d,
                    $all: _,
                    $gt: g,
                    $gte: g,
                    $in: _,
                    $lt: g,
                    $lte: g,
                    $ne: g,
                    $nin: _
                }), v.prototype.castForQuery = function(t, e, r) {
                    var n;
                    if (null != t) {
                        if (!(n = this.$conditionalHandlers[t])) throw new Error("Can't use " + t + " with UUID.");
                        return n.call(this, e, r);
                    }
                    try {
                        return this.applySetters(e, r);
                    } catch (t) {
                        throw t instanceof f && t.path === this.path && null != this.$fullPath && (t.path = this.$fullPath), t;
                    }
                }, v.prototype.toJSONSchema = function(t) {
                    var e = this.options.required && "function" != typeof this.options.required;
                    return h("string", "binData", null == t ? void 0 : t.useBsonType, e);
                }, t.exports = v;
            },
            2151: (t)=>{
                "use strict";
                t.exports = Math.round;
            },
            2219: (t, e, r)=>{
                var n = r(1679), i = r(1485), o = r(9732).Buffer, a = [
                    1518500249,
                    1859775393,
                    -1894007588,
                    -899497514
                ], s = new Array(80);
                function u() {
                    this.init(), this._w = s, i.call(this, 64, 56);
                }
                function c(t) {
                    return t << 30 | t >>> 2;
                }
                function f(t, e, r, n) {
                    return 0 === t ? e & r | ~e & n : 2 === t ? e & r | e & n | r & n : e ^ r ^ n;
                }
                n(u, i), u.prototype.init = function() {
                    return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
                }, u.prototype._update = function(t) {
                    for(var e, r = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, s = 0 | this._d, u = 0 | this._e, l = 0; l < 16; ++l)r[l] = t.readInt32BE(4 * l);
                    for(; l < 80; ++l)r[l] = r[l - 3] ^ r[l - 8] ^ r[l - 14] ^ r[l - 16];
                    for(var h = 0; h < 80; ++h){
                        var p = ~~(h / 20), d = 0 | ((e = n) << 5 | e >>> 27) + f(p, i, o, s) + u + r[h] + a[p];
                        u = s, s = o, o = c(i), i = n, n = d;
                    }
                    this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = s + this._d | 0, this._e = u + this._e | 0;
                }, u.prototype._hash = function() {
                    var t = o.allocUnsafe(20);
                    return t.writeInt32BE(0 | this._a, 0), t.writeInt32BE(0 | this._b, 4), t.writeInt32BE(0 | this._c, 8), t.writeInt32BE(0 | this._d, 12), t.writeInt32BE(0 | this._e, 16), t;
                }, t.exports = u;
            },
            2240: (t, e, r)=>{
                var n = e;
                n.der = r(3879), n.pem = r(8330);
            },
            2268: (t)=>{
                "use strict";
                t.exports = TypeError;
            },
            2273: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(668), o = "function" == typeof Symbol && "symbol" === n(Symbol("foo")), a = Object.prototype.toString, s = Array.prototype.concat, u = r(6750), c = r(3191)(), f = function(t, e, r, n) {
                    if (e in t) {
                        if (!0 === n) {
                            if (t[e] === r) return;
                        } else if ("function" != typeof (i = n) || "[object Function]" !== a.call(i) || !n()) return;
                    }
                    var i;
                    c ? u(t, e, r, !0) : u(t, e, r);
                }, l = function(t, e) {
                    var r = arguments.length > 2 ? arguments[2] : {}, n = i(e);
                    o && (n = s.call(n, Object.getOwnPropertySymbols(e)));
                    for(var a = 0; a < n.length; a += 1)f(t, n[a], e[n[a]], r[n[a]]);
                };
                l.supportsDescriptors = !!c, t.exports = l;
            },
            2288: (t)=>{
                "use strict";
                t.exports = SyntaxError;
            },
            2307: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? i(Object(r), !0).forEach(function(e) {
                            a(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function a(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != s(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != s(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == s(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function s(t) {
                    return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, s(t);
                }
                var u = r(6365), c = r(2945), f = r(6426), l = r(4327), h = r(9460), p = r(8768), d = u.Binary, y = f.CastError;
                function b(t, e) {
                    f.call(this, t, e, "Buffer");
                }
                function m(t, e) {
                    return this.castForQuery(null, t, e);
                }
                b.schemaName = "Buffer", b.defaultOptions = {}, b.prototype = Object.create(f.prototype), b.prototype.constructor = b, b.prototype.OptionsConstructor = c, b._checkRequired = function(t) {
                    return !(!t || !t.length);
                }, b.set = f.set, b.setters = [], b.get = f.get, b.checkRequired = f.checkRequired, b.prototype.checkRequired = function(t, e) {
                    return f._isRef(this, t, e, !0) ? !!t : this.constructor._checkRequired(t);
                }, b.prototype.cast = function(t, e, r, i, o) {
                    var a;
                    if (f._isRef(this, t, e, r)) {
                        if (t && t.isMongooseBuffer) return t;
                        if (n.isBuffer(t)) return t && t.isMongooseBuffer || (t = new u(t, [
                            this.path,
                            e
                        ]), null != this.options.subtype && (t._subtype = this.options.subtype)), t;
                        if (t instanceof d) {
                            if (a = new u(t.value(!0), [
                                this.path,
                                e
                            ]), "number" != typeof t.sub_type) throw new y("Buffer", t, this.path, null, this);
                            return a._subtype = t.sub_type, a;
                        }
                        if (null == t || p.isNonBuiltinObject(t)) return this._castRef(t, e, r, o);
                    }
                    if (t && t._id && (t = t._id), t && t.isMongooseBuffer) return t;
                    if (n.isBuffer(t)) return t && t.isMongooseBuffer || (t = new u(t, [
                        this.path,
                        e
                    ]), null != this.options.subtype && (t._subtype = this.options.subtype)), t;
                    if (t instanceof d) {
                        if (a = new u(t.value(!0), [
                            this.path,
                            e
                        ]), "number" != typeof t.sub_type) throw new y("Buffer", t, this.path, null, this);
                        return a._subtype = t.sub_type, a;
                    }
                    if (null === t) return t;
                    var c = s(t);
                    if ("string" === c || "number" === c || Array.isArray(t) || "object" === c && "Buffer" === t.type && Array.isArray(t.data)) return "number" === c && (t = [
                        t
                    ]), a = new u(t, [
                        this.path,
                        e
                    ]), null != this.options.subtype && (a._subtype = this.options.subtype), a;
                    if (p.isPOJO(t) && (t.$binary instanceof d || "string" == typeof t.$binary)) {
                        var l = this.cast(n.from(t.$binary, "base64"));
                        if (null != t.$type) return l._subtype = t.$type, l;
                    }
                    throw new y("Buffer", t, this.path, null, this);
                }, b.prototype.subtype = function(t) {
                    return this.options.subtype = t, this;
                }, b.prototype.$conditionalHandlers = o(o({}, f.prototype.$conditionalHandlers), {}, {
                    $bitsAllClear: h,
                    $bitsAnyClear: h,
                    $bitsAllSet: h,
                    $bitsAnySet: h,
                    $gt: m,
                    $gte: m,
                    $lt: m,
                    $lte: m
                }), b.prototype.castForQuery = function(t, e, r) {
                    var n, i;
                    if (null != t) {
                        if (!(n = this.$conditionalHandlers[t])) throw new Error("Can't use " + t + " with Buffer.");
                        return n.call(this, e);
                    }
                    try {
                        i = this.applySetters(e, r);
                    } catch (t) {
                        throw t instanceof y && t.path === this.path && null != this.$fullPath && (t.path = this.$fullPath), t;
                    }
                    return i ? i.toObject({
                        transform: !1,
                        virtuals: !1
                    }) : i;
                }, b.prototype.toJSONSchema = function(t) {
                    var e = this.options.required && "function" != typeof this.options.required;
                    return l("string", "binData", null == t ? void 0 : t.useBsonType, e);
                }, t.exports = b;
            },
            2327: (t, e, r)=>{
                e.publicEncrypt = r(2937), e.privateDecrypt = r(5443), e.privateEncrypt = function(t, r) {
                    return e.publicEncrypt(t, r, !0);
                }, e.publicDecrypt = function(t, r) {
                    return e.privateDecrypt(t, r, !0);
                };
            },
            2344: (t, e, r)=>{
                "use strict";
                var n = r(4685), i = r(7695), o = r(4104), a = r(3528), s = n.sum32, u = n.sum32_4, c = n.sum32_5, f = o.ch32, l = o.maj32, h = o.s0_256, p = o.s1_256, d = o.g0_256, y = o.g1_256, b = i.BlockHash, m = [
                    1116352408,
                    1899447441,
                    3049323471,
                    3921009573,
                    961987163,
                    1508970993,
                    2453635748,
                    2870763221,
                    3624381080,
                    310598401,
                    607225278,
                    1426881987,
                    1925078388,
                    2162078206,
                    2614888103,
                    3248222580,
                    3835390401,
                    4022224774,
                    264347078,
                    604807628,
                    770255983,
                    1249150122,
                    1555081692,
                    1996064986,
                    2554220882,
                    2821834349,
                    2952996808,
                    3210313671,
                    3336571891,
                    3584528711,
                    113926993,
                    338241895,
                    666307205,
                    773529912,
                    1294757372,
                    1396182291,
                    1695183700,
                    1986661051,
                    2177026350,
                    2456956037,
                    2730485921,
                    2820302411,
                    3259730800,
                    3345764771,
                    3516065817,
                    3600352804,
                    4094571909,
                    275423344,
                    430227734,
                    506948616,
                    659060556,
                    883997877,
                    958139571,
                    1322822218,
                    1537002063,
                    1747873779,
                    1955562222,
                    2024104815,
                    2227730452,
                    2361852424,
                    2428436474,
                    2756734187,
                    3204031479,
                    3329325298
                ];
                function v() {
                    if (!(this instanceof v)) return new v;
                    b.call(this), this.h = [
                        1779033703,
                        3144134277,
                        1013904242,
                        2773480762,
                        1359893119,
                        2600822924,
                        528734635,
                        1541459225
                    ], this.k = m, this.W = new Array(64);
                }
                n.inherits(v, b), t.exports = v, v.blockSize = 512, v.outSize = 256, v.hmacStrength = 192, v.padLength = 64, v.prototype._update = function(t, e) {
                    for(var r = this.W, n = 0; n < 16; n++)r[n] = t[e + n];
                    for(; n < r.length; n++)r[n] = u(y(r[n - 2]), r[n - 7], d(r[n - 15]), r[n - 16]);
                    var i = this.h[0], o = this.h[1], b = this.h[2], m = this.h[3], v = this.h[4], g = this.h[5], _ = this.h[6], w = this.h[7];
                    for(a(this.k.length === r.length), n = 0; n < r.length; n++){
                        var S = c(w, p(v), f(v, g, _), this.k[n], r[n]), O = s(h(i), l(i, o, b));
                        w = _, _ = g, g = v, v = s(m, S), m = b, b = o, o = i, i = s(S, O);
                    }
                    this.h[0] = s(this.h[0], i), this.h[1] = s(this.h[1], o), this.h[2] = s(this.h[2], b), this.h[3] = s(this.h[3], m), this.h[4] = s(this.h[4], v), this.h[5] = s(this.h[5], g), this.h[6] = s(this.h[6], _), this.h[7] = s(this.h[7], w);
                }, v.prototype._digest = function(t) {
                    return "hex" === t ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
                };
            },
            2345: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function i(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? n(Object(r), !0).forEach(function(e) {
                            o(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function o(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != a(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != a(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == a(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function a(t) {
                    return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, a(t);
                }
                var s = r(3672), u = r(3731), c = r(6426), f = r(2477), l = r(4327), h = r(5879), p = r(8768), d = c.CastError;
                function y(t, e) {
                    c.call(this, t, e, "Date");
                }
                function b(t) {
                    return this.cast(t);
                }
                y.schemaName = "Date", y.defaultOptions = {}, y.prototype = Object.create(c.prototype), y.prototype.constructor = y, y.prototype.OptionsConstructor = u, y._cast = f, y.set = c.set, y.setters = [], y.get = c.get, y.cast = function(t) {
                    return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
                }, y._defaultCaster = function(t) {
                    if (null != t && !(t instanceof Date)) throw new Error;
                    return t;
                }, y.prototype.expires = function(t) {
                    return "Object" !== h(this._index) && (this._index = {}), this._index.expires = t, p.expires(this._index), this;
                }, y._checkRequired = function(t) {
                    return t instanceof Date;
                }, y.checkRequired = c.checkRequired, y.prototype.checkRequired = function(t, e) {
                    return "object" === a(t) && c._isRef(this, t, e, !0) ? null != t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : y.checkRequired())(t);
                }, y.prototype.min = function(t, e) {
                    if (this.minValidator && (this.validators = this.validators.filter(function(t) {
                        return t.validator !== this.minValidator;
                    }, this)), t) {
                        var r = e || s.messages.Date.min;
                        "string" == typeof r && (r = r.replace(/{MIN}/, t === Date.now ? "Date.now()" : t.toString()));
                        var n = this;
                        this.validators.push({
                            validator: this.minValidator = function(e) {
                                var r = t;
                                "function" == typeof t && t !== Date.now && (r = r.call(this));
                                var i = r === Date.now ? r() : n.cast(r);
                                return null === e || e.valueOf() >= i.valueOf();
                            },
                            message: r,
                            type: "min",
                            min: t
                        });
                    }
                    return this;
                }, y.prototype.max = function(t, e) {
                    if (this.maxValidator && (this.validators = this.validators.filter(function(t) {
                        return t.validator !== this.maxValidator;
                    }, this)), t) {
                        var r = e || s.messages.Date.max;
                        "string" == typeof r && (r = r.replace(/{MAX}/, t === Date.now ? "Date.now()" : t.toString()));
                        var n = this;
                        this.validators.push({
                            validator: this.maxValidator = function(e) {
                                var r = t;
                                "function" == typeof r && r !== Date.now && (r = r.call(this));
                                var i = r === Date.now ? r() : n.cast(r);
                                return null === e || e.valueOf() <= i.valueOf();
                            },
                            message: r,
                            type: "max",
                            max: t
                        });
                    }
                    return this;
                }, y.prototype.cast = function(t) {
                    var e;
                    e = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : y.cast();
                    try {
                        return e(t);
                    } catch (e) {
                        throw new d("date", t, this.path, e, this);
                    }
                }, y.prototype.$conditionalHandlers = i(i({}, c.prototype.$conditionalHandlers), {}, {
                    $gt: b,
                    $gte: b,
                    $lt: b,
                    $lte: b
                }), y.prototype.castForQuery = function(t, e, r) {
                    if (null == t) try {
                        return this.applySetters(e, r);
                    } catch (t) {
                        throw t instanceof d && t.path === this.path && null != this.$fullPath && (t.path = this.$fullPath), t;
                    }
                    var n = this.$conditionalHandlers[t];
                    if (!n) throw new Error("Can't use " + t + " with Date.");
                    return n.call(this, e);
                }, y.prototype.toJSONSchema = function(t) {
                    var e = this.options.required && "function" != typeof this.options.required;
                    return l("string", "date", null == t ? void 0 : t.useBsonType, e);
                }, t.exports = y;
            },
            2354: (t, e, r)=>{
                "use strict";
                var n = r(6730);
                t.exports = Function.prototype.bind || n;
            },
            2367: (t, e, r)=>{
                var n, i, o = r(9732).Buffer, a = r(9217), s = r(594), u = r(245), c = r(6661), f = r.g.crypto && r.g.crypto.subtle, l = {
                    sha: "SHA-1",
                    "sha-1": "SHA-1",
                    sha1: "SHA-1",
                    sha256: "SHA-256",
                    "sha-256": "SHA-256",
                    sha384: "SHA-384",
                    "sha-384": "SHA-384",
                    "sha-512": "SHA-512",
                    sha512: "SHA-512"
                }, h = [];
                function p() {
                    return i || (i = r.g.process && r.g.process.nextTick ? r.g.process.nextTick : r.g.queueMicrotask ? r.g.queueMicrotask : r.g.setImmediate ? r.g.setImmediate : r.g.setTimeout);
                }
                function d(t, e, r, n, i) {
                    return f.importKey("raw", t, {
                        name: "PBKDF2"
                    }, !1, [
                        "deriveBits"
                    ]).then(function(t) {
                        return f.deriveBits({
                            name: "PBKDF2",
                            salt: e,
                            iterations: r,
                            hash: {
                                name: i
                            }
                        }, t, n << 3);
                    }).then(function(t) {
                        return o.from(t);
                    });
                }
                t.exports = function(t, e, i, y, b, m) {
                    "function" == typeof b && (m = b, b = void 0);
                    var v = l[(b = b || "sha1").toLowerCase()];
                    if (v && "function" == typeof r.g.Promise) {
                        if (a(i, y), t = c(t, s, "Password"), e = c(e, s, "Salt"), "function" != typeof m) throw new Error("No callback provided to pbkdf2");
                        !function(t, e) {
                            t.then(function(t) {
                                p()(function() {
                                    e(null, t);
                                });
                            }, function(t) {
                                p()(function() {
                                    e(t);
                                });
                            });
                        }((function(t) {
                            if (r.g.process && !r.g.process.browser) return Promise.resolve(!1);
                            if (!f || !f.importKey || !f.deriveBits) return Promise.resolve(!1);
                            if (void 0 !== h[t]) return h[t];
                            var e = d(n = n || o.alloc(8), n, 10, 128, t).then(function() {
                                return !0;
                            }).catch(function() {
                                return !1;
                            });
                            return h[t] = e, e;
                        })(v).then(function(r) {
                            return r ? d(t, e, i, y, v) : u(t, e, i, y, b);
                        }), m);
                    } else p()(function() {
                        var r;
                        try {
                            r = u(t, e, i, y, b);
                        } catch (t) {
                            return m(t);
                        }
                        m(null, r);
                    });
                };
            },
            2392: (t, e, r)=>{
                var n = r(1419), i = r(1679);
                function o(t, e) {
                    this.name = t, this.body = e, this.decoders = {}, this.encoders = {};
                }
                e.define = function(t, e) {
                    return new o(t, e);
                }, o.prototype._createNamed = function(t) {
                    var e;
                    try {
                        e = Object(function() {
                            var t = new Error("Cannot find module 'vm'");
                            throw t.code = "MODULE_NOT_FOUND", t;
                        }())("(function " + this.name + "(entity) {\n  this._initNamed(entity);\n})");
                    } catch (t) {
                        e = function(t) {
                            this._initNamed(t);
                        };
                    }
                    return i(e, t), e.prototype._initNamed = function(e) {
                        t.call(this, e);
                    }, new e(this);
                }, o.prototype._getDecoder = function(t) {
                    return t = t || "der", this.decoders.hasOwnProperty(t) || (this.decoders[t] = this._createNamed(n.decoders[t])), this.decoders[t];
                }, o.prototype.decode = function(t, e, r) {
                    return this._getDecoder(e).decode(t, r);
                }, o.prototype._getEncoder = function(t) {
                    return t = t || "der", this.encoders.hasOwnProperty(t) || (this.encoders[t] = this._createNamed(n.encoders[t])), this.encoders[t];
                }, o.prototype.encode = function(t, e, r) {
                    return this._getEncoder(e).encode(t, r);
                };
            },
            2400: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                function i(t) {
                    return function(t) {
                        if (Array.isArray(t)) return p(t);
                    }(t) || function(t) {
                        if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t);
                    }(t) || h(t) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }();
                }
                function o() {
                    o = function() {
                        return e;
                    };
                    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, i = Object.defineProperty || function(t, e, r) {
                        t[e] = r.value;
                    }, a = "function" == typeof Symbol ? Symbol : {}, s = a.iterator || "@@iterator", u = a.asyncIterator || "@@asyncIterator", c = a.toStringTag || "@@toStringTag";
                    function f(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e];
                    }
                    try {
                        f({}, "");
                    } catch (t) {
                        f = function(t, e, r) {
                            return t[e] = r;
                        };
                    }
                    function l(t, e, r, n) {
                        var o = e && e.prototype instanceof g ? e : g, a = Object.create(o.prototype), s = new T(n || []);
                        return i(a, "_invoke", {
                            value: P(t, r, s)
                        }), a;
                    }
                    function h(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            };
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            };
                        }
                    }
                    e.wrap = l;
                    var p = "suspendedStart", y = "suspendedYield", b = "executing", m = "completed", v = {};
                    function g() {}
                    function _() {}
                    function w() {}
                    var S = {};
                    f(S, s, function() {
                        return this;
                    });
                    var O = Object.getPrototypeOf, j = O && O(O(B([])));
                    j && j !== r && n.call(j, s) && (S = j);
                    var $ = w.prototype = g.prototype = Object.create(S);
                    function E(t) {
                        [
                            "next",
                            "throw",
                            "return"
                        ].forEach(function(e) {
                            f(t, e, function(t) {
                                return this._invoke(e, t);
                            });
                        });
                    }
                    function A(t, e) {
                        function r(i, o, a, s) {
                            var u = h(t[i], t, o);
                            if ("throw" !== u.type) {
                                var c = u.arg, f = c.value;
                                return f && "object" == d(f) && n.call(f, "__await") ? e.resolve(f.__await).then(function(t) {
                                    r("next", t, a, s);
                                }, function(t) {
                                    r("throw", t, a, s);
                                }) : e.resolve(f).then(function(t) {
                                    c.value = t, a(c);
                                }, function(t) {
                                    return r("throw", t, a, s);
                                });
                            }
                            s(u.arg);
                        }
                        var o;
                        i(this, "_invoke", {
                            value: function(t, n) {
                                function i() {
                                    return new e(function(e, i) {
                                        r(t, n, e, i);
                                    });
                                }
                                return o = o ? o.then(i, i) : i();
                            }
                        });
                    }
                    function P(e, r, n) {
                        var i = p;
                        return function(o, a) {
                            if (i === b) throw Error("Generator is already running");
                            if (i === m) {
                                if ("throw" === o) throw a;
                                return {
                                    value: t,
                                    done: !0
                                };
                            }
                            for(n.method = o, n.arg = a;;){
                                var s = n.delegate;
                                if (s) {
                                    var u = x(s, n);
                                    if (u) {
                                        if (u === v) continue;
                                        return u;
                                    }
                                }
                                if ("next" === n.method) n.sent = n._sent = n.arg;
                                else if ("throw" === n.method) {
                                    if (i === p) throw i = m, n.arg;
                                    n.dispatchException(n.arg);
                                } else "return" === n.method && n.abrupt("return", n.arg);
                                i = b;
                                var c = h(e, r, n);
                                if ("normal" === c.type) {
                                    if (i = n.done ? m : y, c.arg === v) continue;
                                    return {
                                        value: c.arg,
                                        done: n.done
                                    };
                                }
                                "throw" === c.type && (i = m, n.method = "throw", n.arg = c.arg);
                            }
                        };
                    }
                    function x(e, r) {
                        var n = r.method, i = e.iterator[n];
                        if (i === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, x(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), v;
                        var o = h(i, e.iterator, r.arg);
                        if ("throw" === o.type) return r.method = "throw", r.arg = o.arg, r.delegate = null, v;
                        var a = o.arg;
                        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, v) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, v);
                    }
                    function k(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
                    }
                    function M(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e;
                    }
                    function T(t) {
                        this.tryEntries = [
                            {
                                tryLoc: "root"
                            }
                        ], t.forEach(k, this), this.reset(!0);
                    }
                    function B(e) {
                        if (e || "" === e) {
                            var r = e[s];
                            if (r) return r.call(e);
                            if ("function" == typeof e.next) return e;
                            if (!isNaN(e.length)) {
                                var i = -1, o = function r() {
                                    for(; ++i < e.length;)if (n.call(e, i)) return r.value = e[i], r.done = !1, r;
                                    return r.value = t, r.done = !0, r;
                                };
                                return o.next = o;
                            }
                        }
                        throw new TypeError(d(e) + " is not iterable");
                    }
                    return _.prototype = w, i($, "constructor", {
                        value: w,
                        configurable: !0
                    }), i(w, "constructor", {
                        value: _,
                        configurable: !0
                    }), _.displayName = f(w, c, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === _ || "GeneratorFunction" === (e.displayName || e.name));
                    }, e.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, w) : (t.__proto__ = w, f(t, c, "GeneratorFunction")), t.prototype = Object.create($), t;
                    }, e.awrap = function(t) {
                        return {
                            __await: t
                        };
                    }, E(A.prototype), f(A.prototype, u, function() {
                        return this;
                    }), e.AsyncIterator = A, e.async = function(t, r, n, i, o) {
                        void 0 === o && (o = Promise);
                        var a = new A(l(t, r, n, i), o);
                        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
                            return t.done ? t.value : a.next();
                        });
                    }, E($), f($, c, "Generator"), f($, s, function() {
                        return this;
                    }), f($, "toString", function() {
                        return "[object Generator]";
                    }), e.keys = function(t) {
                        var e = Object(t), r = [];
                        for(var n in e)r.push(n);
                        return r.reverse(), function t() {
                            for(; r.length;){
                                var n = r.pop();
                                if (n in e) return t.value = n, t.done = !1, t;
                            }
                            return t.done = !0, t;
                        };
                    }, e.values = B, T.prototype = {
                        constructor: T,
                        reset: function(e) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(M), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval;
                        },
                        dispatchException: function(e) {
                            if (this.done) throw e;
                            var r = this;
                            function i(n, i) {
                                return s.type = "throw", s.arg = e, r.next = n, i && (r.method = "next", r.arg = t), !!i;
                            }
                            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                                var a = this.tryEntries[o], s = a.completion;
                                if ("root" === a.tryLoc) return i("end");
                                if (a.tryLoc <= this.prev) {
                                    var u = n.call(a, "catchLoc"), c = n.call(a, "finallyLoc");
                                    if (u && c) {
                                        if (this.prev < a.catchLoc) return i(a.catchLoc, !0);
                                        if (this.prev < a.finallyLoc) return i(a.finallyLoc);
                                    } else if (u) {
                                        if (this.prev < a.catchLoc) return i(a.catchLoc, !0);
                                    } else {
                                        if (!c) throw Error("try statement without catch or finally");
                                        if (this.prev < a.finallyLoc) return i(a.finallyLoc);
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                                var i = this.tryEntries[r];
                                if (i.tryLoc <= this.prev && n.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                                    var o = i;
                                    break;
                                }
                            }
                            o && ("break" === t || "continue" === t) && o.tryLoc <= e && e <= o.finallyLoc && (o = null);
                            var a = o ? o.completion : {};
                            return a.type = t, a.arg = e, o ? (this.method = "next", this.next = o.finallyLoc, v) : this.complete(a);
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), v;
                        },
                        finish: function(t) {
                            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), M(r), v;
                            }
                        },
                        catch: function(t) {
                            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var i = n.arg;
                                        M(r);
                                    }
                                    return i;
                                }
                            }
                            throw Error("illegal catch attempt");
                        },
                        delegateYield: function(e, r, n) {
                            return this.delegate = {
                                iterator: B(e),
                                resultName: r,
                                nextLoc: n
                            }, "next" === this.method && (this.arg = t), v;
                        }
                    }, e;
                }
                function a(t, e, r, n, i, o, a) {
                    try {
                        var s = t[o](a), u = s.value;
                    } catch (t) {
                        return void r(t);
                    }
                    s.done ? e(u) : Promise.resolve(u).then(n, i);
                }
                function s(t) {
                    return function() {
                        var e = this, r = arguments;
                        return new Promise(function(n, i) {
                            var o = t.apply(e, r);
                            function s(t) {
                                a(o, n, i, s, u, "next", t);
                            }
                            function u(t) {
                                a(o, n, i, s, u, "throw", t);
                            }
                            s(void 0);
                        });
                    };
                }
                function u(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function c(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? u(Object(r), !0).forEach(function(e) {
                            f(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : u(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function f(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != d(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != d(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == d(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function l(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = h(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, i = function() {};
                            return {
                                s: i,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: i
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var o, a = !0, s = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return a = t.done, t;
                        },
                        e: function(t) {
                            s = !0, o = t;
                        },
                        f: function() {
                            try {
                                a || null == r.return || r.return();
                            } finally{
                                if (s) throw o;
                            }
                        }
                    };
                }
                function h(t, e) {
                    if (t) {
                        if ("string" == typeof t) return p(t, e);
                        var r = ({}).toString.call(t).slice(8, -1);
                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? p(t, e) : void 0;
                    }
                }
                function p(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function d(t) {
                    return d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, d(t);
                }
                var y, b, m, v = r(1417), g = r(3550).EventEmitter, _ = r(4224), w = r(6365), S = r(3672), O = r(5022), j = r(6140), $ = r(3441), E = r(1350), A = r(1635), P = r(7058), x = r(8995), k = r(6949), M = r(9538), T = r(6814), B = r(5335), I = r(4473), R = r(4450), N = r(2068).w, D = r(2068).X, L = r(1226), C = r(7430).B, U = r(5152), q = r(791), F = r(2692), V = r(3216), z = r(2746), K = r(3305), H = r(7300), W = r(1793), J = r(5188), G = r(7352).inspect, Y = r(3303)._, Q = r(1849), X = r(6451), Z = r(5678), tt = r(6223), et = r(3892), rt = r(8768), nt = r(542), it = rt.deepEqual, ot = rt.isMongooseObject, at = r(7930).arrayAtomicsBackupSymbol, st = r(7930).arrayAtomicsSymbol, ut = r(7930).documentArrayParent, ct = r(7930).documentIsModified, ft = r(7930).documentModifiedPaths, lt = r(7930).documentSchemaSymbol, ht = r(7930).getSymbol, pt = r(7930).modelSymbol, dt = r(7930).populateModelSymbol, yt = r(7930).scopeSymbol, bt = r(7160).schemaMixedSymbol, mt = r(5346), vt = r(7930).sessionNewDocuments, gt = rt.specialProperties;
                function _t(t, e, r, n) {
                    if ("object" === d(r) && null != r && (r = (n = r).skipId), n = Object.assign({}, n), null == this.$__schema) {
                        var i = rt.isObject(e) && !e.instanceOfSchema ? new P(e) : e;
                        this.$__setSchema(i), e = r, r = n, n = arguments[4] || {};
                    }
                    if (this.$__ = new _, null != n.isNew && !0 !== n.isNew && (this.$isNew = n.isNew), null != n.priorDoc && (this.$__.priorDoc = n.priorDoc), r && (this.$__.skipId = r), null != t && "object" !== d(t)) throw new E(t, "obj", "Document");
                    var o = !0;
                    void 0 !== n.defaults && (this.$__.defaults = n.defaults, o = n.defaults);
                    var a = this.$__schema;
                    "boolean" == typeof e || "throw" === e ? (!0 !== e && (this.$__.strictMode = e), e = void 0) : !0 !== a.options.strict && (this.$__.strictMode = a.options.strict);
                    var s, u = l(a.requiredPaths(!0));
                    try {
                        for(u.s(); !(s = u.n()).done;){
                            var c = s.value;
                            this.$__.activePaths.require(c);
                        }
                    } catch (t) {
                        u.e(t);
                    } finally{
                        u.f();
                    }
                    var f = null;
                    rt.isPOJO(e) && Object.keys(e).length > 0 && (f = W(e), this.$__.selected = e, this.$__.exclude = f);
                    var h = !1 === f && e ? T(e) : null;
                    if (null == this._doc && (this.$__buildDoc(t, e, r, f, h, !1), o && B(this, e, f, h, !0, null, {
                        skipParentChangeTracking: !0
                    })), t && (this.$__original_set ? this.$__original_set(t, void 0, !0, n) : this.$set(t, void 0, !0, n), t instanceof _t && (this.$isNew = t.$isNew)), n.willInit && o ? n.skipDefaults && (this.$__.skipDefaults = n.skipDefaults) : o && B(this, e, f, h, !1, n.skipDefaults), !this.$__.strictMode && t) {
                        var p = this;
                        Object.keys(this._doc).forEach(function(t) {
                            t in a.tree || t in a.methods || t in a.virtuals || t.startsWith("$") || D({
                                prop: t,
                                subprops: null,
                                prototype: p
                            });
                        });
                    }
                    !function(t) {
                        var e = t.$__schema && t.$__schema.callQueue;
                        if (e.length) {
                            var r, n = l(e);
                            try {
                                for(n.s(); !(r = n.n()).done;){
                                    var i = r.value;
                                    "pre" !== i[0] && "post" !== i[0] && "on" !== i[0] && t[i[0]].apply(t, i[1]);
                                }
                            } catch (t) {
                                n.e(t);
                            } finally{
                                n.f();
                            }
                        }
                    }(this);
                }
                for(var wt in _t.prototype.$isMongooseDocumentPrototype = !0, Object.defineProperty(_t.prototype, "isNew", {
                    get: function() {
                        return this.$isNew;
                    },
                    set: function(t) {
                        this.$isNew = t;
                    }
                }), Object.defineProperty(_t.prototype, "errors", {
                    get: function() {
                        return this.$errors;
                    },
                    set: function(t) {
                        this.$errors = t;
                    }
                }), _t.prototype.$isNew = !0, rt.each([
                    "on",
                    "once",
                    "emit",
                    "listeners",
                    "removeListener",
                    "setMaxListeners",
                    "removeAllListeners",
                    "addListener"
                ], function(t) {
                    _t.prototype[t] = function() {
                        if (!this.$__.emitter) {
                            if ("emit" === t) return;
                            this.$__.emitter = new g, this.$__.emitter.setMaxListeners(0);
                        }
                        return this.$__.emitter[t].apply(this.$__.emitter, arguments);
                    }, _t.prototype["$".concat(t)] = _t.prototype[t];
                }), _t.prototype.constructor = _t, g.prototype)_t[wt] = g.prototype[wt];
                function St(t, e, r) {
                    if (null != t) for(var n = Object.keys(r.$__schema.paths), i = n.length, o = -1 === e.indexOf(".") ? [
                        e
                    ] : e.split("."), a = 0; a < i; ++a){
                        var s = "", u = n[a];
                        if (u.startsWith(e + ".")) {
                            var c = r.$__schema.paths[u], f = c.splitPath().slice(o.length), l = f.length;
                            if (void 0 !== c.defaultValue) for(var h = t, p = 0; p < l && null != h; ++p){
                                var d = f[p];
                                if (p === l - 1) {
                                    if (void 0 !== h[d]) break;
                                    try {
                                        var y = c.getDefault(r, !1);
                                        void 0 !== y && (h[d] = y);
                                    } catch (t) {
                                        r.invalidate(e + "." + s, t);
                                        break;
                                    }
                                    break;
                                }
                                s += (s.length ? "." : "") + d, h[d] = h[d] || {}, h = h[d];
                            }
                        }
                    }
                }
                function Ot(t, e, r, n, i) {
                    i = i || "", null != e.$__ && (e = e._doc);
                    for(var o, a, s, u = Object.keys(e), c = u.length, f = t.$__.strictMode, l = t.$__schema, h = 0; h < c; ++h)if (s = u[h], !gt.has(s) && (a = i ? i + s : s, o = l.path(a), !l.$isRootDiscriminator || t.$__isSelected(a))) {
                        var p = e[s];
                        if (!o && rt.isPOJO(p)) r[s] || (r[s] = {}, f || s in l.tree || s in l.methods || s in l.virtuals || (t[s] = r[s])), Ot(t, p, r[s], n, a + ".");
                        else if (o) {
                            if (r.hasOwnProperty(s) && void 0 !== p && !n.hydratedPopulatedDocs && delete r[s], null === p) r[s] = o._castNullish(null);
                            else if (void 0 !== p) {
                                var d = null == p.$__ ? null : p.$__.wasPopulated;
                                if (!o || d || n.hydratedPopulatedDocs) {
                                    if (o && n.hydratedPopulatedDocs) {
                                        var y;
                                        r[s] = o.cast(p, t, !0, void 0, {
                                            hydratedPopulatedDocs: !0
                                        }), r[s] && r[s].$__ && r[s].$__.wasPopulated ? t.$populated(a, r[s].$__.wasPopulated.value, r[s].$__.wasPopulated.options) : Array.isArray(r[s]) && r[s].length && null !== (y = r[s][0]) && void 0 !== y && null !== (y = y.$__) && void 0 !== y && y.wasPopulated && t.$populated(a, r[s].map(function(t) {
                                            var e;
                                            return null == t || null === (e = t.$__) || void 0 === e || null === (e = e.wasPopulated) || void 0 === e ? void 0 : e.value;
                                        }).filter(function(t) {
                                            return null != t;
                                        }), r[s][0].$__.wasPopulated.options);
                                    } else r[s] = p;
                                } else try {
                                    n && n.setters ? r[s] = o.applySetters(p, t, !1) : r[s] = o.cast(p, t, !0);
                                } catch (e) {
                                    t.invalidate(e.path, new M({
                                        path: e.path,
                                        message: e.message,
                                        type: "cast",
                                        value: e.value,
                                        reason: e
                                    }));
                                }
                            }
                            t.$isModified(a) || t.$__.activePaths.init(a);
                        } else r[s] = p, f || i || (t[s] = p);
                    }
                }
                function jt(t) {
                    if (null == t) return !0;
                    if ("object" !== d(t) || Array.isArray(t)) return !1;
                    for(var e = 0, r = Object.keys(t); e < r.length; e++)if (!jt(t[r[e]])) return !1;
                    return !0;
                }
                function $t(t, e, r, n) {
                    var i = {};
                    !function(t) {
                        var e = Object.keys(t.$__.activePaths.getStatePaths("require")), r = 0, n = e.length;
                        for(r = 0; r < n; ++r){
                            var i = e[r], o = t.$__schema.path(i);
                            if (null != o && "function" == typeof o.originalRequiredValue) {
                                t.$__.cachedRequired = t.$__.cachedRequired || {};
                                try {
                                    t.$__.cachedRequired[i] = o.originalRequiredValue.call(t, t);
                                } catch (e) {
                                    t.invalidate(i, e);
                                }
                            }
                        }
                    }(t);
                    var o = new Set(Object.keys(t.$__.activePaths.getStatePaths("require")).filter(function(e) {
                        return !(!t.$__isSelected(e) && !t.$isModified(e)) && (null == t.$__.cachedRequired || !(e in t.$__.cachedRequired) || t.$__.cachedRequired[e]);
                    }));
                    function a(t) {
                        o.add(t);
                    }
                    if (Object.keys(t.$__.activePaths.getStatePaths("init")).forEach(a), Object.keys(t.$__.activePaths.getStatePaths("modify")).forEach(a), Object.keys(t.$__.activePaths.getStatePaths("default")).forEach(a), !n) {
                        var s, u = t.$getAllSubdocs({
                            useCache: !0
                        }), c = t.modifiedPaths(), f = l(u);
                        try {
                            for(f.s(); !(s = f.n()).done;){
                                var h = s.value;
                                if (h.$basePath) {
                                    var p, d = h.$isSingleNested ? h.$__pathRelativeToParent() : h.$__fullPathWithIndexes(), y = l(h.modifiedPaths());
                                    try {
                                        for(y.s(); !(p = y.n()).done;){
                                            var b = p.value;
                                            o.delete(d + "." + b);
                                        }
                                    } catch (t) {
                                        y.e(t);
                                    } finally{
                                        y.f();
                                    }
                                    !t.$isModified(d, null, c) || t.$__.activePaths.getStatePaths("modify").hasOwnProperty(d) || t.$isDefault(d) || (o.add(d), null == t.$__.pathsToScopes && (t.$__.pathsToScopes = {}), t.$__.pathsToScopes[d] = h.$isDocumentArrayElement ? h.__parentArray : h.$parent(), i[d] = {
                                        skipSchemaValidators: !0
                                    }, h.$isDocumentArrayElement && null != h.__index && (i[d].index = h.__index));
                                }
                            }
                        } catch (t) {
                            f.e(t);
                        } finally{
                            f.f();
                        }
                    }
                    var m, v = l(o);
                    try {
                        for(v.s(); !(m = v.n()).done;){
                            var g = m.value, _ = t.$__schema.path(g);
                            if (_) {
                                if (_.$isMongooseDocumentArray) {
                                    var w, S = l(o);
                                    try {
                                        for(S.s(); !(w = S.n()).done;){
                                            var O = w.value;
                                            (null == O || O.startsWith(_.path + ".")) && o.delete(O);
                                        }
                                    } catch (t) {
                                        S.e(t);
                                    } finally{
                                        S.f();
                                    }
                                }
                                (_.caster || 0 !== _.validators.length || _.$parentSchemaDocArray) && (!_.$isMongooseArray || _.$isMongooseDocumentArray || _.$embeddedSchemaType.$isMongooseArray || 0 !== _.validators.length || 0 !== _.$embeddedSchemaType.validators.length) || o.delete(g);
                            }
                        }
                    } catch (t) {
                        v.e(t);
                    } finally{
                        v.f();
                    }
                    Array.isArray(e) ? o = function(t, e) {
                        var r, n = new Set(e), i = new Map([]), o = l(e);
                        try {
                            for(o.s(); !(r = o.n()).done;){
                                var a = r.value;
                                if (-1 !== a.indexOf(".")) for(var s = a.split("."), u = s[0], c = 1; c < s.length; ++c)i.set(u, a), u = u + "." + s[c];
                            }
                        } catch (t) {
                            o.e(t);
                        } finally{
                            o.f();
                        }
                        var f, h = new Set, p = l(t);
                        try {
                            for(p.s(); !(f = p.n()).done;){
                                var d = f.value;
                                n.has(d) ? h.add(d) : i.has(d) && h.add(i.get(d));
                            }
                        } catch (t) {
                            p.e(t);
                        } finally{
                            p.f();
                        }
                        return h;
                    }(o, e) : Array.isArray(r) && (o = function(t, e) {
                        return e = new Set(e), t = Array.from(t).filter(function(t) {
                            return !e.has(t);
                        }), new Set(t);
                    }(o, r)), function(t, e) {
                        var r, n = l(e);
                        try {
                            for(n.s(); !(r = n.n()).done;){
                                var i = r.value, o = t.$__schema.path(i);
                                o && o.$isMongooseArray && (Array.isArray(o) || !o.$isMongooseDocumentArray || o && o.schemaOptions && o.schemaOptions.required) && (!o.$isMongooseArray || o.$isMongooseDocumentArray || o.$embeddedSchemaType.$isMongooseArray || 0 !== o.$embeddedSchemaType.validators.length) && Et(t.$__getValue(i), e, i);
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                    }(t, o);
                    var j, $ = {
                        skipArrays: !0
                    }, E = l(o);
                    try {
                        for(E.s(); !(j = E.n()).done;){
                            var A = j.value;
                            if (t.$__schema.nested[A]) {
                                var P = t.$__getValue(A);
                                ot(P) && (P = P.toObject({
                                    transform: !1
                                }));
                                var x = C(P, A, $, t.$__schema);
                                Object.keys(x).filter(function(e) {
                                    return !t.$__schema.singleNestedPaths.hasOwnProperty(e);
                                }).forEach(a);
                            }
                        }
                    } catch (t) {
                        E.e(t);
                    } finally{
                        E.f();
                    }
                    var k, M = l(o);
                    try {
                        for(M.s(); !(k = M.n()).done;){
                            var T = k.value, B = t.$__schema.path(T);
                            if (B && (B.$parentSchemaDocArray && "string" == typeof B.$parentSchemaDocArray.path && o.add(B.$parentSchemaDocArray.path), B.$isSchemaMap)) {
                                var I = t.$__getValue(T);
                                if (null != I) {
                                    var R, N = l(I.keys());
                                    try {
                                        for(N.s(); !(R = N.n()).done;){
                                            var D = R.value;
                                            o.add(T + "." + D);
                                        }
                                    } catch (t) {
                                        N.e(t);
                                    } finally{
                                        N.f();
                                    }
                                }
                            }
                        }
                    } catch (t) {
                        M.e(t);
                    } finally{
                        M.f();
                    }
                    return [
                        o = Array.from(o),
                        i
                    ];
                }
                function Et(t, e, r) {
                    if (null != t) for(var n = t.length, i = 0; i < n; ++i)Array.isArray(t[i]) ? Et(t[i], e, r + "." + i) : e.add(r + "." + i);
                }
                function At(t, e, r, n) {
                    var i, o, a, s = t.$__schema, u = s.virtuals, c = Object.keys(u), f = c.length, l = f, h = t._doc, p = "boolean" != typeof (n && n.aliases) || n.aliases;
                    r = r || {};
                    var d = null;
                    if (Array.isArray(r.virtuals)) d = new Set(r.virtuals);
                    else if (r.virtuals && r.virtuals.pathsToSkip) {
                        d = new Set(c);
                        for(var y = 0; y < r.virtuals.pathsToSkip.length; y++)d.has(r.virtuals.pathsToSkip[y]) && d.delete(r.virtuals.pathsToSkip[y]);
                    }
                    if (!h) return e;
                    for(f = 0; f < l; ++f)if (i = c[f], (null == d || d.has(i)) && (p || !s.aliases.hasOwnProperty(i))) {
                        if (o = i, null != r.path) {
                            if (!i.startsWith(r.path + ".")) continue;
                            o = i.substring(r.path.length + 1);
                        }
                        if (-1 !== o.indexOf(".") || o !== i) {
                            var b = o.split(".");
                            if (void 0 !== (a = R(t.get(i), r))) {
                                var m = b.length;
                                h = e;
                                for(var v = 0; v < m - 1; ++v)h[b[v]] = h[b[v]] || {}, h = h[b[v]];
                                h[b[m - 1]] = a;
                            }
                        } else {
                            if (void 0 === (a = u[i].applyGetters(void 0, t))) continue;
                            a = R(a, r), e[o] = a;
                        }
                    }
                    return e;
                }
                function Pt(t, e) {
                    if (nt(e)) throw new Error("`transform` function must be synchronous, but the transform on path `" + t + "` returned a promise.");
                }
                function xt(t, e, r) {
                    var n = t.$populated(e, !0);
                    if (!n && t.$__.selected) {
                        var i = e.split(".")[0];
                        if (t.$__.selected[i + ".$"]) return i;
                    }
                    if (n && rt.isMongooseArray(r) && (n.options.match || n.options.options && rt.object.hasOwnProperty(n.options.options, "limit") || n.options.options && n.options.options.skip || n.options.select && (0 === n.options.select._id || /\s?-_id\s?/.test(n.options.select)))) {
                        var o = r[st];
                        if (0 === Object.keys(o).length || o.$set || o.$pop) return e;
                    }
                }
                function kt(t, e, r, n, i, o) {
                    if (o || (o = "$set"), r[o] || (r[o] = {}), r[o][n.path] = i, !1 !== t.$__schema.options.versionKey && !function(t, e) {
                        var r = t.$__schema.options.skipVersioning;
                        return !!r && r[e = e.replace(/\.\d+\./, ".")];
                    }(t, n.path) && 3 & ~t.$__.version && !t.$__schema.options.optimisticConcurrency) {
                        switch(o){
                            case "$set":
                            case "$unset":
                            case "$pop":
                            case "$pull":
                            case "$pullAll":
                            case "$push":
                            case "$addToSet":
                            case "$inc":
                                break;
                            default:
                                return;
                        }
                        "$push" === o || "$addToSet" === o || "$pullAll" === o || "$pull" === o ? /\.\d+\.|\.\d+$/.test(n.path) ? t.$__.version = 3 : t.$__.version = 2 : /^\$p/.test(o) || Array.isArray(i) ? t.$__.version = 3 : /\.\d+\.|\.\d+$/.test(n.path) && (t.$__.version = 1);
                    }
                }
                function Mt(t, e, r, n, i) {
                    if (!r.$set || !r.$set[n.path]) {
                        if ("function" != typeof i.$__getAtomics) {
                            var o, a, s = i[st], u = Object.keys(s), c = u.length;
                            if (0 === c) return rt.isMongooseObject(i) ? i = i.toObject({
                                depopulate: 1,
                                _isNested: !0
                            }) : i.valueOf && (i = i.valueOf()), kt(t, 0, r, n, i);
                            for(; c--;)o = s[a = u[c]], rt.isMongooseObject(o) ? o = o.toObject({
                                depopulate: !0,
                                transform: !1,
                                _isNested: !0
                            }) : Array.isArray(o) ? o = o.map(f) : o.valueOf && (o = o.valueOf()), "$addToSet" === a && (o = {
                                $each: o
                            }), kt(t, 0, r, n, o, a);
                        } else i.$__getAtomics().forEach(function(e) {
                            var i = e[0], o = e[1];
                            kt(t, 0, r, n, o, i);
                        });
                    }
                    function f(t) {
                        return rt.isMongooseObject(t) ? t.toObject({
                            depopulate: 1,
                            _isNested: !0
                        }) : t;
                    }
                }
                _t.prototype.$__schema, _t.prototype.schema, Object.defineProperty(_t.prototype, "$locals", {
                    configurable: !1,
                    enumerable: !1,
                    get: function() {
                        return null == this.$__.locals && (this.$__.locals = {}), this.$__.locals;
                    },
                    set: function(t) {
                        this.$__.locals = t;
                    }
                }), _t.prototype.isNew, Object.defineProperty(_t.prototype, "$where", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !0
                }), _t.prototype.id, _t.prototype.$errors, Object.defineProperty(_t.prototype, "$op", {
                    get: function() {
                        return this.$__.op || null;
                    },
                    set: function(t) {
                        this.$__.op = t;
                    }
                }), _t.prototype.$__buildDoc = function(t, e, r, n, i) {
                    for(var o = {}, a = Object.keys(this.$__schema.paths).filter(function(t) {
                        return !t.includes("$*");
                    }), s = a.length, u = 0; u < s; ++u){
                        var c = a[u];
                        if ("_id" === c) {
                            if (r) continue;
                            if (t && "_id" in t) continue;
                        }
                        for(var f = this.$__schema.paths[c].splitPath(), l = f.length, h = l - 1, p = "", d = o, y = !1, b = 0; b < l; ++b){
                            var m = f[b];
                            if (p.length ? p += "." + m : p = m, !0 === n) {
                                if (p in e) break;
                            } else if (!1 === n && e && !y) {
                                if (p in e) y = !0;
                                else if (!i[p]) break;
                            }
                            b < h && (d = d[m] || (d[m] = {}));
                        }
                    }
                    this._doc = o;
                }, _t.prototype.toBSON = function() {
                    return this.toObject(Y);
                }, _t.prototype.init = function(t, e, r) {
                    return "function" == typeof e && (r = e, e = null), this.$__init(t, e), r && r(null, this), this;
                }, _t.prototype.$init = function() {
                    return this.constructor.prototype.init.apply(this, arguments);
                }, _t.prototype.$__init = function(t, e) {
                    if (this.$isNew = !1, e = e || {}, null != t._id && e.populated && e.populated.length) {
                        var r, n = String(t._id), i = l(e.populated);
                        try {
                            for(i.s(); !(r = i.n()).done;){
                                var o = r.value;
                                if (o.isVirtual ? this.$populated(o.path, rt.getValue(o.path, t), o) : this.$populated(o.path, o._docs[n], o), null != o._childDocs) {
                                    var a, s = l(o._childDocs);
                                    try {
                                        for(s.s(); !(a = s.n()).done;){
                                            var u = a.value;
                                            null != u && null != u.$__ && (u.$__.parent = this);
                                        }
                                    } catch (t) {
                                        s.e(t);
                                    } finally{
                                        s.f();
                                    }
                                    o._childDocs = [];
                                }
                            }
                        } catch (t) {
                            i.e(t);
                        } finally{
                            i.f();
                        }
                    }
                    Ot(this, t, this._doc, e), Q(this, e.populated), this.$emit("init", this), this.constructor.emit("init", this);
                    var c = !1 === this.$__.exclude && this.$__.selected ? T(this.$__.selected) : null;
                    return B(this, this.$__.selected, this.$__.exclude, c, !1, this.$__.skipDefaults), this;
                }, _t.prototype.updateOne = function(t, e, r) {
                    var n = this.constructor.updateOne({
                        _id: this._doc._id
                    }, t, e), i = this;
                    return n.pre(function(t) {
                        i.constructor._middleware.execPre("updateOne", i, [
                            i
                        ], t);
                    }), n.post(function(t) {
                        i.constructor._middleware.execPost("updateOne", i, [
                            i
                        ], {}, t);
                    }), null != this.$session() && ("session" in n.options || (n.options.session = this.$session())), null != r ? n.exec(r) : n;
                }, _t.prototype.replaceOne = function() {
                    var t = Array.prototype.slice.call(arguments);
                    return t.unshift({
                        _id: this._doc._id
                    }), this.constructor.replaceOne.apply(this.constructor, t);
                }, _t.prototype.$session = function(t) {
                    if (0 === arguments.length) return null != this.$__.session && this.$__.session.hasEnded ? (this.$__.session = null, null) : this.$__.session;
                    if (null != t && t.hasEnded) throw new S("Cannot set a document's session to a session that has ended. Make sure you haven't called `endSession()` on the session you are passing to `$session()`.");
                    if (null != t || null != this.$__.session) {
                        if (this.$__.session = t, !this.$isSubdocument) {
                            var e, r = l(this.$getAllSubdocs());
                            try {
                                for(r.s(); !(e = r.n()).done;)e.value.$session(t);
                            } catch (t) {
                                r.e(t);
                            } finally{
                                r.f();
                            }
                        }
                        return t;
                    }
                }, _t.prototype.$timestamps = function(t) {
                    return 0 === arguments.length ? null != this.$__.timestamps ? this.$__.timestamps : this.$__schema ? this.$__schema.options.timestamps : void 0 : (t !== this.$timestamps() && (this.$__.timestamps = t), this);
                }, _t.prototype.overwrite = function(t) {
                    for(var e = 0, r = Array.from(new Set(Object.keys(this._doc).concat(Object.keys(t)))); e < r.length; e++){
                        var n = r[e];
                        "_id" !== n && (this.$__schema.options.versionKey && n === this.$__schema.options.versionKey || this.$__schema.options.discriminatorKey && n === this.$__schema.options.discriminatorKey || this.$set(n, t[n]));
                    }
                    return this;
                }, _t.prototype.$set = function(t, e, r, n) {
                    var i = this;
                    rt.isPOJO(r) && (n = r, r = void 0);
                    var o, a, s, u, h = n && n.merge, p = r && !0 !== r, y = !0 === r, b = 0, m = n && "strict" in n, v = m ? n.strict : this.$__.strictMode;
                    if (p && ((this.$__.adhocPaths || (this.$__.adhocPaths = {}))[t] = this.$__schema.interpretAsType(t, r, this.$__schema.options)), null == t) {
                        var g = [
                            e,
                            t
                        ];
                        t = g[0], e = g[1];
                    } else if ("string" != typeof t) {
                        if (t instanceof _t && (t = t.$__isNested ? t.toObject() : t.$__schema === this.$__schema ? At(t, c({}, t._doc)) : t._doc), null == t) {
                            var _ = [
                                e,
                                t
                            ];
                            t = _[0], e = _[1];
                        }
                        u = e ? e + "." : "";
                        var w = (o = q(this.$__schema, t)).length, j = n && n._skipMinimizeTopLevel || !1;
                        if (0 === w && j) return delete n._skipMinimizeTopLevel, e && this.$set(e, {}), this;
                        n = Object.assign({}, n, {
                            _skipMinimizeTopLevel: !1
                        });
                        for(var E = 0; E < w; ++E){
                            s = o[E];
                            var A = u ? u + s : s;
                            a = this.$__schema.pathType(A);
                            var P = t[s];
                            if (!0 !== r || u || null == P || "nested" !== a || null == this._doc[s] || delete this._doc[s], rt.isNonBuiltinObject(P) && "nested" === a) this.$set(A, P, y, Object.assign({}, n, {
                                _skipMarkModified: !0
                            })), St(this.$get(A), A, this);
                            else if (v) {
                                if (y && void 0 === P && void 0 !== this.$get(A)) continue;
                                if ("adhocOrUndefined" === a && (a = U(this, A, {
                                    typeOnly: !0
                                })), "real" === a || "virtual" === a) this.$set(A, P, y, n);
                                else if ("nested" === a && P instanceof _t) this.$set(A, P.toObject({
                                    transform: !1
                                }), y, n);
                                else {
                                    if ("throw" === v) throw "nested" === a ? new $(s, P) : new x(s);
                                    "nested" === a && null == P && this.$set(A, P, y, n);
                                }
                            } else this.$set(A, P, y, n);
                        }
                        for(var k = {}, M = Object.keys(this.$__schema.tree), T = 0, B = M.length; T < B; ++T)(s = M[T]) && this._doc.hasOwnProperty(s) && (k[s] = void 0);
                        return this._doc = Object.assign(k, this._doc), this;
                    }
                    var R = this.$__schema.pathType(t), N = null;
                    if ("adhocOrUndefined" === R && (N = -1 === t.indexOf(".") ? [
                        t
                    ] : t.split("."), R = U(this, N, {
                        typeOnly: !0
                    })), "adhocOrUndefined" === R && !m) {
                        null == N && (N = -1 === t.indexOf(".") ? [
                            t
                        ] : t.split("."));
                        var D = F(this.$__schema, N);
                        void 0 !== D && (v = D);
                    }
                    e = V(e, !0);
                    var L, C = null != i.$__.priorDoc ? i.$__.priorDoc.$__getValue(t) : y ? void 0 : i.$__getValue(t);
                    if ("nested" === R && e) {
                        if ("object" === d(e) && null != e) {
                            if (null != e.$__ && (e = e.toObject(Y)), null == e) return this.invalidate(t, new S.CastError("Object", e, t)), this;
                            var z = this.$isModified(t), K = null != this.$__.savedState && this.$__.savedState.hasOwnProperty(t);
                            if (null != this.$__.savedState && !this.$isNew && !this.$__.savedState.hasOwnProperty(t)) {
                                var H = this.$__getValue(t);
                                this.$__.savedState[t] = H;
                                for(var W = 0, J = Object.keys(H || {}); W < J.length; W++){
                                    var G = J[W];
                                    this.$__.savedState[t + "." + G] = H[G];
                                }
                            }
                            if (h) return this.$set(e, t, y, n);
                            this.$__setValue(t, null), I(this, t);
                            var Q = q(this.$__schema, e, t);
                            this.$__setValue(t, {});
                            var X, tt = l(Q);
                            try {
                                for(tt.s(); !(X = tt.n()).done;){
                                    var et = X.value;
                                    this.$set(t + "." + et, e[et], y, c(c({}, n), {}, {
                                        _skipMarkModified: !0
                                    }));
                                }
                            } catch (t) {
                                tt.e(t);
                            } finally{
                                tt.f();
                            }
                            return null == C || z && !K || !rt.deepEqual(K ? this.$__.savedState[t] : C, e) ? this.markModified(t) : this.unmarkModified(t), this;
                        }
                        return this.invalidate(t, new S.CastError("Object", e, t)), this;
                    }
                    if (null == N && (N = -1 === t.indexOf(".") ? [
                        t
                    ] : t.split(".")), "string" == typeof this.$__schema.aliases[N[0]] && (N[0] = this.$__schema.aliases[N[0]]), "adhocOrUndefined" === R && v) {
                        var nt;
                        for(b = 0; b < N.length; ++b){
                            var it = N.slice(0, b + 1).join(".");
                            if (b + 1 < N.length && "virtual" === this.$__schema.pathType(it)) return Z.set(t, e, this), this;
                            if (null != (L = this.$__schema.path(it))) {
                                if (L instanceof O) {
                                    nt = !0;
                                    break;
                                }
                                if (L.$isSchemaMap && L.$__schemaType instanceof O && b < N.length - 1) {
                                    nt = !0, L = L.$__schemaType;
                                    break;
                                }
                            }
                        }
                        if (null == L && (L = U(this, t)), !nt && !L) {
                            if ("throw" === v) throw new x(t);
                            return this;
                        }
                    } else {
                        if ("virtual" === R) return (L = this.$__schema.virtualpath(t)).applySetters(e, this), this;
                        L = this.$__path(t);
                    }
                    var ot, at = this._doc, st = "";
                    for(b = 0; b < N.length - 1; ++b)at = at[N[b]], st += (0 !== st.length ? "." : "") + N[b], at || (this.$set(st, {}), this.$__isSelected(st) || this.unmarkModified(st), at = this.$__getValue(st));
                    if (N.length <= 1) ot = t;
                    else {
                        var ut = N.length;
                        for(b = 0; b < ut; ++b){
                            var ct = N.slice(0, b + 1).join(".");
                            if (null === this.$get(ct, null, {
                                getters: !1
                            })) {
                                ot = ct;
                                break;
                            }
                        }
                        ot || (ot = t);
                    }
                    if (!L) return this.$__set(ot, t, n, y, N, L, e, C), "nested" === R && null == e && I(this, t), this;
                    if ((L.$isSingleNested || L.$isMongooseArray) && function(t, e) {
                        if (t.$__.validationError) {
                            for(var r = 0, n = Object.keys(t.$__.validationError.errors); r < n.length; r++){
                                var i = n[r];
                                i.startsWith(e + ".") && delete t.$__.validationError.errors[i];
                            }
                            0 === Object.keys(t.$__.validationError.errors).length && (t.$__.validationError = null);
                        }
                    }(this, t), null != e && h && L.$isSingleNested) {
                        e instanceof _t && (e = e.toObject({
                            virtuals: !1,
                            transform: !1
                        }));
                        for(var ft = 0, lt = Object.keys(e); ft < lt.length; ft++){
                            var ht = lt[ft];
                            this.$set(t + "." + ht, e[ht], y, n);
                        }
                        return this;
                    }
                    var yt = !0;
                    try {
                        var bt, gt = function() {
                            if (null == L.options) return !1;
                            if (!(e instanceof _t)) return !1;
                            var t = e.constructor, r = "function" != typeof L.options.ref || L.options.ref[pt] ? L.options.ref : L.options.ref.call(i, i), n = (null == r ? void 0 : r.modelName) || r;
                            if (null != n && (n === t.modelName || n === t.baseModelName)) return !0;
                            var o = L.options.refPath;
                            if (null == o) return !1;
                            var a = e.get(o);
                            return a === t.modelName || a === t.baseModelName;
                        }(), wt = !1;
                        if (gt && e instanceof _t && (!e.$__.wasPopulated || rt.deepEqual(e.$__.wasPopulated.value, e._doc._id))) {
                            var Ot = L && L.$isSingleNested ? L.cast(e, this) : e._doc._id;
                            this.$populated(t, Ot, f({}, dt, e.constructor)), e.$__.wasPopulated = {
                                value: Ot
                            }, wt = !0;
                        }
                        var jt = this.$__schema.options.typeKey;
                        if (L.options && Array.isArray(L.options[jt]) && L.options[jt].length && L.options[jt][0] && L.options[jt][0].ref && function(t, e) {
                            if (!Array.isArray(t)) return !1;
                            if (0 === t.length) return !1;
                            var r, n = l(t);
                            try {
                                for(n.s(); !(r = n.n()).done;){
                                    var i = r.value;
                                    if (!(i instanceof _t)) return !1;
                                    if (null == i.constructor.modelName) return !1;
                                    if (i.constructor.modelName != e && i.constructor.baseModelName != e) return !1;
                                }
                            } catch (t) {
                                n.e(t);
                            } finally{
                                n.f();
                            }
                            return !0;
                        }(e, L.options[jt][0].ref)) {
                            bt = f({}, dt, e[0].constructor), this.$populated(t, e.map(function(t) {
                                return t._doc._id;
                            }), bt);
                            var $t, Et = l(e);
                            try {
                                for(Et.s(); !($t = Et.n()).done;){
                                    var Pt = $t.value;
                                    Pt.$__.wasPopulated = {
                                        value: Pt._doc._id
                                    };
                                }
                            } catch (t) {
                                Et.e(t);
                            } finally{
                                Et.f();
                            }
                            wt = !0;
                        }
                        if (!gt || !L.$isSingleNested || !e.$__) {
                            var xt = this;
                            null != this.$__schema.singleNestedPaths[t] && N.length > 1 && (xt = mt(this, N, this.schema)), e = null != n && n.overwriteImmutable ? L.applySetters(e, xt, !1, C, {
                                overwriteImmutable: !0
                            }) : L.applySetters(e, xt, !1, C);
                        }
                        if (Array.isArray(e) && !Array.isArray(L) && L.$isMongooseDocumentArray && 0 !== e.length && null != e[0] && null != e[0].$__ && null != e[0].$__.populated) {
                            for(var kt = Object.keys(e[0].$__.populated), Mt = function() {
                                var r = Bt[Tt];
                                i.$populated(t + "." + r, e.map(function(t) {
                                    return t.$populated(r);
                                }), e[0].$__.populated[r].options);
                            }, Tt = 0, Bt = kt; Tt < Bt.length; Tt++)Mt();
                            wt = !0;
                        }
                        if (!wt && this.$__.populated) {
                            if (Array.isArray(e) && this.$__.populated[t]) for(var It = 0; It < e.length; ++It)e[It] instanceof _t && e.set(It, e[It]._doc._id, !0);
                            delete this.$__.populated[t];
                        }
                        null != e && L.$isSingleNested && function(t, e, r) {
                            var n = e.schema;
                            if (null != n) for(var i = 0, o = Object.keys(n.paths); i < o.length; i++){
                                var a = o[i], s = n.paths[a];
                                if (null != s.$immutableSetter) {
                                    var u = null == r ? void 0 : r.$__getValue(a);
                                    s.$immutableSetter.call(t, u);
                                }
                            }
                        }(e, L, C), this.$markValid(t);
                    } catch (r) {
                        r instanceof S.StrictModeError && r.isImmutableError ? this.invalidate(t, r) : r instanceof S.CastError ? (this.invalidate(r.path, r), r.$originalErrorPath && this.invalidate(t, new S.CastError(L.instance, e, t, r.$originalErrorPath))) : this.invalidate(t, new S.CastError(L.instance, e, t, r)), yt = !1;
                    }
                    if (yt) {
                        var Rt, Nt = null, Dt = null;
                        if (!y) {
                            var Lt = this.$isSubdocument ? this.ownerDocument() : this;
                            Nt = Lt.$__.savedState, Dt = this.$isSubdocument ? this.$__.fullPath + "." + t : t, Lt.$__saveInitialState(Dt);
                        }
                        this.$__set(ot, t, n, y, N, L, e, C);
                        var Ct = !(null === (Rt = this.$__.session) || void 0 === Rt || !Rt.transaction), Ut = this.$__.session && this.$__.session[vt] && this.$__.session[vt].has(this) && this.$__.session[vt].get(this).modifiedPaths && !this.$__.session[vt].get(this).modifiedPaths.has(Dt);
                        null != Nt && Nt.hasOwnProperty(Dt) && (!Ct || Ut) && rt.deepEqual(e, Nt[Dt]) && this.unmarkModified(t);
                    }
                    return L.$isSingleNested && (this.isDirectModified(t) || null == e) && I(this, t), this;
                }, _t.prototype.set = _t.prototype.$set, _t.prototype.$__shouldModify = function(t, e, r, n, i, o, a, s) {
                    return !(r && r._skipMarkModified || !this.$isNew && !(e in this.$__.activePaths.getStatePaths("modify")) && (void 0 !== a || this.$__isSelected(e)) && (void 0 === a && e in this.$__.activePaths.getStatePaths("default") || this.$populated(e) && a instanceof _t && it(a._doc._id, s) || it(a, void 0 !== s ? s : rt.getValue(e, this)) && (n || null == a || !(e in this.$__.activePaths.getStatePaths("default")) || !it(a, o.getDefault(this, n)))));
                }, _t.prototype.$__set = function(t, e, n, i, o, a, s, u) {
                    m = m || r(6547);
                    var c = this.$__shouldModify(t, e, n, i, o, a, s, u);
                    c ? (this.$__.primitiveAtomics && this.$__.primitiveAtomics[e] && (delete this.$__.primitiveAtomics[e], 0 === Object.keys(this.$__.primitiveAtomics).length && delete this.$__.primitiveAtomics), this.markModified(t), b || (b = r(7557)), s && rt.isMongooseArray(s) && (s._registerAtomic("$set", s), rt.isMongooseDocumentArray(s) && s.forEach(function(t) {
                        t && t.__parentArray && (t.__parentArray = s);
                    }))) : Array.isArray(s) && Array.isArray(u) && rt.isMongooseArray(s) && rt.isMongooseArray(u) && (s[st] = u[st], s[at] = u[at], rt.isMongooseDocumentArray(s) && s.forEach(function(t) {
                        null != t && (t.$isNew = !1);
                    }));
                    for(var f = this._doc, l = 0, h = o.length, p = ""; l < h; l++){
                        var d = l + 1 === h;
                        if (p += p ? "." + o[l] : o[l], !gt.has(o[l])) {
                            if (d) f instanceof Map ? f.set(o[l], s) : f.$isSingleNested ? (o[l] in f || (f[o[l]] = s), f._doc[o[l]] = s, c && f.markModified(o[l])) : f[o[l]] = s;
                            else {
                                var y = f instanceof Map, v = y ? f.get(o[l]) : f[o[l]];
                                rt.isPOJO(v) || v && v instanceof m || v && !Array.isArray(v) && v.$isSingleNested || v && Array.isArray(v) ? f = v : null == v ? (v = {}, y ? f.set(o[l], v) : f[o[l]] = v, f = v) : f = v;
                            }
                        }
                    }
                }, _t.prototype.$__getValue = function(t) {
                    if ("string" != typeof t && !Array.isArray(t)) throw new TypeError('Invalid `path`. Must be either string or array. Got "'.concat(t, '" (type ').concat(d(t), ")"));
                    return rt.getValue(t, this._doc);
                }, _t.prototype.$inc = function(t, e) {
                    var r = this;
                    if (null == e && (e = 1), Array.isArray(t)) return t.forEach(function(t) {
                        return r.$inc(t, e);
                    }), this;
                    var n = this.$__path(t);
                    if (null == n) {
                        if ("throw" === this.$__.strictMode) throw new x(t);
                        if (!0 === this.$__.strictMode) return this;
                    } else if ("Number" !== n.instance) return this.invalidate(t, new S.CastError(n.instance, e, t)), this;
                    var i = this.$__getValue(t) || 0, o = !1, a = null, s = e;
                    try {
                        e = n.cast(e), s = (a = n.applySetters(i + e, this)) - i, o = !0;
                    } catch (r) {
                        this.invalidate(t, new S.CastError("number", e, t, r));
                    }
                    return o && (this.$__.primitiveAtomics = this.$__.primitiveAtomics || {}, null == this.$__.primitiveAtomics[t] ? this.$__.primitiveAtomics[t] = {
                        $inc: s
                    } : this.$__.primitiveAtomics[t].$inc += s, this.markModified(t), this.$__setValue(t, a)), this;
                }, _t.prototype.$__setValue = function(t, e) {
                    return rt.setValue(t, e, this._doc), this;
                }, _t.prototype.get = function(t, e, r) {
                    var n;
                    null == r && (r = {}), e && (n = this.$__schema.interpretAsType(t, e, this.$__schema.options));
                    var i = r.noDottedPath, o = i ? this.$__schema.paths[t] : this.$__path(t);
                    if (null == o && null != (o = this.$__schema.virtualpath(t))) return o.applyGetters(void 0, this);
                    if (i) {
                        var a = this._doc[t];
                        return n && (a = n.cast(a)), null != o && !1 !== r.getters ? o.applyGetters(a, this) : a;
                    }
                    if (null != o && "Mixed" === o.instance) {
                        var s = this.$__schema.virtualpath(t);
                        null != s && (o = s);
                    }
                    var u = -1 !== t.indexOf("."), c = this._doc, f = u ? t.split(".") : [
                        t
                    ];
                    "string" == typeof this.$__schema.aliases[f[0]] && (f[0] = this.$__schema.aliases[f[0]]);
                    for(var l = 0, h = f.length; l < h; l++)c && c._doc && (c = c._doc), c = null == c ? void 0 : c instanceof Map ? c.get(f[l], {
                        getters: !1
                    }) : l === h - 1 ? rt.getValue(f[l], c) : c[f[l]];
                    if (n && (c = n.cast(c)), null != o && !1 !== r.getters) c = o.applyGetters(c, this);
                    else if (this.$__schema.nested[t] && r.virtuals) return At(this, R(c) || {}, {
                        path: t
                    });
                    return c;
                }, _t.prototype[ht] = _t.prototype.get, _t.prototype.$get = _t.prototype.get, _t.prototype.$__path = function(t) {
                    var e = this.$__.adhocPaths;
                    return (e && e.hasOwnProperty(t) ? e[t] : null) || this.$__schema.path(t);
                }, _t.prototype.markModified = function(t, e) {
                    this.$__saveInitialState(t), this.$__.activePaths.modify(t), null == e || this.$isSubdocument || (this.$__.pathsToScopes = this.$__pathsToScopes || {}, this.$__.pathsToScopes[t] = e);
                }, _t.prototype.$__saveInitialState = function(t) {
                    var e = this.$__.savedState, r = t;
                    if (null != e) {
                        var n = r.indexOf("."), i = -1 === n ? r : r.slice(0, n);
                        e.hasOwnProperty(i) || (e[i] = R(this.$__getValue(i)));
                    }
                }, _t.prototype.unmarkModified = function(t) {
                    this.$__.activePaths.init(t), null != this.$__.pathsToScopes && delete this.$__.pathsToScopes[t];
                }, _t.prototype.$ignore = function(t) {
                    this.$__.activePaths.ignore(t);
                }, _t.prototype.directModifiedPaths = function() {
                    return Object.keys(this.$__.activePaths.getStatePaths("modify"));
                }, _t.prototype.$isEmpty = function(t) {
                    var e = {
                        minimize: !0,
                        virtuals: !1,
                        getters: !1,
                        transform: !1
                    };
                    if (0 !== arguments.length) {
                        var r = this.$get(t);
                        return null == r || "object" === d(r) && (rt.isPOJO(r) ? jt(r) : 0 === Object.keys(r.toObject(e)).length);
                    }
                    return 0 === Object.keys(this.toObject(e)).length;
                }, _t.prototype.modifiedPaths = function(t) {
                    t = t || {};
                    var e = Object.keys(this.$__.activePaths.getStatePaths("modify")), r = new Set, n = 0, i = 0, o = e.length;
                    for(n = 0; n < o; ++n){
                        var a = e[n], s = tt(a), u = s.length;
                        for(i = 0; i < u; ++i)r.add(s[i]);
                        if (t.includeChildren) {
                            var c = 0, f = this.$get(a);
                            if ("object" === d(f) && null !== f) {
                                f._doc && (f = f._doc);
                                var l = f.length;
                                if (Array.isArray(f)) for(c = 0; c < l; ++c){
                                    var h = a + "." + c;
                                    if (!r.has(h) && (r.add(h), null != f[c] && f[c].$__)) {
                                        var p = f[c].modifiedPaths(), y = 0, b = p.length;
                                        for(y = 0; y < b; ++y)r.add(h + "." + p[y]);
                                    }
                                }
                                else {
                                    var m = Object.keys(f), v = 0, g = m.length;
                                    for(v = 0; v < g; ++v)r.add(a + "." + m[v]);
                                }
                            }
                        }
                    }
                    return Array.from(r);
                }, _t.prototype[ft] = _t.prototype.modifiedPaths, _t.prototype.isModified = function(t, e, r) {
                    var n = this;
                    if (t) {
                        var i = e && e.ignoreAtomics, o = this.$__.activePaths.states.modify;
                        if (null == o) return !1;
                        "string" == typeof t && (t = -1 === t.indexOf(" ") ? [
                            t
                        ] : t.split(" "));
                        var a, s = l(t);
                        try {
                            for(s.s(); !(a = s.n()).done;)if (null != o[a.value]) return !0;
                        } catch (t) {
                            s.e(t);
                        } finally{
                            s.f();
                        }
                        var u = r || this[ft](), c = t.some(function(t) {
                            return !!~u.indexOf(t);
                        }), f = Object.keys(o);
                        return i && (f = f.filter(function(t) {
                            var e = n.$__getValue(t);
                            return null == e || null == e[st] || void 0 !== e[st].$set;
                        })), c || t.some(function(t) {
                            return f.some(function(e) {
                                return e === t || t.startsWith(e + ".");
                            });
                        });
                    }
                    return this.$__.activePaths.some("modify");
                }, _t.prototype.$isModified = _t.prototype.isModified, _t.prototype[ct] = _t.prototype.isModified, _t.prototype.$isDefault = function(t) {
                    var e = this;
                    if (null == t) return this.$__.activePaths.some("default");
                    if ("string" == typeof t && -1 === t.indexOf(" ")) return this.$__.activePaths.getStatePaths("default").hasOwnProperty(t);
                    var r = t;
                    return Array.isArray(r) || (r = r.split(" ")), r.some(function(t) {
                        return e.$__.activePaths.getStatePaths("default").hasOwnProperty(t);
                    });
                }, _t.prototype.$isDeleted = function(t) {
                    return 0 === arguments.length ? !!this.$__.isDeleted : (this.$__.isDeleted = !!t, this);
                }, _t.prototype.isDirectModified = function(t) {
                    var e = this;
                    if (null == t) return this.$__.activePaths.some("modify");
                    if ("string" == typeof t && -1 === t.indexOf(" ")) {
                        var r = this.$__.activePaths.getStatePaths("modify").hasOwnProperty(t);
                        if (r || -1 === t.indexOf(".")) return r;
                        for(var n = t.split("."), i = 0; i < n.length - 1; ++i){
                            var o = n.slice(0, i + 1).join("."), a = this.$get(o);
                            if (null != a && null != a.$__ && a.isDirectModified(n.slice(i + 1).join("."))) return !0;
                        }
                        return !1;
                    }
                    var s = t;
                    return "string" == typeof s && (s = s.split(" ")), s.some(function(t) {
                        return e.isDirectModified(t);
                    });
                }, _t.prototype.isInit = function(t) {
                    var e = this;
                    if (null == t) return this.$__.activePaths.some("init");
                    if ("string" == typeof t && -1 === t.indexOf(" ")) return this.$__.activePaths.getStatePaths("init").hasOwnProperty(t);
                    var r = t;
                    return Array.isArray(r) || (r = r.split(" ")), r.some(function(t) {
                        return e.$__.activePaths.getStatePaths("init").hasOwnProperty(t);
                    });
                }, _t.prototype.isSelected = function(t) {
                    var e = this;
                    if (null == this.$__.selected) return !0;
                    if (!t) return !1;
                    if ("_id" === t) return 0 !== this.$__.selected._id;
                    if (-1 !== t.indexOf(" ") && (t = t.split(" ")), Array.isArray(t)) return t.some(function(t) {
                        return e.$__isSelected(t);
                    });
                    var r = Object.keys(this.$__.selected), n = null;
                    if (1 === r.length && "_id" === r[0]) return 0 === this.$__.selected._id;
                    for(var i = 0, o = r; i < o.length; i++){
                        var a = o[i];
                        if ("_id" !== a && H(this.$__.selected[a])) {
                            n = !!this.$__.selected[a];
                            break;
                        }
                    }
                    if (null === n) return !0;
                    if (t in this.$__.selected) return n;
                    for(var s = t + ".", u = 0, c = r; u < c.length; u++){
                        var f = c[u];
                        if ("_id" !== f) {
                            if (f.startsWith(s)) return n || f !== s;
                            if (s.startsWith(f + ".")) return n;
                        }
                    }
                    return !n;
                }, _t.prototype.$__isSelected = _t.prototype.isSelected, _t.prototype.isDirectSelected = function(t) {
                    var e = this;
                    if (null == this.$__.selected) return !0;
                    if ("_id" === t) return 0 !== this.$__.selected._id;
                    if (-1 !== t.indexOf(" ") && (t = t.split(" ")), Array.isArray(t)) return t.some(function(t) {
                        return e.isDirectSelected(t);
                    });
                    var r = Object.keys(this.$__.selected), n = null;
                    if (1 === r.length && "_id" === r[0]) return 0 === this.$__.selected._id;
                    for(var i = 0, o = r; i < o.length; i++){
                        var a = o[i];
                        if ("_id" !== a && H(this.$__.selected[a])) {
                            n = !!this.$__.selected[a];
                            break;
                        }
                    }
                    return null === n || (this.$__.selected.hasOwnProperty(t) ? n : !n);
                }, _t.prototype.validate = function() {
                    var t = s(o().mark(function t(e, r) {
                        var n, i, a, s = this, u = arguments;
                        return o().wrap(function(t) {
                            for(;;)switch(t.prev = t.next){
                                case 0:
                                    if ("function" != typeof e && "function" != typeof r && "function" != typeof u[2]) {
                                        t.next = 2;
                                        break;
                                    }
                                    throw new S("Document.prototype.validate() no longer accepts a callback");
                                case 2:
                                    if (this.$op = "validate", 1 === u.length && ("object" !== d(u[0]) || Array.isArray(u[0]) || (r = u[0], e = null)), r && "string" == typeof r.pathsToSkip && (i = -1 === r.pathsToSkip.indexOf(" "), r.pathsToSkip = i ? [
                                        r.pathsToSkip
                                    ] : r.pathsToSkip.split(" ")), a = r && r._skipParallelValidateCheck, null != this.$isSubdocument || (this.$__.validating && !a ? n = new A(this, {
                                        parentStack: r && r.parentStack,
                                        conflictStack: this.$__.validating.stack
                                    }) : a || (this.$__.validating = new A(this, {
                                        parentStack: r && r.parentStack
                                    }))), null == n) {
                                        t.next = 9;
                                        break;
                                    }
                                    throw n;
                                case 9:
                                    return t.abrupt("return", new Promise(function(t, n) {
                                        s.$__validate(e, r, function(e) {
                                            if (s.$op = null, s.$__.validating = null, null != e) return n(e);
                                            t();
                                        });
                                    }));
                                case 10:
                                case "end":
                                    return t.stop();
                            }
                        }, t, this);
                    }));
                    return function(e, r) {
                        return t.apply(this, arguments);
                    };
                }(), _t.prototype.$validate = _t.prototype.validate, _t.prototype.$__validate = function(t, e, r) {
                    var n, o = this;
                    this.$__.saveOptions && this.$__.saveOptions.pathsToSave && !t ? t = i(this.$__.saveOptions.pathsToSave) : "function" == typeof t ? (r = t, e = null, t = null) : "function" == typeof e && (r = e, e = null);
                    var a, s = e && "object" === d(e) && "validateModifiedOnly" in e, u = e && e.pathsToSkip || null;
                    a = s ? !!e.validateModifiedOnly : this.$__schema.options.validateModifiedOnly;
                    var f = e && e.validateAllPaths;
                    if (f) {
                        if (u) throw new TypeError("Cannot set both `validateAllPaths` and `pathsToSkip`");
                        if (t) throw new TypeError("Cannot set both `validateAllPaths` and `pathsToValidate`");
                        if (s && a) throw new TypeError("Cannot set both `validateAllPaths` and `validateModifiedOnly`");
                    }
                    var h, p, y = this, b = function() {
                        var t = o.$__.validationError;
                        if (o.$__.validationError = null, o.$__.validating = null, a && null != t) {
                            for(var e = 0, r = Object.keys(t.errors); e < r.length; e++){
                                var n = r[e];
                                o.$isModified(n) || delete t.errors[n];
                            }
                            0 === Object.keys(t.errors).length && (t = void 0);
                        }
                        if (o.$__.cachedRequired = {}, o.$emit("validate", y), o.constructor.emit("validate", y), t) {
                            for(var i in t.errors)!o[ut] && t.errors[i] instanceof S.CastError && o.invalidate(i, t.errors[i]);
                            return t;
                        }
                    };
                    if (f) {
                        var m, v = l(h = new Set(Object.keys(this.$__schema.paths)));
                        try {
                            for(v.s(); !(m = v.n()).done;){
                                var g = m.value, _ = this.$__schema.path(g);
                                if (_ && _.$isMongooseArray) {
                                    var w = this.$__getValue(g);
                                    w && Et(w, h, g);
                                }
                            }
                        } catch (t) {
                            v.e(t);
                        } finally{
                            v.f();
                        }
                        h = i(h), p = {};
                    } else {
                        var O = $t(this, t, u, e && e._nestedValidate);
                        h = a ? O[0].filter(function(t) {
                            return o.$isModified(t);
                        }) : O[0], p = O[1];
                    }
                    if ("string" == typeof t && (t = t.split(" ")), 0 === h.length) return z(function() {
                        var t = b();
                        if (t) return y.$__schema.s.hooks.execPost("validate:error", y, [
                            y
                        ], {
                            error: t
                        }, function(t) {
                            r(t);
                        });
                        r(null, y);
                    });
                    var j = {}, $ = 0, E = null === (n = this.$__.saveOptions) || void 0 === n ? void 0 : n.pathsToSave;
                    if (Array.isArray(E)) {
                        E = new Set(E);
                        var A, P = l(h);
                        try {
                            for(P.s(); !(A = P.n()).done;){
                                var x = A.value;
                                E.has(x) && B(x);
                            }
                        } catch (t) {
                            P.e(t);
                        } finally{
                            P.f();
                        }
                    } else {
                        var M, T = l(h);
                        try {
                            for(T.s(); !(M = T.n()).done;)B(M.value);
                        } catch (t) {
                            T.e(t);
                        } finally{
                            T.f();
                        }
                    }
                    function B(t) {
                        null == t || j[t] || (j[t] = !0, $++, z(function() {
                            var e = y.$__schema.path(t);
                            if (!e) return --$ || I();
                            if (y.$isValid(t)) {
                                if (null != e[bt] && t !== e.path) return --$ || I();
                                var r, n = y.$__getValue(t);
                                (r = y.$populated(t)) ? n = r : null != n && null != n.$__ && n.$__.wasPopulated && (n = n._doc._id);
                                var i = null != y.$__.pathsToScopes && t in y.$__.pathsToScopes ? y.$__.pathsToScopes[t] : y, o = c(c({}, p[t]), {}, {
                                    path: t,
                                    validateAllPaths: f,
                                    _nestedValidate: !0
                                });
                                e.doValidate(n, function(r) {
                                    if (r) {
                                        if ((e.$isSingleNested || e.$isArraySubdocument || e.$isMongooseDocumentArray) && r instanceof k) return --$ || I();
                                        y.invalidate(t, r, void 0, !0);
                                    }
                                    --$ || I();
                                }, i, o);
                            } else --$ || I();
                        }));
                    }
                    function I() {
                        var t = b();
                        if (t) return y.$__schema.s.hooks.execPost("validate:error", y, [
                            y
                        ], {
                            error: t
                        }, function(t) {
                            r(t);
                        });
                        r(null, y);
                    }
                }, _t.prototype.validateSync = function(t, e) {
                    var r, n = this, o = this;
                    1 !== arguments.length || "object" !== d(arguments[0]) || Array.isArray(arguments[0]) || (e = arguments[0], t = null), r = e && "object" === d(e) && "validateModifiedOnly" in e ? !!e.validateModifiedOnly : this.$__schema.options.validateModifiedOnly;
                    var a, s, u = e && e.pathsToSkip, c = e && e.validateAllPaths;
                    if (c) {
                        if (u) throw new TypeError("Cannot set both `validateAllPaths` and `pathsToSkip`");
                        if (t) throw new TypeError("Cannot set both `validateAllPaths` and `pathsToValidate`");
                    }
                    if ("string" == typeof t) {
                        var f = -1 === t.indexOf(" ");
                        t = f ? [
                            t
                        ] : t.split(" ");
                    } else "string" == typeof u && -1 !== u.indexOf(" ") && (u = u.split(" "));
                    if (c) {
                        var h, p = l(a = new Set(Object.keys(this.$__schema.paths)));
                        try {
                            for(p.s(); !(h = p.n()).done;){
                                var y = h.value, b = this.$__schema.path(y);
                                if (b && b.$isMongooseArray) {
                                    var m = this.$__getValue(y);
                                    m && Et(m, a, y);
                                }
                            }
                        } catch (A) {
                            p.e(A);
                        } finally{
                            p.f();
                        }
                        a = i(a), s = {};
                    } else {
                        var v = $t(this, t, u);
                        a = r ? v[0].filter(function(t) {
                            return n.$isModified(t);
                        }) : v[0], s = v[1];
                    }
                    for(var g = {}, _ = 0, w = a.length; _ < w; ++_){
                        var O = a[_];
                        if (!g[O]) {
                            g[O] = !0;
                            var j = o.$__schema.path(O);
                            if (j && o.$isValid(O)) {
                                var $ = o.$__getValue(O), E = j.doValidateSync($, o, {
                                    skipSchemaValidators: s[O],
                                    path: O,
                                    validateModifiedOnly: r,
                                    validateAllPaths: c
                                });
                                if (E) {
                                    if ((j.$isSingleNested || j.$isArraySubdocument || j.$isMongooseDocumentArray) && E instanceof k) continue;
                                    o.invalidate(O, E, void 0, !0);
                                }
                            }
                        }
                    }
                    var A = o.$__.validationError;
                    if (o.$__.validationError = void 0, o.$emit("validate", o), o.constructor.emit("validate", o), A) for(var P in A.errors)A.errors[P] instanceof S.CastError && o.invalidate(P, A.errors[P]);
                    return A;
                }, _t.prototype.invalidate = function(t, e, r, n) {
                    if (this.$__.validationError || (this.$__.validationError = new k(this)), !this.$__.validationError.errors[t]) return e && "string" != typeof e || (e = new M({
                        path: t,
                        message: e,
                        type: n || "user defined",
                        value: r
                    })), this.$__.validationError === e || this.$__.validationError.addError(t, e), this.$__.validationError;
                }, _t.prototype.$markValid = function(t) {
                    this.$__.validationError && this.$__.validationError.errors[t] && (delete this.$__.validationError.errors[t], 0 === Object.keys(this.$__.validationError.errors).length && (this.$__.validationError = null));
                }, _t.prototype.$isValid = function(t) {
                    var e = this;
                    return null == this.$__.validationError || 0 === Object.keys(this.$__.validationError.errors).length || null != t && (-1 !== t.indexOf(" ") && (t = t.split(" ")), Array.isArray(t) ? t.some(function(t) {
                        return null == e.$__.validationError.errors[t];
                    }) : null == this.$__.validationError.errors[t]);
                }, _t.prototype.$__reset = function() {
                    var t, e = this.$isSubdocument ? null : this.$getAllSubdocs({
                        useCache: !0
                    });
                    if (e && e.length > 0) {
                        var r, n = l(e);
                        try {
                            for(n.s(); !(r = n.n()).done;)r.value.$__reset();
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                    }
                    return this.$__dirty().forEach(function(t) {
                        var e = t.value;
                        e && e[st] && (e[at] = e[st], e[st] = {});
                    }), this.$__.backup = {}, this.$__.backup.activePaths = {
                        modify: Object.assign({}, this.$__.activePaths.getStatePaths("modify")),
                        default: Object.assign({}, this.$__.activePaths.getStatePaths("default"))
                    }, this.$__.backup.validationError = this.$__.validationError, this.$__.backup.errors = this.$errors, this.$__.activePaths.clear("modify"), this.$__.activePaths.clear("default"), this.$__.validationError = void 0, this.$errors = void 0, t = this, this.$__schema.requiredPaths().forEach(function(e) {
                        t.$__.activePaths.require(e);
                    }), this;
                }, _t.prototype.$__undoReset = function() {
                    if (null != this.$__.backup && null != this.$__.backup.activePaths) {
                        this.$__.activePaths.states.modify = this.$__.backup.activePaths.modify, this.$__.activePaths.states.default = this.$__.backup.activePaths.default, this.$__.validationError = this.$__.backup.validationError, this.$errors = this.$__.backup.errors;
                        var t, e = l(this.$__dirty());
                        try {
                            for(e.s(); !(t = e.n()).done;){
                                var r = t.value.value;
                                r && r[st] && r[at] && (r[st] = r[at]);
                            }
                        } catch (t) {
                            e.e(t);
                        } finally{
                            e.f();
                        }
                        if (!this.$isSubdocument) {
                            var n, i = l(this.$getAllSubdocs());
                            try {
                                for(i.s(); !(n = i.n()).done;)n.value.$__undoReset();
                            } catch (t) {
                                i.e(t);
                            } finally{
                                i.f();
                            }
                        }
                    }
                }, _t.prototype.$__dirty = function() {
                    var t = this, e = this.$__.activePaths.map("modify", function(e) {
                        return {
                            path: e,
                            value: t.$__getValue(e),
                            schema: t.$__path(e)
                        };
                    });
                    e = e.concat(this.$__.activePaths.map("default", function(e) {
                        if ("_id" !== e && null != t.$__getValue(e)) return {
                            path: e,
                            value: t.$__getValue(e),
                            schema: t.$__path(e)
                        };
                    }));
                    var r = new Map(e.filter(function(t) {
                        return null != t;
                    }).map(function(t) {
                        return [
                            t.path,
                            t.value
                        ];
                    })), n = [];
                    return e.forEach(function(t) {
                        if (t) {
                            for(var e = null, i = tt(t.path), o = 0; o < i.length - 1; o++)if (r.has(i[o])) {
                                e = r.get(i[o]);
                                break;
                            }
                            null == e ? n.push(t) : null != e && null != e[st] && e.hasAtomics() && (e[st] = {}, e[st].$set = e);
                        }
                    }), n;
                }, _t.prototype.$__setSchema = function(t) {
                    N(t.tree, this, void 0, t.options);
                    for(var e = 0, r = Object.keys(t.virtuals); e < r.length; e++){
                        var n = r[e];
                        t.virtuals[n]._applyDefaultGetters();
                    }
                    null == t.path("schema") && (this.schema = t), this.$__schema = t, this[lt] = t;
                }, _t.prototype.$__getArrayPathsToValidate = function() {
                    return y || (y = r(4878)), this.$__.activePaths.map("init", "modify", (function(t) {
                        return this.$__getValue(t);
                    }).bind(this)).filter(function(t) {
                        return t && Array.isArray(t) && rt.isMongooseDocumentArray(t) && t.length;
                    }).reduce(function(t, e) {
                        return t.concat(e);
                    }, []).filter(function(t) {
                        return t;
                    });
                }, _t.prototype.$getAllSubdocs = function(t) {
                    var e;
                    if (null != t && t.useCache && null !== (e = this.$__.saveOptions) && void 0 !== e && e.__subdocs) return this.$__.saveOptions.__subdocs;
                    y || (y = r(4878)), m = m || r(6547);
                    var n = [];
                    return function t(e) {
                        var r, i = [], o = l(e.$__schema.childSchemas);
                        try {
                            for(o.s(); !(r = o.n()).done;){
                                var a = r.value.model, s = e.$__getValue(a.path);
                                if (null != s) {
                                    if (s.$__ && i.push(s), Array.isArray(s)) {
                                        var u, c = l(s);
                                        try {
                                            for(c.s(); !(u = c.n()).done;){
                                                var f = u.value;
                                                null != f && f.$__ && i.push(f);
                                            }
                                        } catch (t) {
                                            c.e(t);
                                        } finally{
                                            c.f();
                                        }
                                    }
                                    if (s instanceof Map) {
                                        var h, p = l(s.values());
                                        try {
                                            for(p.s(); !(h = p.n()).done;){
                                                var d = h.value;
                                                null != d && d.$__ && i.push(d);
                                            }
                                        } catch (t) {
                                            p.e(t);
                                        } finally{
                                            p.f();
                                        }
                                    }
                                }
                            }
                        } catch (t) {
                            o.e(t);
                        } finally{
                            o.f();
                        }
                        for(var y = 0, b = i; y < b.length; y++)t(b[y]);
                        n.push.apply(n, i);
                    }(this), this.$__.saveOptions && (this.$__.saveOptions.__subdocs = n), n;
                }, _t.prototype.$__handleReject = function(t) {
                    this.$listeners("error").length ? this.$emit("error", t) : this.constructor.listeners && this.constructor.listeners("error").length && this.constructor.emit("error", t);
                }, _t.prototype.$toObject = function(t, e) {
                    var r, n, i, o, a, s, u, f, l, h, p, y, b, m, v = this.$__schema._defaultToObjectOptions(e), g = this.$__hasOnlyPrimitiveValues();
                    (t = rt.isPOJO(t) ? c({}, t) : {})._calledWithOptions = t._calledWithOptions || c({}, t), m = null != t._calledWithOptions.minimize ? t.minimize : null != v && null != v.minimize ? v.minimize : this.$__schema.options.minimize, t.minimize = m, g || (t._seen = t._seen || new Map);
                    var _ = null !== (r = null !== (n = null !== (i = t._calledWithOptions.depopulate) && void 0 !== i ? i : null == v ? void 0 : v.depopulate) && void 0 !== n ? n : t.depopulate) && void 0 !== r && r;
                    if (_ && t._isNested && this.$__.wasPopulated) return R(this.$__.wasPopulated.value || this._doc._id, t);
                    if (_ && (t.depopulate = !0), null != v) for(var w = 0, S = Object.keys(v); w < S.length; w++){
                        var O = S[w];
                        null == t[O] && (t[O] = v[O]);
                    }
                    t._isNested = !0, t.json = e, t.minimize = m;
                    var j = t._parentOptions;
                    t._parentOptions = this.$isSubdocument ? t : null;
                    var $, E = null !== (o = null !== (a = null !== (s = t._calledWithOptions.schemaFieldsOnly) && void 0 !== s ? s : t.schemaFieldsOnly) && void 0 !== a ? a : v.schemaFieldsOnly) && void 0 !== o && o;
                    if (g && !t.flattenObjectIds) $ = this.$__toObjectShallow(E);
                    else if (E) {
                        $ = {};
                        for(var A = 0, P = Object.keys(this.$__schema.paths); A < P.length; A++){
                            var x = P[A], k = this.$__getValue(x);
                            if (void 0 !== k) {
                                var M = x, T = $;
                                if (-1 !== x.indexOf(".")) {
                                    var B = x.split(".");
                                    M = B[B.length - 1];
                                    for(var I = 0; I < B.length - 1; ++I){
                                        var N;
                                        T[B[I]] = null !== (N = T[B[I]]) && void 0 !== N ? N : {}, T = T[B[I]];
                                    }
                                }
                                T[M] = null !== k ? R(k, t) : null;
                            }
                        }
                    } else $ = R(this._doc, t) || {};
                    var D = null !== (u = null !== (f = null !== (l = t._calledWithOptions.getters) && void 0 !== l ? l : t.getters) && void 0 !== f ? f : v.getters) && void 0 !== u && u;
                    D && (function(t, e) {
                        var r, n, i = t.$__schema, o = Object.keys(i.paths), a = o.length, s = t._doc;
                        if (!s) return e;
                        for(; a--;){
                            var u = (r = o[a]).split("."), c = u.length, f = c - 1, l = e, h = void 0;
                            if (s = t._doc, t.$__isSelected(r)) for(var p = 0; p < c && (n = s[h = u[p]], null == l || "object" === d(l)); ++p){
                                if (p === f) {
                                    if (l[h] = i.paths[r].applyGetters(l[h], t), Array.isArray(l[h]) && i.paths[r].$embeddedSchemaType) for(var y = 0; y < l[h].length; ++y)l[h][y] = i.paths[r].$embeddedSchemaType.applyGetters(l[h][y], t);
                                } else {
                                    if (null == n) {
                                        h in s && (l[h] = n);
                                        break;
                                    }
                                    l = l[h] || (l[h] = {});
                                }
                                s = n;
                            }
                        }
                    }(this, $), t.minimize && ($ = X($) || {}));
                    var L = null !== (h = null !== (p = null !== (y = t._calledWithOptions.virtuals) && void 0 !== y ? y : v.virtuals) && void 0 !== p ? p : null == j ? void 0 : j.virtuals) && void 0 !== h ? h : void 0;
                    (L || D && !1 !== L) && At(this, $, t, t), !1 === t.versionKey && this.$__schema.options.versionKey && delete $[this.$__schema.options.versionKey];
                    var C = null === (b = t._calledWithOptions.transform) || void 0 === b || b, U = void 0;
                    if (!0 === C ? U = v.transform : "function" == typeof C && (U = C), C && function(t, e) {
                        var r = t.$__schema, n = Object.keys(r.paths || {});
                        if (!t._doc) return e;
                        for(var i = 0, o = n; i < o.length; i++){
                            var a, s, u, c, f, l = o[i], h = r.paths[l], p = null !== (a = h.options.transform) && void 0 !== a ? a : null === (s = h.constructor) || void 0 === s || null === (s = s.defaultOptions) || void 0 === s ? void 0 : s.transform, d = null !== (u = null === (c = h.$embeddedSchemaType) || void 0 === c || null === (c = c.options) || void 0 === c ? void 0 : c.transform) && void 0 !== u ? u : null === (f = h.$embeddedSchemaType) || void 0 === f || null === (f = f.constructor) || void 0 === f || null === (f = f.defaultOptions) || void 0 === f ? void 0 : f.transform;
                            if ("function" == typeof p) {
                                var y = t.$get(l);
                                if (void 0 === y) continue;
                                var b = p.call(t, y);
                                Pt(l, b), rt.setValue(l, b, e);
                            } else if ("function" == typeof d) {
                                var m = t.$get(l);
                                if (void 0 === m) continue;
                                for(var v = [].concat(m), g = 0; g < v.length; ++g){
                                    var _ = d.call(t, v[g]);
                                    v[g] = _, Pt(l, _);
                                }
                                e[l] = v;
                            }
                        }
                    }(this, $), t.useProjection && function(t, e) {
                        var r = t.$__schema, n = Object.keys(r.paths || {});
                        if (!t._doc) return e;
                        var i = t.$__.selected;
                        if (void 0 === i && (i = {}, et.applyPaths(i, r)), null == i || 0 === Object.keys(i).length) return e;
                        for(var o = 0, a = n; o < a.length; o++){
                            var s = a[o];
                            null == i[s] || i[s] || delete e[s];
                        }
                    }(this, $), "function" == typeof U) {
                        var q = U(this, $, t);
                        void 0 !== q && ($ = q);
                    }
                    return $;
                }, _t.prototype.$__toObjectShallow = function(t) {
                    var e = {};
                    if (null != this._doc) {
                        var r, n = l(t ? Object.keys(this.$__schema.paths) : Object.keys(this._doc));
                        try {
                            for(n.s(); !(r = n.n()).done;){
                                var i = r.value, o = this._doc[i];
                                o instanceof Date ? e[i] = new Date(o) : void 0 !== o && (e[i] = o);
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                    }
                    return e;
                }, _t.prototype.toObject = function(t) {
                    return this.$toObject(t);
                }, _t.prototype.toJSON = function(t) {
                    return this.$toObject(t, !0);
                }, _t.prototype.ownerDocument = function() {
                    return this;
                }, _t.prototype.parent = function() {
                    return this.$isSubdocument || this.$__.wasPopulated ? this.$__.parent : this;
                }, _t.prototype.$parent = _t.prototype.parent, _t.prototype.inspect = function(t) {
                    var e;
                    rt.isPOJO(t) && ((e = t).minimize = !1);
                    var r = arguments.length > 0 ? this.toObject(e) : this.toObject();
                    return null == r ? "MongooseDocument { " + r + " }" : r;
                }, G.custom && (_t.prototype[G.custom] = _t.prototype.inspect), _t.prototype.toString = function() {
                    var t = this.inspect();
                    return "string" == typeof t ? t : G(t);
                }, _t.prototype.equals = function(t) {
                    if (!t) return !1;
                    var e = this.$__getValue("_id"), r = null != t.$__ ? t.$__getValue("_id") : t;
                    return e || r ? e && e.equals ? e.equals(r) : e === r : it(this, t);
                }, _t.prototype.populate = function() {
                    var t = s(o().mark(function t() {
                        var e, r, n, i, a, s, u, c, f, h, p = arguments;
                        return o().wrap(function(t) {
                            for(;;)switch(t.prev = t.next){
                                case 0:
                                    if (e = {}, "function" != typeof (r = Array.prototype.slice.call(p))[r.length - 1]) {
                                        t.next = 4;
                                        break;
                                    }
                                    throw new S("Document.prototype.populate() no longer accepts a callback");
                                case 4:
                                    if (0 !== r.length) {
                                        n = rt.populate.apply(null, r), i = l(n);
                                        try {
                                            for(i.s(); !(a = i.n()).done;)s = a.value, e[s.path] = s;
                                        } catch (t) {
                                            i.e(t);
                                        } finally{
                                            i.f();
                                        }
                                    }
                                    return u = rt.object.vals(e), c = this.constructor, this.$__isNested && (c = this.$__[yt].constructor, f = this.$__.nestedPath, u.forEach(function(t) {
                                        t.path = f + "." + t.path;
                                    })), null != this.$session() && (h = this.$session(), u.forEach(function(t) {
                                        null != t.options ? "session" in t.options || (t.options.session = h) : t.options = {
                                            session: h
                                        };
                                    })), u.forEach(function(t) {
                                        t._localModel = c;
                                    }), t.abrupt("return", c.populate(this, u));
                                case 11:
                                case "end":
                                    return t.stop();
                            }
                        }, t, this);
                    }));
                    return function() {
                        return t.apply(this, arguments);
                    };
                }(), _t.prototype.$getPopulatedDocs = function() {
                    var t = [];
                    null != this.$__.populated && (t = t.concat(Object.keys(this.$__.populated)));
                    var e, r = [], n = l(t);
                    try {
                        for(n.s(); !(e = n.n()).done;){
                            var i = e.value, o = this.$get(i);
                            Array.isArray(o) ? r = r.concat(o) : o instanceof _t && r.push(o);
                        }
                    } catch (t) {
                        n.e(t);
                    } finally{
                        n.f();
                    }
                    return r;
                }, _t.prototype.populated = function(t, e, r) {
                    if (null == e || !0 === e) {
                        if (!this.$__.populated) return;
                        if ("string" != typeof t) return;
                        var n = t.endsWith(".$*") ? t.replace(/\.\$\*$/, "") : t, i = this.$__.populated[n];
                        return i ? !0 === e ? i : i.value : void 0;
                    }
                    this.$__.populated || (this.$__.populated = {}), this.$__.populated[t] = {
                        value: e,
                        options: r
                    };
                    for(var o = t.split("."), a = 0; a < o.length - 1; ++a){
                        var s = o.slice(0, a + 1).join("."), u = this.$get(s);
                        if (null != u && null != u.$__ && this.$populated(s)) {
                            var c = o.slice(a + 1).join(".");
                            u.$populated(c, e, r);
                            break;
                        }
                    }
                    return e;
                }, _t.prototype.$populated = _t.prototype.populated, _t.prototype.$assertPopulated = function(t, e) {
                    var r = this;
                    if (Array.isArray(t)) return t.forEach(function(t) {
                        return r.$assertPopulated(t, e);
                    }), this;
                    if (arguments.length > 1 && this.$set(e), !this.$populated(t)) throw new S('Expected path "'.concat(t, '" to be populated'));
                    return this;
                }, _t.prototype.depopulate = function(t) {
                    var e;
                    "string" == typeof t && (t = -1 === t.indexOf(" ") ? [
                        t
                    ] : t.split(" "));
                    var r = this.$$populatedVirtuals ? Object.keys(this.$$populatedVirtuals) : [], n = this.$__ && this.$__.populated || {};
                    if (0 === arguments.length) {
                        var i, o = l(r);
                        try {
                            for(o.s(); !(i = o.n()).done;){
                                var a = i.value;
                                delete this.$$populatedVirtuals[a], delete this._doc[a], delete n[a];
                            }
                        } catch (t) {
                            o.e(t);
                        } finally{
                            o.f();
                        }
                        for(var s = 0, u = Object.keys(n); s < u.length; s++){
                            var c = u[s];
                            if (e = this.$populated(c)) {
                                if (delete n[c], Array.isArray(e)) {
                                    var f = rt.getValue(c, this._doc);
                                    if (f.isMongooseArray) for(var h = f.__array, p = 0; p < h.length; ++p){
                                        var d = h[p];
                                        null != d && (h[p] = d instanceof _t ? d._doc._id : d._id);
                                    }
                                    else rt.setValue(c, e, this._doc);
                                } else rt.setValue(c, e, this._doc);
                            }
                        }
                        return this;
                    }
                    var y, b = l(t);
                    try {
                        for(b.s(); !(y = b.n()).done;){
                            var m = y.value;
                            if (e = this.$populated(m), delete n[m], -1 !== r.indexOf(m)) delete this.$$populatedVirtuals[m], delete this._doc[m];
                            else if (e) {
                                if (Array.isArray(e)) {
                                    var v = rt.getValue(m, this._doc);
                                    if (v.isMongooseArray) for(var g = v.__array, _ = 0; _ < g.length; ++_){
                                        var w = g[_];
                                        null != w && (g[_] = w instanceof _t ? w._doc._id : w._id);
                                    }
                                    else rt.setValue(m, e, this._doc);
                                } else rt.setValue(m, e, this._doc);
                            }
                        }
                    } catch (t) {
                        b.e(t);
                    } finally{
                        b.f();
                    }
                    return this;
                }, _t.prototype.$__fullPath = function(t) {
                    return t || "";
                }, _t.prototype.getChanges = function() {
                    var t = this.$__delta();
                    return t ? t[1] : {};
                }, _t.prototype.$__delta = function() {
                    var t = this, e = this.$__dirty(), r = this.$__schema.options.optimisticConcurrency;
                    if (r) {
                        if (Array.isArray(r)) {
                            var i = new Set(r);
                            this.modifiedPaths().find(function(t) {
                                return i.has(t);
                            }) && (this.$__.version = e.length ? 3 : 1);
                        } else this.$__.version = e.length ? 3 : 1;
                    }
                    if (e.length || 3 === this.$__.version) {
                        var o = {}, a = {}, s = e.length, u = [], c = 0;
                        for(o._id = this._doc._id, null != (o && o._id && o._id.$__ || null) && (o._id = o._id.toObject({
                            transform: !1,
                            depopulate: !0
                        })); c < s; ++c){
                            var f = e[c], l = f.value, h = xt(this, f.path, l);
                            if (h) u.push(h);
                            else {
                                if (!this.$populated(f.path, !0) && this.$__.selected) {
                                    var p = f.path.split("."), d = p[0];
                                    if (this.$__.selected[d] && this.$__.selected[d].$elemMatch) {
                                        if (!(p.length > 1 && 0 == p[1] && void 0 === o[d])) {
                                            u.push(f.path);
                                            continue;
                                        }
                                        o[d] = this.$__.selected[d], p[1] = "$", f.path = p.join(".");
                                    }
                                }
                                if (this.$isDefault(f.path) && this.$__.selected) {
                                    if (-1 === f.path.indexOf(".") && J(this.$__.selected, f.path)) continue;
                                    if (tt(f.path).find(function(e) {
                                        return J(t.$__.isSelected, e);
                                    })) continue;
                                }
                                if (!u.length) {
                                    if (void 0 === l) kt(this, 0, a, f, 1, "$unset");
                                    else if (null === l) kt(this, 0, a, f, null);
                                    else if (rt.isMongooseArray(l) && l.$path() && l[st]) Mt(this, 0, a, f, l);
                                    else if (l[w.pathSymbol] && n.isBuffer(l)) kt(this, 0, a, f, l = l.toObject());
                                    else if (this.$__.primitiveAtomics && null != this.$__.primitiveAtomics[f.path]) {
                                        var y = this.$__.primitiveAtomics[f.path], b = L(y);
                                        kt(this, 0, a, f, y[b], b);
                                    } else kt(this, 0, a, f, l = R(l, {
                                        depopulate: !0,
                                        transform: !1,
                                        virtuals: !1,
                                        getters: !1,
                                        omitUndefined: !0,
                                        _isNested: !0
                                    }));
                                }
                            }
                        }
                        return u.length ? new v(u) : (this.$__.version && this.$__version(o, a), 0 === Object.keys(a).length ? [
                            o,
                            null
                        ] : [
                            o,
                            a
                        ]);
                    }
                }, _t.prototype.$clone = function() {
                    var t = new this.constructor;
                    if (t.$isNew = this.$isNew, this._doc && (t._doc = R(this._doc, {
                        retainDocuments: !0
                    })), this.$__) {
                        var e, r = new this.$__.constructor, n = l(Object.getOwnPropertyNames(this.$__));
                        try {
                            for(n.s(); !(e = n.n()).done;){
                                var i = e.value;
                                "activePaths" !== i && (r[i] = R(this.$__[i]));
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                        Object.assign(r.activePaths, R(c({}, this.$__.activePaths))), t.$__ = r;
                    }
                    return t;
                }, _t.prototype.$createModifiedPathsSnapshot = function() {
                    var t = new WeakMap;
                    if (!this.$isSubdocument) {
                        var e, r = l(this.$getAllSubdocs());
                        try {
                            for(r.s(); !(e = r.n()).done;){
                                var n = e.value;
                                t.set(n, n.$__.activePaths.clone());
                            }
                        } catch (t) {
                            r.e(t);
                        } finally{
                            r.f();
                        }
                    }
                    return new j(t, this.$__.activePaths.clone(), this.$__.version);
                }, _t.prototype.$restoreModifiedPathsSnapshot = function(t) {
                    if (this.$__.activePaths = t.activePaths.clone(), this.$__.version = t.version, !this.$isSubdocument) {
                        var e, r = l(this.$getAllSubdocs());
                        try {
                            for(r.s(); !(e = r.n()).done;){
                                var n = e.value;
                                t.subdocSnapshot.has(n) && (n.$__.activePaths = t.subdocSnapshot.get(n));
                            }
                        } catch (t) {
                            r.e(t);
                        } finally{
                            r.f();
                        }
                    }
                    return this;
                }, _t.prototype.$clearModifiedPaths = function() {
                    if (this.$__.activePaths.clear("modify"), this.$__.activePaths.clear("init"), this.$__.version = 0, !this.$isSubdocument) {
                        var t, e = l(this.$getAllSubdocs());
                        try {
                            for(e.s(); !(t = e.n()).done;)t.value.$clearModifiedPaths();
                        } catch (t) {
                            e.e(t);
                        } finally{
                            e.f();
                        }
                    }
                    return this;
                }, _t.prototype.$__hasOnlyPrimitiveValues = function() {
                    return !this.$__.populated && !this.$__.wasPopulated && (null == this._doc || Object.values(this._doc).every(function(t) {
                        return null == t || "object" !== d(t) || rt.isNativeObject(t) && !Array.isArray(t) || K(t, "ObjectId") || K(t, "Decimal128");
                    }));
                }, _t.VERSION_WHERE = 1, _t.VERSION_INC = 2, _t.VERSION_ALL = 3, _t.ValidationError = k, t.exports = _t;
            },
            2401: (t)=>{
                "use strict";
                t.exports = Math.floor;
            },
            2402: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t) {
                    return i = "function" == typeof Symbol && "symbol" === n(Symbol.iterator) ? function(t) {
                        return n(t);
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : n(t);
                    }, i(t);
                }
                var o, a, s = r(3743).codes, u = s.ERR_AMBIGUOUS_ARGUMENT, c = s.ERR_INVALID_ARG_TYPE, f = s.ERR_INVALID_ARG_VALUE, l = s.ERR_INVALID_RETURN_VALUE, h = s.ERR_MISSING_ARGS, p = r(9068), d = r(7352).inspect, y = r(7352).types, b = y.isPromise, m = y.isRegExp, v = Object.assign ? Object.assign : r(6182).assign, g = Object.is ? Object.is : r(2064);
                function _() {
                    var t = r(6193);
                    o = t.isDeepEqual, a = t.isDeepStrictEqual;
                }
                new Map;
                var w = !1, S = t.exports = E, O = {};
                function j(t) {
                    if (t.message instanceof Error) throw t.message;
                    throw new p(t);
                }
                function $(t, e, r, n) {
                    if (!r) {
                        var i = !1;
                        if (0 === e) i = !0, n = "No value argument passed to `assert.ok()`";
                        else if (n instanceof Error) throw n;
                        var o = new p({
                            actual: r,
                            expected: !0,
                            message: n,
                            operator: "==",
                            stackStartFn: t
                        });
                        throw o.generatedMessage = i, o;
                    }
                }
                function E() {
                    for(var t = arguments.length, e = new Array(t), r = 0; r < t; r++)e[r] = arguments[r];
                    $.apply(void 0, [
                        E,
                        e.length
                    ].concat(e));
                }
                S.fail = function t(e, r, n, i, o) {
                    var a, s = arguments.length;
                    if (0 === s ? a = "Failed" : 1 === s ? (n = e, e = void 0) : (!1 === w && (w = !0, (({
                        env: {}
                    }).emitWarning ? ({
                        env: {}
                    }).emitWarning : console.warn.bind(console))("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094")), 2 === s && (i = "!=")), n instanceof Error) throw n;
                    var u = {
                        actual: e,
                        expected: r,
                        operator: void 0 === i ? "fail" : i,
                        stackStartFn: o || t
                    };
                    void 0 !== n && (u.message = n);
                    var c = new p(u);
                    throw a && (c.message = a, c.generatedMessage = !0), c;
                }, S.AssertionError = p, S.ok = E, S.equal = function t(e, r, n) {
                    if (arguments.length < 2) throw new h("actual", "expected");
                    e != r && j({
                        actual: e,
                        expected: r,
                        message: n,
                        operator: "==",
                        stackStartFn: t
                    });
                }, S.notEqual = function t(e, r, n) {
                    if (arguments.length < 2) throw new h("actual", "expected");
                    e == r && j({
                        actual: e,
                        expected: r,
                        message: n,
                        operator: "!=",
                        stackStartFn: t
                    });
                }, S.deepEqual = function t(e, r, n) {
                    if (arguments.length < 2) throw new h("actual", "expected");
                    void 0 === o && _(), o(e, r) || j({
                        actual: e,
                        expected: r,
                        message: n,
                        operator: "deepEqual",
                        stackStartFn: t
                    });
                }, S.notDeepEqual = function t(e, r, n) {
                    if (arguments.length < 2) throw new h("actual", "expected");
                    void 0 === o && _(), o(e, r) && j({
                        actual: e,
                        expected: r,
                        message: n,
                        operator: "notDeepEqual",
                        stackStartFn: t
                    });
                }, S.deepStrictEqual = function t(e, r, n) {
                    if (arguments.length < 2) throw new h("actual", "expected");
                    void 0 === o && _(), a(e, r) || j({
                        actual: e,
                        expected: r,
                        message: n,
                        operator: "deepStrictEqual",
                        stackStartFn: t
                    });
                }, S.notDeepStrictEqual = function t(e, r, n) {
                    if (arguments.length < 2) throw new h("actual", "expected");
                    void 0 === o && _(), a(e, r) && j({
                        actual: e,
                        expected: r,
                        message: n,
                        operator: "notDeepStrictEqual",
                        stackStartFn: t
                    });
                }, S.strictEqual = function t(e, r, n) {
                    if (arguments.length < 2) throw new h("actual", "expected");
                    g(e, r) || j({
                        actual: e,
                        expected: r,
                        message: n,
                        operator: "strictEqual",
                        stackStartFn: t
                    });
                }, S.notStrictEqual = function t(e, r, n) {
                    if (arguments.length < 2) throw new h("actual", "expected");
                    g(e, r) && j({
                        actual: e,
                        expected: r,
                        message: n,
                        operator: "notStrictEqual",
                        stackStartFn: t
                    });
                };
                var A = function t(e, r, n) {
                    var i = this;
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, t), r.forEach(function(t) {
                        t in e && (void 0 !== n && "string" == typeof n[t] && m(e[t]) && e[t].test(n[t]) ? i[t] = n[t] : i[t] = e[t]);
                    });
                };
                function P(t, e, r, n) {
                    if ("function" != typeof e) {
                        if (m(e)) return e.test(t);
                        if (2 === arguments.length) throw new c("expected", [
                            "Function",
                            "RegExp"
                        ], e);
                        if ("object" !== i(t) || null === t) {
                            var s = new p({
                                actual: t,
                                expected: e,
                                message: r,
                                operator: "deepStrictEqual",
                                stackStartFn: n
                            });
                            throw s.operator = n.name, s;
                        }
                        var u = Object.keys(e);
                        if (e instanceof Error) u.push("name", "message");
                        else if (0 === u.length) throw new f("error", e, "may not be an empty object");
                        return void 0 === o && _(), u.forEach(function(i) {
                            "string" == typeof t[i] && m(e[i]) && e[i].test(t[i]) || function(t, e, r, n, i, o) {
                                if (!(r in t) || !a(t[r], e[r])) {
                                    if (!n) {
                                        var s = new A(t, i), u = new A(e, i, t), c = new p({
                                            actual: s,
                                            expected: u,
                                            operator: "deepStrictEqual",
                                            stackStartFn: o
                                        });
                                        throw c.actual = t, c.expected = e, c.operator = o.name, c;
                                    }
                                    j({
                                        actual: t,
                                        expected: e,
                                        message: n,
                                        operator: o.name,
                                        stackStartFn: o
                                    });
                                }
                            }(t, e, i, r, u, n);
                        }), !0;
                    }
                    return void 0 !== e.prototype && t instanceof e || !Error.isPrototypeOf(e) && !0 === e.call({}, t);
                }
                function x(t) {
                    if ("function" != typeof t) throw new c("fn", "Function", t);
                    try {
                        t();
                    } catch (t) {
                        return t;
                    }
                    return O;
                }
                function k(t) {
                    return b(t) || null !== t && "object" === i(t) && "function" == typeof t.then && "function" == typeof t.catch;
                }
                function M(t) {
                    return Promise.resolve().then(function() {
                        var e;
                        if ("function" == typeof t) {
                            if (!k(e = t())) throw new l("instance of Promise", "promiseFn", e);
                        } else {
                            if (!k(t)) throw new c("promiseFn", [
                                "Function",
                                "Promise"
                            ], t);
                            e = t;
                        }
                        return Promise.resolve().then(function() {
                            return e;
                        }).then(function() {
                            return O;
                        }).catch(function(t) {
                            return t;
                        });
                    });
                }
                function T(t, e, r, n) {
                    if ("string" == typeof r) {
                        if (4 === arguments.length) throw new c("error", [
                            "Object",
                            "Error",
                            "Function",
                            "RegExp"
                        ], r);
                        if ("object" === i(e) && null !== e) {
                            if (e.message === r) throw new u("error/message", 'The error message "'.concat(e.message, '" is identical to the message.'));
                        } else if (e === r) throw new u("error/message", 'The error "'.concat(e, '" is identical to the message.'));
                        n = r, r = void 0;
                    } else if (null != r && "object" !== i(r) && "function" != typeof r) throw new c("error", [
                        "Object",
                        "Error",
                        "Function",
                        "RegExp"
                    ], r);
                    if (e === O) {
                        var o = "";
                        r && r.name && (o += " (".concat(r.name, ")")), o += n ? ": ".concat(n) : ".";
                        var a = "rejects" === t.name ? "rejection" : "exception";
                        j({
                            actual: void 0,
                            expected: r,
                            operator: t.name,
                            message: "Missing expected ".concat(a).concat(o),
                            stackStartFn: t
                        });
                    }
                    if (r && !P(e, r, n, t)) throw e;
                }
                function B(t, e, r, n) {
                    if (e !== O) {
                        if ("string" == typeof r && (n = r, r = void 0), !r || P(e, r)) {
                            var i = n ? ": ".concat(n) : ".", o = "doesNotReject" === t.name ? "rejection" : "exception";
                            j({
                                actual: e,
                                expected: r,
                                operator: t.name,
                                message: "Got unwanted ".concat(o).concat(i, "\n") + 'Actual message: "'.concat(e && e.message, '"'),
                                stackStartFn: t
                            });
                        }
                        throw e;
                    }
                }
                function I() {
                    for(var t = arguments.length, e = new Array(t), r = 0; r < t; r++)e[r] = arguments[r];
                    $.apply(void 0, [
                        I,
                        e.length
                    ].concat(e));
                }
                S.throws = function t(e) {
                    for(var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++)n[i - 1] = arguments[i];
                    T.apply(void 0, [
                        t,
                        x(e)
                    ].concat(n));
                }, S.rejects = function t(e) {
                    for(var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++)n[i - 1] = arguments[i];
                    return M(e).then(function(e) {
                        return T.apply(void 0, [
                            t,
                            e
                        ].concat(n));
                    });
                }, S.doesNotThrow = function t(e) {
                    for(var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++)n[i - 1] = arguments[i];
                    B.apply(void 0, [
                        t,
                        x(e)
                    ].concat(n));
                }, S.doesNotReject = function t(e) {
                    for(var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++)n[i - 1] = arguments[i];
                    return M(e).then(function(e) {
                        return B.apply(void 0, [
                            t,
                            e
                        ].concat(n));
                    });
                }, S.ifError = function t(e) {
                    if (null != e) {
                        var r = "ifError got unwanted exception: ";
                        "object" === i(e) && "string" == typeof e.message ? 0 === e.message.length && e.constructor ? r += e.constructor.name : r += e.message : r += d(e);
                        var n = new p({
                            actual: e,
                            expected: null,
                            operator: "ifError",
                            message: r,
                            stackStartFn: t
                        }), o = e.stack;
                        if ("string" == typeof o) {
                            var a = o.split("\n");
                            a.shift();
                            for(var s = n.stack.split("\n"), u = 0; u < a.length; u++){
                                var c = s.indexOf(a[u]);
                                if (-1 !== c) {
                                    s = s.slice(0, c);
                                    break;
                                }
                            }
                            n.stack = "".concat(s.join("\n"), "\n").concat(a.join("\n"));
                        }
                        throw n;
                    }
                }, S.strict = v(I, S, {
                    equal: S.strictEqual,
                    deepEqual: S.deepStrictEqual,
                    notEqual: S.notStrictEqual,
                    notDeepEqual: S.notDeepStrictEqual
                }), S.strict.strict = S.strict;
            },
            2403: (t)=>{
                "use strict";
                t.exports = "undefined" != typeof Reflect && Reflect.getPrototypeOf || null;
            },
            2423: (t)=>{
                "use strict";
                t.exports = function(t, e) {
                    var r = t.discriminatorMapping && t.discriminatorMapping.value;
                    if (r && !("sparse" in e)) {
                        var n = t.options.discriminatorKey;
                        e.partialFilterExpression = e.partialFilterExpression || {}, e.partialFilterExpression[n] = r;
                    }
                    return e;
                };
            },
            2477: (t, e, r)=>{
                "use strict";
                var n = r(2402);
                t.exports = function(t) {
                    var e;
                    return null == t || "" === t ? null : t instanceof Date ? (n.ok(!isNaN(t.valueOf())), t) : (n.ok("boolean" != typeof t), e = t instanceof Number || "number" == typeof t ? new Date(t) : "string" == typeof t && !isNaN(Number(t)) && (Number(t) >= 275761 || Number(t) < -271820) ? new Date(Number(t)) : "function" == typeof t.valueOf ? new Date(t.valueOf()) : new Date(t), isNaN(e.valueOf()) ? void n.ok(!1) : e);
                };
            },
            2481: (t, e, r)=>{
                "use strict";
                var n = r(4756);
                t.exports = function() {
                    return "function" == typeof Object.is ? Object.is : n;
                };
            },
            2486: (t, e)=>{
                e.read = function(t, e, r, n, i) {
                    var o, a, s = 8 * i - n - 1, u = (1 << s) - 1, c = u >> 1, f = -7, l = r ? i - 1 : 0, h = r ? -1 : 1, p = t[e + l];
                    for(l += h, o = p & (1 << -f) - 1, p >>= -f, f += s; f > 0; o = 256 * o + t[e + l], l += h, f -= 8);
                    for(a = o & (1 << -f) - 1, o >>= -f, f += n; f > 0; a = 256 * a + t[e + l], l += h, f -= 8);
                    if (0 === o) o = 1 - c;
                    else {
                        if (o === u) return a ? NaN : 1 / 0 * (p ? -1 : 1);
                        a += Math.pow(2, n), o -= c;
                    }
                    return (p ? -1 : 1) * a * Math.pow(2, o - n);
                }, e.write = function(t, e, r, n, i, o) {
                    var a, s, u, c = 8 * o - i - 1, f = (1 << c) - 1, l = f >> 1, h = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = n ? 0 : o - 1, d = n ? 1 : -1, y = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;
                    for(e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (s = isNaN(e) ? 1 : 0, a = f) : (a = Math.floor(Math.log(e) / Math.LN2), e * (u = Math.pow(2, -a)) < 1 && (a--, u *= 2), (e += a + l >= 1 ? h / u : h * Math.pow(2, 1 - l)) * u >= 2 && (a++, u /= 2), a + l >= f ? (s = 0, a = f) : a + l >= 1 ? (s = (e * u - 1) * Math.pow(2, i), a += l) : (s = e * Math.pow(2, l - 1) * Math.pow(2, i), a = 0)); i >= 8; t[r + p] = 255 & s, p += d, s /= 256, i -= 8);
                    for(a = a << i | s, c += i; c > 0; t[r + p] = 255 & a, p += d, a /= 256, c -= 8);
                    t[r + p - d] |= 128 * y;
                };
            },
            2497: (t, e, r)=>{
                "use strict";
                var n = r(1243).isMongooseArray;
                t.exports = function(t) {
                    return null != t && (n(t) || null != t.$__ || t.isMongooseBuffer || t.$isMongooseMap);
                };
            },
            2533: (t, e, r)=>{
                "use strict";
                var n = r(9732).Buffer, i = r(7775).Transform, o = r(136).I;
                function a(t) {
                    i.call(this), this.hashMode = "string" == typeof t, this.hashMode ? this[t] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
                }
                r(1679)(a, i);
                var s = "undefined" != typeof Uint8Array, u = "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array && ArrayBuffer.isView && (n.prototype instanceof Uint8Array || n.TYPED_ARRAY_SUPPORT);
                a.prototype.update = function(t, e, r) {
                    var i = function(t, e) {
                        if (t instanceof n) return t;
                        if ("string" == typeof t) return n.from(t, e);
                        if (u && ArrayBuffer.isView(t)) {
                            if (0 === t.byteLength) return n.alloc(0);
                            var r = n.from(t.buffer, t.byteOffset, t.byteLength);
                            if (r.byteLength === t.byteLength) return r;
                        }
                        if (s && t instanceof Uint8Array) return n.from(t);
                        if (n.isBuffer(t) && t.constructor && "function" == typeof t.constructor.isBuffer && t.constructor.isBuffer(t)) return n.from(t);
                        throw new TypeError('The "data" argument must be of type string or an instance of Buffer, TypedArray, or DataView.');
                    }(t, e), o = this._update(i);
                    return this.hashMode ? this : (r && (o = this._toString(o, r)), o);
                }, a.prototype.setAutoPadding = function() {}, a.prototype.getAuthTag = function() {
                    throw new Error("trying to get auth tag in unsupported state");
                }, a.prototype.setAuthTag = function() {
                    throw new Error("trying to set auth tag in unsupported state");
                }, a.prototype.setAAD = function() {
                    throw new Error("trying to set aad in unsupported state");
                }, a.prototype._transform = function(t, e, r) {
                    var n;
                    try {
                        this.hashMode ? this._update(t) : this.push(this._update(t));
                    } catch (t) {
                        n = t;
                    } finally{
                        r(n);
                    }
                }, a.prototype._flush = function(t) {
                    var e;
                    try {
                        this.push(this.__final());
                    } catch (t) {
                        e = t;
                    }
                    t(e);
                }, a.prototype._finalOrDigest = function(t) {
                    var e = this.__final() || n.alloc(0);
                    return t && (e = this._toString(e, t, !0)), e;
                }, a.prototype._toString = function(t, e, r) {
                    if (this._decoder || (this._decoder = new o(e), this._encoding = e), this._encoding !== e) throw new Error("can\u2019t switch encodings");
                    var n = this._decoder.write(t);
                    return r && (n += this._decoder.end()), n;
                }, t.exports = a;
            },
            2538: (t, e, r)=>{
                var n = r(6876), i = r(9732).Buffer, o = r(9003);
                function a(t) {
                    var e = t._cipher.encryptBlockRaw(t._prev);
                    return o(t._prev), e;
                }
                e.encrypt = function(t, e) {
                    var r = Math.ceil(e.length / 16), o = t._cache.length;
                    t._cache = i.concat([
                        t._cache,
                        i.allocUnsafe(16 * r)
                    ]);
                    for(var s = 0; s < r; s++){
                        var u = a(t), c = o + 16 * s;
                        t._cache.writeUInt32BE(u[0], c + 0), t._cache.writeUInt32BE(u[1], c + 4), t._cache.writeUInt32BE(u[2], c + 8), t._cache.writeUInt32BE(u[3], c + 12);
                    }
                    var f = t._cache.slice(0, e.length);
                    return t._cache = t._cache.slice(e.length), n(e, f);
                };
            },
            2555: (t)=>{
                "use strict";
                t.exports = function(t) {
                    if (Array.isArray(t)) {
                        if (!t.every(function(t) {
                            return "number" == typeof t || "string" == typeof t;
                        })) throw new Error("$type array values must be strings or numbers");
                        return t;
                    }
                    if ("number" != typeof t && "string" != typeof t) throw new Error("$type parameter must be number, string, or array of numbers and strings");
                    return t;
                };
            },
            2580: (t, e, r)=>{
                "use strict";
                var n = r(2400), i = r(3550).EventEmitter, o = r(3672), a = r(7058), s = r(5549), u = o.ValidationError, c = r(4957), f = r(608);
                function l(t, e, r, i, u) {
                    if (!(this instanceof l)) return new l(t, e, r, i, u);
                    if (f(e) && !e.instanceOfSchema && (e = new a(e)), e = this.schema || e, !this.schema && e.options._id && void 0 === (t = t || {})._id && (t._id = new s), !e) throw new o.MissingSchemaError;
                    for(var h in this.$__setSchema(e), n.call(this, t, r, i, u), c(this, e, {
                        decorateDoc: !0
                    }), e.methods)this[h] = e.methods[h];
                    for(var p in e.statics)this[p] = e.statics[p];
                }
                l.prototype = Object.create(n.prototype), l.prototype.constructor = l, l.events = new i, l.$emitter = new i, [
                    "on",
                    "once",
                    "emit",
                    "listeners",
                    "removeListener",
                    "setMaxListeners",
                    "removeAllListeners",
                    "addListener"
                ].forEach(function(t) {
                    l[t] = function() {
                        return l.$emitter[t].apply(l.$emitter, arguments);
                    };
                }), l.ValidationError = u, t.exports = l;
            },
            2635: (t, e, r)=>{
                "use strict";
                var n = r(1679), i = r(6936), o = r(9732).Buffer, a = new Array(16);
                function s() {
                    i.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
                }
                function u(t, e) {
                    return t << e | t >>> 32 - e;
                }
                function c(t, e, r, n, i, o, a) {
                    return u(t + (e & r | ~e & n) + i + o | 0, a) + e | 0;
                }
                function f(t, e, r, n, i, o, a) {
                    return u(t + (e & n | r & ~n) + i + o | 0, a) + e | 0;
                }
                function l(t, e, r, n, i, o, a) {
                    return u(t + (e ^ r ^ n) + i + o | 0, a) + e | 0;
                }
                function h(t, e, r, n, i, o, a) {
                    return u(t + (r ^ (e | ~n)) + i + o | 0, a) + e | 0;
                }
                n(s, i), s.prototype._update = function() {
                    for(var t = a, e = 0; e < 16; ++e)t[e] = this._block.readInt32LE(4 * e);
                    var r = this._a, n = this._b, i = this._c, o = this._d;
                    r = c(r, n, i, o, t[0], 3614090360, 7), o = c(o, r, n, i, t[1], 3905402710, 12), i = c(i, o, r, n, t[2], 606105819, 17), n = c(n, i, o, r, t[3], 3250441966, 22), r = c(r, n, i, o, t[4], 4118548399, 7), o = c(o, r, n, i, t[5], 1200080426, 12), i = c(i, o, r, n, t[6], 2821735955, 17), n = c(n, i, o, r, t[7], 4249261313, 22), r = c(r, n, i, o, t[8], 1770035416, 7), o = c(o, r, n, i, t[9], 2336552879, 12), i = c(i, o, r, n, t[10], 4294925233, 17), n = c(n, i, o, r, t[11], 2304563134, 22), r = c(r, n, i, o, t[12], 1804603682, 7), o = c(o, r, n, i, t[13], 4254626195, 12), i = c(i, o, r, n, t[14], 2792965006, 17), r = f(r, n = c(n, i, o, r, t[15], 1236535329, 22), i, o, t[1], 4129170786, 5), o = f(o, r, n, i, t[6], 3225465664, 9), i = f(i, o, r, n, t[11], 643717713, 14), n = f(n, i, o, r, t[0], 3921069994, 20), r = f(r, n, i, o, t[5], 3593408605, 5), o = f(o, r, n, i, t[10], 38016083, 9), i = f(i, o, r, n, t[15], 3634488961, 14), n = f(n, i, o, r, t[4], 3889429448, 20), r = f(r, n, i, o, t[9], 568446438, 5), o = f(o, r, n, i, t[14], 3275163606, 9), i = f(i, o, r, n, t[3], 4107603335, 14), n = f(n, i, o, r, t[8], 1163531501, 20), r = f(r, n, i, o, t[13], 2850285829, 5), o = f(o, r, n, i, t[2], 4243563512, 9), i = f(i, o, r, n, t[7], 1735328473, 14), r = l(r, n = f(n, i, o, r, t[12], 2368359562, 20), i, o, t[5], 4294588738, 4), o = l(o, r, n, i, t[8], 2272392833, 11), i = l(i, o, r, n, t[11], 1839030562, 16), n = l(n, i, o, r, t[14], 4259657740, 23), r = l(r, n, i, o, t[1], 2763975236, 4), o = l(o, r, n, i, t[4], 1272893353, 11), i = l(i, o, r, n, t[7], 4139469664, 16), n = l(n, i, o, r, t[10], 3200236656, 23), r = l(r, n, i, o, t[13], 681279174, 4), o = l(o, r, n, i, t[0], 3936430074, 11), i = l(i, o, r, n, t[3], 3572445317, 16), n = l(n, i, o, r, t[6], 76029189, 23), r = l(r, n, i, o, t[9], 3654602809, 4), o = l(o, r, n, i, t[12], 3873151461, 11), i = l(i, o, r, n, t[15], 530742520, 16), r = h(r, n = l(n, i, o, r, t[2], 3299628645, 23), i, o, t[0], 4096336452, 6), o = h(o, r, n, i, t[7], 1126891415, 10), i = h(i, o, r, n, t[14], 2878612391, 15), n = h(n, i, o, r, t[5], 4237533241, 21), r = h(r, n, i, o, t[12], 1700485571, 6), o = h(o, r, n, i, t[3], 2399980690, 10), i = h(i, o, r, n, t[10], 4293915773, 15), n = h(n, i, o, r, t[1], 2240044497, 21), r = h(r, n, i, o, t[8], 1873313359, 6), o = h(o, r, n, i, t[15], 4264355552, 10), i = h(i, o, r, n, t[6], 2734768916, 15), n = h(n, i, o, r, t[13], 1309151649, 21), r = h(r, n, i, o, t[4], 4149444226, 6), o = h(o, r, n, i, t[11], 3174756917, 10), i = h(i, o, r, n, t[2], 718787259, 15), n = h(n, i, o, r, t[9], 3951481745, 21), this._a = this._a + r | 0, this._b = this._b + n | 0, this._c = this._c + i | 0, this._d = this._d + o | 0;
                }, s.prototype._digest = function() {
                    this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
                    var t = o.allocUnsafe(16);
                    return t.writeInt32LE(this._a, 0), t.writeInt32LE(this._b, 4), t.writeInt32LE(this._c, 8), t.writeInt32LE(this._d, 12), t;
                }, t.exports = s;
            },
            2653: (t)=>{
                "use strict";
                t.exports = [
                    "Float16Array",
                    "Float32Array",
                    "Float64Array",
                    "Int8Array",
                    "Int16Array",
                    "Int32Array",
                    "Uint8Array",
                    "Uint8ClampedArray",
                    "Uint16Array",
                    "Uint32Array",
                    "BigInt64Array",
                    "BigUint64Array"
                ];
            },
            2655: (t, e, r)=>{
                var n = r(1679), i = r(5832).Buffer, o = r(1419), a = o.base, s = o.constants.der;
                function u(t) {
                    this.enc = "der", this.name = t.name, this.entity = t, this.tree = new c, this.tree._init(t.body);
                }
                function c(t) {
                    a.Node.call(this, "der", t);
                }
                function f(t) {
                    return t < 10 ? "0" + t : t;
                }
                t.exports = u, u.prototype.encode = function(t, e) {
                    return this.tree._encode(t, e).join();
                }, n(c, a.Node), c.prototype._encodeComposite = function(t, e, r, n) {
                    var o, a = function(t, e, r, n) {
                        var i;
                        if ("seqof" === t ? t = "seq" : "setof" === t && (t = "set"), s.tagByName.hasOwnProperty(t)) i = s.tagByName[t];
                        else {
                            if ("number" != typeof t || (0 | t) !== t) return n.error("Unknown tag: " + t);
                            i = t;
                        }
                        return i >= 31 ? n.error("Multi-octet tag encoding unsupported") : (e || (i |= 32), i |= s.tagClassByName[r || "universal"] << 6);
                    }(t, e, r, this.reporter);
                    if (n.length < 128) return (o = new i(2))[0] = a, o[1] = n.length, this._createEncoderBuffer([
                        o,
                        n
                    ]);
                    for(var u = 1, c = n.length; c >= 256; c >>= 8)u++;
                    (o = new i(2 + u))[0] = a, o[1] = 128 | u, c = 1 + u;
                    for(var f = n.length; f > 0; c--, f >>= 8)o[c] = 255 & f;
                    return this._createEncoderBuffer([
                        o,
                        n
                    ]);
                }, c.prototype._encodeStr = function(t, e) {
                    if ("bitstr" === e) return this._createEncoderBuffer([
                        0 | t.unused,
                        t.data
                    ]);
                    if ("bmpstr" === e) {
                        for(var r = new i(2 * t.length), n = 0; n < t.length; n++)r.writeUInt16BE(t.charCodeAt(n), 2 * n);
                        return this._createEncoderBuffer(r);
                    }
                    return "numstr" === e ? this._isNumstr(t) ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : "printstr" === e ? this._isPrintstr(t) ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(e) || "objDesc" === e ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: " + e + " unsupported");
                }, c.prototype._encodeObjid = function(t, e, r) {
                    if ("string" == typeof t) {
                        if (!e) return this.reporter.error("string objid given, but no values map found");
                        if (!e.hasOwnProperty(t)) return this.reporter.error("objid not found in values map");
                        t = e[t].split(/[\s\.]+/g);
                        for(var n = 0; n < t.length; n++)t[n] |= 0;
                    } else if (Array.isArray(t)) for(t = t.slice(), n = 0; n < t.length; n++)t[n] |= 0;
                    if (!Array.isArray(t)) return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(t));
                    if (!r) {
                        if (t[1] >= 40) return this.reporter.error("Second objid identifier OOB");
                        t.splice(0, 2, 40 * t[0] + t[1]);
                    }
                    var o = 0;
                    for(n = 0; n < t.length; n++){
                        var a = t[n];
                        for(o++; a >= 128; a >>= 7)o++;
                    }
                    var s = new i(o), u = s.length - 1;
                    for(n = t.length - 1; n >= 0; n--)for(a = t[n], s[u--] = 127 & a; (a >>= 7) > 0;)s[u--] = 128 | 127 & a;
                    return this._createEncoderBuffer(s);
                }, c.prototype._encodeTime = function(t, e) {
                    var r, n = new Date(t);
                    return "gentime" === e ? r = [
                        f(n.getFullYear()),
                        f(n.getUTCMonth() + 1),
                        f(n.getUTCDate()),
                        f(n.getUTCHours()),
                        f(n.getUTCMinutes()),
                        f(n.getUTCSeconds()),
                        "Z"
                    ].join("") : "utctime" === e ? r = [
                        f(n.getFullYear() % 100),
                        f(n.getUTCMonth() + 1),
                        f(n.getUTCDate()),
                        f(n.getUTCHours()),
                        f(n.getUTCMinutes()),
                        f(n.getUTCSeconds()),
                        "Z"
                    ].join("") : this.reporter.error("Encoding " + e + " time is not supported yet"), this._encodeStr(r, "octstr");
                }, c.prototype._encodeNull = function() {
                    return this._createEncoderBuffer("");
                }, c.prototype._encodeInt = function(t, e) {
                    if ("string" == typeof t) {
                        if (!e) return this.reporter.error("String int or enum given, but no values map");
                        if (!e.hasOwnProperty(t)) return this.reporter.error("Values map doesn't contain: " + JSON.stringify(t));
                        t = e[t];
                    }
                    if ("number" != typeof t && !i.isBuffer(t)) {
                        var r = t.toArray();
                        !t.sign && 128 & r[0] && r.unshift(0), t = new i(r);
                    }
                    if (i.isBuffer(t)) {
                        var n = t.length;
                        0 === t.length && n++;
                        var o = new i(n);
                        return t.copy(o), 0 === t.length && (o[0] = 0), this._createEncoderBuffer(o);
                    }
                    if (t < 128) return this._createEncoderBuffer(t);
                    if (t < 256) return this._createEncoderBuffer([
                        0,
                        t
                    ]);
                    n = 1;
                    for(var a = t; a >= 256; a >>= 8)n++;
                    for(a = (o = new Array(n)).length - 1; a >= 0; a--)o[a] = 255 & t, t >>= 8;
                    return 128 & o[0] && o.unshift(0), this._createEncoderBuffer(new i(o));
                }, c.prototype._encodeBool = function(t) {
                    return this._createEncoderBuffer(t ? 255 : 0);
                }, c.prototype._use = function(t, e) {
                    return "function" == typeof t && (t = t(e)), t._getEncoder("der").tree;
                }, c.prototype._skipDefault = function(t, e, r) {
                    var n, i = this._baseState;
                    if (null === i.default) return !1;
                    var o = t.join();
                    if (void 0 === i.defaultBuffer && (i.defaultBuffer = this._encodeValue(i.default, e, r).join()), o.length !== i.defaultBuffer.length) return !1;
                    for(n = 0; n < o.length; n++)if (o[n] !== i.defaultBuffer[n]) return !1;
                    return !0;
                };
            },
            2692: (t)=>{
                "use strict";
                t.exports = function(t, e) {
                    if (1 !== e.length) {
                        for(var r = e[0], n = void 0, i = 0; i < e.length - 1; ++i){
                            var o = t.path(r);
                            o && o.schema ? (n = o.schema.options.strict, t = o.schema, r = o.$isMongooseDocumentArray && !isNaN(e[i + 1]) ? "" : e[i + 1]) : r += r.length ? "." + e[i + 1] : e[i + 1];
                        }
                        return n;
                    }
                };
            },
            2696: (t, e, r)=>{
                "use strict";
                var n = r(3305);
                t.exports = function(t, e) {
                    return "string" == typeof t && "string" == typeof e || "number" == typeof t && "number" == typeof e ? t === e : !(!n(t, "ObjectId") || !n(e, "ObjectId")) && t.toString() === e.toString();
                };
            },
            2724: (t, e, r)=>{
                "use strict";
                var n = r(3071), i = r(9344), o = n("RegExp.prototype.exec"), a = r(2268);
                t.exports = function(t) {
                    if (!i(t)) throw new a("`regex` must be a RegExp");
                    return function(e) {
                        return null !== o(t, e);
                    };
                };
            },
            2746: (t)=>{
                "use strict";
                var e = "function" == typeof ({
                    env: {}
                }).nextTick ? ({
                    env: {}
                }).nextTick.bind({
                    env: {}
                }) : function(t) {
                    return setTimeout(t, 0);
                };
                t.exports = function(t) {
                    return e(t);
                };
            },
            2789: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                t.exports = function(t) {
                    if (null == t || "object" !== e(t)) return !1;
                    var r = Object.getPrototypeOf(t);
                    return !r || "Object" === r.constructor.name;
                };
            },
            2793: (t)=>{
                "use strict";
                t.exports = new Set([
                    "__proto__",
                    "constructor",
                    "prototype"
                ]);
            },
            2822: (t, e, r)=>{
                "use strict";
                t.exports = r(3633).Double;
            },
            2824: (t, e, r)=>{
                "use strict";
                var n = r(7930).objectIdSymbol, i = r(8768);
                function o() {
                    var t, e;
                    if (this.$__.shardval) {
                        e = (t = Object.keys(this.$__.shardval)).length, this.$where = this.$where || {};
                        for(var r = 0; r < e; ++r)this.$where[t[r]] = this.$__.shardval[t[r]];
                    }
                }
                function a() {
                    var t = this.$__schema.options.shardKey || this.$__schema.options.shardkey;
                    if (i.isPOJO(t)) for(var e, r = this.$__.shardval = {}, o = Object.keys(t), a = o.length, s = 0; s < a; ++s)null == (e = this.$__getValue(o[s])) ? r[o[s]] = e : i.isMongooseObject(e) ? r[o[s]] = e.toObject({
                        depopulate: !0,
                        _isNested: !0
                    }) : e instanceof Date || e[n] ? r[o[s]] = e : "function" == typeof e.valueOf ? r[o[s]] = e.valueOf() : r[o[s]] = e;
                }
                t.exports = function(t) {
                    t.post("init", function() {
                        return a.call(this), this;
                    }), t.pre("save", function(t) {
                        o.call(this), t();
                    }), t.pre("remove", function(t) {
                        o.call(this), t();
                    }), t.post("save", function() {
                        a.call(this);
                    });
                }, t.exports.storeShard = a;
            },
            2859: (t, e, r)=>{
                var n = e;
                n.utils = r(4685), n.common = r(7695), n.sha = r(690), n.ripemd = r(601), n.hmac = r(9313), n.sha1 = n.sha.sha1, n.sha256 = n.sha.sha256, n.sha224 = n.sha.sha224, n.sha384 = n.sha.sha384, n.sha512 = n.sha.sha512, n.ripemd160 = n.ripemd.ripemd160;
            },
            2900: (t, e, r)=>{
                "use strict";
                var n = r(5879);
                t.exports = function(t) {
                    if ("TopologyDescription" !== n(t)) return !1;
                    var e = Array.from(t.servers.values());
                    return e.length > 0 && e.every(function(t) {
                        return "Unknown" === t.type;
                    });
                };
            },
            2914: (t, e, r)=>{
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(7860), o = [
                    "__proto__",
                    "constructor",
                    "prototype"
                ];
                function a(t, e, r, n, i, o) {
                    for(var s, u = 0; u < t.length && u < e.length; ++u)s = t[u], Array.isArray(s) && Array.isArray(e[u]) ? a(s, e[u], r, n, i, o) : s && (n ? n(s, r, o(e[u])) : (s[i] && (s = s[i]), s[r] = o(e[u])));
                }
                function s(t) {
                    return t;
                }
                e.get = function(t, r, o, a) {
                    var u;
                    "function" == typeof o && (o.length < 2 ? (a = o, o = void 0) : (u = o, o = void 0)), a || (a = s);
                    var c = "string" == typeof t ? i(t) : t;
                    if (!Array.isArray(c)) throw new TypeError("Invalid `path`. Must be either string or array");
                    for(var f, l = r, h = 0; h < c.length; ++h){
                        if (f = c[h], "string" != typeof c[h] && "number" != typeof c[h]) throw new TypeError("Each segment of path to `get()` must be a string or number, got " + n(c[h]));
                        if (Array.isArray(l) && !/^\d+$/.test(f)) {
                            var p = c.slice(h);
                            return [].concat(l).map(function(t) {
                                return t ? e.get(p, t, o || u, a) : a(void 0);
                            });
                        }
                        if (u) l = u(l, f);
                        else {
                            var d = o && l[o] ? l[o] : l;
                            l = d instanceof Map ? d.get(f) : d[f];
                        }
                        if (!l) return a(l);
                    }
                    return a(l);
                }, e.has = function(t, e) {
                    var r = "string" == typeof t ? i(t) : t;
                    if (!Array.isArray(r)) throw new TypeError("Invalid `path`. Must be either string or array");
                    for(var o = r.length, a = e, s = 0; s < o; ++s){
                        if ("string" != typeof r[s] && "number" != typeof r[s]) throw new TypeError("Each segment of path to `has()` must be a string or number, got " + n(r[s]));
                        if (null == a || "object" !== n(a) || !(r[s] in a)) return !1;
                        a = a[r[s]];
                    }
                    return !0;
                }, e.unset = function(t, e) {
                    var r = "string" == typeof t ? i(t) : t;
                    if (!Array.isArray(r)) throw new TypeError("Invalid `path`. Must be either string or array");
                    for(var a = r.length, s = e, u = 0; u < a; ++u){
                        if (null == s || "object" !== n(s) || !(r[u] in s)) return !1;
                        if ("string" != typeof r[u] && "number" != typeof r[u]) throw new TypeError("Each segment of path to `unset()` must be a string or number, got " + n(r[u]));
                        if (-1 !== o.indexOf(r[u])) return !1;
                        if (u === a - 1) return delete s[r[u]], !0;
                        s = s instanceof Map ? s.get(r[u]) : s[r[u]];
                    }
                    return !0;
                }, e.set = function(t, r, u, c, f, l) {
                    var h;
                    "function" == typeof c && (c.length < 2 ? (f = c, c = void 0) : (h = c, c = void 0)), f || (f = s);
                    var p = "string" == typeof t ? i(t) : t;
                    if (!Array.isArray(p)) throw new TypeError("Invalid `path`. Must be either string or array");
                    if (null != u) {
                        for(var d = 0; d < p.length; ++d){
                            if ("string" != typeof p[d] && "number" != typeof p[d]) throw new TypeError("Each segment of path to `set()` must be a string or number, got " + n(p[d]));
                            if (-1 !== o.indexOf(p[d])) return;
                        }
                        for(var y, b = l || /\$/.test(t) && !1 !== l, m = u, v = (d = 0, p.length - 1); d < v; ++d)if ("$" != (y = p[d])) {
                            if (Array.isArray(m) && !/^\d+$/.test(y)) {
                                var g = p.slice(d);
                                if (!b && Array.isArray(r)) for(var _ = 0; _ < m.length && _ < r.length; ++_)e.set(g, r[_], m[_], c || h, f, b);
                                else for(_ = 0; _ < m.length; ++_)e.set(g, r, m[_], c || h, f, b);
                                return;
                            }
                            if (h) m = h(m, y);
                            else {
                                var w = c && m[c] ? m[c] : m;
                                m = w instanceof Map ? w.get(y) : w[y];
                            }
                            if (!m) return;
                        } else if (d == v - 1) break;
                        if (y = p[v], c && m[c] && (m = m[c]), Array.isArray(m) && !/^\d+$/.test(y)) {
                            if (!b && Array.isArray(r)) a(m, r, y, h, c, f);
                            else for(_ = 0; _ < m.length; ++_){
                                var S = m[_];
                                S && (h ? h(S, y, f(r)) : (S[c] && (S = S[c]), S[y] = f(r)));
                            }
                        } else h ? h(m, y, f(r)) : m instanceof Map ? m.set(y, f(r)) : m[y] = f(r);
                    }
                }, e.stringToParts = i;
            },
            2937: (t, e, r)=>{
                var n = r(5053), i = r(4276), o = r(5833), a = r(7797), s = r(1190), u = r(7799), c = r(5218), f = r(1095), l = r(9732).Buffer;
                t.exports = function(t, e, r) {
                    var h;
                    h = t.padding ? t.padding : r ? 1 : 4;
                    var p, d = n(t);
                    if (4 === h) p = function(t, e) {
                        var r = t.modulus.byteLength(), n = e.length, c = o("sha1").update(l.alloc(0)).digest(), f = c.length, h = 2 * f;
                        if (n > r - h - 2) throw new Error("message too long");
                        var p = l.alloc(r - n - h - 2), d = r - f - 1, y = i(f), b = s(l.concat([
                            c,
                            p,
                            l.alloc(1, 1),
                            e
                        ], d), a(y, d)), m = s(y, a(b, f));
                        return new u(l.concat([
                            l.alloc(1),
                            m,
                            b
                        ], r));
                    }(d, e);
                    else if (1 === h) p = function(t, e, r) {
                        var n, o = e.length, a = t.modulus.byteLength();
                        if (o > a - 11) throw new Error("message too long");
                        return n = r ? l.alloc(a - o - 3, 255) : function(t) {
                            for(var e, r = l.allocUnsafe(t), n = 0, o = i(2 * t), a = 0; n < t;)a === o.length && (o = i(2 * t), a = 0), (e = o[a++]) && (r[n++] = e);
                            return r;
                        }(a - o - 3), new u(l.concat([
                            l.from([
                                0,
                                r ? 1 : 2
                            ]),
                            n,
                            l.alloc(1),
                            e
                        ], a));
                    }(d, e, r);
                    else {
                        if (3 !== h) throw new Error("unknown padding");
                        if ((p = new u(e)).cmp(d.modulus) >= 0) throw new Error("data too long for modulus");
                    }
                    return r ? f(p, d) : c(p, d);
                };
            },
            2945: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e() {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, arguments);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8879)), u = r(5761);
                Object.defineProperty(s.prototype, "subtype", u), t.exports = s;
            },
            2951: (t)=>{
                "use strict";
                t.exports = JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}');
            },
            3027: (t, e, r)=>{
                var n = r(1679), i = r(8890), o = r(1485), a = r(9732).Buffer, s = new Array(64);
                function u() {
                    this.init(), this._w = s, o.call(this, 64, 56);
                }
                n(u, i), u.prototype.init = function() {
                    return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
                }, u.prototype._hash = function() {
                    var t = a.allocUnsafe(28);
                    return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t;
                }, t.exports = u;
            },
            3071: (t, e, r)=>{
                "use strict";
                var n = r(6400), i = r(8863), o = i([
                    n("%String.prototype.indexOf%")
                ]);
                t.exports = function(t, e) {
                    var r = n(t, !!e);
                    return "function" == typeof r && o(t, ".prototype.") > -1 ? i([
                        r
                    ]) : r;
                };
            },
            3091: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? i(Object(r), !0).forEach(function(e) {
                            a(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function a(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var s, u = r(4625), c = r(6426), f = r(863), l = r(4327), h = r(5879), p = r(5549), d = r(3305), y = r(8768), b = c.CastError;
                function m(t, e) {
                    var r = "string" == typeof t && 24 === t.length && /^[a-f0-9]+$/i.test(t), n = e && e.suppressWarning;
                    !r && void 0 !== t || n || y.warn("mongoose: To create a new ObjectId please try `Mongoose.Types.ObjectId` instead of using `Mongoose.Schema.ObjectId`. Set the `suppressWarning` option if you're trying to create a hex char path in your schema."), c.call(this, t, e, "ObjectId");
                }
                function v(t) {
                    return this.cast(t);
                }
                function g() {
                    return new p;
                }
                function _(t) {
                    return s || (s = r(2400)), this instanceof s && void 0 === t ? new p : t;
                }
                m.schemaName = "ObjectId", m.defaultOptions = {}, m.prototype = Object.create(c.prototype), m.prototype.constructor = m, m.prototype.OptionsConstructor = u, m.get = c.get, m.set = c.set, m.setters = [], m.prototype.auto = function(t) {
                    return t && (this.default(g), this.set(_)), this;
                }, m._checkRequired = function(t) {
                    return d(t, "ObjectId");
                }, m._cast = f, m.cast = function(t) {
                    return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
                }, m._defaultCaster = function(t) {
                    if (!d(t, "ObjectId")) throw new Error(t + " is not an instance of ObjectId");
                    return t;
                }, m.checkRequired = c.checkRequired, m.prototype.checkRequired = function(t, e) {
                    return c._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : m.checkRequired())(t);
                }, m.prototype.cast = function(t, e, r, n, i) {
                    if (!d(t, "ObjectId") && c._isRef(this, t, e, r)) {
                        if ("objectid" === (h(t) || "").toLowerCase()) return new p(t.toHexString());
                        if (null == t || y.isNonBuiltinObject(t)) return this._castRef(t, e, r, i);
                    }
                    var o;
                    o = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : m.cast();
                    try {
                        return o(t);
                    } catch (e) {
                        throw new b("ObjectId", t, this.path, e, this);
                    }
                }, m.prototype.$conditionalHandlers = o(o({}, c.prototype.$conditionalHandlers), {}, {
                    $gt: v,
                    $gte: v,
                    $lt: v,
                    $lte: v
                }), g.$runBeforeSetters = !0, m.prototype.toJSONSchema = function(t) {
                    var e = this.options.required && "function" != typeof this.options.required || "_id" === this.path;
                    return l("string", "objectId", null == t ? void 0 : t.useBsonType, e);
                }, t.exports = m;
            },
            3123: (t)=>{
                "use strict";
                t.exports = Function.prototype.call;
            },
            3191: (t, e, r)=>{
                "use strict";
                var n = r(988), i = function() {
                    return !!n;
                };
                i.hasArrayLengthDefineBug = function() {
                    if (!n) return null;
                    try {
                        return 1 !== n([], "length", {
                            value: 1
                        }).length;
                    } catch (t) {
                        return !0;
                    }
                }, t.exports = i;
            },
            3216: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function i(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? n(Object(r), !0).forEach(function(e) {
                            o(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function o(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != a(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != a(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == a(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function a(t) {
                    return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, a(t);
                }
                var s = r(8768), u = new Set([
                    "__index",
                    "__parentArray",
                    "_doc"
                ]);
                t.exports = function(t, e) {
                    if (s.isPOJO(t) && null != t.$__ && null != t._doc) {
                        if (e) {
                            for(var r = {}, n = 0, o = Object.keys(t); n < o.length; n++){
                                var c = o[n];
                                "symbol" !== a(c) && "$" !== c[0] && (u.has(c) || (r[c] = t[c]));
                            }
                            return i(i({}, t._doc), r);
                        }
                        return t._doc;
                    }
                    return t;
                };
            },
            3219: (t)=>{
                "use strict";
                t.exports = JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}');
            },
            3241: (t)=>{
                "use strict";
                t.exports = JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}');
            },
            3261: (t, e, r)=>{
                var n = t.exports = function(t) {
                    t = t.toLowerCase();
                    var e = n[t];
                    if (!e) throw new Error(t + " is not supported (we accept pull requests)");
                    return new e;
                };
                n.sha = r(2219), n.sha1 = r(68), n.sha224 = r(3027), n.sha256 = r(8890), n.sha384 = r(5938), n.sha512 = r(6467);
            },
            3279: (t)=>{
                "use strict";
                t.exports = Function.prototype.apply;
            },
            3292: (t, e, r)=>{
                (e = t.exports = r(7991)).Stream = e, e.Readable = e, e.Writable = r(9147), e.Duplex = r(1313), e.Transform = r(1191), e.PassThrough = r(9125);
            },
            3303: (t, e)=>{
                "use strict";
                e._ = {
                    transform: !1,
                    virtuals: !1,
                    getters: !1,
                    _skipDepopulateTopLevel: !0,
                    depopulate: !0,
                    flattenDecimals: !1,
                    useProjection: !1,
                    versionKey: !0,
                    flattenObjectIds: !1
                };
            },
            3305: (t)=>{
                "use strict";
                t.exports = function(t, e) {
                    return null != t && t._bsontype === e;
                };
            },
            3318: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? i(Object(r), !0).forEach(function(e) {
                            a(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function a(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var s = r(3609), u = r(6426), c = r(4058), f = r(4327);
                function l(t, e) {
                    u.call(this, t, e, "BigInt");
                }
                function h(t, e) {
                    return this.castForQuery(null, t, e);
                }
                l.schemaName = "BigInt", l.defaultOptions = {}, l.prototype = Object.create(u.prototype), l.prototype.constructor = l, l._cast = c, l.set = u.set, l.setters = [], l.get = u.get, l.cast = function(t) {
                    return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
                }, l._checkRequired = function(t) {
                    return null != t;
                }, l.checkRequired = u.checkRequired, l.prototype.checkRequired = function(t) {
                    return this.constructor._checkRequired(t);
                }, l.prototype.cast = function(t) {
                    var e;
                    e = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : l.cast();
                    try {
                        return e(t);
                    } catch (e) {
                        throw new s("BigInt", t, this.path, e, this);
                    }
                }, l.$conditionalHandlers = o(o({}, u.prototype.$conditionalHandlers), {}, {
                    $gt: h,
                    $gte: h,
                    $lt: h,
                    $lte: h
                }), l.prototype.castForQuery = function(t, e, r) {
                    var n;
                    if (null != t) return (n = l.$conditionalHandlers[t]) ? n.call(this, e) : this.applySetters(e, r);
                    try {
                        return this.applySetters(e, r);
                    } catch (t) {
                        throw t instanceof s && t.path === this.path && null != this.$fullPath && (t.path = this.$fullPath), t;
                    }
                }, l.prototype._castNullish = function(t) {
                    return void 0 === t || ("function" == typeof this.constructor.cast ? this.constructor.cast() : l.cast()), t;
                }, l.prototype.toJSONSchema = function(t) {
                    var e = this.options.required && "function" != typeof this.options.required;
                    return f("string", "long", null == t ? void 0 : t.useBsonType, e);
                }, t.exports = l;
            },
            3329: (t, e, r)=>{
                "use strict";
                var n = r(4685), i = r(2344);
                function o() {
                    if (!(this instanceof o)) return new o;
                    i.call(this), this.h = [
                        3238371032,
                        914150663,
                        812702999,
                        4144912697,
                        4290775857,
                        1750603025,
                        1694076839,
                        3204075428
                    ];
                }
                n.inherits(o, i), t.exports = o, o.blockSize = 512, o.outSize = 224, o.hmacStrength = 192, o.padLength = 64, o.prototype._digest = function(t) {
                    return "hex" === t ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big");
                };
            },
            3334: (t, e, r)=>{
                "use strict";
                var n = r(7799), i = r(1970), o = i.getNAF, a = i.getJSF, s = i.assert;
                function u(t, e) {
                    this.type = t, this.p = new n(e.p, 16), this.red = e.prime ? n.red(e.prime) : n.mont(this.p), this.zero = new n(0).toRed(this.red), this.one = new n(1).toRed(this.red), this.two = new n(2).toRed(this.red), this.n = e.n && new n(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                    var r = this.n && this.p.div(this.n);
                    !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));
                }
                function c(t, e) {
                    this.curve = t, this.type = e, this.precomputed = null;
                }
                t.exports = u, u.prototype.point = function() {
                    throw new Error("Not implemented");
                }, u.prototype.validate = function() {
                    throw new Error("Not implemented");
                }, u.prototype._fixedNafMul = function(t, e) {
                    s(t.precomputed);
                    var r = t._getDoubles(), n = o(e, 1, this._bitLength), i = (1 << r.step + 1) - (r.step % 2 == 0 ? 2 : 1);
                    i /= 3;
                    var a, u, c = [];
                    for(a = 0; a < n.length; a += r.step){
                        u = 0;
                        for(var f = a + r.step - 1; f >= a; f--)u = (u << 1) + n[f];
                        c.push(u);
                    }
                    for(var l = this.jpoint(null, null, null), h = this.jpoint(null, null, null), p = i; p > 0; p--){
                        for(a = 0; a < c.length; a++)(u = c[a]) === p ? h = h.mixedAdd(r.points[a]) : u === -p && (h = h.mixedAdd(r.points[a].neg()));
                        l = l.add(h);
                    }
                    return l.toP();
                }, u.prototype._wnafMul = function(t, e) {
                    var r = 4, n = t._getNAFPoints(r);
                    r = n.wnd;
                    for(var i = n.points, a = o(e, r, this._bitLength), u = this.jpoint(null, null, null), c = a.length - 1; c >= 0; c--){
                        for(var f = 0; c >= 0 && 0 === a[c]; c--)f++;
                        if (c >= 0 && f++, u = u.dblp(f), c < 0) break;
                        var l = a[c];
                        s(0 !== l), u = "affine" === t.type ? l > 0 ? u.mixedAdd(i[l - 1 >> 1]) : u.mixedAdd(i[-l - 1 >> 1].neg()) : l > 0 ? u.add(i[l - 1 >> 1]) : u.add(i[-l - 1 >> 1].neg());
                    }
                    return "affine" === t.type ? u.toP() : u;
                }, u.prototype._wnafMulAdd = function(t, e, r, n, i) {
                    var s, u, c, f = this._wnafT1, l = this._wnafT2, h = this._wnafT3, p = 0;
                    for(s = 0; s < n; s++){
                        var d = (c = e[s])._getNAFPoints(t);
                        f[s] = d.wnd, l[s] = d.points;
                    }
                    for(s = n - 1; s >= 1; s -= 2){
                        var y = s - 1, b = s;
                        if (1 === f[y] && 1 === f[b]) {
                            var m = [
                                e[y],
                                null,
                                null,
                                e[b]
                            ];
                            0 === e[y].y.cmp(e[b].y) ? (m[1] = e[y].add(e[b]), m[2] = e[y].toJ().mixedAdd(e[b].neg())) : 0 === e[y].y.cmp(e[b].y.redNeg()) ? (m[1] = e[y].toJ().mixedAdd(e[b]), m[2] = e[y].add(e[b].neg())) : (m[1] = e[y].toJ().mixedAdd(e[b]), m[2] = e[y].toJ().mixedAdd(e[b].neg()));
                            var v = [
                                -3,
                                -1,
                                -5,
                                -7,
                                0,
                                7,
                                5,
                                1,
                                3
                            ], g = a(r[y], r[b]);
                            for(p = Math.max(g[0].length, p), h[y] = new Array(p), h[b] = new Array(p), u = 0; u < p; u++){
                                var _ = 0 | g[0][u], w = 0 | g[1][u];
                                h[y][u] = v[3 * (_ + 1) + (w + 1)], h[b][u] = 0, l[y] = m;
                            }
                        } else h[y] = o(r[y], f[y], this._bitLength), h[b] = o(r[b], f[b], this._bitLength), p = Math.max(h[y].length, p), p = Math.max(h[b].length, p);
                    }
                    var S = this.jpoint(null, null, null), O = this._wnafT4;
                    for(s = p; s >= 0; s--){
                        for(var j = 0; s >= 0;){
                            var $ = !0;
                            for(u = 0; u < n; u++)O[u] = 0 | h[u][s], 0 !== O[u] && ($ = !1);
                            if (!$) break;
                            j++, s--;
                        }
                        if (s >= 0 && j++, S = S.dblp(j), s < 0) break;
                        for(u = 0; u < n; u++){
                            var E = O[u];
                            0 !== E && (E > 0 ? c = l[u][E - 1 >> 1] : E < 0 && (c = l[u][-E - 1 >> 1].neg()), S = "affine" === c.type ? S.mixedAdd(c) : S.add(c));
                        }
                    }
                    for(s = 0; s < n; s++)l[s] = null;
                    return i ? S : S.toP();
                }, u.BasePoint = c, c.prototype.eq = function() {
                    throw new Error("Not implemented");
                }, c.prototype.validate = function() {
                    return this.curve.validate(this);
                }, u.prototype.decodePoint = function(t, e) {
                    t = i.toArray(t, e);
                    var r = this.p.byteLength();
                    if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 == 2 * r) return 6 === t[0] ? s(t[t.length - 1] % 2 == 0) : 7 === t[0] && s(t[t.length - 1] % 2 == 1), this.point(t.slice(1, 1 + r), t.slice(1 + r, 1 + 2 * r));
                    if ((2 === t[0] || 3 === t[0]) && t.length - 1 === r) return this.pointFromX(t.slice(1, 1 + r), 3 === t[0]);
                    throw new Error("Unknown point format");
                }, c.prototype.encodeCompressed = function(t) {
                    return this.encode(t, !0);
                }, c.prototype._encode = function(t) {
                    var e = this.curve.p.byteLength(), r = this.getX().toArray("be", e);
                    return t ? [
                        this.getY().isEven() ? 2 : 3
                    ].concat(r) : [
                        4
                    ].concat(r, this.getY().toArray("be", e));
                }, c.prototype.encode = function(t, e) {
                    return i.encode(this._encode(e), t);
                }, c.prototype.precompute = function(t) {
                    if (this.precomputed) return this;
                    var e = {
                        doubles: null,
                        naf: null,
                        beta: null
                    };
                    return e.naf = this._getNAFPoints(8), e.doubles = this._getDoubles(4, t), e.beta = this._getBeta(), this.precomputed = e, this;
                }, c.prototype._hasDoubles = function(t) {
                    if (!this.precomputed) return !1;
                    var e = this.precomputed.doubles;
                    return !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step);
                }, c.prototype._getDoubles = function(t, e) {
                    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                    for(var r = [
                        this
                    ], n = this, i = 0; i < e; i += t){
                        for(var o = 0; o < t; o++)n = n.dbl();
                        r.push(n);
                    }
                    return {
                        step: t,
                        points: r
                    };
                }, c.prototype._getNAFPoints = function(t) {
                    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                    for(var e = [
                        this
                    ], r = (1 << t) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++)e[i] = e[i - 1].add(n);
                    return {
                        wnd: t,
                        points: e
                    };
                }, c.prototype._getBeta = function() {
                    return null;
                }, c.prototype.dblp = function(t) {
                    for(var e = this, r = 0; r < t; r++)e = e.dbl();
                    return e;
                };
            },
            3340: (t, e, r)=>{
                function n(t) {
                    try {
                        if (!r.g.localStorage) return !1;
                    } catch (t) {
                        return !1;
                    }
                    var e = r.g.localStorage[t];
                    return null != e && "true" === String(e).toLowerCase();
                }
                t.exports = function(t, e) {
                    if (n("noDeprecation")) return t;
                    var r = !1;
                    return function() {
                        if (!r) {
                            if (n("throwDeprecation")) throw new Error(e);
                            n("traceDeprecation") ? console.trace(e) : console.warn(e), r = !0;
                        }
                        return t.apply(this, arguments);
                    };
                };
            },
            3381: (t)=>{
                "use strict";
                function e() {
                    return null != this._id ? this._id.toString() : null;
                }
                t.exports = function(t) {
                    return !t.paths.id && t.paths._id && t.options.id ? (t.aliases && t.aliases.id || t.virtual("id").get(e), t) : t;
                };
            },
            3388: (t)=>{
                "use strict";
                t.exports = "undefined" != typeof Reflect && Reflect && Reflect.apply;
            },
            3414: (t)=>{
                "use strict";
                t.exports = Number.isNaN || function(t) {
                    return t != t;
                };
            },
            3420: (t, e, r)=>{
                "use strict";
                var n = r(4685), i = r(6749);
                function o() {
                    if (!(this instanceof o)) return new o;
                    i.call(this), this.h = [
                        3418070365,
                        3238371032,
                        1654270250,
                        914150663,
                        2438529370,
                        812702999,
                        355462360,
                        4144912697,
                        1731405415,
                        4290775857,
                        2394180231,
                        1750603025,
                        3675008525,
                        1694076839,
                        1203062813,
                        3204075428
                    ];
                }
                n.inherits(o, i), t.exports = o, o.blockSize = 1024, o.outSize = 384, o.hmacStrength = 192, o.padLength = 128, o.prototype._digest = function(t) {
                    return "hex" === t ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big");
                };
            },
            3426: (t, e, r)=>{
                "use strict";
                var n = r(2653), i = "undefined" == typeof globalThis ? r.g : globalThis;
                t.exports = function() {
                    for(var t = [], e = 0; e < n.length; e++)"function" == typeof i[n[e]] && (t[t.length] = n[e]);
                    return t;
                };
            },
            3441: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e(t, r) {
                        var a;
                        !function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e);
                        var s = Array.isArray(r) ? "array" : "primitive value";
                        return (a = function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            "Tried to set nested object field `" + t + "` to ".concat(s, " `") + r + "`"
                        ])).path = t, a;
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8213));
                Object.defineProperty(s.prototype, "name", {
                    value: "ObjectExpectedError"
                }), t.exports = s;
            },
            3446: (t, e, r)=>{
                "use strict";
                var n = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m, i = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m, o = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m, a = r(1685), s = r(2098), u = r(9732).Buffer;
                t.exports = function(t, e) {
                    var r, c = t.toString(), f = c.match(n);
                    if (f) {
                        var l = "aes" + f[1], h = u.from(f[2], "hex"), p = u.from(f[3].replace(/[\r\n]/g, ""), "base64"), d = a(e, h.slice(0, 8), parseInt(f[1], 10)).key, y = [], b = s.createDecipheriv(l, d, h);
                        y.push(b.update(p)), y.push(b.final()), r = u.concat(y);
                    } else {
                        var m = c.match(o);
                        r = u.from(m[2].replace(/[\r\n]/g, ""), "base64");
                    }
                    return {
                        tag: c.match(i)[1],
                        data: r
                    };
                };
            },
            3453: (t, e, r)=>{
                "use strict";
                var n = r(7799), i = r(1679), o = r(3334), a = r(1970);
                function s(t) {
                    o.call(this, "mont", t), this.a = new n(t.a, 16).toRed(this.red), this.b = new n(t.b, 16).toRed(this.red), this.i4 = new n(4).toRed(this.red).redInvm(), this.two = new n(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
                }
                function u(t, e, r) {
                    o.BasePoint.call(this, t, "projective"), null === e && null === r ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new n(e, 16), this.z = new n(r, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
                }
                i(s, o), t.exports = s, s.prototype.validate = function(t) {
                    var e = t.normalize().x, r = e.redSqr(), n = r.redMul(e).redAdd(r.redMul(this.a)).redAdd(e);
                    return 0 === n.redSqrt().redSqr().cmp(n);
                }, i(u, o.BasePoint), s.prototype.decodePoint = function(t, e) {
                    return this.point(a.toArray(t, e), 1);
                }, s.prototype.point = function(t, e) {
                    return new u(this, t, e);
                }, s.prototype.pointFromJSON = function(t) {
                    return u.fromJSON(this, t);
                }, u.prototype.precompute = function() {}, u.prototype._encode = function() {
                    return this.getX().toArray("be", this.curve.p.byteLength());
                }, u.fromJSON = function(t, e) {
                    return new u(t, e[0], e[1] || t.one);
                }, u.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
                }, u.prototype.isInfinity = function() {
                    return 0 === this.z.cmpn(0);
                }, u.prototype.dbl = function() {
                    var t = this.x.redAdd(this.z).redSqr(), e = this.x.redSub(this.z).redSqr(), r = t.redSub(e), n = t.redMul(e), i = r.redMul(e.redAdd(this.curve.a24.redMul(r)));
                    return this.curve.point(n, i);
                }, u.prototype.add = function() {
                    throw new Error("Not supported on Montgomery curve");
                }, u.prototype.diffAdd = function(t, e) {
                    var r = this.x.redAdd(this.z), n = this.x.redSub(this.z), i = t.x.redAdd(t.z), o = t.x.redSub(t.z).redMul(r), a = i.redMul(n), s = e.z.redMul(o.redAdd(a).redSqr()), u = e.x.redMul(o.redISub(a).redSqr());
                    return this.curve.point(s, u);
                }, u.prototype.mul = function(t) {
                    for(var e = t.clone(), r = this, n = this.curve.point(null, null), i = []; 0 !== e.cmpn(0); e.iushrn(1))i.push(e.andln(1));
                    for(var o = i.length - 1; o >= 0; o--)0 === i[o] ? (r = r.diffAdd(n, this), n = n.dbl()) : (n = r.diffAdd(n, this), r = r.dbl());
                    return n;
                }, u.prototype.mulAdd = function() {
                    throw new Error("Not supported on Montgomery curve");
                }, u.prototype.jumlAdd = function() {
                    throw new Error("Not supported on Montgomery curve");
                }, u.prototype.eq = function(t) {
                    return 0 === this.getX().cmp(t.getX());
                }, u.prototype.normalize = function() {
                    return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
                }, u.prototype.getX = function() {
                    return this.normalize(), this.x.fromRed();
                };
            },
            3528: (t)=>{
                function e(t, e) {
                    if (!t) throw new Error(e || "Assertion failed");
                }
                t.exports = e, e.equal = function(t, e, r) {
                    if (t != e) throw new Error(r || "Assertion failed: " + t + " != " + e);
                };
            },
            3550: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                var r, n = "object" === ("undefined" == typeof Reflect ? "undefined" : e(Reflect)) ? Reflect : null, i = n && "function" == typeof n.apply ? n.apply : function(t, e, r) {
                    return Function.prototype.apply.call(t, e, r);
                };
                r = n && "function" == typeof n.ownKeys ? n.ownKeys : Object.getOwnPropertySymbols ? function(t) {
                    return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t));
                } : function(t) {
                    return Object.getOwnPropertyNames(t);
                };
                var o = Number.isNaN || function(t) {
                    return t != t;
                };
                function a() {
                    a.init.call(this);
                }
                t.exports = a, t.exports.once = function(t, e) {
                    return new Promise(function(r, n) {
                        function i(r) {
                            t.removeListener(e, o), n(r);
                        }
                        function o() {
                            "function" == typeof t.removeListener && t.removeListener("error", i), r([].slice.call(arguments));
                        }
                        b(t, e, o, {
                            once: !0
                        }), "error" !== e && function(t, e) {
                            "function" == typeof t.on && b(t, "error", e, {
                                once: !0
                            });
                        }(t, i);
                    });
                }, a.EventEmitter = a, a.prototype._events = void 0, a.prototype._eventsCount = 0, a.prototype._maxListeners = void 0;
                var s = 10;
                function u(t) {
                    if ("function" != typeof t) throw new TypeError('The "listener" argument must be of type Function. Received type ' + e(t));
                }
                function c(t) {
                    return void 0 === t._maxListeners ? a.defaultMaxListeners : t._maxListeners;
                }
                function f(t, e, r, n) {
                    var i, o, a, s;
                    if (u(r), void 0 === (o = t._events) ? (o = t._events = Object.create(null), t._eventsCount = 0) : (void 0 !== o.newListener && (t.emit("newListener", e, r.listener ? r.listener : r), o = t._events), a = o[e]), void 0 === a) a = o[e] = r, ++t._eventsCount;
                    else if ("function" == typeof a ? a = o[e] = n ? [
                        r,
                        a
                    ] : [
                        a,
                        r
                    ] : n ? a.unshift(r) : a.push(r), (i = c(t)) > 0 && a.length > i && !a.warned) {
                        a.warned = !0;
                        var f = new Error("Possible EventEmitter memory leak detected. " + a.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                        f.name = "MaxListenersExceededWarning", f.emitter = t, f.type = e, f.count = a.length, s = f, console && console.warn && console.warn(s);
                    }
                    return t;
                }
                function l() {
                    if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
                }
                function h(t, e, r) {
                    var n = {
                        fired: !1,
                        wrapFn: void 0,
                        target: t,
                        type: e,
                        listener: r
                    }, i = l.bind(n);
                    return i.listener = r, n.wrapFn = i, i;
                }
                function p(t, e, r) {
                    var n = t._events;
                    if (void 0 === n) return [];
                    var i = n[e];
                    return void 0 === i ? [] : "function" == typeof i ? r ? [
                        i.listener || i
                    ] : [
                        i
                    ] : r ? function(t) {
                        for(var e = new Array(t.length), r = 0; r < e.length; ++r)e[r] = t[r].listener || t[r];
                        return e;
                    }(i) : y(i, i.length);
                }
                function d(t) {
                    var e = this._events;
                    if (void 0 !== e) {
                        var r = e[t];
                        if ("function" == typeof r) return 1;
                        if (void 0 !== r) return r.length;
                    }
                    return 0;
                }
                function y(t, e) {
                    for(var r = new Array(e), n = 0; n < e; ++n)r[n] = t[n];
                    return r;
                }
                function b(t, r, n, i) {
                    if ("function" == typeof t.on) i.once ? t.once(r, n) : t.on(r, n);
                    else {
                        if ("function" != typeof t.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + e(t));
                        t.addEventListener(r, function e(o) {
                            i.once && t.removeEventListener(r, e), n(o);
                        });
                    }
                }
                Object.defineProperty(a, "defaultMaxListeners", {
                    enumerable: !0,
                    get: function() {
                        return s;
                    },
                    set: function(t) {
                        if ("number" != typeof t || t < 0 || o(t)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + ".");
                        s = t;
                    }
                }), a.init = function() {
                    void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
                }, a.prototype.setMaxListeners = function(t) {
                    if ("number" != typeof t || t < 0 || o(t)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t + ".");
                    return this._maxListeners = t, this;
                }, a.prototype.getMaxListeners = function() {
                    return c(this);
                }, a.prototype.emit = function(t) {
                    for(var e = [], r = 1; r < arguments.length; r++)e.push(arguments[r]);
                    var n = "error" === t, o = this._events;
                    if (void 0 !== o) n = n && void 0 === o.error;
                    else if (!n) return !1;
                    if (n) {
                        var a;
                        if (e.length > 0 && (a = e[0]), a instanceof Error) throw a;
                        var s = new Error("Unhandled error." + (a ? " (" + a.message + ")" : ""));
                        throw s.context = a, s;
                    }
                    var u = o[t];
                    if (void 0 === u) return !1;
                    if ("function" == typeof u) i(u, this, e);
                    else {
                        var c = u.length, f = y(u, c);
                        for(r = 0; r < c; ++r)i(f[r], this, e);
                    }
                    return !0;
                }, a.prototype.addListener = function(t, e) {
                    return f(this, t, e, !1);
                }, a.prototype.on = a.prototype.addListener, a.prototype.prependListener = function(t, e) {
                    return f(this, t, e, !0);
                }, a.prototype.once = function(t, e) {
                    return u(e), this.on(t, h(this, t, e)), this;
                }, a.prototype.prependOnceListener = function(t, e) {
                    return u(e), this.prependListener(t, h(this, t, e)), this;
                }, a.prototype.removeListener = function(t, e) {
                    var r, n, i, o, a;
                    if (u(e), void 0 === (n = this._events)) return this;
                    if (void 0 === (r = n[t])) return this;
                    if (r === e || r.listener === e) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete n[t], n.removeListener && this.emit("removeListener", t, r.listener || e));
                    else if ("function" != typeof r) {
                        for(i = -1, o = r.length - 1; o >= 0; o--)if (r[o] === e || r[o].listener === e) {
                            a = r[o].listener, i = o;
                            break;
                        }
                        if (i < 0) return this;
                        0 === i ? r.shift() : function(t, e) {
                            for(; e + 1 < t.length; e++)t[e] = t[e + 1];
                            t.pop();
                        }(r, i), 1 === r.length && (n[t] = r[0]), void 0 !== n.removeListener && this.emit("removeListener", t, a || e);
                    }
                    return this;
                }, a.prototype.off = a.prototype.removeListener, a.prototype.removeAllListeners = function(t) {
                    var e, r, n;
                    if (void 0 === (r = this._events)) return this;
                    if (void 0 === r.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== r[t] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete r[t]), this;
                    if (0 === arguments.length) {
                        var i, o = Object.keys(r);
                        for(n = 0; n < o.length; ++n)"removeListener" !== (i = o[n]) && this.removeAllListeners(i);
                        return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
                    }
                    if ("function" == typeof (e = r[t])) this.removeListener(t, e);
                    else if (void 0 !== e) for(n = e.length - 1; n >= 0; n--)this.removeListener(t, e[n]);
                    return this;
                }, a.prototype.listeners = function(t) {
                    return p(this, t, !0);
                }, a.prototype.rawListeners = function(t) {
                    return p(this, t, !1);
                }, a.listenerCount = function(t, e) {
                    return "function" == typeof t.listenerCount ? t.listenerCount(e) : d.call(t, e);
                }, a.prototype.listenerCount = d, a.prototype.eventNames = function() {
                    return this._eventsCount > 0 ? r(this._events) : [];
                };
            },
            3604: (t, e, r)=>{
                var n = r(8629), i = r(1085), o = r(9732).Buffer, a = r(5407), s = r(2533), u = r(5401), c = r(1685);
                function f(t, e, r) {
                    s.call(this), this._cache = new h, this._cipher = new u.AES(e), this._prev = o.from(r), this._mode = t, this._autopadding = !0;
                }
                r(1679)(f, s), f.prototype._update = function(t) {
                    var e, r;
                    this._cache.add(t);
                    for(var n = []; e = this._cache.get();)r = this._mode.encrypt(this, e), n.push(r);
                    return o.concat(n);
                };
                var l = o.alloc(16, 16);
                function h() {
                    this.cache = o.allocUnsafe(0);
                }
                function p(t, e, r) {
                    var s = n[t.toLowerCase()];
                    if (!s) throw new TypeError("invalid suite type");
                    if ("string" == typeof e && (e = o.from(e)), e.length !== s.key / 8) throw new TypeError("invalid key length " + e.length);
                    if ("string" == typeof r && (r = o.from(r)), "GCM" !== s.mode && r.length !== s.iv) throw new TypeError("invalid iv length " + r.length);
                    return "stream" === s.type ? new a(s.module, e, r) : "auth" === s.type ? new i(s.module, e, r) : new f(s.module, e, r);
                }
                f.prototype._final = function() {
                    var t = this._cache.flush();
                    if (this._autopadding) return t = this._mode.encrypt(this, t), this._cipher.scrub(), t;
                    if (!t.equals(l)) throw this._cipher.scrub(), new Error("data not multiple of block length");
                }, f.prototype.setAutoPadding = function(t) {
                    return this._autopadding = !!t, this;
                }, h.prototype.add = function(t) {
                    this.cache = o.concat([
                        this.cache,
                        t
                    ]);
                }, h.prototype.get = function() {
                    if (this.cache.length > 15) {
                        var t = this.cache.slice(0, 16);
                        return this.cache = this.cache.slice(16), t;
                    }
                    return null;
                }, h.prototype.flush = function() {
                    for(var t = 16 - this.cache.length, e = o.allocUnsafe(t), r = -1; ++r < t;)e.writeUInt8(t, r);
                    return o.concat([
                        this.cache,
                        e
                    ]);
                }, e.createCipheriv = p, e.createCipher = function(t, e) {
                    var r = n[t.toLowerCase()];
                    if (!r) throw new TypeError("invalid suite type");
                    var i = c(e, !1, r.key, r.iv);
                    return p(t, i.key, i.iv);
                };
            },
            3609: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, o(n.key), n);
                    }
                }
                function o(t) {
                    var e = function(t) {
                        if ("object" != n(t) || !t) return t;
                        var e = t[Symbol.toPrimitive];
                        if (void 0 !== e) {
                            var r = e.call(t, "string");
                            if ("object" != n(r)) return r;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return String(t);
                    }(t);
                    return "symbol" == n(e) ? e : e + "";
                }
                function a(t, e, r) {
                    return e = c(e), function(t, e) {
                        if (e && ("object" == n(e) || "function" == typeof e)) return e;
                        if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                        return s(t);
                    }(t, u() ? Reflect.construct(e, r || [], c(t).constructor) : e.apply(t, r));
                }
                function s(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                }
                function u() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (u = function() {
                        return !!t;
                    })();
                }
                function c(t) {
                    return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, c(t);
                }
                function f(t, e) {
                    return f = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, f(t, e);
                }
                var l = r(8213), h = r(7352), p = function(t) {
                    function e(t, r, n, i, o) {
                        var u;
                        if (function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), arguments.length > 0) {
                            var c = y(r);
                            (u = a(this, e, [
                                m(null, t, r, n, b(o), c, i)
                            ])).init(t, r, n, i, o);
                        } else u = a(this, e, [
                            m()
                        ]);
                        return s(u);
                    }
                    var r, n;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && f(t, e);
                    }(e, t), r = e, n = [
                        {
                            key: "toJSON",
                            value: function() {
                                return {
                                    stringValue: this.stringValue,
                                    valueType: this.valueType,
                                    kind: this.kind,
                                    value: this.value,
                                    path: this.path,
                                    reason: this.reason,
                                    name: this.name,
                                    message: this.message
                                };
                            }
                        },
                        {
                            key: "init",
                            value: function(t, e, r, n, i) {
                                this.stringValue = d(e), this.messageFormat = b(i), this.kind = t, this.value = e, this.path = r, this.reason = n, this.valueType = y(e);
                            }
                        },
                        {
                            key: "copy",
                            value: function(t) {
                                this.messageFormat = t.messageFormat, this.stringValue = t.stringValue, this.kind = t.kind, this.value = t.value, this.path = t.path, this.reason = t.reason, this.message = t.message, this.valueType = t.valueType;
                            }
                        },
                        {
                            key: "setModel",
                            value: function(t) {
                                this.message = m(t, this.kind, this.value, this.path, this.messageFormat, this.valueType);
                            }
                        }
                    ], i(r.prototype, n), Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(l);
                function d(t) {
                    var e = h.inspect(t);
                    return (e = e.replace(/^'|'$/g, '"')).startsWith('"') || (e = '"' + e + '"'), e;
                }
                function y(t) {
                    if (null == t) return "" + t;
                    var e = n(t);
                    return "object" !== e || "function" != typeof t.constructor ? e : t.constructor.name;
                }
                function b(t) {
                    var e = t && t._castErrorMessage || null;
                    if ("string" == typeof e || "function" == typeof e) return e;
                }
                function m(t, e, r, n, i, o, a) {
                    if ("string" == typeof i) {
                        var s = d(r), u = i.replace("{KIND}", e).replace("{VALUE}", s).replace("{PATH}", n);
                        return null != t && (u = u.replace("{MODEL}", t.modelName)), u;
                    }
                    if ("function" == typeof i) return i(r, n, t, e);
                    var c = "Cast to " + e + " failed for value " + d(r) + (o ? " (type " + o + ")" : "") + ' at path "' + n + '"';
                    return null != t && (c += ' for model "' + t.modelName + '"'), null != a && "function" == typeof a.constructor && "AssertionError" !== a.constructor.name && "Error" !== a.constructor.name && (c += ' because of "' + a.constructor.name + '"'), c;
                }
                Object.defineProperty(p.prototype, "name", {
                    value: "CastError"
                }), t.exports = p;
            },
            3622: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                t.exports = function(t, r, n) {
                    if (null == t) return t;
                    if (null != t._doc && (t = t._doc), arguments.length >= 3) {
                        if ("object" !== e(t)) return;
                        if (void 0 === n) return;
                        return t instanceof Map ? t.set(r, n) : t[r] = n, n;
                    }
                    return "$*" === r ? t instanceof Map ? Array.from(t.values()) : Object.keys(t).map(function(e) {
                        return t[e];
                    }) : t instanceof Map ? t.get(r) : t[r];
                };
            },
            3633: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                const i = (()=>{
                    const t = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Uint8Array.prototype), Symbol.toStringTag).get;
                    return (e)=>t.call(e);
                })();
                function o(t) {
                    return "Uint8Array" === i(t);
                }
                function a(t) {
                    return "object" == typeof t && null != t && Symbol.toStringTag in t && ("ArrayBuffer" === t[Symbol.toStringTag] || "SharedArrayBuffer" === t[Symbol.toStringTag]);
                }
                function s(t) {
                    return t instanceof RegExp || "[object RegExp]" === Object.prototype.toString.call(t);
                }
                function u(t) {
                    return "object" == typeof t && null != t && Symbol.toStringTag in t && "Map" === t[Symbol.toStringTag];
                }
                function c(t) {
                    return t instanceof Date || "[object Date]" === Object.prototype.toString.call(t);
                }
                function f(t, e) {
                    return JSON.stringify(t, (t, e)=>"bigint" == typeof e ? {
                            $numberLong: `${e}`
                        } : u(e) ? Object.fromEntries(e) : e);
                }
                const l = Symbol.for("@@mdb.bson.version"), h = 2147483647, p = -2147483648, d = Math.pow(2, 63) - 1, y = -Math.pow(2, 63), b = Math.pow(2, 53), m = -Math.pow(2, 53), v = Object.freeze({
                    double: 1,
                    string: 2,
                    object: 3,
                    array: 4,
                    binData: 5,
                    undefined: 6,
                    objectId: 7,
                    bool: 8,
                    date: 9,
                    null: 10,
                    regex: 11,
                    dbPointer: 12,
                    javascript: 13,
                    symbol: 14,
                    javascriptWithScope: 15,
                    int: 16,
                    timestamp: 17,
                    long: 18,
                    decimal: 19,
                    minKey: -1,
                    maxKey: 127
                });
                class g extends Error {
                    get bsonError() {
                        return !0;
                    }
                    get name() {
                        return "BSONError";
                    }
                    constructor(t, e){
                        super(t, e);
                    }
                    static isBSONError(t) {
                        return null != t && "object" == typeof t && "bsonError" in t && !0 === t.bsonError && "name" in t && "message" in t && "stack" in t;
                    }
                }
                class _ extends g {
                    get name() {
                        return "BSONVersionError";
                    }
                    constructor(){
                        super("Unsupported BSON version, bson types must be from bson 6.x.x");
                    }
                }
                class w extends g {
                    get name() {
                        return "BSONRuntimeError";
                    }
                    constructor(t){
                        super(t);
                    }
                }
                class S extends g {
                    get name() {
                        return "BSONOffsetError";
                    }
                    constructor(t, e, r){
                        super(`${t}. offset: ${e}`, r), this.offset = e;
                    }
                }
                let O, j;
                function $(t, e, r, n) {
                    if (n) {
                        O ??= new TextDecoder("utf8", {
                            fatal: !0
                        });
                        try {
                            return O.decode(t.subarray(e, r));
                        } catch (t) {
                            throw new g("Invalid UTF-8 string in BSON document", {
                                cause: t
                            });
                        }
                    }
                    return j ??= new TextDecoder("utf8", {
                        fatal: !1
                    }), j.decode(t.subarray(e, r));
                }
                function E(t, e, r) {
                    if (0 === t.length) return "";
                    const n = r - e;
                    if (0 === n) return "";
                    if (n > 20) return null;
                    if (1 === n && t[e] < 128) return String.fromCharCode(t[e]);
                    if (2 === n && t[e] < 128 && t[e + 1] < 128) return String.fromCharCode(t[e]) + String.fromCharCode(t[e + 1]);
                    if (3 === n && t[e] < 128 && t[e + 1] < 128 && t[e + 2] < 128) return String.fromCharCode(t[e]) + String.fromCharCode(t[e + 1]) + String.fromCharCode(t[e + 2]);
                    const i = [];
                    for(let n = e; n < r; n++){
                        const e = t[n];
                        if (e > 127) return null;
                        i.push(e);
                    }
                    return String.fromCharCode(...i);
                }
                function A(t) {
                    return x.fromNumberArray(Array.from({
                        length: t
                    }, ()=>Math.floor(256 * Math.random())));
                }
                const P = (()=>{
                    try {
                        return r(8872).po;
                    } catch  {
                        return A;
                    }
                })(), x = {
                    toLocalBufferType (t) {
                        if (n.isBuffer(t)) return t;
                        if (ArrayBuffer.isView(t)) return n.from(t.buffer, t.byteOffset, t.byteLength);
                        const e = t?.[Symbol.toStringTag] ?? Object.prototype.toString.call(t);
                        if ("ArrayBuffer" === e || "SharedArrayBuffer" === e || "[object ArrayBuffer]" === e || "[object SharedArrayBuffer]" === e) return n.from(t);
                        throw new g("Cannot create Buffer from the passed potentialBuffer.");
                    },
                    allocate: (t)=>n.alloc(t),
                    allocateUnsafe: (t)=>n.allocUnsafe(t),
                    equals: (t, e)=>x.toLocalBufferType(t).equals(e),
                    fromNumberArray: (t)=>n.from(t),
                    fromBase64: (t)=>n.from(t, "base64"),
                    toBase64: (t)=>x.toLocalBufferType(t).toString("base64"),
                    fromISO88591: (t)=>n.from(t, "binary"),
                    toISO88591: (t)=>x.toLocalBufferType(t).toString("binary"),
                    fromHex: (t)=>n.from(t, "hex"),
                    toHex: (t)=>x.toLocalBufferType(t).toString("hex"),
                    toUTF8 (t, e, r, n) {
                        const i = r - e <= 20 ? E(t, e, r) : null;
                        if (null != i) return i;
                        const o = x.toLocalBufferType(t).toString("utf8", e, r);
                        if (n) {
                            for(let n = 0; n < o.length; n++)if (65533 === o.charCodeAt(n)) {
                                $(t, e, r, !0);
                                break;
                            }
                        }
                        return o;
                    },
                    utf8ByteLength: (t)=>n.byteLength(t, "utf8"),
                    encodeUTF8Into (t, e, r) {
                        const n = function(t, e, r) {
                            if (0 === e.length) return 0;
                            if (e.length > 25) return null;
                            if (t.length - r < e.length) return null;
                            for(let n = 0, i = r; n < e.length; n++, i++){
                                const r = e.charCodeAt(n);
                                if (r > 127) return null;
                                t[i] = r;
                            }
                            return e.length;
                        }(t, e, r);
                        return null != n ? n : x.toLocalBufferType(t).write(e, r, void 0, "utf8");
                    },
                    randomBytes: P,
                    swap32: (t)=>x.toLocalBufferType(t).swap32()
                };
                function k(t) {
                    if (t < 0) throw new RangeError(`The argument 'byteLength' is invalid. Received ${t}`);
                    return B.fromNumberArray(Array.from({
                        length: t
                    }, ()=>Math.floor(256 * Math.random())));
                }
                const M = (()=>{
                    const { crypto: t } = globalThis;
                    if (null != t && "function" == typeof t.getRandomValues) return (e)=>t.getRandomValues(B.allocate(e));
                    if (function() {
                        const { navigator: t } = globalThis;
                        return "object" == typeof t && "ReactNative" === t.product;
                    }()) {
                        const { console: t } = globalThis;
                        t?.warn?.("BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values.");
                    }
                    return k;
                })(), T = /(\d|[a-f])/i, B = {
                    toLocalBufferType (t) {
                        const e = t?.[Symbol.toStringTag] ?? Object.prototype.toString.call(t);
                        if ("Uint8Array" === e) return t;
                        if (ArrayBuffer.isView(t)) return new Uint8Array(t.buffer.slice(t.byteOffset, t.byteOffset + t.byteLength));
                        if ("ArrayBuffer" === e || "SharedArrayBuffer" === e || "[object ArrayBuffer]" === e || "[object SharedArrayBuffer]" === e) return new Uint8Array(t);
                        throw new g("Cannot make a Uint8Array from passed potentialBuffer.");
                    },
                    allocate (t) {
                        if ("number" != typeof t) throw new TypeError(`The "size" argument must be of type number. Received ${String(t)}`);
                        return new Uint8Array(t);
                    },
                    allocateUnsafe: (t)=>B.allocate(t),
                    equals (t, e) {
                        if (t.byteLength !== e.byteLength) return !1;
                        for(let r = 0; r < t.byteLength; r++)if (t[r] !== e[r]) return !1;
                        return !0;
                    },
                    fromNumberArray: (t)=>Uint8Array.from(t),
                    fromBase64: (t)=>Uint8Array.from(atob(t), (t)=>t.charCodeAt(0)),
                    toBase64: (t)=>btoa(B.toISO88591(t)),
                    fromISO88591: (t)=>Uint8Array.from(t, (t)=>255 & t.charCodeAt(0)),
                    toISO88591: (t)=>Array.from(Uint16Array.from(t), (t)=>String.fromCharCode(t)).join(""),
                    fromHex (t) {
                        const e = t.length % 2 == 0 ? t : t.slice(0, t.length - 1), r = [];
                        for(let t = 0; t < e.length; t += 2){
                            const n = e[t], i = e[t + 1];
                            if (!T.test(n)) break;
                            if (!T.test(i)) break;
                            const o = Number.parseInt(`${n}${i}`, 16);
                            r.push(o);
                        }
                        return Uint8Array.from(r);
                    },
                    toHex: (t)=>Array.from(t, (t)=>t.toString(16).padStart(2, "0")).join(""),
                    toUTF8 (t, e, r, n) {
                        const i = r - e <= 20 ? E(t, e, r) : null;
                        return null != i ? i : $(t, e, r, n);
                    },
                    utf8ByteLength: (t)=>(new TextEncoder).encode(t).byteLength,
                    encodeUTF8Into (t, e, r) {
                        const n = (new TextEncoder).encode(e);
                        return t.set(n, r), n.byteLength;
                    },
                    randomBytes: M,
                    swap32 (t) {
                        if (t.length % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                        for(let e = 0; e < t.length; e += 4){
                            const r = t[e], n = t[e + 1], i = t[e + 2], o = t[e + 3];
                            t[e] = o, t[e + 1] = i, t[e + 2] = n, t[e + 3] = r;
                        }
                        return t;
                    }
                }, I = "function" == typeof n && !0 !== n.prototype?._isBuffer ? x : B;
                class R {
                    get [l]() {
                        return 6;
                    }
                    [Symbol.for("nodejs.util.inspect.custom")](t, e, r) {
                        return this.inspect(t, e, r);
                    }
                }
                const N = new Float64Array(1), D = new Uint8Array(N.buffer, 0, 8);
                N[0] = -1;
                const L = 0 === D[7], C = {
                    isBigEndian: L,
                    getNonnegativeInt32LE (t, e) {
                        if (t[e + 3] > 127) throw new RangeError(`Size cannot be negative at offset: ${e}`);
                        return t[e] | t[e + 1] << 8 | t[e + 2] << 16 | t[e + 3] << 24;
                    },
                    getInt32LE: (t, e)=>t[e] | t[e + 1] << 8 | t[e + 2] << 16 | t[e + 3] << 24,
                    getUint32LE: (t, e)=>t[e] + 256 * t[e + 1] + 65536 * t[e + 2] + 16777216 * t[e + 3],
                    getUint32BE: (t, e)=>t[e + 3] + 256 * t[e + 2] + 65536 * t[e + 1] + 16777216 * t[e],
                    getBigInt64LE (t, e) {
                        const r = BigInt(t[e + 4] + 256 * t[e + 5] + 65536 * t[e + 6] + (t[e + 7] << 24)), n = BigInt(t[e] + 256 * t[e + 1] + 65536 * t[e + 2] + 16777216 * t[e + 3]);
                        return (r << BigInt(32)) + n;
                    },
                    getFloat64LE: L ? (t, e)=>(D[7] = t[e], D[6] = t[e + 1], D[5] = t[e + 2], D[4] = t[e + 3], D[3] = t[e + 4], D[2] = t[e + 5], D[1] = t[e + 6], D[0] = t[e + 7], N[0]) : (t, e)=>(D[0] = t[e], D[1] = t[e + 1], D[2] = t[e + 2], D[3] = t[e + 3], D[4] = t[e + 4], D[5] = t[e + 5], D[6] = t[e + 6], D[7] = t[e + 7], N[0]),
                    setInt32BE: (t, e, r)=>(t[e + 3] = r, r >>>= 8, t[e + 2] = r, r >>>= 8, t[e + 1] = r, r >>>= 8, t[e] = r, 4),
                    setInt32LE: (t, e, r)=>(t[e] = r, r >>>= 8, t[e + 1] = r, r >>>= 8, t[e + 2] = r, r >>>= 8, t[e + 3] = r, 4),
                    setBigInt64LE (t, e, r) {
                        const n = BigInt(4294967295);
                        let i = Number(r & n);
                        t[e] = i, i >>= 8, t[e + 1] = i, i >>= 8, t[e + 2] = i, i >>= 8, t[e + 3] = i;
                        let o = Number(r >> BigInt(32) & n);
                        return t[e + 4] = o, o >>= 8, t[e + 5] = o, o >>= 8, t[e + 6] = o, o >>= 8, t[e + 7] = o, 8;
                    },
                    setFloat64LE: L ? (t, e, r)=>(N[0] = r, t[e] = D[7], t[e + 1] = D[6], t[e + 2] = D[5], t[e + 3] = D[4], t[e + 4] = D[3], t[e + 5] = D[2], t[e + 6] = D[1], t[e + 7] = D[0], 8) : (t, e, r)=>(N[0] = r, t[e] = D[0], t[e + 1] = D[1], t[e + 2] = D[2], t[e + 3] = D[3], t[e + 4] = D[4], t[e + 5] = D[5], t[e + 6] = D[6], t[e + 7] = D[7], 8)
                };
                class U extends R {
                    get _bsontype() {
                        return "Binary";
                    }
                    constructor(t, e){
                        if (super(), null != t && "string" == typeof t && !ArrayBuffer.isView(t) && !a(t) && !Array.isArray(t)) throw new g("Binary can only be constructed from Uint8Array or number[]");
                        this.sub_type = e ?? U.BSON_BINARY_SUBTYPE_DEFAULT, null == t ? (this.buffer = I.allocate(U.BUFFER_SIZE), this.position = 0) : (this.buffer = Array.isArray(t) ? I.fromNumberArray(t) : I.toLocalBufferType(t), this.position = this.buffer.byteLength);
                    }
                    put(t) {
                        if ("string" == typeof t && 1 !== t.length) throw new g("only accepts single character String");
                        if ("number" != typeof t && 1 !== t.length) throw new g("only accepts single character Uint8Array or Array");
                        let e;
                        if (e = "string" == typeof t ? t.charCodeAt(0) : "number" == typeof t ? t : t[0], e < 0 || e > 255) throw new g("only accepts number in a valid unsigned byte range 0-255");
                        if (this.buffer.byteLength > this.position) this.buffer[this.position++] = e;
                        else {
                            const t = I.allocate(U.BUFFER_SIZE + this.buffer.length);
                            t.set(this.buffer, 0), this.buffer = t, this.buffer[this.position++] = e;
                        }
                    }
                    write(t, e) {
                        if (e = "number" == typeof e ? e : this.position, this.buffer.byteLength < e + t.length) {
                            const e = I.allocate(this.buffer.byteLength + t.length);
                            e.set(this.buffer, 0), this.buffer = e;
                        }
                        if (ArrayBuffer.isView(t)) this.buffer.set(I.toLocalBufferType(t), e), this.position = e + t.byteLength > this.position ? e + t.length : this.position;
                        else if ("string" == typeof t) throw new g("input cannot be string");
                    }
                    read(t, e) {
                        const r = t + (e = e && e > 0 ? e : this.position);
                        return this.buffer.subarray(t, r > this.position ? this.position : r);
                    }
                    value() {
                        return this.buffer.length === this.position ? this.buffer : this.buffer.subarray(0, this.position);
                    }
                    length() {
                        return this.position;
                    }
                    toJSON() {
                        return I.toBase64(this.buffer.subarray(0, this.position));
                    }
                    toString(t) {
                        return "hex" === t ? I.toHex(this.buffer.subarray(0, this.position)) : "base64" === t ? I.toBase64(this.buffer.subarray(0, this.position)) : I.toUTF8(this.buffer, 0, this.position, !1);
                    }
                    toExtendedJSON(t) {
                        t = t || {}, this.sub_type === U.SUBTYPE_VECTOR && q(this);
                        const e = I.toBase64(this.buffer), r = Number(this.sub_type).toString(16);
                        return t.legacy ? {
                            $binary: e,
                            $type: 1 === r.length ? "0" + r : r
                        } : {
                            $binary: {
                                base64: e,
                                subType: 1 === r.length ? "0" + r : r
                            }
                        };
                    }
                    toUUID() {
                        if (this.sub_type === U.SUBTYPE_UUID) return new z(this.buffer.subarray(0, this.position));
                        throw new g(`Binary sub_type "${this.sub_type}" is not supported for converting to UUID. Only "${U.SUBTYPE_UUID}" is currently supported.`);
                    }
                    static createFromHexString(t, e) {
                        return new U(I.fromHex(t), e);
                    }
                    static createFromBase64(t, e) {
                        return new U(I.fromBase64(t), e);
                    }
                    static fromExtendedJSON(t, e) {
                        let r, n;
                        if (e = e || {}, "$binary" in t ? e.legacy && "string" == typeof t.$binary && "$type" in t ? (n = t.$type ? parseInt(t.$type, 16) : 0, r = I.fromBase64(t.$binary)) : "string" != typeof t.$binary && (n = t.$binary.subType ? parseInt(t.$binary.subType, 16) : 0, r = I.fromBase64(t.$binary.base64)) : "$uuid" in t && (n = 4, r = z.bytesFromString(t.$uuid)), !r) throw new g(`Unexpected Binary Extended JSON format ${JSON.stringify(t)}`);
                        return 4 === n ? new z(r) : new U(r, n);
                    }
                    inspect(t, e, r) {
                        return r ??= f, `Binary.createFromBase64(${r(I.toBase64(this.buffer.subarray(0, this.position)), e)}, ${r(this.sub_type, e)})`;
                    }
                    toInt8Array() {
                        if (this.sub_type !== U.SUBTYPE_VECTOR) throw new g("Binary sub_type is not Vector");
                        if (this.buffer[0] !== U.VECTOR_TYPE.Int8) throw new g("Binary datatype field is not Int8");
                        return new Int8Array(this.buffer.buffer.slice(this.buffer.byteOffset + 2, this.buffer.byteOffset + this.position));
                    }
                    toFloat32Array() {
                        if (this.sub_type !== U.SUBTYPE_VECTOR) throw new g("Binary sub_type is not Vector");
                        if (this.buffer[0] !== U.VECTOR_TYPE.Float32) throw new g("Binary datatype field is not Float32");
                        const t = new Uint8Array(this.buffer.buffer.slice(this.buffer.byteOffset + 2, this.buffer.byteOffset + this.position));
                        return C.isBigEndian && I.swap32(t), new Float32Array(t.buffer);
                    }
                    toPackedBits() {
                        if (this.sub_type !== U.SUBTYPE_VECTOR) throw new g("Binary sub_type is not Vector");
                        if (this.buffer[0] !== U.VECTOR_TYPE.PackedBit) throw new g("Binary datatype field is not packed bit");
                        return new Uint8Array(this.buffer.buffer.slice(this.buffer.byteOffset + 2, this.buffer.byteOffset + this.position));
                    }
                    toBits() {
                        if (this.sub_type !== U.SUBTYPE_VECTOR) throw new g("Binary sub_type is not Vector");
                        if (this.buffer[0] !== U.VECTOR_TYPE.PackedBit) throw new g("Binary datatype field is not packed bit");
                        const t = 8 * (this.length() - 2) - this.buffer[1], e = new Int8Array(t);
                        for(let t = 0; t < e.length; t++){
                            const r = t / 8 | 0, n = this.buffer[r + 2] >> 7 - t % 8 & 1;
                            e[t] = n;
                        }
                        return e;
                    }
                    static fromInt8Array(t) {
                        const e = I.allocate(t.byteLength + 2);
                        e[0] = U.VECTOR_TYPE.Int8, e[1] = 0;
                        const r = new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
                        return e.set(r, 2), new this(e, this.SUBTYPE_VECTOR);
                    }
                    static fromFloat32Array(t) {
                        const e = I.allocate(t.byteLength + 2);
                        e[0] = U.VECTOR_TYPE.Float32, e[1] = 0;
                        const r = new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
                        return e.set(r, 2), C.isBigEndian && I.swap32(new Uint8Array(e.buffer, 2)), new this(e, this.SUBTYPE_VECTOR);
                    }
                    static fromPackedBits(t, e = 0) {
                        const r = I.allocate(t.byteLength + 2);
                        return r[0] = U.VECTOR_TYPE.PackedBit, r[1] = e, r.set(t, 2), new this(r, this.SUBTYPE_VECTOR);
                    }
                    static fromBits(t) {
                        const e = t.length + 7 >>> 3, r = new Uint8Array(e + 2);
                        r[0] = U.VECTOR_TYPE.PackedBit;
                        const n = t.length % 8;
                        r[1] = 0 === n ? 0 : 8 - n;
                        for(let e = 0; e < t.length; e++){
                            const n = e >>> 3, i = t[e];
                            if (0 !== i && 1 !== i) throw new g(`Invalid bit value at ${e}: must be 0 or 1, found ${t[e]}`);
                            if (0 === i) continue;
                            const o = 7 - e % 8;
                            r[n + 2] |= i << o;
                        }
                        return new this(r, U.SUBTYPE_VECTOR);
                    }
                }
                function q(t) {
                    if (t.sub_type !== U.SUBTYPE_VECTOR) return;
                    const e = t.position, r = t.buffer[0], n = t.buffer[1];
                    if ((r === U.VECTOR_TYPE.Float32 || r === U.VECTOR_TYPE.Int8) && 0 !== n) throw new g("Invalid Vector: padding must be zero for int8 and float32 vectors");
                    if (r === U.VECTOR_TYPE.PackedBit && 0 !== n && 2 === e) throw new g("Invalid Vector: padding must be zero for packed bit vectors that are empty");
                    if (r === U.VECTOR_TYPE.PackedBit && n > 7) throw new g(`Invalid Vector: padding must be a value between 0 and 7. found: ${n}`);
                }
                U.BSON_BINARY_SUBTYPE_DEFAULT = 0, U.BUFFER_SIZE = 256, U.SUBTYPE_DEFAULT = 0, U.SUBTYPE_FUNCTION = 1, U.SUBTYPE_BYTE_ARRAY = 2, U.SUBTYPE_UUID_OLD = 3, U.SUBTYPE_UUID = 4, U.SUBTYPE_MD5 = 5, U.SUBTYPE_ENCRYPTED = 6, U.SUBTYPE_COLUMN = 7, U.SUBTYPE_SENSITIVE = 8, U.SUBTYPE_VECTOR = 9, U.SUBTYPE_USER_DEFINED = 128, U.VECTOR_TYPE = Object.freeze({
                    Int8: 3,
                    Float32: 39,
                    PackedBit: 16
                });
                const F = /^[0-9A-F]{32}$/i, V = /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i;
                class z extends U {
                    constructor(t){
                        let e;
                        if (null == t) e = z.generate();
                        else if (t instanceof z) e = I.toLocalBufferType(new Uint8Array(t.buffer));
                        else if (ArrayBuffer.isView(t) && 16 === t.byteLength) e = I.toLocalBufferType(t);
                        else {
                            if ("string" != typeof t) throw new g("Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).");
                            e = z.bytesFromString(t);
                        }
                        super(e, 4);
                    }
                    get id() {
                        return this.buffer;
                    }
                    set id(t) {
                        this.buffer = t;
                    }
                    toHexString(t = !0) {
                        return t ? [
                            I.toHex(this.buffer.subarray(0, 4)),
                            I.toHex(this.buffer.subarray(4, 6)),
                            I.toHex(this.buffer.subarray(6, 8)),
                            I.toHex(this.buffer.subarray(8, 10)),
                            I.toHex(this.buffer.subarray(10, 16))
                        ].join("-") : I.toHex(this.buffer);
                    }
                    toString(t) {
                        return "hex" === t ? I.toHex(this.id) : "base64" === t ? I.toBase64(this.id) : this.toHexString();
                    }
                    toJSON() {
                        return this.toHexString();
                    }
                    equals(t) {
                        if (!t) return !1;
                        if (t instanceof z) return I.equals(t.id, this.id);
                        try {
                            return I.equals(new z(t).id, this.id);
                        } catch  {
                            return !1;
                        }
                    }
                    toBinary() {
                        return new U(this.id, U.SUBTYPE_UUID);
                    }
                    static generate() {
                        const t = I.randomBytes(16);
                        return t[6] = 15 & t[6] | 64, t[8] = 63 & t[8] | 128, t;
                    }
                    static isValid(t) {
                        return !!t && ("string" == typeof t ? z.isValidUUIDString(t) : o(t) ? 16 === t.byteLength : "Binary" === t._bsontype && t.sub_type === this.SUBTYPE_UUID && 16 === t.buffer.byteLength);
                    }
                    static createFromHexString(t) {
                        const e = z.bytesFromString(t);
                        return new z(e);
                    }
                    static createFromBase64(t) {
                        return new z(I.fromBase64(t));
                    }
                    static bytesFromString(t) {
                        if (!z.isValidUUIDString(t)) throw new g("UUID string representation must be 32 hex digits or canonical hyphenated representation");
                        return I.fromHex(t.replace(/-/g, ""));
                    }
                    static isValidUUIDString(t) {
                        return F.test(t) || V.test(t);
                    }
                    inspect(t, e, r) {
                        return r ??= f, `new UUID(${r(this.toHexString(), e)})`;
                    }
                }
                class K extends R {
                    get _bsontype() {
                        return "Code";
                    }
                    constructor(t, e){
                        super(), this.code = t.toString(), this.scope = e ?? null;
                    }
                    toJSON() {
                        return null != this.scope ? {
                            code: this.code,
                            scope: this.scope
                        } : {
                            code: this.code
                        };
                    }
                    toExtendedJSON() {
                        return this.scope ? {
                            $code: this.code,
                            $scope: this.scope
                        } : {
                            $code: this.code
                        };
                    }
                    static fromExtendedJSON(t) {
                        return new K(t.$code, t.$scope);
                    }
                    inspect(t, e, r) {
                        r ??= f;
                        let n = r(this.code, e);
                        const i = n.includes("\n");
                        return null != this.scope && (n += `,${i ? "\n" : " "}${r(this.scope, e)}`), `new Code(${i ? "\n" : ""}${n}${i && null === this.scope ? "\n" : ""})`;
                    }
                }
                function H(t) {
                    return null != t && "object" == typeof t && "$id" in t && null != t.$id && "$ref" in t && "string" == typeof t.$ref && (!("$db" in t) || "$db" in t && "string" == typeof t.$db);
                }
                class W extends R {
                    get _bsontype() {
                        return "DBRef";
                    }
                    constructor(t, e, r, n){
                        super();
                        const i = t.split(".");
                        2 === i.length && (r = i.shift(), t = i.shift()), this.collection = t, this.oid = e, this.db = r, this.fields = n || {};
                    }
                    get namespace() {
                        return this.collection;
                    }
                    set namespace(t) {
                        this.collection = t;
                    }
                    toJSON() {
                        const t = Object.assign({
                            $ref: this.collection,
                            $id: this.oid
                        }, this.fields);
                        return null != this.db && (t.$db = this.db), t;
                    }
                    toExtendedJSON(t) {
                        t = t || {};
                        let e = {
                            $ref: this.collection,
                            $id: this.oid
                        };
                        return t.legacy || (this.db && (e.$db = this.db), e = Object.assign(e, this.fields)), e;
                    }
                    static fromExtendedJSON(t) {
                        const e = Object.assign({}, t);
                        return delete e.$ref, delete e.$id, delete e.$db, new W(t.$ref, t.$id, t.$db, e);
                    }
                    inspect(t, e, r) {
                        r ??= f;
                        const n = [
                            r(this.namespace, e),
                            r(this.oid, e),
                            ...this.db ? [
                                r(this.db, e)
                            ] : [],
                            ...Object.keys(this.fields).length > 0 ? [
                                r(this.fields, e)
                            ] : []
                        ];
                        return n[1] = r === f ? `new ObjectId(${n[1]})` : n[1], `new DBRef(${n.join(", ")})`;
                    }
                }
                function J(t) {
                    if ("" === t) return t;
                    let e = 0;
                    const r = "-" === t[e], n = "+" === t[e];
                    (n || r) && (e += 1);
                    let i = !1;
                    for(; e < t.length && "0" === t[e]; ++e)i = !0;
                    return i ? `${r ? "-" : ""}${t.length === e ? "0" : t.slice(e)}` : n ? t.slice(1) : t;
                }
                let G;
                try {
                    G = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([
                        0,
                        97,
                        115,
                        109,
                        1,
                        0,
                        0,
                        0,
                        1,
                        13,
                        2,
                        96,
                        0,
                        1,
                        127,
                        96,
                        4,
                        127,
                        127,
                        127,
                        127,
                        1,
                        127,
                        3,
                        7,
                        6,
                        0,
                        1,
                        1,
                        1,
                        1,
                        1,
                        6,
                        6,
                        1,
                        127,
                        1,
                        65,
                        0,
                        11,
                        7,
                        50,
                        6,
                        3,
                        109,
                        117,
                        108,
                        0,
                        1,
                        5,
                        100,
                        105,
                        118,
                        95,
                        115,
                        0,
                        2,
                        5,
                        100,
                        105,
                        118,
                        95,
                        117,
                        0,
                        3,
                        5,
                        114,
                        101,
                        109,
                        95,
                        115,
                        0,
                        4,
                        5,
                        114,
                        101,
                        109,
                        95,
                        117,
                        0,
                        5,
                        8,
                        103,
                        101,
                        116,
                        95,
                        104,
                        105,
                        103,
                        104,
                        0,
                        0,
                        10,
                        191,
                        1,
                        6,
                        4,
                        0,
                        35,
                        0,
                        11,
                        36,
                        1,
                        1,
                        126,
                        32,
                        0,
                        173,
                        32,
                        1,
                        173,
                        66,
                        32,
                        134,
                        132,
                        32,
                        2,
                        173,
                        32,
                        3,
                        173,
                        66,
                        32,
                        134,
                        132,
                        126,
                        34,
                        4,
                        66,
                        32,
                        135,
                        167,
                        36,
                        0,
                        32,
                        4,
                        167,
                        11,
                        36,
                        1,
                        1,
                        126,
                        32,
                        0,
                        173,
                        32,
                        1,
                        173,
                        66,
                        32,
                        134,
                        132,
                        32,
                        2,
                        173,
                        32,
                        3,
                        173,
                        66,
                        32,
                        134,
                        132,
                        127,
                        34,
                        4,
                        66,
                        32,
                        135,
                        167,
                        36,
                        0,
                        32,
                        4,
                        167,
                        11,
                        36,
                        1,
                        1,
                        126,
                        32,
                        0,
                        173,
                        32,
                        1,
                        173,
                        66,
                        32,
                        134,
                        132,
                        32,
                        2,
                        173,
                        32,
                        3,
                        173,
                        66,
                        32,
                        134,
                        132,
                        128,
                        34,
                        4,
                        66,
                        32,
                        135,
                        167,
                        36,
                        0,
                        32,
                        4,
                        167,
                        11,
                        36,
                        1,
                        1,
                        126,
                        32,
                        0,
                        173,
                        32,
                        1,
                        173,
                        66,
                        32,
                        134,
                        132,
                        32,
                        2,
                        173,
                        32,
                        3,
                        173,
                        66,
                        32,
                        134,
                        132,
                        129,
                        34,
                        4,
                        66,
                        32,
                        135,
                        167,
                        36,
                        0,
                        32,
                        4,
                        167,
                        11,
                        36,
                        1,
                        1,
                        126,
                        32,
                        0,
                        173,
                        32,
                        1,
                        173,
                        66,
                        32,
                        134,
                        132,
                        32,
                        2,
                        173,
                        32,
                        3,
                        173,
                        66,
                        32,
                        134,
                        132,
                        130,
                        34,
                        4,
                        66,
                        32,
                        135,
                        167,
                        36,
                        0,
                        32,
                        4,
                        167,
                        11
                    ])), {}).exports;
                } catch  {}
                const Y = 4294967296, Q = 0x10000000000000000, X = Q / 2, Z = {}, tt = {}, et = /^(\+?0|(\+|-)?[1-9][0-9]*)$/;
                class rt extends R {
                    get _bsontype() {
                        return "Long";
                    }
                    get __isLong__() {
                        return !0;
                    }
                    constructor(t = 0, e, r){
                        super();
                        const n = "boolean" == typeof e ? e : Boolean(r), i = "number" == typeof e ? e : 0, o = "string" == typeof t ? rt.fromString(t, n) : "bigint" == typeof t ? rt.fromBigInt(t, n) : {
                            low: 0 | t,
                            high: 0 | i,
                            unsigned: n
                        };
                        this.low = o.low, this.high = o.high, this.unsigned = o.unsigned;
                    }
                    static fromBits(t, e, r) {
                        return new rt(t, e, r);
                    }
                    static fromInt(t, e) {
                        let r, n, i;
                        return e ? (i = 0 <= (t >>>= 0) && t < 256) && (n = tt[t], n) ? n : (r = rt.fromBits(t, (0 | t) < 0 ? -1 : 0, !0), i && (tt[t] = r), r) : (i = -128 <= (t |= 0) && t < 128) && (n = Z[t], n) ? n : (r = rt.fromBits(t, t < 0 ? -1 : 0, !1), i && (Z[t] = r), r);
                    }
                    static fromNumber(t, e) {
                        if (isNaN(t)) return e ? rt.UZERO : rt.ZERO;
                        if (e) {
                            if (t < 0) return rt.UZERO;
                            if (t >= Q) return rt.MAX_UNSIGNED_VALUE;
                        } else {
                            if (t <= -9223372036854776000) return rt.MIN_VALUE;
                            if (t + 1 >= X) return rt.MAX_VALUE;
                        }
                        return t < 0 ? rt.fromNumber(-t, e).neg() : rt.fromBits(t % Y | 0, t / Y | 0, e);
                    }
                    static fromBigInt(t, e) {
                        const r = BigInt(4294967295), n = BigInt(32);
                        return new rt(Number(t & r), Number(t >> n & r), e);
                    }
                    static _fromString(t, e, r) {
                        if (0 === t.length) throw new g("empty string");
                        if (r < 2 || 36 < r) throw new g("radix");
                        let n;
                        if ((n = t.indexOf("-")) > 0) throw new g("interior hyphen");
                        if (0 === n) return rt._fromString(t.substring(1), e, r).neg();
                        const i = rt.fromNumber(Math.pow(r, 8));
                        let o = rt.ZERO;
                        for(let e = 0; e < t.length; e += 8){
                            const n = Math.min(8, t.length - e), a = parseInt(t.substring(e, e + n), r);
                            if (n < 8) {
                                const t = rt.fromNumber(Math.pow(r, n));
                                o = o.mul(t).add(rt.fromNumber(a));
                            } else o = o.mul(i), o = o.add(rt.fromNumber(a));
                        }
                        return o.unsigned = e, o;
                    }
                    static fromStringStrict(t, e, r) {
                        let n = !1;
                        if ("number" == typeof e ? (r = e, e = !1) : n = !!e, r ??= 10, t.trim() !== t) throw new g(`Input: '${t}' contains leading and/or trailing whitespace`);
                        if (!function(t, e) {
                            const r = "0123456789abcdefghijklmnopqrstuvwxyz".slice(0, e = e ?? 10);
                            return !new RegExp(`[^-+${r}]`, "i").test(t) && t;
                        }(t, r)) throw new g(`Input: '${t}' contains invalid characters for radix: ${r}`);
                        const i = J(t), o = rt._fromString(i, n, r);
                        if (o.toString(r).toLowerCase() !== i.toLowerCase()) throw new g(`Input: ${t} is not representable as ${o.unsigned ? "an unsigned" : "a signed"} 64-bit Long ${null != r ? `with radix: ${r}` : ""}`);
                        return o;
                    }
                    static fromString(t, e, r) {
                        let n = !1;
                        return "number" == typeof e ? (r = e, e = !1) : n = !!e, r ??= 10, "NaN" === t && r < 24 || ("Infinity" === t || "+Infinity" === t || "-Infinity" === t) && r < 35 ? rt.ZERO : rt._fromString(t, n, r);
                    }
                    static fromBytes(t, e, r) {
                        return r ? rt.fromBytesLE(t, e) : rt.fromBytesBE(t, e);
                    }
                    static fromBytesLE(t, e) {
                        return new rt(t[0] | t[1] << 8 | t[2] << 16 | t[3] << 24, t[4] | t[5] << 8 | t[6] << 16 | t[7] << 24, e);
                    }
                    static fromBytesBE(t, e) {
                        return new rt(t[4] << 24 | t[5] << 16 | t[6] << 8 | t[7], t[0] << 24 | t[1] << 16 | t[2] << 8 | t[3], e);
                    }
                    static isLong(t) {
                        return null != t && "object" == typeof t && "__isLong__" in t && !0 === t.__isLong__;
                    }
                    static fromValue(t, e) {
                        return "number" == typeof t ? rt.fromNumber(t, e) : "string" == typeof t ? rt.fromString(t, e) : rt.fromBits(t.low, t.high, "boolean" == typeof e ? e : t.unsigned);
                    }
                    add(t) {
                        rt.isLong(t) || (t = rt.fromValue(t));
                        const e = this.high >>> 16, r = 65535 & this.high, n = this.low >>> 16, i = 65535 & this.low, o = t.high >>> 16, a = 65535 & t.high, s = t.low >>> 16;
                        let u = 0, c = 0, f = 0, l = 0;
                        return l += i + (65535 & t.low), f += l >>> 16, l &= 65535, f += n + s, c += f >>> 16, f &= 65535, c += r + a, u += c >>> 16, c &= 65535, u += e + o, u &= 65535, rt.fromBits(f << 16 | l, u << 16 | c, this.unsigned);
                    }
                    and(t) {
                        return rt.isLong(t) || (t = rt.fromValue(t)), rt.fromBits(this.low & t.low, this.high & t.high, this.unsigned);
                    }
                    compare(t) {
                        if (rt.isLong(t) || (t = rt.fromValue(t)), this.eq(t)) return 0;
                        const e = this.isNegative(), r = t.isNegative();
                        return e && !r ? -1 : !e && r ? 1 : this.unsigned ? t.high >>> 0 > this.high >>> 0 || t.high === this.high && t.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(t).isNegative() ? -1 : 1;
                    }
                    comp(t) {
                        return this.compare(t);
                    }
                    divide(t) {
                        if (rt.isLong(t) || (t = rt.fromValue(t)), t.isZero()) throw new g("division by zero");
                        if (G) {
                            if (!this.unsigned && -2147483648 === this.high && -1 === t.low && -1 === t.high) return this;
                            const e = (this.unsigned ? G.div_u : G.div_s)(this.low, this.high, t.low, t.high);
                            return rt.fromBits(e, G.get_high(), this.unsigned);
                        }
                        if (this.isZero()) return this.unsigned ? rt.UZERO : rt.ZERO;
                        let e, r, n;
                        if (this.unsigned) {
                            if (t.unsigned || (t = t.toUnsigned()), t.gt(this)) return rt.UZERO;
                            if (t.gt(this.shru(1))) return rt.UONE;
                            n = rt.UZERO;
                        } else {
                            if (this.eq(rt.MIN_VALUE)) return t.eq(rt.ONE) || t.eq(rt.NEG_ONE) ? rt.MIN_VALUE : t.eq(rt.MIN_VALUE) ? rt.ONE : (e = this.shr(1).div(t).shl(1), e.eq(rt.ZERO) ? t.isNegative() ? rt.ONE : rt.NEG_ONE : (r = this.sub(t.mul(e)), n = e.add(r.div(t)), n));
                            if (t.eq(rt.MIN_VALUE)) return this.unsigned ? rt.UZERO : rt.ZERO;
                            if (this.isNegative()) return t.isNegative() ? this.neg().div(t.neg()) : this.neg().div(t).neg();
                            if (t.isNegative()) return this.div(t.neg()).neg();
                            n = rt.ZERO;
                        }
                        for(r = this; r.gte(t);){
                            e = Math.max(1, Math.floor(r.toNumber() / t.toNumber()));
                            const i = Math.ceil(Math.log(e) / Math.LN2), o = i <= 48 ? 1 : Math.pow(2, i - 48);
                            let a = rt.fromNumber(e), s = a.mul(t);
                            for(; s.isNegative() || s.gt(r);)e -= o, a = rt.fromNumber(e, this.unsigned), s = a.mul(t);
                            a.isZero() && (a = rt.ONE), n = n.add(a), r = r.sub(s);
                        }
                        return n;
                    }
                    div(t) {
                        return this.divide(t);
                    }
                    equals(t) {
                        return rt.isLong(t) || (t = rt.fromValue(t)), (this.unsigned === t.unsigned || this.high >>> 31 != 1 || t.high >>> 31 != 1) && this.high === t.high && this.low === t.low;
                    }
                    eq(t) {
                        return this.equals(t);
                    }
                    getHighBits() {
                        return this.high;
                    }
                    getHighBitsUnsigned() {
                        return this.high >>> 0;
                    }
                    getLowBits() {
                        return this.low;
                    }
                    getLowBitsUnsigned() {
                        return this.low >>> 0;
                    }
                    getNumBitsAbs() {
                        if (this.isNegative()) return this.eq(rt.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
                        const t = 0 !== this.high ? this.high : this.low;
                        let e;
                        for(e = 31; e > 0 && !(t & 1 << e); e--);
                        return 0 !== this.high ? e + 33 : e + 1;
                    }
                    greaterThan(t) {
                        return this.comp(t) > 0;
                    }
                    gt(t) {
                        return this.greaterThan(t);
                    }
                    greaterThanOrEqual(t) {
                        return this.comp(t) >= 0;
                    }
                    gte(t) {
                        return this.greaterThanOrEqual(t);
                    }
                    ge(t) {
                        return this.greaterThanOrEqual(t);
                    }
                    isEven() {
                        return !(1 & this.low);
                    }
                    isNegative() {
                        return !this.unsigned && this.high < 0;
                    }
                    isOdd() {
                        return !(1 & ~this.low);
                    }
                    isPositive() {
                        return this.unsigned || this.high >= 0;
                    }
                    isZero() {
                        return 0 === this.high && 0 === this.low;
                    }
                    lessThan(t) {
                        return this.comp(t) < 0;
                    }
                    lt(t) {
                        return this.lessThan(t);
                    }
                    lessThanOrEqual(t) {
                        return this.comp(t) <= 0;
                    }
                    lte(t) {
                        return this.lessThanOrEqual(t);
                    }
                    modulo(t) {
                        if (rt.isLong(t) || (t = rt.fromValue(t)), G) {
                            const e = (this.unsigned ? G.rem_u : G.rem_s)(this.low, this.high, t.low, t.high);
                            return rt.fromBits(e, G.get_high(), this.unsigned);
                        }
                        return this.sub(this.div(t).mul(t));
                    }
                    mod(t) {
                        return this.modulo(t);
                    }
                    rem(t) {
                        return this.modulo(t);
                    }
                    multiply(t) {
                        if (this.isZero()) return rt.ZERO;
                        if (rt.isLong(t) || (t = rt.fromValue(t)), G) {
                            const e = G.mul(this.low, this.high, t.low, t.high);
                            return rt.fromBits(e, G.get_high(), this.unsigned);
                        }
                        if (t.isZero()) return rt.ZERO;
                        if (this.eq(rt.MIN_VALUE)) return t.isOdd() ? rt.MIN_VALUE : rt.ZERO;
                        if (t.eq(rt.MIN_VALUE)) return this.isOdd() ? rt.MIN_VALUE : rt.ZERO;
                        if (this.isNegative()) return t.isNegative() ? this.neg().mul(t.neg()) : this.neg().mul(t).neg();
                        if (t.isNegative()) return this.mul(t.neg()).neg();
                        if (this.lt(rt.TWO_PWR_24) && t.lt(rt.TWO_PWR_24)) return rt.fromNumber(this.toNumber() * t.toNumber(), this.unsigned);
                        const e = this.high >>> 16, r = 65535 & this.high, n = this.low >>> 16, i = 65535 & this.low, o = t.high >>> 16, a = 65535 & t.high, s = t.low >>> 16, u = 65535 & t.low;
                        let c = 0, f = 0, l = 0, h = 0;
                        return h += i * u, l += h >>> 16, h &= 65535, l += n * u, f += l >>> 16, l &= 65535, l += i * s, f += l >>> 16, l &= 65535, f += r * u, c += f >>> 16, f &= 65535, f += n * s, c += f >>> 16, f &= 65535, f += i * a, c += f >>> 16, f &= 65535, c += e * u + r * s + n * a + i * o, c &= 65535, rt.fromBits(l << 16 | h, c << 16 | f, this.unsigned);
                    }
                    mul(t) {
                        return this.multiply(t);
                    }
                    negate() {
                        return !this.unsigned && this.eq(rt.MIN_VALUE) ? rt.MIN_VALUE : this.not().add(rt.ONE);
                    }
                    neg() {
                        return this.negate();
                    }
                    not() {
                        return rt.fromBits(~this.low, ~this.high, this.unsigned);
                    }
                    notEquals(t) {
                        return !this.equals(t);
                    }
                    neq(t) {
                        return this.notEquals(t);
                    }
                    ne(t) {
                        return this.notEquals(t);
                    }
                    or(t) {
                        return rt.isLong(t) || (t = rt.fromValue(t)), rt.fromBits(this.low | t.low, this.high | t.high, this.unsigned);
                    }
                    shiftLeft(t) {
                        return rt.isLong(t) && (t = t.toInt()), 0 == (t &= 63) ? this : t < 32 ? rt.fromBits(this.low << t, this.high << t | this.low >>> 32 - t, this.unsigned) : rt.fromBits(0, this.low << t - 32, this.unsigned);
                    }
                    shl(t) {
                        return this.shiftLeft(t);
                    }
                    shiftRight(t) {
                        return rt.isLong(t) && (t = t.toInt()), 0 == (t &= 63) ? this : t < 32 ? rt.fromBits(this.low >>> t | this.high << 32 - t, this.high >> t, this.unsigned) : rt.fromBits(this.high >> t - 32, this.high >= 0 ? 0 : -1, this.unsigned);
                    }
                    shr(t) {
                        return this.shiftRight(t);
                    }
                    shiftRightUnsigned(t) {
                        if (rt.isLong(t) && (t = t.toInt()), 0 == (t &= 63)) return this;
                        {
                            const e = this.high;
                            if (t < 32) {
                                const r = this.low;
                                return rt.fromBits(r >>> t | e << 32 - t, e >>> t, this.unsigned);
                            }
                            return 32 === t ? rt.fromBits(e, 0, this.unsigned) : rt.fromBits(e >>> t - 32, 0, this.unsigned);
                        }
                    }
                    shr_u(t) {
                        return this.shiftRightUnsigned(t);
                    }
                    shru(t) {
                        return this.shiftRightUnsigned(t);
                    }
                    subtract(t) {
                        return rt.isLong(t) || (t = rt.fromValue(t)), this.add(t.neg());
                    }
                    sub(t) {
                        return this.subtract(t);
                    }
                    toInt() {
                        return this.unsigned ? this.low >>> 0 : this.low;
                    }
                    toNumber() {
                        return this.unsigned ? (this.high >>> 0) * Y + (this.low >>> 0) : this.high * Y + (this.low >>> 0);
                    }
                    toBigInt() {
                        return BigInt(this.toString());
                    }
                    toBytes(t) {
                        return t ? this.toBytesLE() : this.toBytesBE();
                    }
                    toBytesLE() {
                        const t = this.high, e = this.low;
                        return [
                            255 & e,
                            e >>> 8 & 255,
                            e >>> 16 & 255,
                            e >>> 24,
                            255 & t,
                            t >>> 8 & 255,
                            t >>> 16 & 255,
                            t >>> 24
                        ];
                    }
                    toBytesBE() {
                        const t = this.high, e = this.low;
                        return [
                            t >>> 24,
                            t >>> 16 & 255,
                            t >>> 8 & 255,
                            255 & t,
                            e >>> 24,
                            e >>> 16 & 255,
                            e >>> 8 & 255,
                            255 & e
                        ];
                    }
                    toSigned() {
                        return this.unsigned ? rt.fromBits(this.low, this.high, !1) : this;
                    }
                    toString(t) {
                        if ((t = t || 10) < 2 || 36 < t) throw new g("radix");
                        if (this.isZero()) return "0";
                        if (this.isNegative()) {
                            if (this.eq(rt.MIN_VALUE)) {
                                const e = rt.fromNumber(t), r = this.div(e), n = r.mul(e).sub(this);
                                return r.toString(t) + n.toInt().toString(t);
                            }
                            return "-" + this.neg().toString(t);
                        }
                        const e = rt.fromNumber(Math.pow(t, 6), this.unsigned);
                        let r = this, n = "";
                        for(;;){
                            const i = r.div(e);
                            let o = (r.sub(i.mul(e)).toInt() >>> 0).toString(t);
                            if (r = i, r.isZero()) return o + n;
                            for(; o.length < 6;)o = "0" + o;
                            n = "" + o + n;
                        }
                    }
                    toUnsigned() {
                        return this.unsigned ? this : rt.fromBits(this.low, this.high, !0);
                    }
                    xor(t) {
                        return rt.isLong(t) || (t = rt.fromValue(t)), rt.fromBits(this.low ^ t.low, this.high ^ t.high, this.unsigned);
                    }
                    eqz() {
                        return this.isZero();
                    }
                    le(t) {
                        return this.lessThanOrEqual(t);
                    }
                    toExtendedJSON(t) {
                        return t && t.relaxed ? this.toNumber() : {
                            $numberLong: this.toString()
                        };
                    }
                    static fromExtendedJSON(t, e) {
                        const { useBigInt64: r = !1, relaxed: n = !0 } = {
                            ...e
                        };
                        if (t.$numberLong.length > 20) throw new g("$numberLong string is too long");
                        if (!et.test(t.$numberLong)) throw new g(`$numberLong string "${t.$numberLong}" is in an invalid format`);
                        if (r) {
                            const e = BigInt(t.$numberLong);
                            return BigInt.asIntN(64, e);
                        }
                        const i = rt.fromString(t.$numberLong);
                        return n ? i.toNumber() : i;
                    }
                    inspect(t, e, r) {
                        return r ??= f, `new Long(${r(this.toString(), e)}${this.unsigned ? `, ${r(this.unsigned, e)}` : ""})`;
                    }
                }
                rt.TWO_PWR_24 = rt.fromInt(16777216), rt.MAX_UNSIGNED_VALUE = rt.fromBits(-1, -1, !0), rt.ZERO = rt.fromInt(0), rt.UZERO = rt.fromInt(0, !0), rt.ONE = rt.fromInt(1), rt.UONE = rt.fromInt(1, !0), rt.NEG_ONE = rt.fromInt(-1), rt.MAX_VALUE = rt.fromBits(-1, 2147483647, !1), rt.MIN_VALUE = rt.fromBits(0, -2147483648, !1);
                const nt = /^(\+|-)?(\d+|(\d*\.\d*))?(E|e)?([-+])?(\d+)?$/, it = /^(\+|-)?(Infinity|inf)$/i, ot = /^(\+|-)?NaN$/i, at = 6111, st = -6176, ut = I.fromNumberArray([
                    124,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ].reverse()), ct = I.fromNumberArray([
                    248,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ].reverse()), ft = I.fromNumberArray([
                    120,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ].reverse()), lt = /^([-+])?(\d+)?$/;
                function ht(t) {
                    return !isNaN(parseInt(t, 10));
                }
                function pt(t) {
                    const e = rt.fromNumber(1e9);
                    let r = rt.fromNumber(0);
                    if (!(t.parts[0] || t.parts[1] || t.parts[2] || t.parts[3])) return {
                        quotient: t,
                        rem: r
                    };
                    for(let n = 0; n <= 3; n++)r = r.shiftLeft(32), r = r.add(new rt(t.parts[n], 0)), t.parts[n] = r.div(e).low, r = r.modulo(e);
                    return {
                        quotient: t,
                        rem: r
                    };
                }
                function dt(t, e) {
                    throw new g(`"${t}" is not a valid Decimal128 string - ${e}`);
                }
                class yt extends R {
                    get _bsontype() {
                        return "Decimal128";
                    }
                    constructor(t){
                        if (super(), "string" == typeof t) this.bytes = yt.fromString(t).bytes;
                        else {
                            if (!(t instanceof Uint8Array || o(t))) throw new g("Decimal128 must take a Buffer or string");
                            if (16 !== t.byteLength) throw new g("Decimal128 must take a Buffer of 16 bytes");
                            this.bytes = t;
                        }
                    }
                    static fromString(t) {
                        return yt._fromString(t, {
                            allowRounding: !1
                        });
                    }
                    static fromStringWithRounding(t) {
                        return yt._fromString(t, {
                            allowRounding: !0
                        });
                    }
                    static _fromString(t, e) {
                        let r = !1, n = !1, i = !1, o = !1, a = 0, s = 0, u = 0, c = 0, f = 0;
                        const l = [
                            0
                        ];
                        let h = 0, p = 0, d = 0, y = 0, b = new rt(0, 0), m = new rt(0, 0), v = 0, _ = 0;
                        if (t.length >= 7e3) throw new g(t + " not a valid Decimal128 string");
                        const w = t.match(nt), S = t.match(it), O = t.match(ot);
                        if (!w && !S && !O || 0 === t.length) throw new g(t + " not a valid Decimal128 string");
                        if (w) {
                            const e = w[2], r = w[4], n = w[5], i = w[6];
                            r && void 0 === i && dt(t, "missing exponent power"), r && void 0 === e && dt(t, "missing exponent base"), void 0 === r && (n || i) && dt(t, "missing e before exponent");
                        }
                        if ("+" !== t[_] && "-" !== t[_] || (n = !0, r = "-" === t[_++]), !ht(t[_]) && "." !== t[_]) {
                            if ("i" === t[_] || "I" === t[_]) return new yt(r ? ct : ft);
                            if ("N" === t[_]) return new yt(ut);
                        }
                        for(; ht(t[_]) || "." === t[_];)"." !== t[_] ? (h < 34 && ("0" !== t[_] || o) && (o || (f = s), o = !0, l[p++] = parseInt(t[_], 10), h += 1), o && (u += 1), i && (c += 1), s += 1, _ += 1) : (i && dt(t, "contains multiple periods"), i = !0, _ += 1);
                        if (i && !s) throw new g(t + " not a valid Decimal128 string");
                        if ("e" === t[_] || "E" === t[_]) {
                            const e = t.substr(++_).match(lt);
                            if (!e || !e[2]) return new yt(ut);
                            y = parseInt(e[0], 10), _ += e[0].length;
                        }
                        if (t[_]) return new yt(ut);
                        if (h) {
                            if (d = h - 1, a = u, 1 !== a) for(; "0" === t[f + a - 1 + Number(n) + Number(i)];)a -= 1;
                        } else l[0] = 0, u = 1, h = 1, a = 0;
                        for(y <= c && c > y + 16384 ? y = st : y -= c; y > at;){
                            if (d += 1, d >= 34) {
                                if (0 === a) {
                                    y = at;
                                    break;
                                }
                                dt(t, "overflow");
                            }
                            y -= 1;
                        }
                        if (e.allowRounding) {
                            for(; y < st || h < u;){
                                if (0 === d && a < h) {
                                    y = st, a = 0;
                                    break;
                                }
                                if (h < u ? u -= 1 : d -= 1, y < at) y += 1;
                                else {
                                    if (l.join("").match(/^0+$/)) {
                                        y = at;
                                        break;
                                    }
                                    dt(t, "overflow");
                                }
                            }
                            if (d + 1 < a) {
                                let e = s;
                                i && (f += 1, e += 1), n && (f += 1, e += 1);
                                const o = parseInt(t[f + d + 1], 10);
                                let a = 0;
                                if (o >= 5 && (a = 1, 5 === o)) {
                                    a = l[d] % 2 == 1 ? 1 : 0;
                                    for(let r = f + d + 2; r < e; r++)if (parseInt(t[r], 10)) {
                                        a = 1;
                                        break;
                                    }
                                }
                                if (a) {
                                    let t = d;
                                    for(; t >= 0 && ++l[t] > 9; t--)if (l[t] = 0, 0 === t) {
                                        if (!(y < at)) return new yt(r ? ct : ft);
                                        y += 1, l[t] = 1;
                                    }
                                }
                            }
                        } else {
                            for(; y < st || h < u;){
                                if (0 === d) {
                                    if (0 === a) {
                                        y = st;
                                        break;
                                    }
                                    dt(t, "exponent underflow");
                                }
                                h < u ? ("0" !== t[u - 1 + Number(n) + Number(i)] && 0 !== a && dt(t, "inexact rounding"), u -= 1) : (0 !== l[d] && dt(t, "inexact rounding"), d -= 1), y < at ? y += 1 : dt(t, "overflow");
                            }
                            d + 1 < a && (i && (f += 1), n && (f += 1), 0 !== parseInt(t[f + d + 1], 10) && dt(t, "inexact rounding"));
                        }
                        if (b = rt.fromNumber(0), m = rt.fromNumber(0), 0 === a) b = rt.fromNumber(0), m = rt.fromNumber(0);
                        else if (d < 17) {
                            let t = 0;
                            for(m = rt.fromNumber(l[t++]), b = new rt(0, 0); t <= d; t++)m = m.multiply(rt.fromNumber(10)), m = m.add(rt.fromNumber(l[t]));
                        } else {
                            let t = 0;
                            for(b = rt.fromNumber(l[t++]); t <= d - 17; t++)b = b.multiply(rt.fromNumber(10)), b = b.add(rt.fromNumber(l[t]));
                            for(m = rt.fromNumber(l[t++]); t <= d; t++)m = m.multiply(rt.fromNumber(10)), m = m.add(rt.fromNumber(l[t]));
                        }
                        const j = function(t, e) {
                            if (!t && !e) return {
                                high: rt.fromNumber(0),
                                low: rt.fromNumber(0)
                            };
                            const r = t.shiftRightUnsigned(32), n = new rt(t.getLowBits(), 0), i = e.shiftRightUnsigned(32), o = new rt(e.getLowBits(), 0);
                            let a = r.multiply(i), s = r.multiply(o);
                            const u = n.multiply(i);
                            let c = n.multiply(o);
                            return a = a.add(s.shiftRightUnsigned(32)), s = new rt(s.getLowBits(), 0).add(u).add(c.shiftRightUnsigned(32)), a = a.add(s.shiftRightUnsigned(32)), c = s.shiftLeft(32).add(new rt(c.getLowBits(), 0)), {
                                high: a,
                                low: c
                            };
                        }(b, rt.fromString("100000000000000000"));
                        j.low = j.low.add(m), function(t, e) {
                            const r = t.high >>> 0, n = e.high >>> 0;
                            return r < n || r === n && t.low >>> 0 < e.low >>> 0;
                        }(j.low, m) && (j.high = j.high.add(rt.fromNumber(1))), v = y + 6176;
                        const $ = {
                            low: rt.fromNumber(0),
                            high: rt.fromNumber(0)
                        };
                        j.high.shiftRightUnsigned(49).and(rt.fromNumber(1)).equals(rt.fromNumber(1)) ? ($.high = $.high.or(rt.fromNumber(3).shiftLeft(61)), $.high = $.high.or(rt.fromNumber(v).and(rt.fromNumber(16383).shiftLeft(47))), $.high = $.high.or(j.high.and(rt.fromNumber(0x7fffffffffff)))) : ($.high = $.high.or(rt.fromNumber(16383 & v).shiftLeft(49)), $.high = $.high.or(j.high.and(rt.fromNumber(562949953421311)))), $.low = j.low, r && ($.high = $.high.or(rt.fromString("9223372036854775808")));
                        const E = I.allocateUnsafe(16);
                        return _ = 0, E[_++] = 255 & $.low.low, E[_++] = $.low.low >> 8 & 255, E[_++] = $.low.low >> 16 & 255, E[_++] = $.low.low >> 24 & 255, E[_++] = 255 & $.low.high, E[_++] = $.low.high >> 8 & 255, E[_++] = $.low.high >> 16 & 255, E[_++] = $.low.high >> 24 & 255, E[_++] = 255 & $.high.low, E[_++] = $.high.low >> 8 & 255, E[_++] = $.high.low >> 16 & 255, E[_++] = $.high.low >> 24 & 255, E[_++] = 255 & $.high.high, E[_++] = $.high.high >> 8 & 255, E[_++] = $.high.high >> 16 & 255, E[_++] = $.high.high >> 24 & 255, new yt(E);
                    }
                    toString() {
                        let t, e = 0;
                        const r = new Array(36);
                        for(let t = 0; t < r.length; t++)r[t] = 0;
                        let n, i, o, a = 0, s = !1, u = {
                            parts: [
                                0,
                                0,
                                0,
                                0
                            ]
                        };
                        const c = [];
                        a = 0;
                        const f = this.bytes, l = f[a++] | f[a++] << 8 | f[a++] << 16 | f[a++] << 24, h = f[a++] | f[a++] << 8 | f[a++] << 16 | f[a++] << 24, p = f[a++] | f[a++] << 8 | f[a++] << 16 | f[a++] << 24, d = f[a++] | f[a++] << 8 | f[a++] << 16 | f[a++] << 24;
                        a = 0, (new rt(l, h), new rt(p, d)).lessThan(rt.ZERO) && c.push("-");
                        const y = d >> 26 & 31;
                        if (y >> 3 == 3) {
                            if (30 === y) return c.join("") + "Infinity";
                            if (31 === y) return "NaN";
                            t = d >> 15 & 16383, n = 8 + (d >> 14 & 1);
                        } else n = d >> 14 & 7, t = d >> 17 & 16383;
                        const b = t - 6176;
                        if (u.parts[0] = (16383 & d) + ((15 & n) << 14), u.parts[1] = p, u.parts[2] = h, u.parts[3] = l, 0 === u.parts[0] && 0 === u.parts[1] && 0 === u.parts[2] && 0 === u.parts[3]) s = !0;
                        else for(o = 3; o >= 0; o--){
                            let t = 0;
                            const e = pt(u);
                            if (u = e.quotient, t = e.rem.low, t) for(i = 8; i >= 0; i--)r[9 * o + i] = t % 10, t = Math.floor(t / 10);
                        }
                        if (s) e = 1, r[a] = 0;
                        else for(e = 36; !r[a];)e -= 1, a += 1;
                        const m = e - 1 + b;
                        if (m >= 34 || m <= -7 || b > 0) {
                            if (e > 34) return c.push("0"), b > 0 ? c.push(`E+${b}`) : b < 0 && c.push(`E${b}`), c.join("");
                            c.push(`${r[a++]}`), e -= 1, e && c.push(".");
                            for(let t = 0; t < e; t++)c.push(`${r[a++]}`);
                            c.push("E"), m > 0 ? c.push(`+${m}`) : c.push(`${m}`);
                        } else if (b >= 0) for(let t = 0; t < e; t++)c.push(`${r[a++]}`);
                        else {
                            let t = e + b;
                            if (t > 0) for(let e = 0; e < t; e++)c.push(`${r[a++]}`);
                            else c.push("0");
                            for(c.push("."); t++ < 0;)c.push("0");
                            for(let n = 0; n < e - Math.max(t - 1, 0); n++)c.push(`${r[a++]}`);
                        }
                        return c.join("");
                    }
                    toJSON() {
                        return {
                            $numberDecimal: this.toString()
                        };
                    }
                    toExtendedJSON() {
                        return {
                            $numberDecimal: this.toString()
                        };
                    }
                    static fromExtendedJSON(t) {
                        return yt.fromString(t.$numberDecimal);
                    }
                    inspect(t, e, r) {
                        return r ??= f, `new Decimal128(${r(this.toString(), e)})`;
                    }
                }
                class bt extends R {
                    get _bsontype() {
                        return "Double";
                    }
                    constructor(t){
                        super(), t instanceof Number && (t = t.valueOf()), this.value = +t;
                    }
                    static fromString(t) {
                        const e = Number(t);
                        if ("NaN" === t) return new bt(NaN);
                        if ("Infinity" === t) return new bt(1 / 0);
                        if ("-Infinity" === t) return new bt(-1 / 0);
                        if (!Number.isFinite(e)) throw new g(`Input: ${t} is not representable as a Double`);
                        if (t.trim() !== t) throw new g(`Input: '${t}' contains whitespace`);
                        if ("" === t) throw new g("Input is an empty string");
                        if (/[^-0-9.+eE]/.test(t)) throw new g(`Input: '${t}' is not in decimal or exponential notation`);
                        return new bt(e);
                    }
                    valueOf() {
                        return this.value;
                    }
                    toJSON() {
                        return this.value;
                    }
                    toString(t) {
                        return this.value.toString(t);
                    }
                    toExtendedJSON(t) {
                        return t && (t.legacy || t.relaxed && isFinite(this.value)) ? this.value : Object.is(Math.sign(this.value), -0) ? {
                            $numberDouble: "-0.0"
                        } : {
                            $numberDouble: Number.isInteger(this.value) ? this.value.toFixed(1) : this.value.toString()
                        };
                    }
                    static fromExtendedJSON(t, e) {
                        const r = parseFloat(t.$numberDouble);
                        return e && e.relaxed ? r : new bt(r);
                    }
                    inspect(t, e, r) {
                        return r ??= f, `new Double(${r(this.value, e)})`;
                    }
                }
                class mt extends R {
                    get _bsontype() {
                        return "Int32";
                    }
                    constructor(t){
                        super(), t instanceof Number && (t = t.valueOf()), this.value = 0 | +t;
                    }
                    static fromString(t) {
                        const e = J(t), r = Number(t);
                        if (h < r) throw new g(`Input: '${t}' is larger than the maximum value for Int32`);
                        if (p > r) throw new g(`Input: '${t}' is smaller than the minimum value for Int32`);
                        if (!Number.isSafeInteger(r)) throw new g(`Input: '${t}' is not a safe integer`);
                        if (r.toString() !== e) throw new g(`Input: '${t}' is not a valid Int32 string`);
                        return new mt(r);
                    }
                    valueOf() {
                        return this.value;
                    }
                    toString(t) {
                        return this.value.toString(t);
                    }
                    toJSON() {
                        return this.value;
                    }
                    toExtendedJSON(t) {
                        return t && (t.relaxed || t.legacy) ? this.value : {
                            $numberInt: this.value.toString()
                        };
                    }
                    static fromExtendedJSON(t, e) {
                        return e && e.relaxed ? parseInt(t.$numberInt, 10) : new mt(t.$numberInt);
                    }
                    inspect(t, e, r) {
                        return r ??= f, `new Int32(${r(this.value, e)})`;
                    }
                }
                class vt extends R {
                    get _bsontype() {
                        return "MaxKey";
                    }
                    toExtendedJSON() {
                        return {
                            $maxKey: 1
                        };
                    }
                    static fromExtendedJSON() {
                        return new vt;
                    }
                    inspect() {
                        return "new MaxKey()";
                    }
                }
                class gt extends R {
                    get _bsontype() {
                        return "MinKey";
                    }
                    toExtendedJSON() {
                        return {
                            $minKey: 1
                        };
                    }
                    static fromExtendedJSON() {
                        return new gt;
                    }
                    inspect() {
                        return "new MinKey()";
                    }
                }
                let _t = null;
                const wt = new WeakMap;
                class St extends R {
                    get _bsontype() {
                        return "ObjectId";
                    }
                    constructor(t){
                        let e;
                        if (super(), "object" == typeof t && t && "id" in t) {
                            if ("string" != typeof t.id && !ArrayBuffer.isView(t.id)) throw new g("Argument passed in must have an id that is of type string or Buffer");
                            e = "toHexString" in t && "function" == typeof t.toHexString ? I.fromHex(t.toHexString()) : t.id;
                        } else e = t;
                        if (null == e || "number" == typeof e) this.buffer = St.generate("number" == typeof e ? e : void 0);
                        else if (ArrayBuffer.isView(e) && 12 === e.byteLength) this.buffer = I.toLocalBufferType(e);
                        else {
                            if ("string" != typeof e) throw new g("Argument passed in does not match the accepted types");
                            if (!St.validateHexString(e)) throw new g("input must be a 24 character hex string, 12 byte Uint8Array, or an integer");
                            this.buffer = I.fromHex(e), St.cacheHexString && wt.set(this, e);
                        }
                    }
                    get id() {
                        return this.buffer;
                    }
                    set id(t) {
                        this.buffer = t, St.cacheHexString && wt.set(this, I.toHex(t));
                    }
                    static validateHexString(t) {
                        if (24 !== t?.length) return !1;
                        for(let e = 0; e < 24; e++){
                            const r = t.charCodeAt(e);
                            if (!(r >= 48 && r <= 57 || r >= 97 && r <= 102 || r >= 65 && r <= 70)) return !1;
                        }
                        return !0;
                    }
                    toHexString() {
                        if (St.cacheHexString) {
                            const t = wt.get(this);
                            if (t) return t;
                        }
                        const t = I.toHex(this.id);
                        return St.cacheHexString && wt.set(this, t), t;
                    }
                    static getInc() {
                        return St.index = (St.index + 1) % 16777215;
                    }
                    static generate(t) {
                        "number" != typeof t && (t = Math.floor(Date.now() / 1e3));
                        const e = St.getInc(), r = I.allocateUnsafe(12);
                        return C.setInt32BE(r, 0, t), null === _t && (_t = I.randomBytes(5)), r[4] = _t[0], r[5] = _t[1], r[6] = _t[2], r[7] = _t[3], r[8] = _t[4], r[11] = 255 & e, r[10] = e >> 8 & 255, r[9] = e >> 16 & 255, r;
                    }
                    toString(t) {
                        return "base64" === t ? I.toBase64(this.id) : this.toHexString();
                    }
                    toJSON() {
                        return this.toHexString();
                    }
                    static is(t) {
                        return null != t && "object" == typeof t && "_bsontype" in t && "ObjectId" === t._bsontype;
                    }
                    equals(t) {
                        if (null == t) return !1;
                        if (St.is(t)) return this.buffer[11] === t.buffer[11] && I.equals(this.buffer, t.buffer);
                        if ("string" == typeof t) return t.toLowerCase() === this.toHexString();
                        if ("object" == typeof t && "function" == typeof t.toHexString) {
                            const e = t.toHexString(), r = this.toHexString();
                            return "string" == typeof e && e.toLowerCase() === r;
                        }
                        return !1;
                    }
                    getTimestamp() {
                        const t = new Date, e = C.getUint32BE(this.buffer, 0);
                        return t.setTime(1e3 * Math.floor(e)), t;
                    }
                    static createPk() {
                        return new St;
                    }
                    serializeInto(t, e) {
                        return t[e] = this.buffer[0], t[e + 1] = this.buffer[1], t[e + 2] = this.buffer[2], t[e + 3] = this.buffer[3], t[e + 4] = this.buffer[4], t[e + 5] = this.buffer[5], t[e + 6] = this.buffer[6], t[e + 7] = this.buffer[7], t[e + 8] = this.buffer[8], t[e + 9] = this.buffer[9], t[e + 10] = this.buffer[10], t[e + 11] = this.buffer[11], 12;
                    }
                    static createFromTime(t) {
                        const e = I.allocate(12);
                        for(let t = 11; t >= 4; t--)e[t] = 0;
                        return C.setInt32BE(e, 0, t), new St(e);
                    }
                    static createFromHexString(t) {
                        if (24 !== t?.length) throw new g("hex string must be 24 characters");
                        return new St(I.fromHex(t));
                    }
                    static createFromBase64(t) {
                        if (16 !== t?.length) throw new g("base64 string must be 16 characters");
                        return new St(I.fromBase64(t));
                    }
                    static isValid(t) {
                        if (null == t) return !1;
                        if ("string" == typeof t) return St.validateHexString(t);
                        try {
                            return new St(t), !0;
                        } catch  {
                            return !1;
                        }
                    }
                    toExtendedJSON() {
                        return this.toHexString ? {
                            $oid: this.toHexString()
                        } : {
                            $oid: this.toString("hex")
                        };
                    }
                    static fromExtendedJSON(t) {
                        return new St(t.$oid);
                    }
                    isCached() {
                        return St.cacheHexString && wt.has(this);
                    }
                    inspect(t, e, r) {
                        return r ??= f, `new ObjectId(${r(this.toHexString(), e)})`;
                    }
                }
                function Ot(t, e, r) {
                    let n = 5;
                    if (Array.isArray(t)) for(let i = 0; i < t.length; i++)n += jt(i.toString(), t[i], e, !0, r);
                    else {
                        "function" == typeof t?.toBSON && (t = t.toBSON());
                        for (const i of Object.keys(t))n += jt(i, t[i], e, !1, r);
                    }
                    return n;
                }
                function jt(t, e, r = !1, n = !1, i = !1) {
                    switch("function" == typeof e?.toBSON && (e = e.toBSON()), typeof e){
                        case "string":
                            return 1 + I.utf8ByteLength(t) + 1 + 4 + I.utf8ByteLength(e) + 1;
                        case "number":
                            return Math.floor(e) === e && e >= m && e <= b && e >= p && e <= h ? (null != t ? I.utf8ByteLength(t) + 1 : 0) + 5 : (null != t ? I.utf8ByteLength(t) + 1 : 0) + 9;
                        case "undefined":
                            return n || !i ? (null != t ? I.utf8ByteLength(t) + 1 : 0) + 1 : 0;
                        case "boolean":
                            return (null != t ? I.utf8ByteLength(t) + 1 : 0) + 2;
                        case "object":
                            if (null != e && "string" == typeof e._bsontype && 6 !== e[l]) throw new _;
                            if (null == e || "MinKey" === e._bsontype || "MaxKey" === e._bsontype) return (null != t ? I.utf8ByteLength(t) + 1 : 0) + 1;
                            if ("ObjectId" === e._bsontype) return (null != t ? I.utf8ByteLength(t) + 1 : 0) + 13;
                            if (e instanceof Date || c(e)) return (null != t ? I.utf8ByteLength(t) + 1 : 0) + 9;
                            if (ArrayBuffer.isView(e) || e instanceof ArrayBuffer || a(e)) return (null != t ? I.utf8ByteLength(t) + 1 : 0) + 6 + e.byteLength;
                            if ("Long" === e._bsontype || "Double" === e._bsontype || "Timestamp" === e._bsontype) return (null != t ? I.utf8ByteLength(t) + 1 : 0) + 9;
                            if ("Decimal128" === e._bsontype) return (null != t ? I.utf8ByteLength(t) + 1 : 0) + 17;
                            if ("Code" === e._bsontype) return null != e.scope && Object.keys(e.scope).length > 0 ? (null != t ? I.utf8ByteLength(t) + 1 : 0) + 1 + 4 + 4 + I.utf8ByteLength(e.code.toString()) + 1 + Ot(e.scope, r, i) : (null != t ? I.utf8ByteLength(t) + 1 : 0) + 1 + 4 + I.utf8ByteLength(e.code.toString()) + 1;
                            if ("Binary" === e._bsontype) {
                                const r = e;
                                return r.sub_type === U.SUBTYPE_BYTE_ARRAY ? (null != t ? I.utf8ByteLength(t) + 1 : 0) + (r.position + 1 + 4 + 1 + 4) : (null != t ? I.utf8ByteLength(t) + 1 : 0) + (r.position + 1 + 4 + 1);
                            }
                            if ("Symbol" === e._bsontype) return (null != t ? I.utf8ByteLength(t) + 1 : 0) + I.utf8ByteLength(e.value) + 4 + 1 + 1;
                            if ("DBRef" === e._bsontype) {
                                const n = Object.assign({
                                    $ref: e.collection,
                                    $id: e.oid
                                }, e.fields);
                                return null != e.db && (n.$db = e.db), (null != t ? I.utf8ByteLength(t) + 1 : 0) + 1 + Ot(n, r, i);
                            }
                            return e instanceof RegExp || s(e) ? (null != t ? I.utf8ByteLength(t) + 1 : 0) + 1 + I.utf8ByteLength(e.source) + 1 + (e.global ? 1 : 0) + (e.ignoreCase ? 1 : 0) + (e.multiline ? 1 : 0) + 1 : "BSONRegExp" === e._bsontype ? (null != t ? I.utf8ByteLength(t) + 1 : 0) + 1 + I.utf8ByteLength(e.pattern) + 1 + I.utf8ByteLength(e.options) + 1 : (null != t ? I.utf8ByteLength(t) + 1 : 0) + Ot(e, r, i) + 1;
                        case "function":
                            return r ? (null != t ? I.utf8ByteLength(t) + 1 : 0) + 1 + 4 + I.utf8ByteLength(e.toString()) + 1 : 0;
                        case "bigint":
                            return (null != t ? I.utf8ByteLength(t) + 1 : 0) + 9;
                        case "symbol":
                            return 0;
                        default:
                            throw new g("Unrecognized JS type: " + typeof e);
                    }
                }
                St.index = Math.floor(16777215 * Math.random());
                class $t extends R {
                    get _bsontype() {
                        return "BSONRegExp";
                    }
                    constructor(t, e){
                        if (super(), this.pattern = t, this.options = (e ?? "").split("").sort().join(""), -1 !== this.pattern.indexOf("\0")) throw new g(`BSON Regex patterns cannot contain null bytes, found: ${JSON.stringify(this.pattern)}`);
                        if (-1 !== this.options.indexOf("\0")) throw new g(`BSON Regex options cannot contain null bytes, found: ${JSON.stringify(this.options)}`);
                        for(let t = 0; t < this.options.length; t++)if ("i" !== this.options[t] && "m" !== this.options[t] && "x" !== this.options[t] && "l" !== this.options[t] && "s" !== this.options[t] && "u" !== this.options[t]) throw new g(`The regular expression option [${this.options[t]}] is not supported`);
                    }
                    static parseOptions(t) {
                        return t ? t.split("").sort().join("") : "";
                    }
                    toExtendedJSON(t) {
                        return (t = t || {}).legacy ? {
                            $regex: this.pattern,
                            $options: this.options
                        } : {
                            $regularExpression: {
                                pattern: this.pattern,
                                options: this.options
                            }
                        };
                    }
                    static fromExtendedJSON(t) {
                        if ("$regex" in t) {
                            if ("string" == typeof t.$regex) return new $t(t.$regex, $t.parseOptions(t.$options));
                            if ("BSONRegExp" === t.$regex._bsontype) return t;
                        }
                        if ("$regularExpression" in t) return new $t(t.$regularExpression.pattern, $t.parseOptions(t.$regularExpression.options));
                        throw new g(`Unexpected BSONRegExp EJSON object form: ${JSON.stringify(t)}`);
                    }
                    inspect(t, e, r) {
                        const n = function(t) {
                            if (null != t && "object" == typeof t && "stylize" in t && "function" == typeof t.stylize) return t.stylize;
                        }(e) ?? ((t)=>t);
                        return r ??= f, `new BSONRegExp(${n(r(this.pattern), "regexp")}, ${n(r(this.options), "regexp")})`;
                    }
                }
                class Et extends R {
                    get _bsontype() {
                        return "BSONSymbol";
                    }
                    constructor(t){
                        super(), this.value = t;
                    }
                    valueOf() {
                        return this.value;
                    }
                    toString() {
                        return this.value;
                    }
                    toJSON() {
                        return this.value;
                    }
                    toExtendedJSON() {
                        return {
                            $symbol: this.value
                        };
                    }
                    static fromExtendedJSON(t) {
                        return new Et(t.$symbol);
                    }
                    inspect(t, e, r) {
                        return r ??= f, `new BSONSymbol(${r(this.value, e)})`;
                    }
                }
                const At = rt;
                class Pt extends At {
                    get _bsontype() {
                        return "Timestamp";
                    }
                    get i() {
                        return this.low >>> 0;
                    }
                    get t() {
                        return this.high >>> 0;
                    }
                    constructor(t){
                        if (null == t) super(0, 0, !0);
                        else if ("bigint" == typeof t) super(t, !0);
                        else if (rt.isLong(t)) super(t.low, t.high, !0);
                        else {
                            if ("object" != typeof t || !("t" in t) || !("i" in t)) throw new g("A Timestamp can only be constructed with: bigint, Long, or { t: number; i: number }");
                            {
                                if ("number" != typeof t.t && ("object" != typeof t.t || "Int32" !== t.t._bsontype)) throw new g("Timestamp constructed from { t, i } must provide t as a number");
                                if ("number" != typeof t.i && ("object" != typeof t.i || "Int32" !== t.i._bsontype)) throw new g("Timestamp constructed from { t, i } must provide i as a number");
                                const e = Number(t.t), r = Number(t.i);
                                if (e < 0 || Number.isNaN(e)) throw new g("Timestamp constructed from { t, i } must provide a positive t");
                                if (r < 0 || Number.isNaN(r)) throw new g("Timestamp constructed from { t, i } must provide a positive i");
                                if (e > 4294967295) throw new g("Timestamp constructed from { t, i } must provide t equal or less than uint32 max");
                                if (r > 4294967295) throw new g("Timestamp constructed from { t, i } must provide i equal or less than uint32 max");
                                super(r, e, !0);
                            }
                        }
                    }
                    toJSON() {
                        return {
                            $timestamp: this.toString()
                        };
                    }
                    static fromInt(t) {
                        return new Pt(rt.fromInt(t, !0));
                    }
                    static fromNumber(t) {
                        return new Pt(rt.fromNumber(t, !0));
                    }
                    static fromBits(t, e) {
                        return new Pt({
                            i: t,
                            t: e
                        });
                    }
                    static fromString(t, e) {
                        return new Pt(rt.fromString(t, !0, e));
                    }
                    toExtendedJSON() {
                        return {
                            $timestamp: {
                                t: this.t,
                                i: this.i
                            }
                        };
                    }
                    static fromExtendedJSON(t) {
                        const e = rt.isLong(t.$timestamp.i) ? t.$timestamp.i.getLowBitsUnsigned() : t.$timestamp.i, r = rt.isLong(t.$timestamp.t) ? t.$timestamp.t.getLowBitsUnsigned() : t.$timestamp.t;
                        return new Pt({
                            t: r,
                            i: e
                        });
                    }
                    inspect(t, e, r) {
                        return r ??= f, `new Timestamp({ t: ${r(this.t, e)}, i: ${r(this.i, e)} })`;
                    }
                }
                Pt.MAX_VALUE = rt.MAX_UNSIGNED_VALUE;
                const xt = rt.fromNumber(b), kt = rt.fromNumber(m);
                function Mt(t, e, r) {
                    const n = (e = null == e ? {} : e) && e.index ? e.index : 0, i = C.getInt32LE(t, n);
                    if (i < 5) throw new g(`bson size must be >= 5, is ${i}`);
                    if (e.allowObjectSmallerThanBufferSize && t.length < i) throw new g(`buffer length ${t.length} must be >= bson size ${i}`);
                    if (!e.allowObjectSmallerThanBufferSize && t.length !== i) throw new g(`buffer length ${t.length} must === bson size ${i}`);
                    if (i + n > t.byteLength) throw new g(`(bson size ${i} + options.index ${n} must be <= buffer length ${t.byteLength})`);
                    if (0 !== t[n + i - 1]) throw new g("One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00");
                    return Bt(t, n, e, r);
                }
                const Tt = /^\$ref$|^\$id$|^\$db$/;
                function Bt(t, e, r, n = !1) {
                    const i = null == r.fieldsAsRaw ? null : r.fieldsAsRaw, o = null != r.raw && r.raw, a = "boolean" == typeof r.bsonRegExp && r.bsonRegExp, s = r.promoteBuffers ?? !1, u = r.promoteLongs ?? !0, c = r.promoteValues ?? !0, f = r.useBigInt64 ?? !1;
                    if (f && !c) throw new g("Must either request bigint or Long for int64 deserialization");
                    if (f && !u) throw new g("Must either request bigint or Long for int64 deserialization");
                    let l, h, p = !0;
                    const d = (null == r.validation ? {
                        utf8: !0
                    } : r.validation).utf8;
                    if ("boolean" == typeof d) l = d;
                    else {
                        p = !1;
                        const t = Object.keys(d).map(function(t) {
                            return d[t];
                        });
                        if (0 === t.length) throw new g("UTF-8 validation setting cannot be empty");
                        if ("boolean" != typeof t[0]) throw new g("Invalid UTF-8 validation option, must specify boolean values");
                        if (l = t[0], !t.every((t)=>t === l)) throw new g("Invalid UTF-8 validation option - keys must be all true or all false");
                    }
                    if (!p) {
                        h = new Set;
                        for (const t of Object.keys(d))h.add(t);
                    }
                    const y = e;
                    if (t.length < 5) throw new g("corrupt bson message < 5 bytes long");
                    const b = C.getInt32LE(t, e);
                    if (e += 4, b < 5 || b > t.length) throw new g("corrupt bson message");
                    const m = n ? [] : {};
                    let v = 0, _ = !n && null;
                    for(;;){
                        const d = t[e++];
                        if (0 === d) break;
                        let y = e;
                        for(; 0 !== t[y] && y < t.length;)y++;
                        if (y >= t.byteLength) throw new g("Bad BSON Document: illegal CString");
                        const b = n ? v++ : I.toUTF8(t, e, y, !1);
                        let w, S = !0;
                        if (S = p || h?.has(b) ? l : !l, !1 !== _ && "$" === b[0] && (_ = Tt.test(b)), e = y + 1, 2 === d) {
                            const r = C.getInt32LE(t, e);
                            if (e += 4, r <= 0 || r > t.length - e || 0 !== t[e + r - 1]) throw new g("bad string length in bson");
                            w = I.toUTF8(t, e, e + r - 1, S), e += r;
                        } else if (7 === d) {
                            const r = I.allocateUnsafe(12);
                            for(let n = 0; n < 12; n++)r[n] = t[e + n];
                            w = new St(r), e += 12;
                        } else if (16 === d && !1 === c) w = new mt(C.getInt32LE(t, e)), e += 4;
                        else if (16 === d) w = C.getInt32LE(t, e), e += 4;
                        else if (1 === d) w = C.getFloat64LE(t, e), e += 8, !1 === c && (w = new bt(w));
                        else if (9 === d) {
                            const r = C.getInt32LE(t, e), n = C.getInt32LE(t, e + 4);
                            e += 8, w = new Date(new rt(r, n).toNumber());
                        } else if (8 === d) {
                            if (0 !== t[e] && 1 !== t[e]) throw new g("illegal boolean type value");
                            w = 1 === t[e++];
                        } else if (3 === d) {
                            const n = e, i = C.getInt32LE(t, e);
                            if (i <= 0 || i > t.length - e) throw new g("bad embedded document length in bson");
                            if (o) w = t.subarray(e, e + i);
                            else {
                                let e = r;
                                p || (e = {
                                    ...r,
                                    validation: {
                                        utf8: S
                                    }
                                }), w = Bt(t, n, e, !1);
                            }
                            e += i;
                        } else if (4 === d) {
                            const n = e, o = C.getInt32LE(t, e);
                            let a = r;
                            const s = e + o;
                            if (i && i[b] && (a = {
                                ...r,
                                raw: !0
                            }), p || (a = {
                                ...a,
                                validation: {
                                    utf8: S
                                }
                            }), w = Bt(t, n, a, !0), 0 !== t[(e += o) - 1]) throw new g("invalid array terminator byte");
                            if (e !== s) throw new g("corrupted array bson");
                        } else if (6 === d) w = void 0;
                        else if (10 === d) w = null;
                        else if (18 === d) {
                            if (f) w = C.getBigInt64LE(t, e), e += 8;
                            else {
                                const r = C.getInt32LE(t, e), n = C.getInt32LE(t, e + 4);
                                e += 8;
                                const i = new rt(r, n);
                                w = u && !0 === c && i.lessThanOrEqual(xt) && i.greaterThanOrEqual(kt) ? i.toNumber() : i;
                            }
                        } else if (19 === d) {
                            const r = I.allocateUnsafe(16);
                            for(let n = 0; n < 16; n++)r[n] = t[e + n];
                            e += 16, w = new yt(r);
                        } else if (5 === d) {
                            let r = C.getInt32LE(t, e);
                            e += 4;
                            const n = r, i = t[e++];
                            if (r < 0) throw new g("Negative binary type element size found");
                            if (r > t.byteLength) throw new g("Binary type size larger than document size");
                            if (i === U.SUBTYPE_BYTE_ARRAY) {
                                if (r = C.getInt32LE(t, e), e += 4, r < 0) throw new g("Negative binary type element size found for subtype 0x02");
                                if (r > n - 4) throw new g("Binary type with subtype 0x02 contains too long binary size");
                                if (r < n - 4) throw new g("Binary type with subtype 0x02 contains too short binary size");
                            }
                            s && c ? w = I.toLocalBufferType(t.subarray(e, e + r)) : (w = new U(t.subarray(e, e + r), i), 4 === i && z.isValid(w) && (w = w.toUUID())), e += r;
                        } else if (11 === d && !1 === a) {
                            for(y = e; 0 !== t[y] && y < t.length;)y++;
                            if (y >= t.length) throw new g("Bad BSON Document: illegal CString");
                            const r = I.toUTF8(t, e, y, !1);
                            for(y = e = y + 1; 0 !== t[y] && y < t.length;)y++;
                            if (y >= t.length) throw new g("Bad BSON Document: illegal CString");
                            const n = I.toUTF8(t, e, y, !1);
                            e = y + 1;
                            const i = new Array(n.length);
                            for(y = 0; y < n.length; y++)switch(n[y]){
                                case "m":
                                    i[y] = "m";
                                    break;
                                case "s":
                                    i[y] = "g";
                                    break;
                                case "i":
                                    i[y] = "i";
                            }
                            w = new RegExp(r, i.join(""));
                        } else if (11 === d && !0 === a) {
                            for(y = e; 0 !== t[y] && y < t.length;)y++;
                            if (y >= t.length) throw new g("Bad BSON Document: illegal CString");
                            const r = I.toUTF8(t, e, y, !1);
                            for(y = e = y + 1; 0 !== t[y] && y < t.length;)y++;
                            if (y >= t.length) throw new g("Bad BSON Document: illegal CString");
                            const n = I.toUTF8(t, e, y, !1);
                            e = y + 1, w = new $t(r, n);
                        } else if (14 === d) {
                            const r = C.getInt32LE(t, e);
                            if (e += 4, r <= 0 || r > t.length - e || 0 !== t[e + r - 1]) throw new g("bad string length in bson");
                            const n = I.toUTF8(t, e, e + r - 1, S);
                            w = c ? n : new Et(n), e += r;
                        } else if (17 === d) w = new Pt({
                            i: C.getUint32LE(t, e),
                            t: C.getUint32LE(t, e + 4)
                        }), e += 8;
                        else if (255 === d) w = new gt;
                        else if (127 === d) w = new vt;
                        else if (13 === d) {
                            const r = C.getInt32LE(t, e);
                            if (e += 4, r <= 0 || r > t.length - e || 0 !== t[e + r - 1]) throw new g("bad string length in bson");
                            const n = I.toUTF8(t, e, e + r - 1, S);
                            w = new K(n), e += r;
                        } else if (15 === d) {
                            const n = C.getInt32LE(t, e);
                            if (e += 4, n < 13) throw new g("code_w_scope total size shorter minimum expected length");
                            const i = C.getInt32LE(t, e);
                            if (e += 4, i <= 0 || i > t.length - e || 0 !== t[e + i - 1]) throw new g("bad string length in bson");
                            const o = I.toUTF8(t, e, e + i - 1, S), a = e += i, s = C.getInt32LE(t, e), u = Bt(t, a, r, !1);
                            if (e += s, n < 8 + s + i) throw new g("code_w_scope total size is too short, truncating scope");
                            if (n > 8 + s + i) throw new g("code_w_scope total size is too long, clips outer document");
                            w = new K(o, u);
                        } else {
                            if (12 !== d) throw new g(`Detected unknown BSON type ${d.toString(16)} for fieldname "${b}"`);
                            {
                                const r = C.getInt32LE(t, e);
                                if (e += 4, r <= 0 || r > t.length - e || 0 !== t[e + r - 1]) throw new g("bad string length in bson");
                                const n = I.toUTF8(t, e, e + r - 1, S);
                                e += r;
                                const i = I.allocateUnsafe(12);
                                for(let r = 0; r < 12; r++)i[r] = t[e + r];
                                const o = new St(i);
                                e += 12, w = new W(n, o);
                            }
                        }
                        "__proto__" === b ? Object.defineProperty(m, b, {
                            value: w,
                            writable: !0,
                            enumerable: !0,
                            configurable: !0
                        }) : m[b] = w;
                    }
                    if (b !== e - y) {
                        if (n) throw new g("corrupt array bson");
                        throw new g("corrupt object bson");
                    }
                    if (!_) return m;
                    if (H(m)) {
                        const t = Object.assign({}, m);
                        return delete t.$ref, delete t.$id, delete t.$db, new W(m.$ref, m.$id, m.$db, t);
                    }
                    return m;
                }
                const It = /\x00/, Rt = new Set([
                    "$db",
                    "$ref",
                    "$id",
                    "$clusterTime"
                ]);
                function Nt(t, e, r, n) {
                    t[n++] = 2, t[(n = n + I.encodeUTF8Into(t, e, n) + 1) - 1] = 0;
                    const i = I.encodeUTF8Into(t, r, n + 4);
                    return C.setInt32LE(t, n, i + 1), n = n + 4 + i, t[n++] = 0, n;
                }
                function Dt(t, e, r, n) {
                    const i = !Object.is(r, -0) && Number.isSafeInteger(r) && r <= h && r >= p ? 16 : 1;
                    return t[n++] = i, n += I.encodeUTF8Into(t, e, n), t[n++] = 0, n + (16 === i ? C.setInt32LE(t, n, r) : C.setFloat64LE(t, n, r));
                }
                function Lt(t, e, r, n) {
                    return t[n++] = 18, n += I.encodeUTF8Into(t, e, n), t[n++] = 0, n + C.setBigInt64LE(t, n, r);
                }
                function Ct(t, e, r, n) {
                    return t[n++] = 10, n += I.encodeUTF8Into(t, e, n), t[n++] = 0, n;
                }
                function Ut(t, e, r, n) {
                    return t[n++] = 8, n += I.encodeUTF8Into(t, e, n), t[n++] = 0, t[n++] = r ? 1 : 0, n;
                }
                function qt(t, e, r, n) {
                    t[n++] = 9, n += I.encodeUTF8Into(t, e, n), t[n++] = 0;
                    const i = rt.fromNumber(r.getTime()), o = i.getLowBits(), a = i.getHighBits();
                    return (n += C.setInt32LE(t, n, o)) + C.setInt32LE(t, n, a);
                }
                function Ft(t, e, r, n) {
                    if (t[n++] = 11, n += I.encodeUTF8Into(t, e, n), t[n++] = 0, r.source && null != r.source.match(It)) throw new g("value " + r.source + " must not contain null bytes");
                    return n += I.encodeUTF8Into(t, r.source, n), t[n++] = 0, r.ignoreCase && (t[n++] = 105), r.global && (t[n++] = 115), r.multiline && (t[n++] = 109), t[n++] = 0, n;
                }
                function Vt(t, e, r, n) {
                    if (t[n++] = 11, n += I.encodeUTF8Into(t, e, n), t[n++] = 0, null != r.pattern.match(It)) throw new g("pattern " + r.pattern + " must not contain null bytes");
                    n += I.encodeUTF8Into(t, r.pattern, n), t[n++] = 0;
                    const i = r.options.split("").sort().join("");
                    return n += I.encodeUTF8Into(t, i, n), t[n++] = 0, n;
                }
                function zt(t, e, r, n) {
                    return null === r ? t[n++] = 10 : "MinKey" === r._bsontype ? t[n++] = 255 : t[n++] = 127, n += I.encodeUTF8Into(t, e, n), t[n++] = 0, n;
                }
                function Kt(t, e, r, n) {
                    return t[n++] = 7, n += I.encodeUTF8Into(t, e, n), t[n++] = 0, n + r.serializeInto(t, n);
                }
                function Ht(t, e, r, n) {
                    t[n++] = 5, n += I.encodeUTF8Into(t, e, n), t[n++] = 0;
                    const i = r.length;
                    if (n += C.setInt32LE(t, n, i), t[n++] = 0, i <= 16) for(let e = 0; e < i; e++)t[n + e] = r[e];
                    else t.set(r, n);
                    return n + i;
                }
                function Wt(t, e, r, n, i, o, a, s, u) {
                    if (u.has(r)) throw new g("Cannot convert circular structure to BSON");
                    u.add(r), t[n++] = Array.isArray(r) ? 4 : 3, n += I.encodeUTF8Into(t, e, n), t[n++] = 0;
                    const c = ne(t, r, i, n, o + 1, a, s, u);
                    return u.delete(r), c;
                }
                function Jt(t, e, r, n) {
                    t[n++] = 19, n += I.encodeUTF8Into(t, e, n), t[n++] = 0;
                    for(let e = 0; e < 16; e++)t[n + e] = r.bytes[e];
                    return n + 16;
                }
                function Gt(t, e, r, n) {
                    t[n++] = "Long" === r._bsontype ? 18 : 17, n += I.encodeUTF8Into(t, e, n), t[n++] = 0;
                    const i = r.getLowBits(), o = r.getHighBits();
                    return (n += C.setInt32LE(t, n, i)) + C.setInt32LE(t, n, o);
                }
                function Yt(t, e, r, n) {
                    return r = r.valueOf(), t[n++] = 16, n += I.encodeUTF8Into(t, e, n), t[n++] = 0, n + C.setInt32LE(t, n, r);
                }
                function Qt(t, e, r, n) {
                    return t[n++] = 1, n += I.encodeUTF8Into(t, e, n), t[n++] = 0, n + C.setFloat64LE(t, n, r.value);
                }
                function Xt(t, e, r, n) {
                    t[n++] = 13, n += I.encodeUTF8Into(t, e, n), t[n++] = 0;
                    const i = r.toString(), o = I.encodeUTF8Into(t, i, n + 4) + 1;
                    return C.setInt32LE(t, n, o), n = n + 4 + o - 1, t[n++] = 0, n;
                }
                function Zt(t, e, r, n, i = !1, o = 0, a = !1, s = !0, u) {
                    if (r.scope && "object" == typeof r.scope) {
                        t[n++] = 15, n += I.encodeUTF8Into(t, e, n), t[n++] = 0;
                        let c = n;
                        const f = r.code;
                        n += 4;
                        const l = I.encodeUTF8Into(t, f, n + 4) + 1;
                        C.setInt32LE(t, n, l), t[n + 4 + l - 1] = 0, n = n + l + 4;
                        const h = ne(t, r.scope, i, n, o + 1, a, s, u);
                        n = h - 1;
                        const p = h - c;
                        c += C.setInt32LE(t, c, p), t[n++] = 0;
                    } else {
                        t[n++] = 13, n += I.encodeUTF8Into(t, e, n), t[n++] = 0;
                        const i = r.code.toString(), o = I.encodeUTF8Into(t, i, n + 4) + 1;
                        C.setInt32LE(t, n, o), n = n + 4 + o - 1, t[n++] = 0;
                    }
                    return n;
                }
                function te(t, e, r, n) {
                    t[n++] = 5, n += I.encodeUTF8Into(t, e, n), t[n++] = 0;
                    const i = r.buffer;
                    let o = r.position;
                    if (r.sub_type === U.SUBTYPE_BYTE_ARRAY && (o += 4), n += C.setInt32LE(t, n, o), t[n++] = r.sub_type, r.sub_type === U.SUBTYPE_BYTE_ARRAY && (o -= 4, n += C.setInt32LE(t, n, o)), r.sub_type === U.SUBTYPE_VECTOR && q(r), o <= 16) for(let e = 0; e < o; e++)t[n + e] = i[e];
                    else t.set(i, n);
                    return n + r.position;
                }
                function ee(t, e, r, n) {
                    t[n++] = 14, n += I.encodeUTF8Into(t, e, n), t[n++] = 0;
                    const i = I.encodeUTF8Into(t, r.value, n + 4) + 1;
                    return C.setInt32LE(t, n, i), n = n + 4 + i - 1, t[n++] = 0, n;
                }
                function re(t, e, r, n, i, o, a) {
                    t[n++] = 3, n += I.encodeUTF8Into(t, e, n), t[n++] = 0;
                    let s = n, u = {
                        $ref: r.collection || r.namespace,
                        $id: r.oid
                    };
                    null != r.db && (u.$db = r.db), u = Object.assign(u, r.fields);
                    const c = ne(t, u, !1, n, i + 1, o, !0, a), f = c - s;
                    return s += C.setInt32LE(t, n, f), c;
                }
                function ne(t, e, r, n, i, f, h, p) {
                    if (null == p) {
                        if (null == e) return t[0] = 5, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, 5;
                        if (Array.isArray(e)) throw new g("serialize does not support an array as the root input");
                        if ("object" != typeof e) throw new g("serialize does not support non-object as the root input");
                        if ("_bsontype" in e && "string" == typeof e._bsontype) throw new g("BSON types cannot be serialized as a document");
                        if (c(e) || s(e) || o(e) || a(e)) throw new g("date, regexp, typedarray, and arraybuffer cannot be BSON documents");
                        p = new Set;
                    }
                    p.add(e);
                    let d = n + 4;
                    if (Array.isArray(e)) for(let n = 0; n < e.length; n++){
                        const a = `${n}`;
                        let u = e[n];
                        "function" == typeof u?.toBSON && (u = u.toBSON());
                        const y = typeof u;
                        if (void 0 === u) d = Ct(t, a, 0, d);
                        else if (null === u) d = Ct(t, a, 0, d);
                        else if ("string" === y) d = Nt(t, a, u, d);
                        else if ("number" === y) d = Dt(t, a, u, d);
                        else if ("bigint" === y) d = Lt(t, a, u, d);
                        else if ("boolean" === y) d = Ut(t, a, u, d);
                        else if ("object" === y && null == u._bsontype) d = u instanceof Date || c(u) ? qt(t, a, u, d) : u instanceof Uint8Array || o(u) ? Ht(t, a, u, d) : u instanceof RegExp || s(u) ? Ft(t, a, u, d) : Wt(t, a, u, d, r, i, f, h, p);
                        else if ("object" === y) {
                            if (6 !== u[l]) throw new _;
                            if ("ObjectId" === u._bsontype) d = Kt(t, a, u, d);
                            else if ("Decimal128" === u._bsontype) d = Jt(t, a, u, d);
                            else if ("Long" === u._bsontype || "Timestamp" === u._bsontype) d = Gt(t, a, u, d);
                            else if ("Double" === u._bsontype) d = Qt(t, a, u, d);
                            else if ("Code" === u._bsontype) d = Zt(t, a, u, d, r, i, f, h, p);
                            else if ("Binary" === u._bsontype) d = te(t, a, u, d);
                            else if ("BSONSymbol" === u._bsontype) d = ee(t, a, u, d);
                            else if ("DBRef" === u._bsontype) d = re(t, a, u, d, i, f, p);
                            else if ("BSONRegExp" === u._bsontype) d = Vt(t, a, u, d);
                            else if ("Int32" === u._bsontype) d = Yt(t, a, u, d);
                            else if ("MinKey" === u._bsontype || "MaxKey" === u._bsontype) d = zt(t, a, u, d);
                            else if (void 0 !== u._bsontype) throw new g(`Unrecognized or invalid _bsontype: ${String(u._bsontype)}`);
                        } else "function" === y && f && (d = Xt(t, a, u, d));
                    }
                    else if (e instanceof Map || u(e)) {
                        const n = e.entries();
                        let a = !1;
                        for(; !a;){
                            const e = n.next();
                            if (a = !!e.done, a) continue;
                            const u = e.value ? e.value[0] : void 0;
                            let y = e.value ? e.value[1] : void 0;
                            "function" == typeof y?.toBSON && (y = y.toBSON());
                            const b = typeof y;
                            if ("string" == typeof u && !Rt.has(u)) {
                                if (null != u.match(It)) throw new g("key " + u + " must not contain null bytes");
                                if (r) {
                                    if ("$" === u[0]) throw new g("key " + u + " must not start with '$'");
                                    if (u.includes(".")) throw new g("key " + u + " must not contain '.'");
                                }
                            }
                            if (void 0 === y) !1 === h && (d = Ct(t, u, 0, d));
                            else if (null === y) d = Ct(t, u, 0, d);
                            else if ("string" === b) d = Nt(t, u, y, d);
                            else if ("number" === b) d = Dt(t, u, y, d);
                            else if ("bigint" === b) d = Lt(t, u, y, d);
                            else if ("boolean" === b) d = Ut(t, u, y, d);
                            else if ("object" === b && null == y._bsontype) d = y instanceof Date || c(y) ? qt(t, u, y, d) : y instanceof Uint8Array || o(y) ? Ht(t, u, y, d) : y instanceof RegExp || s(y) ? Ft(t, u, y, d) : Wt(t, u, y, d, r, i, f, h, p);
                            else if ("object" === b) {
                                if (6 !== y[l]) throw new _;
                                if ("ObjectId" === y._bsontype) d = Kt(t, u, y, d);
                                else if ("Decimal128" === y._bsontype) d = Jt(t, u, y, d);
                                else if ("Long" === y._bsontype || "Timestamp" === y._bsontype) d = Gt(t, u, y, d);
                                else if ("Double" === y._bsontype) d = Qt(t, u, y, d);
                                else if ("Code" === y._bsontype) d = Zt(t, u, y, d, r, i, f, h, p);
                                else if ("Binary" === y._bsontype) d = te(t, u, y, d);
                                else if ("BSONSymbol" === y._bsontype) d = ee(t, u, y, d);
                                else if ("DBRef" === y._bsontype) d = re(t, u, y, d, i, f, p);
                                else if ("BSONRegExp" === y._bsontype) d = Vt(t, u, y, d);
                                else if ("Int32" === y._bsontype) d = Yt(t, u, y, d);
                                else if ("MinKey" === y._bsontype || "MaxKey" === y._bsontype) d = zt(t, u, y, d);
                                else if (void 0 !== y._bsontype) throw new g(`Unrecognized or invalid _bsontype: ${String(y._bsontype)}`);
                            } else "function" === b && f && (d = Xt(t, u, y, d));
                        }
                    } else {
                        if ("function" == typeof e?.toBSON && null != (e = e.toBSON()) && "object" != typeof e) throw new g("toBSON function did not return an object");
                        for (const n of Object.keys(e)){
                            let a = e[n];
                            "function" == typeof a?.toBSON && (a = a.toBSON());
                            const u = typeof a;
                            if ("string" == typeof n && !Rt.has(n)) {
                                if (null != n.match(It)) throw new g("key " + n + " must not contain null bytes");
                                if (r) {
                                    if ("$" === n[0]) throw new g("key " + n + " must not start with '$'");
                                    if (n.includes(".")) throw new g("key " + n + " must not contain '.'");
                                }
                            }
                            if (void 0 === a) !1 === h && (d = Ct(t, n, 0, d));
                            else if (null === a) d = Ct(t, n, 0, d);
                            else if ("string" === u) d = Nt(t, n, a, d);
                            else if ("number" === u) d = Dt(t, n, a, d);
                            else if ("bigint" === u) d = Lt(t, n, a, d);
                            else if ("boolean" === u) d = Ut(t, n, a, d);
                            else if ("object" === u && null == a._bsontype) d = a instanceof Date || c(a) ? qt(t, n, a, d) : a instanceof Uint8Array || o(a) ? Ht(t, n, a, d) : a instanceof RegExp || s(a) ? Ft(t, n, a, d) : Wt(t, n, a, d, r, i, f, h, p);
                            else if ("object" === u) {
                                if (6 !== a[l]) throw new _;
                                if ("ObjectId" === a._bsontype) d = Kt(t, n, a, d);
                                else if ("Decimal128" === a._bsontype) d = Jt(t, n, a, d);
                                else if ("Long" === a._bsontype || "Timestamp" === a._bsontype) d = Gt(t, n, a, d);
                                else if ("Double" === a._bsontype) d = Qt(t, n, a, d);
                                else if ("Code" === a._bsontype) d = Zt(t, n, a, d, r, i, f, h, p);
                                else if ("Binary" === a._bsontype) d = te(t, n, a, d);
                                else if ("BSONSymbol" === a._bsontype) d = ee(t, n, a, d);
                                else if ("DBRef" === a._bsontype) d = re(t, n, a, d, i, f, p);
                                else if ("BSONRegExp" === a._bsontype) d = Vt(t, n, a, d);
                                else if ("Int32" === a._bsontype) d = Yt(t, n, a, d);
                                else if ("MinKey" === a._bsontype || "MaxKey" === a._bsontype) d = zt(t, n, a, d);
                                else if (void 0 !== a._bsontype) throw new g(`Unrecognized or invalid _bsontype: ${String(a._bsontype)}`);
                            } else "function" === u && f && (d = Xt(t, n, a, d));
                        }
                    }
                    p.delete(e), t[d++] = 0;
                    const y = d - n;
                    return n += C.setInt32LE(t, n, y), d;
                }
                const ie = {
                    $oid: St,
                    $binary: U,
                    $uuid: U,
                    $symbol: Et,
                    $numberInt: mt,
                    $numberDecimal: yt,
                    $numberDouble: bt,
                    $numberLong: rt,
                    $minKey: gt,
                    $maxKey: vt,
                    $regex: $t,
                    $regularExpression: $t,
                    $timestamp: Pt
                };
                function oe(t, e = {}) {
                    if ("number" == typeof t) {
                        const r = t <= h && t >= p, n = t <= d && t >= y;
                        if (e.relaxed || e.legacy) return t;
                        if (Number.isInteger(t) && !Object.is(t, -0)) {
                            if (r) return new mt(t);
                            if (n) return e.useBigInt64 ? BigInt(t) : rt.fromNumber(t);
                        }
                        return new bt(t);
                    }
                    if (null == t || "object" != typeof t) return t;
                    if (t.$undefined) return null;
                    const r = Object.keys(t).filter((e)=>e.startsWith("$") && null != t[e]);
                    for(let n = 0; n < r.length; n++){
                        const i = ie[r[n]];
                        if (i) return i.fromExtendedJSON(t, e);
                    }
                    if (null != t.$date) {
                        const r = t.$date, n = new Date;
                        if (e.legacy) {
                            if ("number" == typeof r) n.setTime(r);
                            else if ("string" == typeof r) n.setTime(Date.parse(r));
                            else {
                                if ("bigint" != typeof r) throw new w("Unrecognized type for EJSON date: " + typeof r);
                                n.setTime(Number(r));
                            }
                        } else if ("string" == typeof r) n.setTime(Date.parse(r));
                        else if (rt.isLong(r)) n.setTime(r.toNumber());
                        else if ("number" == typeof r && e.relaxed) n.setTime(r);
                        else {
                            if ("bigint" != typeof r) throw new w("Unrecognized type for EJSON date: " + typeof r);
                            n.setTime(Number(r));
                        }
                        return n;
                    }
                    if (null != t.$code) {
                        const e = Object.assign({}, t);
                        return t.$scope && (e.$scope = oe(t.$scope)), K.fromExtendedJSON(t);
                    }
                    if (H(t) || t.$dbPointer) {
                        const e = t.$ref ? t : t.$dbPointer;
                        if (e instanceof W) return e;
                        const r = Object.keys(e).filter((t)=>t.startsWith("$"));
                        let n = !0;
                        if (r.forEach((t)=>{
                            -1 === [
                                "$ref",
                                "$id",
                                "$db"
                            ].indexOf(t) && (n = !1);
                        }), n) return W.fromExtendedJSON(e);
                    }
                    return t;
                }
                function ae(t) {
                    const e = t.toISOString();
                    return 0 !== t.getUTCMilliseconds() ? e : e.slice(0, -5) + "Z";
                }
                function se(t, e) {
                    if (t instanceof Map || u(t)) {
                        const r = Object.create(null);
                        for (const [e, n] of t){
                            if ("string" != typeof e) throw new g("Can only serialize maps with string keys");
                            r[e] = n;
                        }
                        return se(r, e);
                    }
                    if (("object" == typeof t || "function" == typeof t) && null !== t) {
                        const r = e.seenObjects.findIndex((e)=>e.obj === t);
                        if (-1 !== r) {
                            const t = e.seenObjects.map((t)=>t.propertyName), n = t.slice(0, r).map((t)=>`${t} -> `).join(""), i = t[r], o = " -> " + t.slice(r + 1, t.length - 1).map((t)=>`${t} -> `).join(""), a = t[t.length - 1], s = " ".repeat(n.length + i.length / 2), u = "-".repeat(o.length + (i.length + a.length) / 2 - 1);
                            throw new g(`Converting circular structure to EJSON:\n    ${n}${i}${o}${a}\n    ${s}\\${u}/`);
                        }
                        e.seenObjects[e.seenObjects.length - 1].obj = t;
                    }
                    if (Array.isArray(t)) return function(t, e) {
                        return t.map((t, r)=>{
                            e.seenObjects.push({
                                propertyName: `index ${r}`,
                                obj: null
                            });
                            try {
                                return se(t, e);
                            } finally{
                                e.seenObjects.pop();
                            }
                        });
                    }(t, e);
                    if (void 0 === t) return null;
                    if (t instanceof Date || c(t)) {
                        const r = t.getTime(), n = r > -1 && r < 2534023188e5;
                        return e.legacy ? e.relaxed && n ? {
                            $date: t.getTime()
                        } : {
                            $date: ae(t)
                        } : e.relaxed && n ? {
                            $date: ae(t)
                        } : {
                            $date: {
                                $numberLong: t.getTime().toString()
                            }
                        };
                    }
                    if (!("number" != typeof t || e.relaxed && isFinite(t))) {
                        if (Number.isInteger(t) && !Object.is(t, -0)) {
                            if (t >= p && t <= h) return {
                                $numberInt: t.toString()
                            };
                            if (t >= y && t <= d) return {
                                $numberLong: t.toString()
                            };
                        }
                        return {
                            $numberDouble: Object.is(t, -0) ? "-0.0" : t.toString()
                        };
                    }
                    if ("bigint" == typeof t) return e.relaxed ? Number(BigInt.asIntN(64, t)) : {
                        $numberLong: BigInt.asIntN(64, t).toString()
                    };
                    if (t instanceof RegExp || s(t)) {
                        let r = t.flags;
                        if (void 0 === r) {
                            const e = t.toString().match(/[gimuy]*$/);
                            e && (r = e[0]);
                        }
                        return new $t(t.source, r).toExtendedJSON(e);
                    }
                    return null != t && "object" == typeof t ? function(t, e) {
                        if (null == t || "object" != typeof t) throw new g("not an object instance");
                        const r = t._bsontype;
                        if (void 0 === r) {
                            const r = {};
                            for (const n of Object.keys(t)){
                                e.seenObjects.push({
                                    propertyName: n,
                                    obj: null
                                });
                                try {
                                    const i = se(t[n], e);
                                    "__proto__" === n ? Object.defineProperty(r, n, {
                                        value: i,
                                        writable: !0,
                                        enumerable: !0,
                                        configurable: !0
                                    }) : r[n] = i;
                                } finally{
                                    e.seenObjects.pop();
                                }
                            }
                            return r;
                        }
                        if (null != t && "object" == typeof t && "string" == typeof t._bsontype && 6 !== t[l]) throw new _;
                        if (function(t) {
                            return null != t && "object" == typeof t && "_bsontype" in t && "string" == typeof t._bsontype;
                        }(t)) {
                            let n = t;
                            if ("function" != typeof n.toExtendedJSON) {
                                const e = ue[t._bsontype];
                                if (!e) throw new g("Unrecognized or invalid _bsontype: " + t._bsontype);
                                n = e(n);
                            }
                            return "Code" === r && n.scope ? n = new K(n.code, se(n.scope, e)) : "DBRef" === r && n.oid && (n = new W(se(n.collection, e), se(n.oid, e), se(n.db, e), se(n.fields, e))), n.toExtendedJSON(e);
                        }
                        throw new g("_bsontype must be a string, but was: " + typeof r);
                    }(t, e) : t;
                }
                const ue = {
                    Binary: (t)=>new U(t.value(), t.sub_type),
                    Code: (t)=>new K(t.code, t.scope),
                    DBRef: (t)=>new W(t.collection || t.namespace, t.oid, t.db, t.fields),
                    Decimal128: (t)=>new yt(t.bytes),
                    Double: (t)=>new bt(t.value),
                    Int32: (t)=>new mt(t.value),
                    Long: (t)=>rt.fromBits(null != t.low ? t.low : t.low_, null != t.low ? t.high : t.high_, null != t.low ? t.unsigned : t.unsigned_),
                    MaxKey: ()=>new vt,
                    MinKey: ()=>new gt,
                    ObjectId: (t)=>new St(t),
                    BSONRegExp: (t)=>new $t(t.pattern, t.options),
                    BSONSymbol: (t)=>new Et(t.value),
                    Timestamp: (t)=>Pt.fromBits(t.low, t.high)
                };
                function ce(t, e) {
                    const r = {
                        useBigInt64: e?.useBigInt64 ?? !1,
                        relaxed: e?.relaxed ?? !0,
                        legacy: e?.legacy ?? !1
                    };
                    return JSON.parse(t, (t, e)=>{
                        if (-1 !== t.indexOf("\0")) throw new g(`BSON Document field names cannot contain null bytes, found: ${JSON.stringify(t)}`);
                        return oe(e, r);
                    });
                }
                function fe(t, e, r, n) {
                    null != r && "object" == typeof r && (n = r, r = 0), null == e || "object" != typeof e || Array.isArray(e) || (n = e, e = void 0, r = 0);
                    const i = se(t, Object.assign({
                        relaxed: !0,
                        legacy: !1
                    }, n, {
                        seenObjects: [
                            {
                                propertyName: "(root)",
                                obj: null
                            }
                        ]
                    }));
                    return JSON.stringify(i, e, r);
                }
                const le = Object.create(null);
                function he(t, e) {
                    try {
                        return C.getNonnegativeInt32LE(t, e);
                    } catch (t) {
                        throw new S("BSON size cannot be negative", e, {
                            cause: t
                        });
                    }
                }
                function pe(t, e) {
                    let r = e;
                    for(; 0 !== t[r]; r++);
                    if (r === t.length - 1) throw new S("Null terminator not found", e);
                    return r;
                }
                le.parse = ce, le.stringify = fe, le.serialize = function(t, e) {
                    return e = e || {}, JSON.parse(fe(t, e));
                }, le.deserialize = function(t, e) {
                    return e = e || {}, ce(JSON.stringify(t), e);
                }, Object.freeze(le);
                const de = Object.create(null);
                de.parseToElements = function(t, e = 0) {
                    if (e ??= 0, t.length < 5) throw new S(`Input must be at least 5 bytes, got ${t.length} bytes`, e);
                    const r = he(t, e);
                    if (r > t.length - e) throw new S(`Parsed documentSize (${r} bytes) does not match input length (${t.length} bytes)`, e);
                    if (0 !== t[e + r - 1]) throw new S("BSON documents must end in 0x00", e + r);
                    const n = [];
                    let i = e + 4;
                    for(; i <= r + e;){
                        const o = t[i];
                        if (i += 1, 0 === o) {
                            if (i - e !== r) throw new S("Invalid 0x00 type byte", i);
                            break;
                        }
                        const a = i, s = pe(t, i) - a;
                        let u;
                        if (i += s + 1, 1 === o || 18 === o || 9 === o || 17 === o) u = 8;
                        else if (16 === o) u = 4;
                        else if (7 === o) u = 12;
                        else if (19 === o) u = 16;
                        else if (8 === o) u = 1;
                        else if (10 === o || 6 === o || 127 === o || 255 === o) u = 0;
                        else if (11 === o) u = pe(t, pe(t, i) + 1) + 1 - i;
                        else if (3 === o || 4 === o || 15 === o) u = he(t, i);
                        else {
                            if (2 !== o && 5 !== o && 12 !== o && 13 !== o && 14 !== o) throw new S(`Invalid 0x${o.toString(16).padStart(2, "0")} type byte`, i);
                            u = he(t, i) + 4, 5 === o && (u += 1), 12 === o && (u += 12);
                        }
                        if (u > r) throw new S("value reports length larger than document", i);
                        n.push([
                            o,
                            a,
                            s,
                            i,
                            u
                        ]), i += u;
                    }
                    return n;
                }, de.ByteUtils = I, de.NumberUtils = C, Object.freeze(de);
                const ye = 17825792;
                let be = I.allocate(ye);
                function me(t) {
                    be.length < t && (be = I.allocate(t));
                }
                function ve(t, e = {}) {
                    const r = "boolean" == typeof e.checkKeys && e.checkKeys, n = "boolean" == typeof e.serializeFunctions && e.serializeFunctions, i = "boolean" != typeof e.ignoreUndefined || e.ignoreUndefined, o = "number" == typeof e.minInternalBufferSize ? e.minInternalBufferSize : ye;
                    be.length < o && (be = I.allocate(o));
                    const a = ne(be, t, r, 0, 0, n, i, null), s = I.allocateUnsafe(a);
                    return s.set(be.subarray(0, a), 0), s;
                }
                function ge(t, e, r = {}) {
                    const n = "boolean" == typeof r.checkKeys && r.checkKeys, i = "boolean" == typeof r.serializeFunctions && r.serializeFunctions, o = "boolean" != typeof r.ignoreUndefined || r.ignoreUndefined, a = "number" == typeof r.index ? r.index : 0, s = ne(be, t, n, 0, 0, i, o, null);
                    return e.set(be.subarray(0, s), a), a + s - 1;
                }
                function _e(t, e = {}) {
                    return Mt(I.toLocalBufferType(t), e);
                }
                function we(t, e = {}) {
                    return Ot(t, "boolean" == typeof (e = e || {}).serializeFunctions && e.serializeFunctions, "boolean" != typeof e.ignoreUndefined || e.ignoreUndefined);
                }
                function Se(t, e, r, n, i, o) {
                    const a = Object.assign({
                        allowObjectSmallerThanBufferSize: !0,
                        index: 0
                    }, o), s = I.toLocalBufferType(t);
                    let u = e;
                    for(let t = 0; t < r; t++){
                        const e = C.getInt32LE(s, u);
                        a.index = u, n[i + t] = Mt(s, a), u += e;
                    }
                    return u;
                }
                var Oe = Object.freeze({
                    __proto__: null,
                    BSONError: g,
                    BSONOffsetError: S,
                    BSONRegExp: $t,
                    BSONRuntimeError: w,
                    BSONSymbol: Et,
                    BSONType: v,
                    BSONValue: R,
                    BSONVersionError: _,
                    Binary: U,
                    Code: K,
                    DBRef: W,
                    Decimal128: yt,
                    Double: bt,
                    EJSON: le,
                    Int32: mt,
                    Long: rt,
                    MaxKey: vt,
                    MinKey: gt,
                    ObjectId: St,
                    Timestamp: Pt,
                    UUID: z,
                    calculateObjectSize: we,
                    deserialize: _e,
                    deserializeStream: Se,
                    onDemand: de,
                    serialize: ve,
                    serializeWithBufferAndIndex: ge,
                    setInternalBufferSize: me
                });
                e.BSON = Oe, e.BSONError = g, e.BSONOffsetError = S, e.BSONRegExp = $t, e.BSONRuntimeError = w, e.BSONSymbol = Et, e.BSONType = v, e.BSONValue = R, e.BSONVersionError = _, e.Binary = U, e.Code = K, e.DBRef = W, e.Decimal128 = yt, e.Double = bt, e.EJSON = le, e.Int32 = mt, e.Long = rt, e.MaxKey = vt, e.MinKey = gt, e.ObjectId = St, e.Timestamp = Pt, e.UUID = z, e.calculateObjectSize = we, e.deserialize = _e, e.deserializeStream = Se, e.onDemand = de, e.serialize = ve, e.serializeWithBufferAndIndex = ge, e.setInternalBufferSize = me;
            },
            3643: (t, e, r)=>{
                "use strict";
                var n = r(7799), i = r(1970).assert;
                function o(t, e) {
                    this.ec = t, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc);
                }
                t.exports = o, o.fromPublic = function(t, e, r) {
                    return e instanceof o ? e : new o(t, {
                        pub: e,
                        pubEnc: r
                    });
                }, o.fromPrivate = function(t, e, r) {
                    return e instanceof o ? e : new o(t, {
                        priv: e,
                        privEnc: r
                    });
                }, o.prototype.validate = function() {
                    var t = this.getPublic();
                    return t.isInfinity() ? {
                        result: !1,
                        reason: "Invalid public key"
                    } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {
                        result: !0,
                        reason: null
                    } : {
                        result: !1,
                        reason: "Public key * N != O"
                    } : {
                        result: !1,
                        reason: "Public key is not a point"
                    };
                }, o.prototype.getPublic = function(t, e) {
                    return "string" == typeof t && (e = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), e ? this.pub.encode(e, t) : this.pub;
                }, o.prototype.getPrivate = function(t) {
                    return "hex" === t ? this.priv.toString(16, 2) : this.priv;
                }, o.prototype._importPrivate = function(t, e) {
                    this.priv = new n(t, e || 16), this.priv = this.priv.umod(this.ec.curve.n);
                }, o.prototype._importPublic = function(t, e) {
                    if (t.x || t.y) return "mont" === this.ec.curve.type ? i(t.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || i(t.x && t.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(t.x, t.y));
                    this.pub = this.ec.curve.decodePoint(t, e);
                }, o.prototype.derive = function(t) {
                    return t.validate() || i(t.validate(), "public point not validated"), t.mul(this.priv).getX();
                }, o.prototype.sign = function(t, e, r) {
                    return this.ec.sign(t, this, e, r);
                }, o.prototype.verify = function(t, e, r) {
                    return this.ec.verify(t, e, this, void 0, r);
                }, o.prototype.inspect = function() {
                    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
                };
            },
            3644: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e(t) {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            "Cannot overwrite `" + t + "` model once compiled."
                        ]);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8213));
                Object.defineProperty(s.prototype, "name", {
                    value: "OverwriteModelError"
                }), t.exports = s;
            },
            3660: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function i(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? n(Object(r), !0).forEach(function(e) {
                            o(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function o(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != a(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != a(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == a(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function a(t) {
                    return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, a(t);
                }
                var s = r(3672), u = r(1007), c = r(6426), f = r(7768), l = r(4327), h = r(9460), p = r(8768), d = c.CastError;
                function y(t, e) {
                    c.call(this, t, e, "Number");
                }
                function b(t) {
                    return this.cast(t);
                }
                y.get = c.get, y.set = c.set, y.setters = [], y._cast = f, y.cast = function(t) {
                    return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
                }, y._defaultCaster = function(t) {
                    if ("number" != typeof t) throw new Error;
                    return t;
                }, y.schemaName = "Number", y.defaultOptions = {}, y.prototype = Object.create(c.prototype), y.prototype.constructor = y, y.prototype.OptionsConstructor = u, y._checkRequired = function(t) {
                    return "number" == typeof t || t instanceof Number;
                }, y.checkRequired = c.checkRequired, y.prototype.checkRequired = function(t, e) {
                    return "object" === a(t) && c._isRef(this, t, e, !0) ? null != t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : y.checkRequired())(t);
                }, y.prototype.min = function(t, e) {
                    if (this.minValidator && (this.validators = this.validators.filter(function(t) {
                        return t.validator !== this.minValidator;
                    }, this)), null != t) {
                        var r = e || s.messages.Number.min;
                        r = r.replace(/{MIN}/, t), this.validators.push({
                            validator: this.minValidator = function(e) {
                                return null == e || e >= t;
                            },
                            message: r,
                            type: "min",
                            min: t
                        });
                    }
                    return this;
                }, y.prototype.max = function(t, e) {
                    if (this.maxValidator && (this.validators = this.validators.filter(function(t) {
                        return t.validator !== this.maxValidator;
                    }, this)), null != t) {
                        var r = e || s.messages.Number.max;
                        r = r.replace(/{MAX}/, t), this.validators.push({
                            validator: this.maxValidator = function(e) {
                                return null == e || e <= t;
                            },
                            message: r,
                            type: "max",
                            max: t
                        });
                    }
                    return this;
                }, y.prototype.enum = function(t, e) {
                    return this.enumValidator && (this.validators = this.validators.filter(function(t) {
                        return t.validator !== this.enumValidator;
                    }, this)), Array.isArray(t) || (p.isPOJO(t) && null != t.values ? (e = t.message, t = t.values) : "number" == typeof t && (t = Array.prototype.slice.call(arguments), e = null), p.isPOJO(t) && (t = Object.values(t)), e = e || s.messages.Number.enum), e = null == e ? s.messages.Number.enum : e, this.enumValidator = function(e) {
                        return null == e || -1 !== t.indexOf(e);
                    }, this.validators.push({
                        validator: this.enumValidator,
                        message: e,
                        type: "enum",
                        enumValues: t
                    }), this;
                }, y.prototype.cast = function(t, e, r, n, i) {
                    if ("number" != typeof t && c._isRef(this, t, e, r) && (null == t || p.isNonBuiltinObject(t))) return this._castRef(t, e, r, i);
                    var o, a = t && void 0 !== t._id ? t._id : t;
                    o = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : y.cast();
                    try {
                        return o(a);
                    } catch (t) {
                        throw new d("Number", a, this.path, t, this);
                    }
                }, y.prototype.$conditionalHandlers = i(i({}, c.prototype.$conditionalHandlers), {}, {
                    $bitsAllClear: h,
                    $bitsAnyClear: h,
                    $bitsAllSet: h,
                    $bitsAnySet: h,
                    $gt: b,
                    $gte: b,
                    $lt: b,
                    $lte: b,
                    $mod: function(t) {
                        var e = this;
                        return Array.isArray(t) ? t.map(function(t) {
                            return e.cast(t);
                        }) : [
                            this.cast(t)
                        ];
                    }
                }), y.prototype.castForQuery = function(t, e, r) {
                    var n;
                    if (null != t) {
                        if (!(n = this.$conditionalHandlers[t])) throw new d("number", e, this.path, null, this);
                        return n.call(this, e, r);
                    }
                    try {
                        e = this.applySetters(e, r);
                    } catch (t) {
                        throw t instanceof d && t.path === this.path && null != this.$fullPath && (t.path = this.$fullPath), t;
                    }
                    return e;
                }, y.prototype.toJSONSchema = function(t) {
                    var e = this.options.required && "function" != typeof this.options.required || "_id" === this.path;
                    return l("number", "number", null == t ? void 0 : t.useBsonType, e);
                }, t.exports = y;
            },
            3672: (t, e, r)=>{
                "use strict";
                var n = r(8213);
                t.exports = n, n.messages = r(766), n.Messages = n.messages, n.DocumentNotFoundError = r(1129), n.CastError = r(3609), n.ValidationError = r(6949), n.ValidatorError = r(9538), n.VersionError = r(6996), n.ParallelSaveError = r(3940), n.OverwriteModelError = r(3644), n.MissingSchemaError = r(8063), n.MongooseServerSelectionError = r(7219), n.DivergentArrayError = r(1417), n.StrictModeError = r(8995), n.StrictPopulateError = r(6801);
            },
            3686: (t, e, r)=>{
                "use strict";
                var n = r(7799), i = r(1970), o = i.assert;
                function a(t, e) {
                    if (t instanceof a) return t;
                    this._importDER(t, e) || (o(t.r && t.s, "Signature without r or s"), this.r = new n(t.r, 16), this.s = new n(t.s, 16), void 0 === t.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam);
                }
                function s() {
                    this.place = 0;
                }
                function u(t, e) {
                    var r = t[e.place++];
                    if (!(128 & r)) return r;
                    var n = 15 & r;
                    if (0 === n || n > 4) return !1;
                    if (0 === t[e.place]) return !1;
                    for(var i = 0, o = 0, a = e.place; o < n; o++, a++)i <<= 8, i |= t[a], i >>>= 0;
                    return !(i <= 127) && (e.place = a, i);
                }
                function c(t) {
                    for(var e = 0, r = t.length - 1; !t[e] && !(128 & t[e + 1]) && e < r;)e++;
                    return 0 === e ? t : t.slice(e);
                }
                function f(t, e) {
                    if (e < 128) t.push(e);
                    else {
                        var r = 1 + (Math.log(e) / Math.LN2 >>> 3);
                        for(t.push(128 | r); --r;)t.push(e >>> (r << 3) & 255);
                        t.push(e);
                    }
                }
                t.exports = a, a.prototype._importDER = function(t, e) {
                    t = i.toArray(t, e);
                    var r = new s;
                    if (48 !== t[r.place++]) return !1;
                    var o = u(t, r);
                    if (!1 === o) return !1;
                    if (o + r.place !== t.length) return !1;
                    if (2 !== t[r.place++]) return !1;
                    var a = u(t, r);
                    if (!1 === a) return !1;
                    if (128 & t[r.place]) return !1;
                    var c = t.slice(r.place, a + r.place);
                    if (r.place += a, 2 !== t[r.place++]) return !1;
                    var f = u(t, r);
                    if (!1 === f) return !1;
                    if (t.length !== f + r.place) return !1;
                    if (128 & t[r.place]) return !1;
                    var l = t.slice(r.place, f + r.place);
                    if (0 === c[0]) {
                        if (!(128 & c[1])) return !1;
                        c = c.slice(1);
                    }
                    if (0 === l[0]) {
                        if (!(128 & l[1])) return !1;
                        l = l.slice(1);
                    }
                    return this.r = new n(c), this.s = new n(l), this.recoveryParam = null, !0;
                }, a.prototype.toDER = function(t) {
                    var e = this.r.toArray(), r = this.s.toArray();
                    for(128 & e[0] && (e = [
                        0
                    ].concat(e)), 128 & r[0] && (r = [
                        0
                    ].concat(r)), e = c(e), r = c(r); !(r[0] || 128 & r[1]);)r = r.slice(1);
                    var n = [
                        2
                    ];
                    f(n, e.length), (n = n.concat(e)).push(2), f(n, r.length);
                    var o = n.concat(r), a = [
                        48
                    ];
                    return f(a, o.length), a = a.concat(o), i.encode(a, t);
                };
            },
            3694: (t, e, r)=>{
                "use strict";
                var n = r(486);
                t.exports = function(t, e) {
                    return null == e || null == e._id || (t = t.clone(), e._id ? t.paths._id || (n(t), t.options._id = !0) : (t.remove("_id"), t.options._id = !1)), t;
                };
            },
            3696: (t)=>{
                "use strict";
                t.exports = function(t, e) {
                    return null == t ? null : "boolean" == typeof t ? e : "boolean" == typeof t[e] ? t[e] ? e : null : e in t ? t[e] : e;
                };
            },
            3703: (t)=>{
                "use strict";
                function e(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function r(t, e) {
                    return null == t ? t : t instanceof Map ? t.get(e) : t[e];
                }
                t.exports = function(t, n, i) {
                    var o, a = !1;
                    if ("string" == typeof n) {
                        if (-1 === n.indexOf(".")) {
                            var s = r(t, n);
                            return null == s ? i : s;
                        }
                        o = n.split(".");
                    } else if (a = !0, 1 === (o = n).length) {
                        var u = r(t, o[0]);
                        return null == u ? i : u;
                    }
                    var c, f = n, l = t, h = function(t, r) {
                        var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (!n) {
                            if (Array.isArray(t) || (n = function(t, r) {
                                if (t) {
                                    if ("string" == typeof t) return e(t, r);
                                    var n = ({}).toString.call(t).slice(8, -1);
                                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? e(t, r) : void 0;
                                }
                            }(t)) || r && t && "number" == typeof t.length) {
                                n && (t = n);
                                var i = 0, o = function() {};
                                return {
                                    s: o,
                                    n: function() {
                                        return i >= t.length ? {
                                            done: !0
                                        } : {
                                            done: !1,
                                            value: t[i++]
                                        };
                                    },
                                    e: function(t) {
                                        throw t;
                                    },
                                    f: o
                                };
                            }
                            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                        }
                        var a, s = !0, u = !1;
                        return {
                            s: function() {
                                n = n.call(t);
                            },
                            n: function() {
                                var t = n.next();
                                return s = t.done, t;
                            },
                            e: function(t) {
                                u = !0, a = t;
                            },
                            f: function() {
                                try {
                                    s || null == n.return || n.return();
                                } finally{
                                    if (u) throw a;
                                }
                            }
                        };
                    }(o);
                    try {
                        for(h.s(); !(c = h.n()).done;){
                            var p = c.value;
                            if (null == l) return i;
                            if (!a && null != l[f]) return l[f];
                            l = r(l, p), a || (f = f.substr(p.length + 1));
                        }
                    } catch (t) {
                        h.e(t);
                    } finally{
                        h.f();
                    }
                    return null == l ? i : l;
                };
            },
            3704: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(2402), o = r(3633), a = r(3305);
                t.exports = function(t) {
                    if (null == t || "" === t) return null;
                    var e;
                    if (a(t, "Long")) e = t.toNumber();
                    else if ("string" == typeof t) try {
                        return o.Double.fromString(t);
                    } catch (t) {
                        i.ok(!1);
                    }
                    else if ("object" === n(t)) {
                        var r, s = null !== (r = t.valueOf()) && void 0 !== r ? r : t.toString();
                        if ("string" == typeof s) try {
                            return o.Double.fromString(t);
                        } catch (t) {
                            i.ok(!1);
                        }
                        else e = Number(s);
                    } else e = Number(t);
                    return new o.Double(e);
                };
            },
            3731: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e() {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, arguments);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8879)), u = r(5761);
                Object.defineProperty(s.prototype, "min", u), Object.defineProperty(s.prototype, "max", u), Object.defineProperty(s.prototype, "expires", u), t.exports = s;
            },
            3743: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t) {
                    return i = "function" == typeof Symbol && "symbol" === n(Symbol.iterator) ? function(t) {
                        return n(t);
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : n(t);
                    }, i(t);
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf || function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s, u, c = {};
                function f(t, e, r) {
                    r || (r = Error);
                    var n = function(r) {
                        function n(r, a, s) {
                            var u;
                            return function(t, e) {
                                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                            }(this, n), u = function(t, e) {
                                return !e || "object" !== i(e) && "function" != typeof e ? function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t) : e;
                            }(this, o(n).call(this, function(t, r, n) {
                                return "string" == typeof e ? e : e(t, r, n);
                            }(r, a, s))), u.code = t, u;
                        }
                        return function(t, e) {
                            if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                            t.prototype = Object.create(e && e.prototype, {
                                constructor: {
                                    value: t,
                                    writable: !0,
                                    configurable: !0
                                }
                            }), e && a(t, e);
                        }(n, r), n;
                    }(r);
                    c[t] = n;
                }
                function l(t, e) {
                    if (Array.isArray(t)) {
                        var r = t.length;
                        return t = t.map(function(t) {
                            return String(t);
                        }), r > 2 ? "one of ".concat(e, " ").concat(t.slice(0, r - 1).join(", "), ", or ") + t[r - 1] : 2 === r ? "one of ".concat(e, " ").concat(t[0], " or ").concat(t[1]) : "of ".concat(e, " ").concat(t[0]);
                    }
                    return "of ".concat(e, " ").concat(String(t));
                }
                f("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError), f("ERR_INVALID_ARG_TYPE", function(t, e, n) {
                    var o, a, u, c, f;
                    if (void 0 === s && (s = r(2402)), s("string" == typeof t, "'name' must be a string"), "string" == typeof e && (a = "not ", e.substr(0, 4) === a) ? (o = "must not be", e = e.replace(/^not /, "")) : o = "must be", function(t, e, r) {
                        return (void 0 === r || r > t.length) && (r = t.length), t.substring(r - 9, r) === e;
                    }(t, " argument")) u = "The ".concat(t, " ").concat(o, " ").concat(l(e, "type"));
                    else {
                        var h = ("number" != typeof f && (f = 0), f + 1 > (c = t).length || -1 === c.indexOf(".", f) ? "argument" : "property");
                        u = 'The "'.concat(t, '" ').concat(h, " ").concat(o, " ").concat(l(e, "type"));
                    }
                    return u + ". Received type ".concat(i(n));
                }, TypeError), f("ERR_INVALID_ARG_VALUE", function(t, e) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "is invalid";
                    void 0 === u && (u = r(7352));
                    var i = u.inspect(e);
                    return i.length > 128 && (i = "".concat(i.slice(0, 128), "...")), "The argument '".concat(t, "' ").concat(n, ". Received ").concat(i);
                }, TypeError, RangeError), f("ERR_INVALID_RETURN_VALUE", function(t, e, r) {
                    var n;
                    return n = r && r.constructor && r.constructor.name ? "instance of ".concat(r.constructor.name) : "type ".concat(i(r)), "Expected ".concat(t, ' to be returned from the "').concat(e, '"') + " function but got ".concat(n, ".");
                }, TypeError), f("ERR_MISSING_ARGS", function() {
                    for(var t = arguments.length, e = new Array(t), n = 0; n < t; n++)e[n] = arguments[n];
                    void 0 === s && (s = r(2402)), s(e.length > 0, "At least one arg needs to be specified");
                    var i = "The ", o = e.length;
                    switch(e = e.map(function(t) {
                        return '"'.concat(t, '"');
                    }), o){
                        case 1:
                            i += "".concat(e[0], " argument");
                            break;
                        case 2:
                            i += "".concat(e[0], " and ").concat(e[1], " arguments");
                            break;
                        default:
                            i += e.slice(0, o - 1).join(", "), i += ", and ".concat(e[o - 1], " arguments");
                    }
                    return "".concat(i, " must be specified");
                }, TypeError), t.exports.codes = c;
            },
            3776: ()=>{},
            3777: (t, e, r)=>{
                "use strict";
                var n = r(9809), i = Object.prototype.toString, o = Object.prototype.hasOwnProperty;
                t.exports = function(t, e, r) {
                    if (!n(e)) throw new TypeError("iterator must be a function");
                    var a, s;
                    arguments.length >= 3 && (a = r), s = t, "[object Array]" === i.call(s) ? function(t, e, r) {
                        for(var n = 0, i = t.length; n < i; n++)o.call(t, n) && (null == r ? e(t[n], n, t) : e.call(r, t[n], n, t));
                    }(t, e, a) : "string" == typeof t ? function(t, e, r) {
                        for(var n = 0, i = t.length; n < i; n++)null == r ? e(t.charAt(n), n, t) : e.call(r, t.charAt(n), n, t);
                    }(t, e, a) : function(t, e, r) {
                        for(var n in t)o.call(t, n) && (null == r ? e(t[n], n, t) : e.call(r, t[n], n, t));
                    }(t, e, a);
                };
            },
            3779: ()=>{},
            3849: (t, e)=>{
                e["des-ecb"] = {
                    key: 8,
                    iv: 0
                }, e["des-cbc"] = e.des = {
                    key: 8,
                    iv: 8
                }, e["des-ede3-cbc"] = e.des3 = {
                    key: 24,
                    iv: 8
                }, e["des-ede3"] = {
                    key: 24,
                    iv: 0
                }, e["des-ede-cbc"] = {
                    key: 16,
                    iv: 8
                }, e["des-ede"] = {
                    key: 16,
                    iv: 0
                };
            },
            3879: (t, e, r)=>{
                var n = r(1679), i = r(1419), o = i.base, a = i.bignum, s = i.constants.der;
                function u(t) {
                    this.enc = "der", this.name = t.name, this.entity = t, this.tree = new c, this.tree._init(t.body);
                }
                function c(t) {
                    o.Node.call(this, "der", t);
                }
                function f(t, e) {
                    var r = t.readUInt8(e);
                    if (t.isError(r)) return r;
                    var n = s.tagClass[r >> 6], i = !(32 & r);
                    if (31 & ~r) r &= 31;
                    else {
                        var o = r;
                        for(r = 0; !(128 & ~o);){
                            if (o = t.readUInt8(e), t.isError(o)) return o;
                            r <<= 7, r |= 127 & o;
                        }
                    }
                    return {
                        cls: n,
                        primitive: i,
                        tag: r,
                        tagStr: s.tag[r]
                    };
                }
                function l(t, e, r) {
                    var n = t.readUInt8(r);
                    if (t.isError(n)) return n;
                    if (!e && 128 === n) return null;
                    if (!(128 & n)) return n;
                    var i = 127 & n;
                    if (i > 4) return t.error("length octect is too long");
                    n = 0;
                    for(var o = 0; o < i; o++){
                        n <<= 8;
                        var a = t.readUInt8(r);
                        if (t.isError(a)) return a;
                        n |= a;
                    }
                    return n;
                }
                t.exports = u, u.prototype.decode = function(t, e) {
                    return t instanceof o.DecoderBuffer || (t = new o.DecoderBuffer(t, e)), this.tree._decode(t, e);
                }, n(c, o.Node), c.prototype._peekTag = function(t, e, r) {
                    if (t.isEmpty()) return !1;
                    var n = t.save(), i = f(t, 'Failed to peek tag: "' + e + '"');
                    return t.isError(i) ? i : (t.restore(n), i.tag === e || i.tagStr === e || i.tagStr + "of" === e || r);
                }, c.prototype._decodeTag = function(t, e, r) {
                    var n = f(t, 'Failed to decode tag of "' + e + '"');
                    if (t.isError(n)) return n;
                    var i = l(t, n.primitive, 'Failed to get length of "' + e + '"');
                    if (t.isError(i)) return i;
                    if (!r && n.tag !== e && n.tagStr !== e && n.tagStr + "of" !== e) return t.error('Failed to match tag: "' + e + '"');
                    if (n.primitive || null !== i) return t.skip(i, 'Failed to match body of: "' + e + '"');
                    var o = t.save(), a = this._skipUntilEnd(t, 'Failed to skip indefinite length body: "' + this.tag + '"');
                    return t.isError(a) ? a : (i = t.offset - o.offset, t.restore(o), t.skip(i, 'Failed to match body of: "' + e + '"'));
                }, c.prototype._skipUntilEnd = function(t, e) {
                    for(;;){
                        var r = f(t, e);
                        if (t.isError(r)) return r;
                        var n, i = l(t, r.primitive, e);
                        if (t.isError(i)) return i;
                        if (n = r.primitive || null !== i ? t.skip(i) : this._skipUntilEnd(t, e), t.isError(n)) return n;
                        if ("end" === r.tagStr) break;
                    }
                }, c.prototype._decodeList = function(t, e, r, n) {
                    for(var i = []; !t.isEmpty();){
                        var o = this._peekTag(t, "end");
                        if (t.isError(o)) return o;
                        var a = r.decode(t, "der", n);
                        if (t.isError(a) && o) break;
                        i.push(a);
                    }
                    return i;
                }, c.prototype._decodeStr = function(t, e) {
                    if ("bitstr" === e) {
                        var r = t.readUInt8();
                        return t.isError(r) ? r : {
                            unused: r,
                            data: t.raw()
                        };
                    }
                    if ("bmpstr" === e) {
                        var n = t.raw();
                        if (n.length % 2 == 1) return t.error("Decoding of string type: bmpstr length mismatch");
                        for(var i = "", o = 0; o < n.length / 2; o++)i += String.fromCharCode(n.readUInt16BE(2 * o));
                        return i;
                    }
                    if ("numstr" === e) {
                        var a = t.raw().toString("ascii");
                        return this._isNumstr(a) ? a : t.error("Decoding of string type: numstr unsupported characters");
                    }
                    if ("octstr" === e) return t.raw();
                    if ("objDesc" === e) return t.raw();
                    if ("printstr" === e) {
                        var s = t.raw().toString("ascii");
                        return this._isPrintstr(s) ? s : t.error("Decoding of string type: printstr unsupported characters");
                    }
                    return /str$/.test(e) ? t.raw().toString() : t.error("Decoding of string type: " + e + " unsupported");
                }, c.prototype._decodeObjid = function(t, e, r) {
                    for(var n, i = [], o = 0; !t.isEmpty();){
                        var a = t.readUInt8();
                        o <<= 7, o |= 127 & a, 128 & a || (i.push(o), o = 0);
                    }
                    128 & a && i.push(o);
                    var s = i[0] / 40 | 0, u = i[0] % 40;
                    if (n = r ? i : [
                        s,
                        u
                    ].concat(i.slice(1)), e) {
                        var c = e[n.join(" ")];
                        void 0 === c && (c = e[n.join(".")]), void 0 !== c && (n = c);
                    }
                    return n;
                }, c.prototype._decodeTime = function(t, e) {
                    var r = t.raw().toString();
                    if ("gentime" === e) var n = 0 | r.slice(0, 4), i = 0 | r.slice(4, 6), o = 0 | r.slice(6, 8), a = 0 | r.slice(8, 10), s = 0 | r.slice(10, 12), u = 0 | r.slice(12, 14);
                    else {
                        if ("utctime" !== e) return t.error("Decoding " + e + " time is not supported yet");
                        n = 0 | r.slice(0, 2), i = 0 | r.slice(2, 4), o = 0 | r.slice(4, 6), a = 0 | r.slice(6, 8), s = 0 | r.slice(8, 10), u = 0 | r.slice(10, 12), n = n < 70 ? 2e3 + n : 1900 + n;
                    }
                    return Date.UTC(n, i - 1, o, a, s, u, 0);
                }, c.prototype._decodeNull = function(t) {
                    return null;
                }, c.prototype._decodeBool = function(t) {
                    var e = t.readUInt8();
                    return t.isError(e) ? e : 0 !== e;
                }, c.prototype._decodeInt = function(t, e) {
                    var r = t.raw(), n = new a(r);
                    return e && (n = e[n.toString(10)] || n), n;
                }, c.prototype._use = function(t, e) {
                    return "function" == typeof t && (t = t(e)), t._getDecoder("der").tree;
                };
            },
            3892: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return o(t, e);
                                var r = ({}).toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? o(t, e) : void 0;
                            }
                        }(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, i = function() {};
                            return {
                                s: i,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: i
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a, s = !0, u = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return s = t.done, t;
                        },
                        e: function(t) {
                            u = !0, a = t;
                        },
                        f: function() {
                            try {
                                s || null == r.return || r.return();
                            } finally{
                                if (u) throw a;
                            }
                        }
                    };
                }
                function o(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function a(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function s(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? a(Object(r), !0).forEach(function(e) {
                            u(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : a(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function u(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var c = r(6948), f = r(3916), l = r(3703), h = r(8677), p = r(7300), d = r(4450), y = r(6665);
                e.preparePopulationOptionsMQ = function(t, e) {
                    var r, n = t._mongooseOptions.populate, i = Object.keys(n).reduce(function(t, e) {
                        return t.concat([
                            n[e]
                        ]);
                    }, []);
                    null != e.lean && i.filter(function(t) {
                        return null == (t && t.options && t.options.lean);
                    }).forEach((r = e.lean, function(t) {
                        t.options || (t.options = {}), null != r && Array.isArray(r.virtuals) && ((r = Object.assign({}, r)).virtuals = r.virtuals.filter(function(e) {
                            return "string" == typeof e && e.startsWith(t.path + ".");
                        }).map(function(e) {
                            return e.slice(t.path.length + 1);
                        })), t.options.lean = r;
                    }));
                    var o = t && t.options && t.options.session || null;
                    null != o && i.forEach(function(t) {
                        null != t.options ? "session" in t.options || (t.options.session = o) : t.options = {
                            session: o
                        };
                    });
                    for(var a = t._fieldsForExec(), u = 0; u < i.length; ++u)i[u] instanceof c ? i[u] = new c(s(s({}, i[u]), {}, {
                        _queryProjection: a,
                        _localModel: t.model
                    })) : (i[u]._queryProjection = a, i[u]._localModel = t.model);
                    return i;
                }, e.createModel = function(t, r, n, i, o) {
                    t.hooks.execPreSync("createModel", r);
                    var a = t.schema ? t.schema.discriminatorMapping : null, s = a && a.isRoot ? a.key : null, u = r[s];
                    if (s && u && t.discriminators) {
                        var c = t.discriminators[u] || h(t.discriminators, u);
                        if (c) {
                            var f = d(i);
                            return e.applyPaths(f, c.schema), new c(void 0, f, !0);
                        }
                    }
                    var l = {
                        skipId: !0,
                        isNew: !1,
                        willInit: !0
                    };
                    return null != o && "defaults" in o && (l.defaults = o.defaults), new t(void 0, n, l);
                }, e.createModelAndInit = function(t, r, n, i, o, a, s) {
                    var u = a ? {
                        populated: a
                    } : void 0, c = e.createModel(t, r, n, i, o);
                    try {
                        c.$init(r, u, s);
                    } catch (t) {
                        s(t, c);
                    }
                }, e.applyPaths = function(t, e, r) {
                    var o, a, s = new Set;
                    if (t) {
                        a = Object.keys(t);
                        for(var u = [], c = 0; c < a.length; ++c){
                            var h = a[c];
                            "-" === a[c][0] && (delete t[h], "-_id" === h ? t._id = 0 : u.push(h.slice(1)));
                        }
                        a = Object.keys(t);
                        for(var d = 0; d < a.length; ++d)if ("+" !== a[d][0]) {
                            var b = t[a[d]];
                            if (p(b) && !("_id" === a[d] && a.length > 1) && (!(a[d] === e.options.discriminatorKey && a.length > 1 && null != b) || b)) {
                                o = !b;
                                break;
                            }
                        }
                        for(var m = 0, v = u; m < v.length; m++){
                            var g = v[m], _ = e.path(g);
                            _ && _.selected && !1 === o ? _ && _.selected && !1 === o && s.add(g) : (t[g] = 0, o = !0);
                        }
                    }
                    var w = [], S = [], O = [];
                    switch(function e(r, n) {
                        if (n || (n = ""), -1 !== O.indexOf(r)) return [];
                        O.push(r);
                        var i = [];
                        return r.eachPath(function(r, a) {
                            if (n && (r = n + "." + r), a.$isSchemaMap || r.endsWith(".$*")) {
                                var s = t && "+" + r in t;
                                a.options && !1 === a.options.select && !s && S.push(r);
                            } else {
                                var u = N(r, a);
                                if (null != u || Array.isArray(a) || !a.$isMongooseArray || a.$isMongooseDocumentArray || (u = N(r, a.caster)), null != u && i.push(u), a.schema) {
                                    var c = e(a.schema, r);
                                    !1 === o && f(t, r, a.schema, w, c);
                                }
                            }
                        }), O.pop(), i;
                    }(e), o){
                        case !0:
                            var j, $ = i(S);
                            try {
                                for($.s(); !(j = $.n()).done;){
                                    var E = j.value;
                                    t[E] = 0;
                                }
                            } catch (t) {
                                $.e(t);
                            } finally{
                                $.f();
                            }
                            break;
                        case !1:
                            e && e.paths._id && e.paths._id.options && !1 === e.paths._id.options.select && (t._id = 0);
                            var A, P = i(w);
                            try {
                                for(P.s(); !(A = P.n()).done;){
                                    var x = A.value;
                                    s.has(x) || y(t, x) || (t[x] = t[x] || 1);
                                }
                            } catch (t) {
                                P.e(t);
                            } finally{
                                P.f();
                            }
                            break;
                        case void 0:
                            if (null == t) break;
                            for(var k = 0, M = Object.keys(t || {}); k < M.length; k++){
                                var T = M[k];
                                T.startsWith("+") && delete t[T];
                            }
                            var B, I = i(S);
                            try {
                                for(I.s(); !(B = I.n()).done;){
                                    var R = B.value;
                                    null == t[R] && (t[R] = 0);
                                }
                            } catch (t) {
                                I.e(t);
                            } finally{
                                I.f();
                            }
                    }
                    function N(i, s) {
                        if (null != t && "boolean" == typeof s.selected) {
                            if (!1 === s.selected && t[i]) r && (t[i] = 0);
                            else if (o || !s.selected || i !== e.options.discriminatorKey || null == t[i] || t[i]) {
                                if (!1 !== o || !s.selected || null == t[i] || t[i]) {
                                    var u = "+" + i;
                                    if (t && u in t) return delete t[u], void (!1 === o && a.length > 1 && !~a.indexOf(i) && !r ? t[i] = 1 : null == o && r && !1 === s.selected && (t[i] = 0));
                                    for(var c = i.split("."), f = "", h = 0; h < c.length; ++h)if (f += f.length ? "." + c[h] : c[h], -1 !== S.indexOf(f)) return;
                                    if (!o && s && s.options && s.options.$skipDiscriminatorCheck) for(var p = "", d = 0; d < c.length; ++d){
                                        p += (0 === p.length ? "" : ".") + c[d];
                                        var y = l(t, p, !1) || l(t, p + ".$", !1);
                                        if (y && "object" !== n(y)) return;
                                    }
                                    return (s.selected ? w : S).push(i), i;
                                }
                                delete t[i];
                            } else delete t[i];
                        }
                    }
                };
            },
            3900: (t, e, r)=>{
                "use strict";
                var n = r(6400), i = r(6750), o = r(3191)(), a = r(1464), s = r(2268), u = n("%Math.floor%");
                t.exports = function(t, e) {
                    if ("function" != typeof t) throw new s("`fn` is not a function");
                    if ("number" != typeof e || e < 0 || e > 4294967295 || u(e) !== e) throw new s("`length` must be a positive 32-bit integer");
                    var r = arguments.length > 2 && !!arguments[2], n = !0, c = !0;
                    if ("length" in t && a) {
                        var f = a(t, "length");
                        f && !f.configurable && (n = !1), f && !f.writable && (c = !1);
                    }
                    return (n || c || !r) && (o ? i(t, "length", e, !0, !0) : i(t, "length", e)), t;
                };
            },
            3916: (t)=>{
                "use strict";
                t.exports = function(t, e, r, n, i) {
                    var o = Object.keys(t).reduce(function(t, r) {
                        return t || r.startsWith(e + ".");
                    }, !1), a = e + "." + r.options.discriminatorKey;
                    o || 1 !== i.length || i[0] !== a || n.splice(n.indexOf(a), 1);
                };
            },
            3940: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e(t) {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            "Can't save() the same doc multiple times in parallel. Document: " + t._doc._id
                        ]);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8213));
                Object.defineProperty(s.prototype, "name", {
                    value: "ParallelSaveError"
                }), t.exports = s;
            },
            3989: (t, e, r)=>{
                var n = r(2635);
                t.exports = function(t) {
                    return (new n).update(t).digest();
                };
            },
            4009: (t, e, r)=>{
                "use strict";
                var n = r(8213), i = r(5188), o = r(3622), a = r(5678), s = r(7352), u = r(8768), c = /(\.\d+$|\.\d+\.)/g;
                t.exports = function(t, e, r, f, l) {
                    if (null == t) return [];
                    if ("string" == typeof t && null != l && i(l, t)) throw new n("refPath `" + t + "` must not be excluded in projection, got " + s.inspect(l));
                    if (c.test(r)) {
                        var h = r.split(c);
                        if ("" === h[h.length - 1]) throw new Error("Can't populate individual element in an array");
                        for(var p = "", d = t, y = 0; y < h.length; y += 2){
                            var b = h[y];
                            if (!d.startsWith(b + ".")) {
                                if (y === h.length - 1) {
                                    p += d, d = "";
                                    break;
                                }
                                throw new Error("Could not normalize ref path, chunk " + b + " not in populated path");
                            }
                            p += d.substring(0, b.length) + h[y + 1], d = d.substring(b.length + 1);
                        }
                        var m = a.get(p, e, o), v = Array.isArray(m) ? m : [
                            m
                        ];
                        return u.array.flatten(v);
                    }
                    var g = a.get(t, e, o);
                    return null != f && f.virtuals.hasOwnProperty(t) ? [
                        f.virtuals[t].applyGetters(void 0, e)
                    ] : Array.isArray(g) ? g : [
                        g
                    ];
                };
            },
            4026: (t, e)=>{
                "use strict";
                e.Collection = function() {
                    throw new Error("Cannot create a collection from browser library");
                }, e.Connection = function() {
                    throw new Error("Cannot create a connection from browser library");
                }, e.BulkWriteResult = function() {};
            },
            4042: (t, e, r)=>{
                "use strict";
                var n = r(4685), i = r(7695), o = r(4104), a = n.rotl32, s = n.sum32, u = n.sum32_5, c = o.ft_1, f = i.BlockHash, l = [
                    1518500249,
                    1859775393,
                    2400959708,
                    3395469782
                ];
                function h() {
                    if (!(this instanceof h)) return new h;
                    f.call(this), this.h = [
                        1732584193,
                        4023233417,
                        2562383102,
                        271733878,
                        3285377520
                    ], this.W = new Array(80);
                }
                n.inherits(h, f), t.exports = h, h.blockSize = 512, h.outSize = 160, h.hmacStrength = 80, h.padLength = 64, h.prototype._update = function(t, e) {
                    for(var r = this.W, n = 0; n < 16; n++)r[n] = t[e + n];
                    for(; n < r.length; n++)r[n] = a(r[n - 3] ^ r[n - 8] ^ r[n - 14] ^ r[n - 16], 1);
                    var i = this.h[0], o = this.h[1], f = this.h[2], h = this.h[3], p = this.h[4];
                    for(n = 0; n < r.length; n++){
                        var d = ~~(n / 20), y = u(a(i, 5), c(d, o, f, h), p, r[n], l[d]);
                        p = h, h = f, f = a(o, 30), o = i, i = y;
                    }
                    this.h[0] = s(this.h[0], i), this.h[1] = s(this.h[1], o), this.h[2] = s(this.h[2], f), this.h[3] = s(this.h[3], h), this.h[4] = s(this.h[4], p);
                }, h.prototype._digest = function(t) {
                    return "hex" === t ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
                };
            },
            4058: (t, e, r)=>{
                "use strict";
                var n = r(3633).Long, i = 9223372036854775807n, o = -9223372036854775808n, a = "Mongoose only supports BigInts between ".concat(o, " and ").concat(i, " because MongoDB does not support arbitrary precision integers");
                t.exports = function(t) {
                    if (null == t) return t;
                    if ("" === t) return null;
                    if ("bigint" == typeof t) {
                        if (t > i || t < o) throw new Error(a);
                        return t;
                    }
                    if (t instanceof n) return t.toBigInt();
                    if ("string" == typeof t || "number" == typeof t) {
                        if ((t = BigInt(t)) > i || t < o) throw new Error(a);
                        return t;
                    }
                    throw new Error('Cannot convert value to BigInt: "'.concat(t, '"'));
                };
            },
            4070: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var i = r(5879);
                t.exports = function(t) {
                    if ("TopologyDescription" !== i(t)) return !1;
                    if (0 === t.servers.size) return !1;
                    var e, r = function(t, e) {
                        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (!r) {
                            if (Array.isArray(t) || (r = function(t, e) {
                                if (t) {
                                    if ("string" == typeof t) return n(t, e);
                                    var r = ({}).toString.call(t).slice(8, -1);
                                    return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? n(t, e) : void 0;
                                }
                            }(t)) || e && t && "number" == typeof t.length) {
                                r && (t = r);
                                var i = 0, o = function() {};
                                return {
                                    s: o,
                                    n: function() {
                                        return i >= t.length ? {
                                            done: !0
                                        } : {
                                            done: !1,
                                            value: t[i++]
                                        };
                                    },
                                    e: function(t) {
                                        throw t;
                                    },
                                    f: o
                                };
                            }
                            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                        }
                        var a, s = !0, u = !1;
                        return {
                            s: function() {
                                r = r.call(t);
                            },
                            n: function() {
                                var t = r.next();
                                return s = t.done, t;
                            },
                            e: function(t) {
                                u = !0, a = t;
                            },
                            f: function() {
                                try {
                                    s || null == r.return || r.return();
                                } finally{
                                    if (u) throw a;
                                }
                            }
                        };
                    }(t.servers.values());
                    try {
                        for(r.s(); !(e = r.n()).done;){
                            var o = e.value;
                            if (!1 === o.host.endsWith(".mongodb.net") || 27017 !== o.port) return !1;
                        }
                    } catch (t) {
                        r.e(t);
                    } finally{
                        r.f();
                    }
                    return !0;
                };
            },
            4104: (t, e, r)=>{
                "use strict";
                var n = r(4685).rotr32;
                function i(t, e, r) {
                    return t & e ^ ~t & r;
                }
                function o(t, e, r) {
                    return t & e ^ t & r ^ e & r;
                }
                function a(t, e, r) {
                    return t ^ e ^ r;
                }
                e.ft_1 = function(t, e, r, n) {
                    return 0 === t ? i(e, r, n) : 1 === t || 3 === t ? a(e, r, n) : 2 === t ? o(e, r, n) : void 0;
                }, e.ch32 = i, e.maj32 = o, e.p32 = a, e.s0_256 = function(t) {
                    return n(t, 2) ^ n(t, 13) ^ n(t, 22);
                }, e.s1_256 = function(t) {
                    return n(t, 6) ^ n(t, 11) ^ n(t, 25);
                }, e.g0_256 = function(t) {
                    return n(t, 7) ^ n(t, 18) ^ t >>> 3;
                }, e.g1_256 = function(t) {
                    return n(t, 17) ^ n(t, 19) ^ t >>> 10;
                };
            },
            4183: (t, e, r)=>{
                "use strict";
                var n = r(118);
                t.exports = function() {
                    return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : n;
                };
            },
            4186: (t, e, r)=>{
                "use strict";
                function n(t) {
                    var e = this;
                    this.next = null, this.entry = null, this.finish = function() {
                        !function(t, e) {
                            var r = t.entry;
                            for(t.entry = null; r;){
                                var n = r.callback;
                                e.pendingcb--, n(undefined), r = r.next;
                            }
                            e.corkedRequestsFree.next = t;
                        }(e, t);
                    };
                }
                var i;
                t.exports = j, j.WritableState = O;
                var o, a = {
                    deprecate: r(3340)
                }, s = r(6871), u = r(5832).Buffer, c = (void 0 !== r.g ? r.g : "undefined" != typeof window ? window : "undefined" != typeof self ? self : {}).Uint8Array || function() {}, f = r(6222), l = r(9681).getHighWaterMark, h = r(198).F, p = h.ERR_INVALID_ARG_TYPE, d = h.ERR_METHOD_NOT_IMPLEMENTED, y = h.ERR_MULTIPLE_CALLBACK, b = h.ERR_STREAM_CANNOT_PIPE, m = h.ERR_STREAM_DESTROYED, v = h.ERR_STREAM_NULL_VALUES, g = h.ERR_STREAM_WRITE_AFTER_END, _ = h.ERR_UNKNOWN_ENCODING, w = f.errorOrDestroy;
                function S() {}
                function O(t, e, o) {
                    i = i || r(4560), t = t || {}, "boolean" != typeof o && (o = e instanceof i), this.objectMode = !!t.objectMode, o && (this.objectMode = this.objectMode || !!t.writableObjectMode), this.highWaterMark = l(this, t, "writableHighWaterMark", o), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
                    var a = !1 === t.decodeStrings;
                    this.decodeStrings = !a, this.defaultEncoding = t.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(t) {
                        !function(t, e) {
                            var r = t._writableState, n = r.sync, i = r.writecb;
                            if ("function" != typeof i) throw new y;
                            if (function(t) {
                                t.writing = !1, t.writecb = null, t.length -= t.writelen, t.writelen = 0;
                            }(r), e) !function(t, e, r, n, i) {
                                --e.pendingcb, r ? (({
                                    env: {}
                                }).nextTick(i, n), ({
                                    env: {}
                                }).nextTick(k, t, e), t._writableState.errorEmitted = !0, w(t, n)) : (i(n), t._writableState.errorEmitted = !0, w(t, n), k(t, e));
                            }(t, r, n, e, i);
                            else {
                                var o = P(r) || t.destroyed;
                                o || r.corked || r.bufferProcessing || !r.bufferedRequest || A(t, r), n ? ({
                                    env: {}
                                }).nextTick(E, t, r, o, i) : E(t, r, o, i);
                            }
                        }(e, t);
                    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = !1 !== t.emitClose, this.autoDestroy = !!t.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new n(this);
                }
                function j(t) {
                    var e = this instanceof (i = i || r(4560));
                    if (!e && !o.call(j, this)) return new j(t);
                    this._writableState = new O(t, this, e), this.writable = !0, t && ("function" == typeof t.write && (this._write = t.write), "function" == typeof t.writev && (this._writev = t.writev), "function" == typeof t.destroy && (this._destroy = t.destroy), "function" == typeof t.final && (this._final = t.final)), s.call(this);
                }
                function $(t, e, r, n, i, o, a) {
                    e.writelen = n, e.writecb = a, e.writing = !0, e.sync = !0, e.destroyed ? e.onwrite(new m("write")) : r ? t._writev(i, e.onwrite) : t._write(i, o, e.onwrite), e.sync = !1;
                }
                function E(t, e, r, n) {
                    r || function(t, e) {
                        0 === e.length && e.needDrain && (e.needDrain = !1, t.emit("drain"));
                    }(t, e), e.pendingcb--, n(), k(t, e);
                }
                function A(t, e) {
                    e.bufferProcessing = !0;
                    var r = e.bufferedRequest;
                    if (t._writev && r && r.next) {
                        var i = e.bufferedRequestCount, o = new Array(i), a = e.corkedRequestsFree;
                        a.entry = r;
                        for(var s = 0, u = !0; r;)o[s] = r, r.isBuf || (u = !1), r = r.next, s += 1;
                        o.allBuffers = u, $(t, e, !0, e.length, o, "", a.finish), e.pendingcb++, e.lastBufferedRequest = null, a.next ? (e.corkedRequestsFree = a.next, a.next = null) : e.corkedRequestsFree = new n(e), e.bufferedRequestCount = 0;
                    } else {
                        for(; r;){
                            var c = r.chunk, f = r.encoding, l = r.callback;
                            if ($(t, e, !1, e.objectMode ? 1 : c.length, c, f, l), r = r.next, e.bufferedRequestCount--, e.writing) break;
                        }
                        null === r && (e.lastBufferedRequest = null);
                    }
                    e.bufferedRequest = r, e.bufferProcessing = !1;
                }
                function P(t) {
                    return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing;
                }
                function x(t, e) {
                    t._final(function(r) {
                        e.pendingcb--, r && w(t, r), e.prefinished = !0, t.emit("prefinish"), k(t, e);
                    });
                }
                function k(t, e) {
                    var r = P(e);
                    if (r && (function(t, e) {
                        e.prefinished || e.finalCalled || ("function" != typeof t._final || e.destroyed ? (e.prefinished = !0, t.emit("prefinish")) : (e.pendingcb++, e.finalCalled = !0, ({
                            env: {}
                        }).nextTick(x, t, e)));
                    }(t, e), 0 === e.pendingcb && (e.finished = !0, t.emit("finish"), e.autoDestroy))) {
                        var n = t._readableState;
                        (!n || n.autoDestroy && n.endEmitted) && t.destroy();
                    }
                    return r;
                }
                r(1679)(j, s), O.prototype.getBuffer = function() {
                    for(var t = this.bufferedRequest, e = []; t;)e.push(t), t = t.next;
                    return e;
                }, function() {
                    try {
                        Object.defineProperty(O.prototype, "buffer", {
                            get: a.deprecate(function() {
                                return this.getBuffer();
                            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                        });
                    } catch (t) {}
                }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (o = Function.prototype[Symbol.hasInstance], Object.defineProperty(j, Symbol.hasInstance, {
                    value: function(t) {
                        return !!o.call(this, t) || this === j && t && t._writableState instanceof O;
                    }
                })) : o = function(t) {
                    return t instanceof this;
                }, j.prototype.pipe = function() {
                    w(this, new b);
                }, j.prototype.write = function(t, e, r) {
                    var n, i = this._writableState, o = !1, a = !i.objectMode && (n = t, u.isBuffer(n) || n instanceof c);
                    return a && !u.isBuffer(t) && (t = function(t) {
                        return u.from(t);
                    }(t)), "function" == typeof e && (r = e, e = null), a ? e = "buffer" : e || (e = i.defaultEncoding), "function" != typeof r && (r = S), i.ending ? function(t, e) {
                        var r = new g;
                        w(t, r), ({
                            env: {}
                        }).nextTick(e, r);
                    }(this, r) : (a || function(t, e, r, n) {
                        var i;
                        return null === r ? i = new v : "string" == typeof r || e.objectMode || (i = new p("chunk", [
                            "string",
                            "Buffer"
                        ], r)), !i || (w(t, i), ({
                            env: {}
                        }).nextTick(n, i), !1);
                    }(this, i, t, r)) && (i.pendingcb++, o = function(t, e, r, n, i, o) {
                        if (!r) {
                            var a = function(t, e, r) {
                                return t.objectMode || !1 === t.decodeStrings || "string" != typeof e || (e = u.from(e, r)), e;
                            }(e, n, i);
                            n !== a && (r = !0, i = "buffer", n = a);
                        }
                        var s = e.objectMode ? 1 : n.length;
                        e.length += s;
                        var c = e.length < e.highWaterMark;
                        if (c || (e.needDrain = !0), e.writing || e.corked) {
                            var f = e.lastBufferedRequest;
                            e.lastBufferedRequest = {
                                chunk: n,
                                encoding: i,
                                isBuf: r,
                                callback: o,
                                next: null
                            }, f ? f.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest, e.bufferedRequestCount += 1;
                        } else $(t, e, !1, s, n, i, o);
                        return c;
                    }(this, i, a, t, e, r)), o;
                }, j.prototype.cork = function() {
                    this._writableState.corked++;
                }, j.prototype.uncork = function() {
                    var t = this._writableState;
                    t.corked && (t.corked--, t.writing || t.corked || t.bufferProcessing || !t.bufferedRequest || A(this, t));
                }, j.prototype.setDefaultEncoding = function(t) {
                    if ("string" == typeof t && (t = t.toLowerCase()), !([
                        "hex",
                        "utf8",
                        "utf-8",
                        "ascii",
                        "binary",
                        "base64",
                        "ucs2",
                        "ucs-2",
                        "utf16le",
                        "utf-16le",
                        "raw"
                    ].indexOf((t + "").toLowerCase()) > -1)) throw new _(t);
                    return this._writableState.defaultEncoding = t, this;
                }, Object.defineProperty(j.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState && this._writableState.getBuffer();
                    }
                }), Object.defineProperty(j.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.highWaterMark;
                    }
                }), j.prototype._write = function(t, e, r) {
                    r(new d("_write()"));
                }, j.prototype._writev = null, j.prototype.end = function(t, e, r) {
                    var n = this._writableState;
                    return "function" == typeof t ? (r = t, t = null, e = null) : "function" == typeof e && (r = e, e = null), null != t && this.write(t, e), n.corked && (n.corked = 1, this.uncork()), n.ending || function(t, e, r) {
                        e.ending = !0, k(t, e), r && (e.finished ? ({
                            env: {}
                        }).nextTick(r) : t.once("finish", r)), e.ended = !0, t.writable = !1;
                    }(this, n, r), this;
                }, Object.defineProperty(j.prototype, "writableLength", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.length;
                    }
                }), Object.defineProperty(j.prototype, "destroyed", {
                    enumerable: !1,
                    get: function() {
                        return void 0 !== this._writableState && this._writableState.destroyed;
                    },
                    set: function(t) {
                        this._writableState && (this._writableState.destroyed = t);
                    }
                }), j.prototype.destroy = f.destroy, j.prototype._undestroy = f.undestroy, j.prototype._destroy = function(t, e) {
                    e(t);
                };
            },
            4224: (t, e, r)=>{
                "use strict";
                var n = r(6511).ctor("require", "modify", "init", "default", "ignore");
                function i() {
                    this.activePaths = new n;
                }
                t.exports = i, i.prototype.strictMode = !0, i.prototype.fullPath = void 0, i.prototype.selected = void 0, i.prototype.shardval = void 0, i.prototype.saveError = void 0, i.prototype.validationError = void 0, i.prototype.adhocPaths = void 0, i.prototype.removing = void 0, i.prototype.inserting = void 0, i.prototype.saving = void 0, i.prototype.version = void 0, i.prototype._id = void 0, i.prototype.ownerDocument = void 0, i.prototype.populate = void 0, i.prototype.populated = void 0, i.prototype.primitiveAtomics = void 0, i.prototype.wasPopulated = !1, i.prototype.scope = void 0, i.prototype.session = null, i.prototype.pathsToScopes = null, i.prototype.cachedRequired = null;
            },
            4252: (t, e, r)=>{
                var n = r(5832).Buffer, i = r(6876);
                function o(t) {
                    return t._prev = t._cipher.encryptBlock(t._prev), t._prev;
                }
                e.encrypt = function(t, e) {
                    for(; t._cache.length < e.length;)t._cache = n.concat([
                        t._cache,
                        o(t)
                    ]);
                    var r = t._cache.slice(0, e.length);
                    return t._cache = t._cache.slice(e.length), i(e, r);
                };
            },
            4258: (t, e, r)=>{
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(1620).Reporter, o = r(1620).EncoderBuffer, a = r(1620).DecoderBuffer, s = r(3528), u = [
                    "seq",
                    "seqof",
                    "set",
                    "setof",
                    "objid",
                    "bool",
                    "gentime",
                    "utctime",
                    "null_",
                    "enum",
                    "int",
                    "objDesc",
                    "bitstr",
                    "bmpstr",
                    "charstr",
                    "genstr",
                    "graphstr",
                    "ia5str",
                    "iso646str",
                    "numstr",
                    "octstr",
                    "printstr",
                    "t61str",
                    "unistr",
                    "utf8str",
                    "videostr"
                ], c = [
                    "key",
                    "obj",
                    "use",
                    "optional",
                    "explicit",
                    "implicit",
                    "def",
                    "choice",
                    "any",
                    "contains"
                ].concat(u);
                function f(t, e) {
                    var r = {};
                    this._baseState = r, r.enc = t, r.parent = e || null, r.children = null, r.tag = null, r.args = null, r.reverseArgs = null, r.choice = null, r.optional = !1, r.any = !1, r.obj = !1, r.use = null, r.useDecoder = null, r.key = null, r.default = null, r.explicit = null, r.implicit = null, r.contains = null, r.parent || (r.children = [], this._wrap());
                }
                t.exports = f;
                var l = [
                    "enc",
                    "parent",
                    "children",
                    "tag",
                    "args",
                    "reverseArgs",
                    "choice",
                    "optional",
                    "any",
                    "obj",
                    "use",
                    "alteredUse",
                    "key",
                    "default",
                    "explicit",
                    "implicit",
                    "contains"
                ];
                f.prototype.clone = function() {
                    var t = this._baseState, e = {};
                    l.forEach(function(r) {
                        e[r] = t[r];
                    });
                    var r = new this.constructor(e.parent);
                    return r._baseState = e, r;
                }, f.prototype._wrap = function() {
                    var t = this._baseState;
                    c.forEach(function(e) {
                        this[e] = function() {
                            var r = new this.constructor(this);
                            return t.children.push(r), r[e].apply(r, arguments);
                        };
                    }, this);
                }, f.prototype._init = function(t) {
                    var e = this._baseState;
                    s(null === e.parent), t.call(this), e.children = e.children.filter(function(t) {
                        return t._baseState.parent === this;
                    }, this), s.equal(e.children.length, 1, "Root node can have only one child");
                }, f.prototype._useArgs = function(t) {
                    var e = this._baseState, r = t.filter(function(t) {
                        return t instanceof this.constructor;
                    }, this);
                    t = t.filter(function(t) {
                        return !(t instanceof this.constructor);
                    }, this), 0 !== r.length && (s(null === e.children), e.children = r, r.forEach(function(t) {
                        t._baseState.parent = this;
                    }, this)), 0 !== t.length && (s(null === e.args), e.args = t, e.reverseArgs = t.map(function(t) {
                        if ("object" !== n(t) || t.constructor !== Object) return t;
                        var e = {};
                        return Object.keys(t).forEach(function(r) {
                            r == (0 | r) && (r |= 0);
                            var n = t[r];
                            e[n] = r;
                        }), e;
                    }));
                }, [
                    "_peekTag",
                    "_decodeTag",
                    "_use",
                    "_decodeStr",
                    "_decodeObjid",
                    "_decodeTime",
                    "_decodeNull",
                    "_decodeInt",
                    "_decodeBool",
                    "_decodeList",
                    "_encodeComposite",
                    "_encodeStr",
                    "_encodeObjid",
                    "_encodeTime",
                    "_encodeNull",
                    "_encodeInt",
                    "_encodeBool"
                ].forEach(function(t) {
                    f.prototype[t] = function() {
                        var e = this._baseState;
                        throw new Error(t + " not implemented for encoding: " + e.enc);
                    };
                }), u.forEach(function(t) {
                    f.prototype[t] = function() {
                        var e = this._baseState, r = Array.prototype.slice.call(arguments);
                        return s(null === e.tag), e.tag = t, this._useArgs(r), this;
                    };
                }), f.prototype.use = function(t) {
                    s(t);
                    var e = this._baseState;
                    return s(null === e.use), e.use = t, this;
                }, f.prototype.optional = function() {
                    return this._baseState.optional = !0, this;
                }, f.prototype.def = function(t) {
                    var e = this._baseState;
                    return s(null === e.default), e.default = t, e.optional = !0, this;
                }, f.prototype.explicit = function(t) {
                    var e = this._baseState;
                    return s(null === e.explicit && null === e.implicit), e.explicit = t, this;
                }, f.prototype.implicit = function(t) {
                    var e = this._baseState;
                    return s(null === e.explicit && null === e.implicit), e.implicit = t, this;
                }, f.prototype.obj = function() {
                    var t = this._baseState, e = Array.prototype.slice.call(arguments);
                    return t.obj = !0, 0 !== e.length && this._useArgs(e), this;
                }, f.prototype.key = function(t) {
                    var e = this._baseState;
                    return s(null === e.key), e.key = t, this;
                }, f.prototype.any = function() {
                    return this._baseState.any = !0, this;
                }, f.prototype.choice = function(t) {
                    var e = this._baseState;
                    return s(null === e.choice), e.choice = t, this._useArgs(Object.keys(t).map(function(e) {
                        return t[e];
                    })), this;
                }, f.prototype.contains = function(t) {
                    var e = this._baseState;
                    return s(null === e.use), e.contains = t, this;
                }, f.prototype._decode = function(t, e) {
                    var r = this._baseState;
                    if (null === r.parent) return t.wrapResult(r.children[0]._decode(t, e));
                    var n, i = r.default, o = !0, s = null;
                    if (null !== r.key && (s = t.enterKey(r.key)), r.optional) {
                        var u = null;
                        if (null !== r.explicit ? u = r.explicit : null !== r.implicit ? u = r.implicit : null !== r.tag && (u = r.tag), null !== u || r.any) {
                            if (o = this._peekTag(t, u, r.any), t.isError(o)) return o;
                        } else {
                            var c = t.save();
                            try {
                                null === r.choice ? this._decodeGeneric(r.tag, t, e) : this._decodeChoice(t, e), o = !0;
                            } catch (t) {
                                o = !1;
                            }
                            t.restore(c);
                        }
                    }
                    if (r.obj && o && (n = t.enterObject()), o) {
                        if (null !== r.explicit) {
                            var f = this._decodeTag(t, r.explicit);
                            if (t.isError(f)) return f;
                            t = f;
                        }
                        var l = t.offset;
                        if (null === r.use && null === r.choice) {
                            r.any && (c = t.save());
                            var h = this._decodeTag(t, null !== r.implicit ? r.implicit : r.tag, r.any);
                            if (t.isError(h)) return h;
                            r.any ? i = t.raw(c) : t = h;
                        }
                        if (e && e.track && null !== r.tag && e.track(t.path(), l, t.length, "tagged"), e && e.track && null !== r.tag && e.track(t.path(), t.offset, t.length, "content"), r.any || (i = null === r.choice ? this._decodeGeneric(r.tag, t, e) : this._decodeChoice(t, e)), t.isError(i)) return i;
                        if (r.any || null !== r.choice || null === r.children || r.children.forEach(function(r) {
                            r._decode(t, e);
                        }), r.contains && ("octstr" === r.tag || "bitstr" === r.tag)) {
                            var p = new a(i);
                            i = this._getUse(r.contains, t._reporterState.obj)._decode(p, e);
                        }
                    }
                    return r.obj && o && (i = t.leaveObject(n)), null === r.key || null === i && !0 !== o ? null !== s && t.exitKey(s) : t.leaveKey(s, r.key, i), i;
                }, f.prototype._decodeGeneric = function(t, e, r) {
                    var n = this._baseState;
                    return "seq" === t || "set" === t ? null : "seqof" === t || "setof" === t ? this._decodeList(e, t, n.args[0], r) : /str$/.test(t) ? this._decodeStr(e, t, r) : "objid" === t && n.args ? this._decodeObjid(e, n.args[0], n.args[1], r) : "objid" === t ? this._decodeObjid(e, null, null, r) : "gentime" === t || "utctime" === t ? this._decodeTime(e, t, r) : "null_" === t ? this._decodeNull(e, r) : "bool" === t ? this._decodeBool(e, r) : "objDesc" === t ? this._decodeStr(e, t, r) : "int" === t || "enum" === t ? this._decodeInt(e, n.args && n.args[0], r) : null !== n.use ? this._getUse(n.use, e._reporterState.obj)._decode(e, r) : e.error("unknown tag: " + t);
                }, f.prototype._getUse = function(t, e) {
                    var r = this._baseState;
                    return r.useDecoder = this._use(t, e), s(null === r.useDecoder._baseState.parent), r.useDecoder = r.useDecoder._baseState.children[0], r.implicit !== r.useDecoder._baseState.implicit && (r.useDecoder = r.useDecoder.clone(), r.useDecoder._baseState.implicit = r.implicit), r.useDecoder;
                }, f.prototype._decodeChoice = function(t, e) {
                    var r = this._baseState, n = null, i = !1;
                    return Object.keys(r.choice).some(function(o) {
                        var a = t.save(), s = r.choice[o];
                        try {
                            var u = s._decode(t, e);
                            if (t.isError(u)) return !1;
                            n = {
                                type: o,
                                value: u
                            }, i = !0;
                        } catch (e) {
                            return t.restore(a), !1;
                        }
                        return !0;
                    }, this), i ? n : t.error("Choice not matched");
                }, f.prototype._createEncoderBuffer = function(t) {
                    return new o(t, this.reporter);
                }, f.prototype._encode = function(t, e, r) {
                    var n = this._baseState;
                    if (null === n.default || n.default !== t) {
                        var i = this._encodeValue(t, e, r);
                        if (void 0 !== i && !this._skipDefault(i, e, r)) return i;
                    }
                }, f.prototype._encodeValue = function(t, e, r) {
                    var o = this._baseState;
                    if (null === o.parent) return o.children[0]._encode(t, e || new i);
                    var a = null;
                    if (this.reporter = e, o.optional && void 0 === t) {
                        if (null === o.default) return;
                        t = o.default;
                    }
                    var s = null, u = !1;
                    if (o.any) a = this._createEncoderBuffer(t);
                    else if (o.choice) a = this._encodeChoice(t, e);
                    else if (o.contains) s = this._getUse(o.contains, r)._encode(t, e), u = !0;
                    else if (o.children) s = o.children.map(function(r) {
                        if ("null_" === r._baseState.tag) return r._encode(null, e, t);
                        if (null === r._baseState.key) return e.error("Child should have a key");
                        var i = e.enterKey(r._baseState.key);
                        if ("object" !== n(t)) return e.error("Child expected, but input is not object");
                        var o = r._encode(t[r._baseState.key], e, t);
                        return e.leaveKey(i), o;
                    }, this).filter(function(t) {
                        return t;
                    }), s = this._createEncoderBuffer(s);
                    else if ("seqof" === o.tag || "setof" === o.tag) {
                        if (!o.args || 1 !== o.args.length) return e.error("Too many args for : " + o.tag);
                        if (!Array.isArray(t)) return e.error("seqof/setof, but data is not Array");
                        var c = this.clone();
                        c._baseState.implicit = null, s = this._createEncoderBuffer(t.map(function(r) {
                            var n = this._baseState;
                            return this._getUse(n.args[0], t)._encode(r, e);
                        }, c));
                    } else null !== o.use ? a = this._getUse(o.use, r)._encode(t, e) : (s = this._encodePrimitive(o.tag, t), u = !0);
                    if (!o.any && null === o.choice) {
                        var f = null !== o.implicit ? o.implicit : o.tag, l = null === o.implicit ? "universal" : "context";
                        null === f ? null === o.use && e.error("Tag could be omitted only for .use()") : null === o.use && (a = this._encodeComposite(f, u, l, s));
                    }
                    return null !== o.explicit && (a = this._encodeComposite(o.explicit, !1, "context", a)), a;
                }, f.prototype._encodeChoice = function(t, e) {
                    var r = this._baseState, n = r.choice[t.type];
                    return n || s(!1, t.type + " not found in " + JSON.stringify(Object.keys(r.choice))), n._encode(t.value, e);
                }, f.prototype._encodePrimitive = function(t, e) {
                    var r = this._baseState;
                    if (/str$/.test(t)) return this._encodeStr(e, t);
                    if ("objid" === t && r.args) return this._encodeObjid(e, r.reverseArgs[0], r.args[1]);
                    if ("objid" === t) return this._encodeObjid(e, null, null);
                    if ("gentime" === t || "utctime" === t) return this._encodeTime(e, t);
                    if ("null_" === t) return this._encodeNull();
                    if ("int" === t || "enum" === t) return this._encodeInt(e, r.args && r.reverseArgs[0]);
                    if ("bool" === t) return this._encodeBool(e);
                    if ("objDesc" === t) return this._encodeStr(e, t);
                    throw new Error("Unsupported tag: " + t);
                }, f.prototype._isNumstr = function(t) {
                    return /^[0-9 ]*$/.test(t);
                }, f.prototype._isPrintstr = function(t) {
                    return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(t);
                };
            },
            4276: (t, e, r)=>{
                "use strict";
                var n = 65536, i = r(9732).Buffer, o = r.g.crypto || r.g.msCrypto;
                o && o.getRandomValues ? t.exports = function(t, e) {
                    if (t > 4294967295) throw new RangeError("requested too many random bytes");
                    var r = i.allocUnsafe(t);
                    if (t > 0) {
                        if (t > n) for(var a = 0; a < t; a += n)o.getRandomValues(r.slice(a, a + n));
                        else o.getRandomValues(r);
                    }
                    return "function" == typeof e ? ({
                        env: {}
                    }).nextTick(function() {
                        e(null, r);
                    }) : r;
                } : t.exports = function() {
                    throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
                };
            },
            4301: (t, e, r)=>{
                "use strict";
                var n = r(9539), i = r(2793), o = r(3305), a = r(5549), s = r(608);
                t.exports = function t(e, r, u, c) {
                    var f, l = Object.keys(r), h = 0, p = l.length;
                    if (u = u || "", !(c = c || new WeakSet).has(r)) {
                        for(c.add(r); h < p;)if (f = l[h++], (u || "discriminators" !== f && "base" !== f && "_applyDiscriminators" !== f && "_userProvidedOptions" !== f && "options" !== f && "tree" !== f) && !("tree" === u && null != r && r.instanceOfSchema || i.has(f))) {
                            if (null == e[f]) e[f] = r[f];
                            else if (s(r[f])) {
                                if (s(e[f]) || (e[f] = {}), null != r[f]) {
                                    if (r[f].$isSingleNested && e[f].$isMongooseDocumentArray || r[f].$isMongooseDocumentArray && e[f].$isSingleNested || r[f].$isMongooseDocumentArrayElement && e[f].$isMongooseDocumentArrayElement) continue;
                                    if (r[f].instanceOfSchema) {
                                        e[f].instanceOfSchema ? n(e[f], r[f].clone(), !0) : e[f] = r[f].clone();
                                        continue;
                                    }
                                    if (o(r[f], "ObjectId")) {
                                        e[f] = new a(r[f]);
                                        continue;
                                    }
                                }
                                t(e[f], r[f], u ? u + "." + f : f, c);
                            }
                        }
                        null != r && r.instanceOfSchema && (e.tree = Object.assign({}, r.tree, e.tree));
                    }
                };
            },
            4327: (t)=>{
                "use strict";
                t.exports = function(t, e, r, n) {
                    return r ? n ? {
                        bsonType: e
                    } : {
                        bsonType: [
                            e,
                            "null"
                        ]
                    } : n ? {
                        type: t
                    } : {
                        type: [
                            t,
                            "null"
                        ]
                    };
                };
            },
            4432: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    i = function() {
                        return e;
                    };
                    var t, e = {}, r = Object.prototype, o = r.hasOwnProperty, a = Object.defineProperty || function(t, e, r) {
                        t[e] = r.value;
                    }, s = "function" == typeof Symbol ? Symbol : {}, u = s.iterator || "@@iterator", c = s.asyncIterator || "@@asyncIterator", f = s.toStringTag || "@@toStringTag";
                    function l(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e];
                    }
                    try {
                        l({}, "");
                    } catch (t) {
                        l = function(t, e, r) {
                            return t[e] = r;
                        };
                    }
                    function h(t, e, r, n) {
                        var i = e && e.prototype instanceof g ? e : g, o = Object.create(i.prototype), s = new T(n || []);
                        return a(o, "_invoke", {
                            value: P(t, r, s)
                        }), o;
                    }
                    function p(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            };
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            };
                        }
                    }
                    e.wrap = h;
                    var d = "suspendedStart", y = "suspendedYield", b = "executing", m = "completed", v = {};
                    function g() {}
                    function _() {}
                    function w() {}
                    var S = {};
                    l(S, u, function() {
                        return this;
                    });
                    var O = Object.getPrototypeOf, j = O && O(O(B([])));
                    j && j !== r && o.call(j, u) && (S = j);
                    var $ = w.prototype = g.prototype = Object.create(S);
                    function E(t) {
                        [
                            "next",
                            "throw",
                            "return"
                        ].forEach(function(e) {
                            l(t, e, function(t) {
                                return this._invoke(e, t);
                            });
                        });
                    }
                    function A(t, e) {
                        function r(i, a, s, u) {
                            var c = p(t[i], t, a);
                            if ("throw" !== c.type) {
                                var f = c.arg, l = f.value;
                                return l && "object" == n(l) && o.call(l, "__await") ? e.resolve(l.__await).then(function(t) {
                                    r("next", t, s, u);
                                }, function(t) {
                                    r("throw", t, s, u);
                                }) : e.resolve(l).then(function(t) {
                                    f.value = t, s(f);
                                }, function(t) {
                                    return r("throw", t, s, u);
                                });
                            }
                            u(c.arg);
                        }
                        var i;
                        a(this, "_invoke", {
                            value: function(t, n) {
                                function o() {
                                    return new e(function(e, i) {
                                        r(t, n, e, i);
                                    });
                                }
                                return i = i ? i.then(o, o) : o();
                            }
                        });
                    }
                    function P(e, r, n) {
                        var i = d;
                        return function(o, a) {
                            if (i === b) throw Error("Generator is already running");
                            if (i === m) {
                                if ("throw" === o) throw a;
                                return {
                                    value: t,
                                    done: !0
                                };
                            }
                            for(n.method = o, n.arg = a;;){
                                var s = n.delegate;
                                if (s) {
                                    var u = x(s, n);
                                    if (u) {
                                        if (u === v) continue;
                                        return u;
                                    }
                                }
                                if ("next" === n.method) n.sent = n._sent = n.arg;
                                else if ("throw" === n.method) {
                                    if (i === d) throw i = m, n.arg;
                                    n.dispatchException(n.arg);
                                } else "return" === n.method && n.abrupt("return", n.arg);
                                i = b;
                                var c = p(e, r, n);
                                if ("normal" === c.type) {
                                    if (i = n.done ? m : y, c.arg === v) continue;
                                    return {
                                        value: c.arg,
                                        done: n.done
                                    };
                                }
                                "throw" === c.type && (i = m, n.method = "throw", n.arg = c.arg);
                            }
                        };
                    }
                    function x(e, r) {
                        var n = r.method, i = e.iterator[n];
                        if (i === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, x(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), v;
                        var o = p(i, e.iterator, r.arg);
                        if ("throw" === o.type) return r.method = "throw", r.arg = o.arg, r.delegate = null, v;
                        var a = o.arg;
                        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, v) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, v);
                    }
                    function k(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
                    }
                    function M(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e;
                    }
                    function T(t) {
                        this.tryEntries = [
                            {
                                tryLoc: "root"
                            }
                        ], t.forEach(k, this), this.reset(!0);
                    }
                    function B(e) {
                        if (e || "" === e) {
                            var r = e[u];
                            if (r) return r.call(e);
                            if ("function" == typeof e.next) return e;
                            if (!isNaN(e.length)) {
                                var i = -1, a = function r() {
                                    for(; ++i < e.length;)if (o.call(e, i)) return r.value = e[i], r.done = !1, r;
                                    return r.value = t, r.done = !0, r;
                                };
                                return a.next = a;
                            }
                        }
                        throw new TypeError(n(e) + " is not iterable");
                    }
                    return _.prototype = w, a($, "constructor", {
                        value: w,
                        configurable: !0
                    }), a(w, "constructor", {
                        value: _,
                        configurable: !0
                    }), _.displayName = l(w, f, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === _ || "GeneratorFunction" === (e.displayName || e.name));
                    }, e.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, w) : (t.__proto__ = w, l(t, f, "GeneratorFunction")), t.prototype = Object.create($), t;
                    }, e.awrap = function(t) {
                        return {
                            __await: t
                        };
                    }, E(A.prototype), l(A.prototype, c, function() {
                        return this;
                    }), e.AsyncIterator = A, e.async = function(t, r, n, i, o) {
                        void 0 === o && (o = Promise);
                        var a = new A(h(t, r, n, i), o);
                        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
                            return t.done ? t.value : a.next();
                        });
                    }, E($), l($, f, "Generator"), l($, u, function() {
                        return this;
                    }), l($, "toString", function() {
                        return "[object Generator]";
                    }), e.keys = function(t) {
                        var e = Object(t), r = [];
                        for(var n in e)r.push(n);
                        return r.reverse(), function t() {
                            for(; r.length;){
                                var n = r.pop();
                                if (n in e) return t.value = n, t.done = !1, t;
                            }
                            return t.done = !0, t;
                        };
                    }, e.values = B, T.prototype = {
                        constructor: T,
                        reset: function(e) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(M), !e) for(var r in this)"t" === r.charAt(0) && o.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval;
                        },
                        dispatchException: function(e) {
                            if (this.done) throw e;
                            var r = this;
                            function n(n, i) {
                                return s.type = "throw", s.arg = e, r.next = n, i && (r.method = "next", r.arg = t), !!i;
                            }
                            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                                var a = this.tryEntries[i], s = a.completion;
                                if ("root" === a.tryLoc) return n("end");
                                if (a.tryLoc <= this.prev) {
                                    var u = o.call(a, "catchLoc"), c = o.call(a, "finallyLoc");
                                    if (u && c) {
                                        if (this.prev < a.catchLoc) return n(a.catchLoc, !0);
                                        if (this.prev < a.finallyLoc) return n(a.finallyLoc);
                                    } else if (u) {
                                        if (this.prev < a.catchLoc) return n(a.catchLoc, !0);
                                    } else {
                                        if (!c) throw Error("try statement without catch or finally");
                                        if (this.prev < a.finallyLoc) return n(a.finallyLoc);
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                                var n = this.tryEntries[r];
                                if (n.tryLoc <= this.prev && o.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                                    var i = n;
                                    break;
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, v) : this.complete(a);
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), v;
                        },
                        finish: function(t) {
                            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), M(r), v;
                            }
                        },
                        catch: function(t) {
                            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var i = n.arg;
                                        M(r);
                                    }
                                    return i;
                                }
                            }
                            throw Error("illegal catch attempt");
                        },
                        delegateYield: function(e, r, n) {
                            return this.delegate = {
                                iterator: B(e),
                                resultName: r,
                                nextLoc: n
                            }, "next" === this.method && (this.arg = t), v;
                        }
                    }, e;
                }
                function o(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return a(t, e);
                                var r = ({}).toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? a(t, e) : void 0;
                            }
                        }(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, i = function() {};
                            return {
                                s: i,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: i
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var o, s = !0, u = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return s = t.done, t;
                        },
                        e: function(t) {
                            u = !0, o = t;
                        },
                        f: function() {
                            try {
                                s || null == r.return || r.return();
                            } finally{
                                if (u) throw o;
                            }
                        }
                    };
                }
                function a(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function s(t, e, r, n, i, o, a) {
                    try {
                        var s = t[o](a), u = s.value;
                    } catch (t) {
                        return void r(t);
                    }
                    s.done ? e(u) : Promise.resolve(u).then(n, i);
                }
                function u(t) {
                    return function() {
                        var e = this, r = arguments;
                        return new Promise(function(n, i) {
                            var o = t.apply(e, r);
                            function a(t) {
                                s(o, n, i, a, u, "next", t);
                            }
                            function u(t) {
                                s(o, n, i, a, u, "throw", t);
                            }
                            a(void 0);
                        });
                    };
                }
                var c = r(5782);
                t.exports = function(t) {
                    var e = !0;
                    t.s.hooks.pre("save", !1, function(t) {
                        if (this.$isSubdocument) t();
                        else {
                            var e = this, r = this.$getAllSubdocs({
                                useCache: !0
                            });
                            r.length ? c(r, function(t, e) {
                                t.$__schema.s.hooks.execPre("save", t, function(t) {
                                    e(t);
                                });
                            }, function(r) {
                                if (e.$__.saveOptions && (e.$__.saveOptions.__subdocs = null), r) return e.$__schema.s.hooks.execPost("save:error", e, [
                                    e
                                ], {
                                    error: r
                                }, function(e) {
                                    t(e);
                                });
                                t();
                            }) : t();
                        }
                    }, null, e), t.s.hooks.post("save", function() {
                        var t = u(i().mark(function t() {
                            var e, r, n, a, s;
                            return i().wrap(function(t) {
                                for(;;)switch(t.prev = t.next){
                                    case 0:
                                        if ((e = this.$__.removedSubdocs) && e.length) {
                                            t.next = 3;
                                            break;
                                        }
                                        return t.abrupt("return");
                                    case 3:
                                        r = [], n = o(e), t.prev = 5, s = i().mark(function t() {
                                            var e;
                                            return i().wrap(function(t) {
                                                for(;;)switch(t.prev = t.next){
                                                    case 0:
                                                        e = a.value, r.push(new Promise(function(t, r) {
                                                            e.$__schema.s.hooks.execPost("deleteOne", e, [
                                                                e
                                                            ], function(e) {
                                                                if (e) return r(e);
                                                                t();
                                                            });
                                                        }));
                                                    case 2:
                                                    case "end":
                                                        return t.stop();
                                                }
                                            }, t);
                                        }), n.s();
                                    case 8:
                                        if ((a = n.n()).done) {
                                            t.next = 12;
                                            break;
                                        }
                                        return t.delegateYield(s(), "t0", 10);
                                    case 10:
                                        t.next = 8;
                                        break;
                                    case 12:
                                        t.next = 17;
                                        break;
                                    case 14:
                                        t.prev = 14, t.t1 = t.catch(5), n.e(t.t1);
                                    case 17:
                                        return t.prev = 17, n.f(), t.finish(17);
                                    case 20:
                                        return this.$__.removedSubdocs = null, t.next = 23, Promise.all(r);
                                    case 23:
                                    case "end":
                                        return t.stop();
                                }
                            }, t, this, [
                                [
                                    5,
                                    14,
                                    17,
                                    20
                                ]
                            ]);
                        }));
                        return function() {
                            return t.apply(this, arguments);
                        };
                    }()), t.s.hooks.post("save", function() {
                        var t = u(i().mark(function t() {
                            var e, r, n, a, s, u, c = this;
                            return i().wrap(function(t) {
                                for(;;)switch(t.prev = t.next){
                                    case 0:
                                        if (!this.$isSubdocument) {
                                            t.next = 2;
                                            break;
                                        }
                                        return t.abrupt("return");
                                    case 2:
                                        if (e = this, (r = this.$getAllSubdocs({
                                            useCache: !0
                                        })).length) {
                                            t.next = 6;
                                            break;
                                        }
                                        return t.abrupt("return");
                                    case 6:
                                        n = [], a = o(r), t.prev = 8, u = i().mark(function t() {
                                            var e;
                                            return i().wrap(function(t) {
                                                for(;;)switch(t.prev = t.next){
                                                    case 0:
                                                        e = s.value, n.push(new Promise(function(t, r) {
                                                            e.$__schema.s.hooks.execPost("save", e, [
                                                                e
                                                            ], function(e) {
                                                                if (e) return r(e);
                                                                t();
                                                            });
                                                        }));
                                                    case 2:
                                                    case "end":
                                                        return t.stop();
                                                }
                                            }, t);
                                        }), a.s();
                                    case 11:
                                        if ((s = a.n()).done) {
                                            t.next = 15;
                                            break;
                                        }
                                        return t.delegateYield(u(), "t0", 13);
                                    case 13:
                                        t.next = 11;
                                        break;
                                    case 15:
                                        t.next = 20;
                                        break;
                                    case 17:
                                        t.prev = 17, t.t1 = t.catch(8), a.e(t.t1);
                                    case 20:
                                        return t.prev = 20, a.f(), t.finish(20);
                                    case 23:
                                        return t.prev = 23, t.next = 26, Promise.all(n);
                                    case 26:
                                        t.next = 32;
                                        break;
                                    case 28:
                                        return t.prev = 28, t.t2 = t.catch(23), t.next = 32, new Promise(function(r, n) {
                                            c.$__schema.s.hooks.execPost("save:error", e, [
                                                e
                                            ], {
                                                error: t.t2
                                            }, function(t) {
                                                if (t) return n(t);
                                                r();
                                            });
                                        });
                                    case 32:
                                    case "end":
                                        return t.stop();
                                }
                            }, t, this, [
                                [
                                    8,
                                    17,
                                    20,
                                    23
                                ],
                                [
                                    23,
                                    28
                                ]
                            ]);
                        }));
                        return function() {
                            return t.apply(this, arguments);
                        };
                    }(), null, e);
                };
            },
            4450: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(9639), o = r(5549), a = r(2793), s = r(2497), u = r(9696), c = r(3305), f = r(1243).isMongooseArray, l = r(608), h = r(2789), p = r(7930), d = r(7291).trustedSymbol, y = r(3633);
                function b(t, e, r) {
                    if (null == t) return t;
                    if (c(t, "Double")) return new y.Double(t.value);
                    if ("number" == typeof t || "string" == typeof t || "boolean" == typeof t || "bigint" == typeof t) return t;
                    if (Array.isArray(t)) return function(t, e) {
                        var r = 0, n = t.length, i = new Array(n);
                        for(r = 0; r < n; ++r)i[r] = b(t[r], e, !0);
                        return i;
                    }(f(t) ? t.__array : t, e);
                    if (s(t)) {
                        if (e && e.retainDocuments && null != t.$__) {
                            var a = t.$clone();
                            return null != t.__index && (a.__index = t.__index), null != t.__parentArray && (a.__parentArray = t.__parentArray), a.$__parent = t.$__parent, a;
                        }
                        var d, v = t.$isSingleNested;
                        if (h(t) && null != t.$__ && null != t._doc) return t._doc;
                        if (d = e && e.json && "function" == typeof t.toJSON ? t.toJSON(e) : t.toObject(e), e && e.minimize && !t.constructor.$__required && v && 0 === Object.keys(d).length) return;
                        return d;
                    }
                    var g = t.constructor;
                    if (g) switch(u(g)){
                        case "Object":
                            return m(t, e, r);
                        case "Date":
                            return new g(+t);
                        case "RegExp":
                            return function(t) {
                                var e = new RegExp(t.source, t.flags);
                                return e.lastIndex !== t.lastIndex && (e.lastIndex = t.lastIndex), e;
                            }(t);
                    }
                    return c(t, "ObjectId") ? e && e.flattenObjectIds ? t.toJSON() : new o(t.id) : c(t, "Decimal128") ? e && e.flattenDecimals ? t.toJSON() : i.fromString(t.toString()) : !g && l(t) ? m(t, e, r) : "object" === n(t) && t[p.schemaTypeSymbol] ? t.clone() : e && e.bson && "function" == typeof t.toBSON ? t : "function" == typeof t.valueOf ? t.valueOf() : m(t, e, r);
                }
                function m(t, e, r) {
                    var n, i = e && e.minimize, o = e && e.omitUndefined, s = e && e._seen, u = {};
                    if (s && s.has(t)) return s.get(t);
                    s && s.set(t, u), d in t && !1 !== (null == e ? void 0 : e.copyTrustedSymbol) && (u[d] = t[d]);
                    for(var c = Object.keys(t), f = c.length, l = 0; l < f; ++l){
                        var h = c[l];
                        if (!a.has(h)) {
                            var p = b(t[h], e, !1);
                            !1 !== i && !o || void 0 !== p ? !0 === i && void 0 === p || (n || (n = !0), u[h] = p) : delete u[h];
                        }
                    }
                    return i && !r ? n && u : u;
                }
                t.exports = b;
            },
            4473: (t)=>{
                "use strict";
                function e(t, r) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new Set;
                    if (n.has(t)) throw new Error("Infinite subdocument loop: subdoc with _id " + t._id + " is a parent of itself");
                    var i = t.$parent(), o = t.$__pathRelativeToParent(void 0, !1) + "." + r;
                    i.$__.activePaths.clearPath(o), i.$isSubdocument && e(i, o, n);
                }
                t.exports = function(t, r, n) {
                    var i = (n = n || {}).skipDocArrays, o = 0;
                    if (!t) return o;
                    for(var a = 0, s = Object.keys(t.$__.activePaths.getStatePaths("modify")); a < s.length; a++){
                        var u = s[a];
                        if (i) {
                            var c = t.$__schema.path(u);
                            if (c && c.$isMongooseDocumentArray) continue;
                        }
                        u.startsWith(r + ".") && (t.$__.activePaths.clearPath(u), ++o, t.$isSubdocument && e(t, u));
                    }
                    return o;
                };
            },
            4488: (t, e, r)=>{
                var n = r(9732).Buffer, i = r(6876);
                function o(t, e, r) {
                    var o = e.length, a = i(e, t._cache);
                    return t._cache = t._cache.slice(o), t._prev = n.concat([
                        t._prev,
                        r ? e : a
                    ]), a;
                }
                e.encrypt = function(t, e, r) {
                    for(var i, a = n.allocUnsafe(0); e.length;){
                        if (0 === t._cache.length && (t._cache = t._cipher.encryptBlock(t._prev), t._prev = n.allocUnsafe(0)), !(t._cache.length <= e.length)) {
                            a = n.concat([
                                a,
                                o(t, e, r)
                            ]);
                            break;
                        }
                        i = t._cache.length, a = n.concat([
                            a,
                            o(t, e.slice(0, i), r)
                        ]), e = e.slice(i);
                    }
                    return a;
                };
            },
            4560: (t, e, r)=>{
                "use strict";
                var n = Object.keys || function(t) {
                    var e = [];
                    for(var r in t)e.push(r);
                    return e;
                };
                t.exports = c;
                var i = r(8134), o = r(4186);
                r(1679)(c, i);
                for(var a = n(o.prototype), s = 0; s < a.length; s++){
                    var u = a[s];
                    c.prototype[u] || (c.prototype[u] = o.prototype[u]);
                }
                function c(t) {
                    if (!(this instanceof c)) return new c(t);
                    i.call(this, t), o.call(this, t), this.allowHalfOpen = !0, t && (!1 === t.readable && (this.readable = !1), !1 === t.writable && (this.writable = !1), !1 === t.allowHalfOpen && (this.allowHalfOpen = !1, this.once("end", f)));
                }
                function f() {
                    this._writableState.ended || ({
                        env: {}
                    }).nextTick(l, this);
                }
                function l(t) {
                    t.end();
                }
                Object.defineProperty(c.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.highWaterMark;
                    }
                }), Object.defineProperty(c.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState && this._writableState.getBuffer();
                    }
                }), Object.defineProperty(c.prototype, "writableLength", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.length;
                    }
                }), Object.defineProperty(c.prototype, "destroyed", {
                    enumerable: !1,
                    get: function() {
                        return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
                    },
                    set: function(t) {
                        void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t, this._writableState.destroyed = t);
                    }
                });
            },
            4561: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e() {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, arguments);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8879)), u = r(5761);
                Object.defineProperty(s.prototype, "excludeIndexes", u), Object.defineProperty(s.prototype, "_id", u), t.exports = s;
            },
            4589: (t)=>{
                "use strict";
                t.exports = JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}');
            },
            4592: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e() {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, arguments);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8879)), u = r(5761);
                Object.defineProperty(s.prototype, "enum", u), Object.defineProperty(s.prototype, "of", u), Object.defineProperty(s.prototype, "castNonArrays", u), t.exports = s;
            },
            4606: (t, e, r)=>{
                "use strict";
                t.exports = r(2951);
            },
            4625: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e() {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, arguments);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8879)), u = r(5761);
                Object.defineProperty(s.prototype, "auto", u), Object.defineProperty(s.prototype, "populate", u), t.exports = s;
            },
            4685: (t, e, r)=>{
                "use strict";
                var n = r(3528), i = r(1679);
                function o(t, e) {
                    return 55296 == (64512 & t.charCodeAt(e)) && !(e < 0 || e + 1 >= t.length) && 56320 == (64512 & t.charCodeAt(e + 1));
                }
                function a(t) {
                    return (t >>> 24 | t >>> 8 & 65280 | t << 8 & 16711680 | (255 & t) << 24) >>> 0;
                }
                function s(t) {
                    return 1 === t.length ? "0" + t : t;
                }
                function u(t) {
                    return 7 === t.length ? "0" + t : 6 === t.length ? "00" + t : 5 === t.length ? "000" + t : 4 === t.length ? "0000" + t : 3 === t.length ? "00000" + t : 2 === t.length ? "000000" + t : 1 === t.length ? "0000000" + t : t;
                }
                e.inherits = i, e.toArray = function(t, e) {
                    if (Array.isArray(t)) return t.slice();
                    if (!t) return [];
                    var r = [];
                    if ("string" == typeof t) {
                        if (e) {
                            if ("hex" === e) for((t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t = "0" + t), i = 0; i < t.length; i += 2)r.push(parseInt(t[i] + t[i + 1], 16));
                        } else for(var n = 0, i = 0; i < t.length; i++){
                            var a = t.charCodeAt(i);
                            a < 128 ? r[n++] = a : a < 2048 ? (r[n++] = a >> 6 | 192, r[n++] = 63 & a | 128) : o(t, i) ? (a = 65536 + ((1023 & a) << 10) + (1023 & t.charCodeAt(++i)), r[n++] = a >> 18 | 240, r[n++] = a >> 12 & 63 | 128, r[n++] = a >> 6 & 63 | 128, r[n++] = 63 & a | 128) : (r[n++] = a >> 12 | 224, r[n++] = a >> 6 & 63 | 128, r[n++] = 63 & a | 128);
                        }
                    } else for(i = 0; i < t.length; i++)r[i] = 0 | t[i];
                    return r;
                }, e.toHex = function(t) {
                    for(var e = "", r = 0; r < t.length; r++)e += s(t[r].toString(16));
                    return e;
                }, e.htonl = a, e.toHex32 = function(t, e) {
                    for(var r = "", n = 0; n < t.length; n++){
                        var i = t[n];
                        "little" === e && (i = a(i)), r += u(i.toString(16));
                    }
                    return r;
                }, e.zero2 = s, e.zero8 = u, e.join32 = function(t, e, r, i) {
                    var o = r - e;
                    n(o % 4 == 0);
                    for(var a = new Array(o / 4), s = 0, u = e; s < a.length; s++, u += 4){
                        var c;
                        c = "big" === i ? t[u] << 24 | t[u + 1] << 16 | t[u + 2] << 8 | t[u + 3] : t[u + 3] << 24 | t[u + 2] << 16 | t[u + 1] << 8 | t[u], a[s] = c >>> 0;
                    }
                    return a;
                }, e.split32 = function(t, e) {
                    for(var r = new Array(4 * t.length), n = 0, i = 0; n < t.length; n++, i += 4){
                        var o = t[n];
                        "big" === e ? (r[i] = o >>> 24, r[i + 1] = o >>> 16 & 255, r[i + 2] = o >>> 8 & 255, r[i + 3] = 255 & o) : (r[i + 3] = o >>> 24, r[i + 2] = o >>> 16 & 255, r[i + 1] = o >>> 8 & 255, r[i] = 255 & o);
                    }
                    return r;
                }, e.rotr32 = function(t, e) {
                    return t >>> e | t << 32 - e;
                }, e.rotl32 = function(t, e) {
                    return t << e | t >>> 32 - e;
                }, e.sum32 = function(t, e) {
                    return t + e >>> 0;
                }, e.sum32_3 = function(t, e, r) {
                    return t + e + r >>> 0;
                }, e.sum32_4 = function(t, e, r, n) {
                    return t + e + r + n >>> 0;
                }, e.sum32_5 = function(t, e, r, n, i) {
                    return t + e + r + n + i >>> 0;
                }, e.sum64 = function(t, e, r, n) {
                    var i = t[e], o = n + t[e + 1] >>> 0, a = (o < n ? 1 : 0) + r + i;
                    t[e] = a >>> 0, t[e + 1] = o;
                }, e.sum64_hi = function(t, e, r, n) {
                    return (e + n >>> 0 < e ? 1 : 0) + t + r >>> 0;
                }, e.sum64_lo = function(t, e, r, n) {
                    return e + n >>> 0;
                }, e.sum64_4_hi = function(t, e, r, n, i, o, a, s) {
                    var u = 0, c = e;
                    return u += (c = c + n >>> 0) < e ? 1 : 0, u += (c = c + o >>> 0) < o ? 1 : 0, t + r + i + a + (u += (c = c + s >>> 0) < s ? 1 : 0) >>> 0;
                }, e.sum64_4_lo = function(t, e, r, n, i, o, a, s) {
                    return e + n + o + s >>> 0;
                }, e.sum64_5_hi = function(t, e, r, n, i, o, a, s, u, c) {
                    var f = 0, l = e;
                    return f += (l = l + n >>> 0) < e ? 1 : 0, f += (l = l + o >>> 0) < o ? 1 : 0, f += (l = l + s >>> 0) < s ? 1 : 0, t + r + i + a + u + (f += (l = l + c >>> 0) < c ? 1 : 0) >>> 0;
                }, e.sum64_5_lo = function(t, e, r, n, i, o, a, s, u, c) {
                    return e + n + o + s + c >>> 0;
                }, e.rotr64_hi = function(t, e, r) {
                    return (e << 32 - r | t >>> r) >>> 0;
                }, e.rotr64_lo = function(t, e, r) {
                    return (t << 32 - r | e >>> r) >>> 0;
                }, e.shr64_hi = function(t, e, r) {
                    return t >>> r;
                }, e.shr64_lo = function(t, e, r) {
                    return (t << 32 - r | e >>> r) >>> 0;
                };
            },
            4756: (t)=>{
                "use strict";
                var e = function(t) {
                    return t != t;
                };
                t.exports = function(t, r) {
                    return 0 === t && 0 === r ? 1 / t == 1 / r : t === r || !(!e(t) || !e(r));
                };
            },
            4758: (t)=>{
                "use strict";
                !({
                    env: {}
                }).version || 0 === ({
                    env: {}
                }).version.indexOf("v0.") || 0 === ({
                    env: {}
                }).version.indexOf("v1.") && 0 !== ({
                    env: {}
                }).version.indexOf("v1.8.") ? t.exports = {
                    nextTick: function(t, e, r, n) {
                        if ("function" != typeof t) throw new TypeError('"callback" argument must be a function');
                        var i, o, a = arguments.length;
                        switch(a){
                            case 0:
                            case 1:
                                return ({
                                    env: {}
                                }).nextTick(t);
                            case 2:
                                return ({
                                    env: {}
                                }).nextTick(function() {
                                    t.call(null, e);
                                });
                            case 3:
                                return ({
                                    env: {}
                                }).nextTick(function() {
                                    t.call(null, e, r);
                                });
                            case 4:
                                return ({
                                    env: {}
                                }).nextTick(function() {
                                    t.call(null, e, r, n);
                                });
                            default:
                                for(i = new Array(a - 1), o = 0; o < i.length;)i[o++] = arguments[o];
                                return ({
                                    env: {}
                                }).nextTick(function() {
                                    t.apply(null, i);
                                });
                        }
                    }
                } : t.exports = {
                    env: {}
                };
            },
            4829: (t, e, r)=>{
                "use strict";
                t.exports = r(8533);
            },
            4859: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                function i(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return o(t, e);
                                var r = ({}).toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? o(t, e) : void 0;
                            }
                        }(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, i = function() {};
                            return {
                                s: i,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: i
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a, s = !0, u = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return s = t.done, t;
                        },
                        e: function(t) {
                            u = !0, a = t;
                        },
                        f: function() {
                            try {
                                s || null == r.return || r.return();
                            } finally{
                                if (u) throw a;
                            }
                        }
                    };
                }
                function o(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var a = r(8920), s = r(2400), u = r(863), c = r(8677), f = r(3303)._, l = r(8768), h = r(3305), p = r(7930).arrayParentSymbol, d = r(7930).arrayPathSymbol, y = r(7930).arraySchemaSymbol, b = r(7930).documentArrayParent, m = Array.prototype.toString, v = {
                    toBSON: function() {
                        return this.toObject(f);
                    },
                    toString: function() {
                        return m.call(this.__array.map(function(t) {
                            return null != t && null != t.$__ ? t.toString() : t;
                        }));
                    },
                    getArrayParent: function() {
                        return this[p];
                    },
                    _cast: function(t, e, r) {
                        if (null == this[y]) return t;
                        var i = this[y].casterConstructor;
                        if ((i.$isMongooseDocumentArray ? l.isMongooseDocumentArray(t) : t instanceof i) || t && t.constructor && t.constructor.baseCasterConstructor === i) return t[b] && t.__parentArray || (t[b] = this[p], t.__parentArray = this), t.$setIndex(e), t;
                        if (null == t) return null;
                        if ((n.isBuffer(t) || h(t, "ObjectId") || !l.isObject(t)) && (t = {
                            _id: t
                        }), t && i.discriminators && i.schema && i.schema.options && i.schema.options.discriminatorKey) {
                            if ("string" == typeof t[i.schema.options.discriminatorKey] && i.discriminators[t[i.schema.options.discriminatorKey]]) i = i.discriminators[t[i.schema.options.discriminatorKey]];
                            else {
                                var o = c(i.discriminators, t[i.schema.options.discriminatorKey]);
                                o && (i = o);
                            }
                        }
                        if (i.$isMongooseDocumentArray) return i.cast(t, this, void 0, void 0, e);
                        var a = new i(t, this, r, void 0, e);
                        return a.isNew = !0, a;
                    },
                    id: function(t) {
                        var e, r, n;
                        try {
                            e = u(t).toString();
                        } catch (t) {
                            e = null;
                        }
                        var o, a = i(this);
                        try {
                            for(a.s(); !(o = a.n()).done;){
                                var c = o.value;
                                if (c && null != (n = c.get("_id"))) {
                                    if (n instanceof s) {
                                        if (r || (r = String(t)), r == n._id) return c;
                                    } else if (h(t, "ObjectId") || h(n, "ObjectId")) {
                                        if (e == n) return c;
                                    } else if (t == n || l.deepEqual(t, n)) return c;
                                }
                            }
                        } catch (t) {
                            a.e(t);
                        } finally{
                            a.f();
                        }
                        return null;
                    },
                    toObject: function(t) {
                        return [].concat(this.map(function(e) {
                            return null == e ? null : "function" != typeof e.toObject ? e : e.toObject(t);
                        }));
                    },
                    $toObject: function() {
                        return this.constructor.prototype.toObject.apply(this, arguments);
                    },
                    push: function() {
                        var t = a.push.apply(this, arguments);
                        return g(this), t;
                    },
                    pull: function() {
                        var t = a.pull.apply(this, arguments);
                        return g(this), t;
                    },
                    shift: function() {
                        var t = a.shift.apply(this, arguments);
                        return g(this), t;
                    },
                    splice: function() {
                        var t = a.splice.apply(this, arguments);
                        return g(this), t;
                    },
                    inspect: function() {
                        return this.toObject();
                    },
                    create: function(t) {
                        var e = this[y].casterConstructor;
                        if (t && e.discriminators && e.schema && e.schema.options && e.schema.options.discriminatorKey) {
                            if ("string" == typeof t[e.schema.options.discriminatorKey] && e.discriminators[t[e.schema.options.discriminatorKey]]) e = e.discriminators[t[e.schema.options.discriminatorKey]];
                            else {
                                var r = c(e.discriminators, t[e.schema.options.discriminatorKey]);
                                r && (e = r);
                            }
                        }
                        return new e(t, this);
                    },
                    notify: function(t) {
                        var e = this;
                        return function r(n, i) {
                            for(var o = (i = i || e).length; o--;)null != i[o] && ("save" === t && (n = e[o]), l.isMongooseArray(i[o]) ? r(n, i[o]) : i[o] && i[o].emit(t, n));
                        };
                    },
                    set: function(t, e, r) {
                        var n = this.__array;
                        if (r) return n[t] = e, this;
                        var i = v._cast.call(this, e, t);
                        return v._markModified.call(this, t), n[t] = i, this;
                    },
                    _markModified: function(t, e) {
                        var r, n = this[p];
                        if (n) {
                            if (r = this[d], arguments.length && (r = null != e ? r + "." + t.__index + "." + e : r + "." + t), null != r && r.endsWith(".$")) return this;
                            n.markModified(r, 0 !== arguments.length ? t : n);
                        }
                        return this;
                    }
                };
                function g(t) {
                    var e = t[p];
                    if (e && null != e.$__.populated) {
                        var r, n = i(Object.keys(e.$__.populated).filter(function(e) {
                            return e.startsWith(t[d] + ".");
                        }));
                        try {
                            var o = function() {
                                var n = r.value, i = n.slice((t[d] + ".").length);
                                if (!Array.isArray(e.$__.populated[n].value)) return 1;
                                e.$__.populated[n].value = t.map(function(t) {
                                    return t.$populated(i);
                                });
                            };
                            for(n.s(); !(r = n.n()).done;)o();
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                    }
                }
                t.exports = v;
            },
            4878: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var o = r(8920), a = r(4859), s = r(2400), u = r(7930).arrayAtomicsSymbol, c = r(7930).arrayAtomicsBackupSymbol, f = r(7930).arrayParentSymbol, l = r(7930).arrayPathSymbol, h = r(7930).arraySchemaSymbol, p = Array.prototype.push, d = /^\d+$/;
                t.exports = function(t, e, r, n) {
                    var y = [], b = i(i(i(i(i({}, u, {}), c, void 0), l, e), h, void 0), f, void 0);
                    if (Array.isArray(t) && (t[l] === e && t[f] === r && (b[u] = Object.assign({}, t[u])), t.forEach(function(t) {
                        p.call(y, t);
                    })), b[l] = e, b.__array = y, r && r instanceof s) for(b[f] = r, b[h] = r.$__schema.path(e); null != b[h] && b[h].$isMongooseArray && !b[h].$isMongooseDocumentArray;)b[h] = b[h].casterConstructor;
                    var m = new Proxy(y, {
                        get: function(t, e) {
                            return "isMongooseArray" === e || "isMongooseArrayProxy" === e || "isMongooseDocumentArray" === e || "isMongooseDocumentArrayProxy" === e || (b.hasOwnProperty(e) ? b[e] : a.hasOwnProperty(e) ? a[e] : n && n.virtuals && n.virtuals.hasOwnProperty(e) ? n.virtuals[e].applyGetters(void 0, t) : o.hasOwnProperty(e) ? o[e] : y[e]);
                        },
                        set: function(t, e, r) {
                            return "string" == typeof e && d.test(e) ? a.set.call(m, e, r, !1) : b.hasOwnProperty(e) ? b[e] = r : n && n.virtuals && n.virtuals.hasOwnProperty(e) ? n.virtuals[e].applySetters(r, t) : y[e] = r, !0;
                        }
                    });
                    return m;
                };
            },
            4919: (t, e, r)=>{
                "use strict";
                var n = r(2859), i = r(6379), o = r(1970), a = o.assert, s = o.parseBytes, u = r(208), c = r(8433);
                function f(t) {
                    if (a("ed25519" === t, "only tested with ed25519 so far"), !(this instanceof f)) return new f(t);
                    t = i[t].curve, this.curve = t, this.g = t.g, this.g.precompute(t.n.bitLength() + 1), this.pointClass = t.point().constructor, this.encodingLength = Math.ceil(t.n.bitLength() / 8), this.hash = n.sha512;
                }
                t.exports = f, f.prototype.sign = function(t, e) {
                    t = s(t);
                    var r = this.keyFromSecret(e), n = this.hashInt(r.messagePrefix(), t), i = this.g.mul(n), o = this.encodePoint(i), a = this.hashInt(o, r.pubBytes(), t).mul(r.priv()), u = n.add(a).umod(this.curve.n);
                    return this.makeSignature({
                        R: i,
                        S: u,
                        Rencoded: o
                    });
                }, f.prototype.verify = function(t, e, r) {
                    if (t = s(t), (e = this.makeSignature(e)).S().gte(e.eddsa.curve.n) || e.S().isNeg()) return !1;
                    var n = this.keyFromPublic(r), i = this.hashInt(e.Rencoded(), n.pubBytes(), t), o = this.g.mul(e.S());
                    return e.R().add(n.pub().mul(i)).eq(o);
                }, f.prototype.hashInt = function() {
                    for(var t = this.hash(), e = 0; e < arguments.length; e++)t.update(arguments[e]);
                    return o.intFromLE(t.digest()).umod(this.curve.n);
                }, f.prototype.keyFromPublic = function(t) {
                    return u.fromPublic(this, t);
                }, f.prototype.keyFromSecret = function(t) {
                    return u.fromSecret(this, t);
                }, f.prototype.makeSignature = function(t) {
                    return t instanceof c ? t : new c(this, t);
                }, f.prototype.encodePoint = function(t) {
                    var e = t.getY().toArray("le", this.encodingLength);
                    return e[this.encodingLength - 1] |= t.getX().isOdd() ? 128 : 0, e;
                }, f.prototype.decodePoint = function(t) {
                    var e = (t = o.parseBytes(t)).length - 1, r = t.slice(0, e).concat(-129 & t[e]), n = !!(128 & t[e]), i = o.intFromLE(r);
                    return this.curve.pointFromY(i, n);
                }, f.prototype.encodeInt = function(t) {
                    return t.toArray("le", this.encodingLength);
                }, f.prototype.decodeInt = function(t) {
                    return o.intFromLE(t);
                }, f.prototype.isPoint = function(t) {
                    return t instanceof this.pointClass;
                };
            },
            4937: (t, e, r)=>{
                var n = r(9732).Buffer;
                function i(t, e, r) {
                    for(var n, i, a = -1, s = 0; ++a < 8;)n = e & 1 << 7 - a ? 128 : 0, s += (128 & (i = t._cipher.encryptBlock(t._prev)[0] ^ n)) >> a % 8, t._prev = o(t._prev, r ? n : i);
                    return s;
                }
                function o(t, e) {
                    var r = t.length, i = -1, o = n.allocUnsafe(t.length);
                    for(t = n.concat([
                        t,
                        n.from([
                            e
                        ])
                    ]); ++i < r;)o[i] = t[i] << 1 | t[i + 1] >> 7;
                    return o;
                }
                e.encrypt = function(t, e, r) {
                    for(var o = e.length, a = n.allocUnsafe(o), s = -1; ++s < o;)a[s] = i(t, e[s], r);
                    return a;
                };
            },
            4957: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? i(Object(r), !0).forEach(function(e) {
                            a(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function a(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var s = r(7160), u = r(5268);
                t.exports = f, f.middlewareFunctions = [
                    "deleteOne",
                    "save",
                    "validate",
                    "remove",
                    "updateOne",
                    "init"
                ];
                var c = new Set(f.middlewareFunctions.flatMap(function(t) {
                    return [
                        t,
                        "$__".concat(t)
                    ];
                }));
                function f(t, e, r) {
                    var n = {
                        useErrorHandlers: !0,
                        numCallbackParams: 1,
                        nullResultByDefault: !0,
                        contextParameter: !0
                    }, i = (r = r || {}).decorateDoc ? t : t.prototype;
                    t.$appliedHooks = !0;
                    for(var a = 0, l = Object.keys(e.paths); a < l.length; a++){
                        var h = l[a], p = e.paths[h], d = null;
                        if (p.$isSingleNested) d = p.caster;
                        else {
                            if (!p.$isMongooseDocumentArray) continue;
                            d = p.Constructor;
                        }
                        if (!d.$appliedHooks && (f(d, p.schema, o(o({}, r), {}, {
                            isChildSchema: !0
                        })), null != d.discriminators)) for(var y = 0, b = Object.keys(d.discriminators); y < b.length; y++){
                            var m = b[y];
                            f(d.discriminators[m], d.discriminators[m].schema, r);
                        }
                    }
                    var v = e.s.hooks.filter(function(t) {
                        return "updateOne" === t.name || "deleteOne" === t.name ? !!t.document : "remove" === t.name || "init" === t.name ? null == t.document || !!t.document : null == t.query && null == t.document || !1 !== t.document;
                    }).filter(function(t) {
                        return !e.methods[t.name] || !t.fn[s.builtInMiddleware];
                    });
                    t._middleware = v, i.$__originalValidate = i.$__originalValidate || i.$__validate;
                    for(var g = 0, _ = r && r.isChildSchema ? [
                        "save",
                        "validate",
                        "deleteOne"
                    ] : [
                        "save",
                        "validate"
                    ]; g < _.length; g++){
                        var w = _[g], S = "validate" === w ? "$__originalValidate" : "$__".concat(w), O = v.createWrapper(w, i[S], null, n);
                        i["$__".concat(w)] = O;
                    }
                    i.$__init = v.createWrapperSync("init", i.$__init, null, n);
                    for(var j = Object.keys(e.methods), $ = Object.assign({}, n, {
                        checkForPromise: !0
                    }), E = function() {
                        var e = P[A];
                        if (c.has(e)) return 0;
                        if (!v.hasHooks(e)) return 0;
                        var r = i[e];
                        i[e] = function() {
                            var r = this, n = Array.prototype.slice.call(arguments), i = n.slice(-1).pop(), o = "function" == typeof i ? n.slice(0, n.length - 1) : n;
                            return u(i, function(t) {
                                return r["$__".concat(e)].apply(r, o.concat([
                                    t
                                ]));
                            }, t.events);
                        }, i["$__".concat(e)] = v.createWrapper(e, r, null, $);
                    }, A = 0, P = j; A < P.length; A++)E();
                }
            },
            5022: (t, e, r)=>{
                "use strict";
                var n = r(6426), i = r(7160), o = r(608), a = r(8768);
                function s(t, e) {
                    if (e && e.default) {
                        var r = e.default;
                        Array.isArray(r) && 0 === r.length ? e.default = Array : !e.shared && o(r) && 0 === Object.keys(r).length && (e.default = function() {
                            return {};
                        });
                    }
                    n.call(this, t, e, "Mixed"), this[i.schemaMixedSymbol] = !0;
                }
                s.schemaName = "Mixed", s.defaultOptions = {}, s.prototype = Object.create(n.prototype), s.prototype.constructor = s, s.get = n.get, s.set = n.set, s.setters = [], s.prototype.cast = function(t) {
                    return t instanceof Error ? a.errorToPOJO(t) : t;
                }, s.prototype.castForQuery = function(t, e) {
                    return e;
                }, t.exports = s;
            },
            5045: (t, e, r)=>{
                "use strict";
                var n = r(1970), i = r(7799), o = r(1679), a = r(3334), s = n.assert;
                function u(t) {
                    a.call(this, "short", t), this.a = new i(t.a, 16).toRed(this.red), this.b = new i(t.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(t), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
                }
                function c(t, e, r, n) {
                    a.BasePoint.call(this, t, "affine"), null === e && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new i(e, 16), this.y = new i(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);
                }
                function f(t, e, r, n) {
                    a.BasePoint.call(this, t, "jacobian"), null === e && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i(0)) : (this.x = new i(e, 16), this.y = new i(r, 16), this.z = new i(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
                }
                o(u, a), t.exports = u, u.prototype._getEndomorphism = function(t) {
                    if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                        var e, r;
                        if (t.beta) e = new i(t.beta, 16).toRed(this.red);
                        else {
                            var n = this._getEndoRoots(this.p);
                            e = (e = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red);
                        }
                        if (t.lambda) r = new i(t.lambda, 16);
                        else {
                            var o = this._getEndoRoots(this.n);
                            0 === this.g.mul(o[0]).x.cmp(this.g.x.redMul(e)) ? r = o[0] : (r = o[1], s(0 === this.g.mul(r).x.cmp(this.g.x.redMul(e))));
                        }
                        return {
                            beta: e,
                            lambda: r,
                            basis: t.basis ? t.basis.map(function(t) {
                                return {
                                    a: new i(t.a, 16),
                                    b: new i(t.b, 16)
                                };
                            }) : this._getEndoBasis(r)
                        };
                    }
                }, u.prototype._getEndoRoots = function(t) {
                    var e = t === this.p ? this.red : i.mont(t), r = new i(2).toRed(e).redInvm(), n = r.redNeg(), o = new i(3).toRed(e).redNeg().redSqrt().redMul(r);
                    return [
                        n.redAdd(o).fromRed(),
                        n.redSub(o).fromRed()
                    ];
                }, u.prototype._getEndoBasis = function(t) {
                    for(var e, r, n, o, a, s, u, c, f, l = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), h = t, p = this.n.clone(), d = new i(1), y = new i(0), b = new i(0), m = new i(1), v = 0; 0 !== h.cmpn(0);){
                        var g = p.div(h);
                        c = p.sub(g.mul(h)), f = b.sub(g.mul(d));
                        var _ = m.sub(g.mul(y));
                        if (!n && c.cmp(l) < 0) e = u.neg(), r = d, n = c.neg(), o = f;
                        else if (n && 2 == ++v) break;
                        u = c, p = h, h = c, b = d, d = f, m = y, y = _;
                    }
                    a = c.neg(), s = f;
                    var w = n.sqr().add(o.sqr());
                    return a.sqr().add(s.sqr()).cmp(w) >= 0 && (a = e, s = r), n.negative && (n = n.neg(), o = o.neg()), a.negative && (a = a.neg(), s = s.neg()), [
                        {
                            a: n,
                            b: o
                        },
                        {
                            a,
                            b: s
                        }
                    ];
                }, u.prototype._endoSplit = function(t) {
                    var e = this.endo.basis, r = e[0], n = e[1], i = n.b.mul(t).divRound(this.n), o = r.b.neg().mul(t).divRound(this.n), a = i.mul(r.a), s = o.mul(n.a), u = i.mul(r.b), c = o.mul(n.b);
                    return {
                        k1: t.sub(a).sub(s),
                        k2: u.add(c).neg()
                    };
                }, u.prototype.pointFromX = function(t, e) {
                    (t = new i(t, 16)).red || (t = t.toRed(this.red));
                    var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b), n = r.redSqrt();
                    if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw new Error("invalid point");
                    var o = n.fromRed().isOdd();
                    return (e && !o || !e && o) && (n = n.redNeg()), this.point(t, n);
                }, u.prototype.validate = function(t) {
                    if (t.inf) return !0;
                    var e = t.x, r = t.y, n = this.a.redMul(e), i = e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);
                    return 0 === r.redSqr().redISub(i).cmpn(0);
                }, u.prototype._endoWnafMulAdd = function(t, e, r) {
                    for(var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < t.length; o++){
                        var a = this._endoSplit(e[o]), s = t[o], u = s._getBeta();
                        a.k1.negative && (a.k1.ineg(), s = s.neg(!0)), a.k2.negative && (a.k2.ineg(), u = u.neg(!0)), n[2 * o] = s, n[2 * o + 1] = u, i[2 * o] = a.k1, i[2 * o + 1] = a.k2;
                    }
                    for(var c = this._wnafMulAdd(1, n, i, 2 * o, r), f = 0; f < 2 * o; f++)n[f] = null, i[f] = null;
                    return c;
                }, o(c, a.BasePoint), u.prototype.point = function(t, e, r) {
                    return new c(this, t, e, r);
                }, u.prototype.pointFromJSON = function(t, e) {
                    return c.fromJSON(this, t, e);
                }, c.prototype._getBeta = function() {
                    if (this.curve.endo) {
                        var t = this.precomputed;
                        if (t && t.beta) return t.beta;
                        var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                        if (t) {
                            var r = this.curve, n = function(t) {
                                return r.point(t.x.redMul(r.endo.beta), t.y);
                            };
                            t.beta = e, e.precomputed = {
                                beta: null,
                                naf: t.naf && {
                                    wnd: t.naf.wnd,
                                    points: t.naf.points.map(n)
                                },
                                doubles: t.doubles && {
                                    step: t.doubles.step,
                                    points: t.doubles.points.map(n)
                                }
                            };
                        }
                        return e;
                    }
                }, c.prototype.toJSON = function() {
                    return this.precomputed ? [
                        this.x,
                        this.y,
                        this.precomputed && {
                            doubles: this.precomputed.doubles && {
                                step: this.precomputed.doubles.step,
                                points: this.precomputed.doubles.points.slice(1)
                            },
                            naf: this.precomputed.naf && {
                                wnd: this.precomputed.naf.wnd,
                                points: this.precomputed.naf.points.slice(1)
                            }
                        }
                    ] : [
                        this.x,
                        this.y
                    ];
                }, c.fromJSON = function(t, e, r) {
                    "string" == typeof e && (e = JSON.parse(e));
                    var n = t.point(e[0], e[1], r);
                    if (!e[2]) return n;
                    function i(e) {
                        return t.point(e[0], e[1], r);
                    }
                    var o = e[2];
                    return n.precomputed = {
                        beta: null,
                        doubles: o.doubles && {
                            step: o.doubles.step,
                            points: [
                                n
                            ].concat(o.doubles.points.map(i))
                        },
                        naf: o.naf && {
                            wnd: o.naf.wnd,
                            points: [
                                n
                            ].concat(o.naf.points.map(i))
                        }
                    }, n;
                }, c.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
                }, c.prototype.isInfinity = function() {
                    return this.inf;
                }, c.prototype.add = function(t) {
                    if (this.inf) return t;
                    if (t.inf) return this;
                    if (this.eq(t)) return this.dbl();
                    if (this.neg().eq(t)) return this.curve.point(null, null);
                    if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);
                    var e = this.y.redSub(t.y);
                    0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
                    var r = e.redSqr().redISub(this.x).redISub(t.x), n = e.redMul(this.x.redSub(r)).redISub(this.y);
                    return this.curve.point(r, n);
                }, c.prototype.dbl = function() {
                    if (this.inf) return this;
                    var t = this.y.redAdd(this.y);
                    if (0 === t.cmpn(0)) return this.curve.point(null, null);
                    var e = this.curve.a, r = this.x.redSqr(), n = t.redInvm(), i = r.redAdd(r).redIAdd(r).redIAdd(e).redMul(n), o = i.redSqr().redISub(this.x.redAdd(this.x)), a = i.redMul(this.x.redSub(o)).redISub(this.y);
                    return this.curve.point(o, a);
                }, c.prototype.getX = function() {
                    return this.x.fromRed();
                }, c.prototype.getY = function() {
                    return this.y.fromRed();
                }, c.prototype.mul = function(t) {
                    return t = new i(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([
                        this
                    ], [
                        t
                    ]) : this.curve._wnafMul(this, t);
                }, c.prototype.mulAdd = function(t, e, r) {
                    var n = [
                        this,
                        e
                    ], i = [
                        t,
                        r
                    ];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2);
                }, c.prototype.jmulAdd = function(t, e, r) {
                    var n = [
                        this,
                        e
                    ], i = [
                        t,
                        r
                    ];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0);
                }, c.prototype.eq = function(t) {
                    return this === t || this.inf === t.inf && (this.inf || 0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y));
                }, c.prototype.neg = function(t) {
                    if (this.inf) return this;
                    var e = this.curve.point(this.x, this.y.redNeg());
                    if (t && this.precomputed) {
                        var r = this.precomputed, n = function(t) {
                            return t.neg();
                        };
                        e.precomputed = {
                            naf: r.naf && {
                                wnd: r.naf.wnd,
                                points: r.naf.points.map(n)
                            },
                            doubles: r.doubles && {
                                step: r.doubles.step,
                                points: r.doubles.points.map(n)
                            }
                        };
                    }
                    return e;
                }, c.prototype.toJ = function() {
                    return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
                }, o(f, a.BasePoint), u.prototype.jpoint = function(t, e, r) {
                    return new f(this, t, e, r);
                }, f.prototype.toP = function() {
                    if (this.isInfinity()) return this.curve.point(null, null);
                    var t = this.z.redInvm(), e = t.redSqr(), r = this.x.redMul(e), n = this.y.redMul(e).redMul(t);
                    return this.curve.point(r, n);
                }, f.prototype.neg = function() {
                    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
                }, f.prototype.add = function(t) {
                    if (this.isInfinity()) return t;
                    if (t.isInfinity()) return this;
                    var e = t.z.redSqr(), r = this.z.redSqr(), n = this.x.redMul(e), i = t.x.redMul(r), o = this.y.redMul(e.redMul(t.z)), a = t.y.redMul(r.redMul(this.z)), s = n.redSub(i), u = o.redSub(a);
                    if (0 === s.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var c = s.redSqr(), f = c.redMul(s), l = n.redMul(c), h = u.redSqr().redIAdd(f).redISub(l).redISub(l), p = u.redMul(l.redISub(h)).redISub(o.redMul(f)), d = this.z.redMul(t.z).redMul(s);
                    return this.curve.jpoint(h, p, d);
                }, f.prototype.mixedAdd = function(t) {
                    if (this.isInfinity()) return t.toJ();
                    if (t.isInfinity()) return this;
                    var e = this.z.redSqr(), r = this.x, n = t.x.redMul(e), i = this.y, o = t.y.redMul(e).redMul(this.z), a = r.redSub(n), s = i.redSub(o);
                    if (0 === a.cmpn(0)) return 0 !== s.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var u = a.redSqr(), c = u.redMul(a), f = r.redMul(u), l = s.redSqr().redIAdd(c).redISub(f).redISub(f), h = s.redMul(f.redISub(l)).redISub(i.redMul(c)), p = this.z.redMul(a);
                    return this.curve.jpoint(l, h, p);
                }, f.prototype.dblp = function(t) {
                    if (0 === t) return this;
                    if (this.isInfinity()) return this;
                    if (!t) return this.dbl();
                    var e;
                    if (this.curve.zeroA || this.curve.threeA) {
                        var r = this;
                        for(e = 0; e < t; e++)r = r.dbl();
                        return r;
                    }
                    var n = this.curve.a, i = this.curve.tinv, o = this.x, a = this.y, s = this.z, u = s.redSqr().redSqr(), c = a.redAdd(a);
                    for(e = 0; e < t; e++){
                        var f = o.redSqr(), l = c.redSqr(), h = l.redSqr(), p = f.redAdd(f).redIAdd(f).redIAdd(n.redMul(u)), d = o.redMul(l), y = p.redSqr().redISub(d.redAdd(d)), b = d.redISub(y), m = p.redMul(b);
                        m = m.redIAdd(m).redISub(h);
                        var v = c.redMul(s);
                        e + 1 < t && (u = u.redMul(h)), o = y, s = v, c = m;
                    }
                    return this.curve.jpoint(o, c.redMul(i), s);
                }, f.prototype.dbl = function() {
                    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
                }, f.prototype._zeroDbl = function() {
                    var t, e, r;
                    if (this.zOne) {
                        var n = this.x.redSqr(), i = this.y.redSqr(), o = i.redSqr(), a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                        a = a.redIAdd(a);
                        var s = n.redAdd(n).redIAdd(n), u = s.redSqr().redISub(a).redISub(a), c = o.redIAdd(o);
                        c = (c = c.redIAdd(c)).redIAdd(c), t = u, e = s.redMul(a.redISub(u)).redISub(c), r = this.y.redAdd(this.y);
                    } else {
                        var f = this.x.redSqr(), l = this.y.redSqr(), h = l.redSqr(), p = this.x.redAdd(l).redSqr().redISub(f).redISub(h);
                        p = p.redIAdd(p);
                        var d = f.redAdd(f).redIAdd(f), y = d.redSqr(), b = h.redIAdd(h);
                        b = (b = b.redIAdd(b)).redIAdd(b), t = y.redISub(p).redISub(p), e = d.redMul(p.redISub(t)).redISub(b), r = (r = this.y.redMul(this.z)).redIAdd(r);
                    }
                    return this.curve.jpoint(t, e, r);
                }, f.prototype._threeDbl = function() {
                    var t, e, r;
                    if (this.zOne) {
                        var n = this.x.redSqr(), i = this.y.redSqr(), o = i.redSqr(), a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                        a = a.redIAdd(a);
                        var s = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a), u = s.redSqr().redISub(a).redISub(a);
                        t = u;
                        var c = o.redIAdd(o);
                        c = (c = c.redIAdd(c)).redIAdd(c), e = s.redMul(a.redISub(u)).redISub(c), r = this.y.redAdd(this.y);
                    } else {
                        var f = this.z.redSqr(), l = this.y.redSqr(), h = this.x.redMul(l), p = this.x.redSub(f).redMul(this.x.redAdd(f));
                        p = p.redAdd(p).redIAdd(p);
                        var d = h.redIAdd(h), y = (d = d.redIAdd(d)).redAdd(d);
                        t = p.redSqr().redISub(y), r = this.y.redAdd(this.z).redSqr().redISub(l).redISub(f);
                        var b = l.redSqr();
                        b = (b = (b = b.redIAdd(b)).redIAdd(b)).redIAdd(b), e = p.redMul(d.redISub(t)).redISub(b);
                    }
                    return this.curve.jpoint(t, e, r);
                }, f.prototype._dbl = function() {
                    var t = this.curve.a, e = this.x, r = this.y, n = this.z, i = n.redSqr().redSqr(), o = e.redSqr(), a = r.redSqr(), s = o.redAdd(o).redIAdd(o).redIAdd(t.redMul(i)), u = e.redAdd(e), c = (u = u.redIAdd(u)).redMul(a), f = s.redSqr().redISub(c.redAdd(c)), l = c.redISub(f), h = a.redSqr();
                    h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
                    var p = s.redMul(l).redISub(h), d = r.redAdd(r).redMul(n);
                    return this.curve.jpoint(f, p, d);
                }, f.prototype.trpl = function() {
                    if (!this.curve.zeroA) return this.dbl().add(this);
                    var t = this.x.redSqr(), e = this.y.redSqr(), r = this.z.redSqr(), n = e.redSqr(), i = t.redAdd(t).redIAdd(t), o = i.redSqr(), a = this.x.redAdd(e).redSqr().redISub(t).redISub(n), s = (a = (a = (a = a.redIAdd(a)).redAdd(a).redIAdd(a)).redISub(o)).redSqr(), u = n.redIAdd(n);
                    u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
                    var c = i.redIAdd(a).redSqr().redISub(o).redISub(s).redISub(u), f = e.redMul(c);
                    f = (f = f.redIAdd(f)).redIAdd(f);
                    var l = this.x.redMul(s).redISub(f);
                    l = (l = l.redIAdd(l)).redIAdd(l);
                    var h = this.y.redMul(c.redMul(u.redISub(c)).redISub(a.redMul(s)));
                    h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
                    var p = this.z.redAdd(a).redSqr().redISub(r).redISub(s);
                    return this.curve.jpoint(l, h, p);
                }, f.prototype.mul = function(t, e) {
                    return t = new i(t, e), this.curve._wnafMul(this, t);
                }, f.prototype.eq = function(t) {
                    if ("affine" === t.type) return this.eq(t.toJ());
                    if (this === t) return !0;
                    var e = this.z.redSqr(), r = t.z.redSqr();
                    if (0 !== this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0)) return !1;
                    var n = e.redMul(this.z), i = r.redMul(t.z);
                    return 0 === this.y.redMul(i).redISub(t.y.redMul(n)).cmpn(0);
                }, f.prototype.eqXToP = function(t) {
                    var e = this.z.redSqr(), r = t.toRed(this.curve.red).redMul(e);
                    if (0 === this.x.cmp(r)) return !0;
                    for(var n = t.clone(), i = this.curve.redN.redMul(e);;){
                        if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                        if (r.redIAdd(i), 0 === this.x.cmp(r)) return !0;
                    }
                }, f.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
                }, f.prototype.isInfinity = function() {
                    return 0 === this.z.cmpn(0);
                };
            },
            5053: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(6292), o = r(5579), a = r(3446), s = r(2098), u = r(8699), c = r(9732).Buffer;
                function f(t) {
                    var e;
                    "object" !== n(t) || c.isBuffer(t) || (e = t.passphrase, t = t.key), "string" == typeof t && (t = c.from(t));
                    var r, f, l = a(t, e), h = l.tag, p = l.data;
                    switch(h){
                        case "CERTIFICATE":
                            f = i.certificate.decode(p, "der").tbsCertificate.subjectPublicKeyInfo;
                        case "PUBLIC KEY":
                            switch(f || (f = i.PublicKey.decode(p, "der")), r = f.algorithm.algorithm.join(".")){
                                case "1.2.840.113549.1.1.1":
                                    return i.RSAPublicKey.decode(f.subjectPublicKey.data, "der");
                                case "1.2.840.10045.2.1":
                                    return f.subjectPrivateKey = f.subjectPublicKey, {
                                        type: "ec",
                                        data: f
                                    };
                                case "1.2.840.10040.4.1":
                                    return f.algorithm.params.pub_key = i.DSAparam.decode(f.subjectPublicKey.data, "der"), {
                                        type: "dsa",
                                        data: f.algorithm.params
                                    };
                                default:
                                    throw new Error("unknown key id " + r);
                            }
                        case "ENCRYPTED PRIVATE KEY":
                            p = function(t, e) {
                                var r = t.algorithm.decrypt.kde.kdeparams.salt, n = parseInt(t.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), i = o[t.algorithm.decrypt.cipher.algo.join(".")], a = t.algorithm.decrypt.cipher.iv, f = t.subjectPrivateKey, l = parseInt(i.split("-")[1], 10) / 8, h = u.pbkdf2Sync(e, r, n, l, "sha1"), p = s.createDecipheriv(i, h, a), d = [];
                                return d.push(p.update(f)), d.push(p.final()), c.concat(d);
                            }(p = i.EncryptedPrivateKey.decode(p, "der"), e);
                        case "PRIVATE KEY":
                            switch(r = (f = i.PrivateKey.decode(p, "der")).algorithm.algorithm.join(".")){
                                case "1.2.840.113549.1.1.1":
                                    return i.RSAPrivateKey.decode(f.subjectPrivateKey, "der");
                                case "1.2.840.10045.2.1":
                                    return {
                                        curve: f.algorithm.curve,
                                        privateKey: i.ECPrivateKey.decode(f.subjectPrivateKey, "der").privateKey
                                    };
                                case "1.2.840.10040.4.1":
                                    return f.algorithm.params.priv_key = i.DSAparam.decode(f.subjectPrivateKey, "der"), {
                                        type: "dsa",
                                        params: f.algorithm.params
                                    };
                                default:
                                    throw new Error("unknown key id " + r);
                            }
                        case "RSA PUBLIC KEY":
                            return i.RSAPublicKey.decode(p, "der");
                        case "RSA PRIVATE KEY":
                            return i.RSAPrivateKey.decode(p, "der");
                        case "DSA PRIVATE KEY":
                            return {
                                type: "dsa",
                                params: i.DSAPrivateKey.decode(p, "der")
                            };
                        case "EC PRIVATE KEY":
                            return {
                                curve: (p = i.ECPrivateKey.decode(p, "der")).parameters.value,
                                privateKey: p.privateKey
                            };
                        default:
                            throw new Error("unknown key type " + h);
                    }
                }
                f.signature = i.signature, t.exports = f;
            },
            5098: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function i(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? n(Object(r), !0).forEach(function(e) {
                            o(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function o(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != a(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != a(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == a(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function a(t) {
                    return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, a(t);
                }
                var s, u = r(3609), c = r(3550).EventEmitter, f = r(3441), l = r(7494), h = r(6426), p = r(5335), d = r(8499), y = r(5558).G, b = r(4327), m = r(1469), v = r(9604), g = r(7910), _ = r(3694), w = r(3303)._, S = r(1793), O = r(8768), j = r(5537);
                function $(t, e, r) {
                    if (t.options.timeseries) throw new j(e, "timeseries");
                    var n = $.defaultOptions && $.defaultOptions._id;
                    null != n && ((r = r || {})._id = n), t = _(t, r), this.caster = E(t, null, r), this.caster.path = e, this.caster.prototype.$basePath = e, this.schema = t, this.$isSingleNested = !0, this.base = t.base, h.call(this, e, r, "Embedded");
                }
                function E(t, e, n) {
                    s || (s = r(9380));
                    var i = function(t, e, r) {
                        this.$__parent = r, s.apply(this, arguments), null != r && this.$session(r.$session());
                    };
                    t._preCompile();
                    var o = null != e ? e.prototype : s.prototype;
                    for(var a in (i.prototype = Object.create(o)).$__setSchema(t), i.prototype.constructor = i, i.$__required = null == n ? void 0 : n.required, i.base = t.base, i.schema = t, i.$isSingleNested = !0, i.events = new c, i.prototype.toBSON = function() {
                        return this.toObject(w);
                    }, t.methods)i.prototype[a] = t.methods[a];
                    for(var u in t.statics)i[u] = t.statics[u];
                    for(var f in c.prototype)i[f] = c.prototype[f];
                    return i;
                }
                t.exports = $, $.prototype = Object.create(h.prototype), $.prototype.constructor = $, $.prototype.OptionsConstructor = l, $.prototype.$conditionalHandlers.$geoWithin = function(t, e) {
                    return {
                        $geometry: this.castForQuery(null, t.$geometry, e)
                    };
                }, $.prototype.$conditionalHandlers.$near = $.prototype.$conditionalHandlers.$nearSphere = v.cast$near, $.prototype.$conditionalHandlers.$within = $.prototype.$conditionalHandlers.$geoWithin = v.cast$within, $.prototype.$conditionalHandlers.$geoIntersects = v.cast$geoIntersects, $.prototype.$conditionalHandlers.$minDistance = y, $.prototype.$conditionalHandlers.$maxDistance = y, $.prototype.$conditionalHandlers.$exists = d, $.prototype.cast = function(t, e, r, n, i) {
                    if (t && t.$isSingleNested && t.parent === e) return t;
                    if (null != t && ("object" !== a(t) || Array.isArray(t))) throw new f(this.path, t);
                    var o, s = this.schema.path(this.schema.options.discriminatorKey), u = null == s ? null : s.getDefault(e), c = g(this.caster, t, u), l = e && e.$__ && e.$__.selected, h = this.path, d = null == l ? null : Object.keys(l).reduce(function(t, e) {
                        return e.startsWith(h + ".") && ((t = t || {})[e.substring(h.length + 1)] = l[e]), t;
                    }, null);
                    if (!r) return i = Object.assign({}, i, {
                        priorDoc: n
                    }), 0 === Object.keys(t).length ? new c({}, d, e, void 0, i) : new c(t, d, e, void 0, i);
                    delete (o = new c(void 0, d, e, !1, {
                        defaults: !1
                    })).$__.defaults, o.$init(t);
                    var y = S(d);
                    return p(o, d, y), o;
                }, $.prototype.castForQuery = function(t, e, r, n) {
                    var i;
                    if (null != t) {
                        if (!(i = this.$conditionalHandlers[t])) throw new Error("Can't use " + t);
                        return i.call(this, e);
                    }
                    if (null == e) return e;
                    var o = g(this.caster, e);
                    if (e instanceof o) return e;
                    this.options.runSetters && (e = this._applySetters(e, r));
                    var a = null != n && null != n.strict ? n.strict : void 0;
                    try {
                        e = new o(e, a);
                    } catch (t) {
                        if (!(t instanceof u)) throw new u("Embedded", e, this.path, t, this);
                        throw t;
                    }
                    return e;
                }, $.prototype.doValidate = function(t, e, r, n) {
                    var i = g(this.caster, t);
                    if (!t || t instanceof i || (t = new i(t, null, null != r && null != r.$__ ? r : null)), n && n.skipSchemaValidators) return t ? t.validate().then(function() {
                        return e(null);
                    }, function(t) {
                        return e(t);
                    }) : e(null);
                    h.prototype.doValidate.call(this, t, function(r) {
                        return r ? e(r) : t ? void t.validate().then(function() {
                            return e(null);
                        }, function(t) {
                            return e(t);
                        }) : e(null);
                    }, r, n);
                }, $.prototype.doValidateSync = function(t, e, r) {
                    if (!r || !r.skipSchemaValidators) {
                        var n = h.prototype.doValidateSync.call(this, t, e);
                        if (n) return n;
                    }
                    if (t) return t.validateSync();
                }, $.prototype.discriminator = function(t, e, r) {
                    r = r || {};
                    var n = O.isPOJO(r) ? r.value : r, i = "boolean" != typeof r.clone || r.clone;
                    return e.instanceOfSchema && i && (e = e.clone()), e = m(this.caster, t, e, n, null, null, r.overwriteExisting), this.caster.discriminators[t] = E(e, this.caster), this.caster.discriminators[t];
                }, $.defaultOptions = {}, $.set = h.set, $.setters = [], $.get = h.get, $.prototype.toJSON = function() {
                    return {
                        path: this.path,
                        options: this.options
                    };
                }, $.prototype.clone = function() {
                    var t = new this.constructor(this.schema, this.path, i(i({}, this.options), {}, {
                        _skipApplyDiscriminators: !0
                    }));
                    return t.validators = this.validators.slice(), void 0 !== this.requiredValidator && (t.requiredValidator = this.requiredValidator), t.caster.discriminators = Object.assign({}, this.caster.discriminators), t._appliedDiscriminators = this._appliedDiscriminators, t;
                }, $.prototype.toJSONSchema = function(t) {
                    var e = this.options.required && "function" != typeof this.options.required;
                    return i(i({}, this.schema.toJSONSchema(t)), b("object", "object", null == t ? void 0 : t.useBsonType, e));
                };
            },
            5110: (t)=>{
                "use strict";
                var e = new Set([
                    "$ref",
                    "$id",
                    "$db"
                ]);
                t.exports = function(t) {
                    return "$" === t[0] && !e.has(t);
                };
            },
            5152: (t, e, r)=>{
                "use strict";
                var n = r(3703), i = r(7425);
                t.exports = function t(e, r, o) {
                    for(var a = (o = o || {}).typeOnly, s = Array.isArray(r) ? r : -1 === r.indexOf(".") ? [
                        r
                    ] : r.split("."), u = null, c = "adhocOrUndefined", f = i(e.schema, e.get(e.schema.options.discriminatorKey)) || e.schema, l = 0; l < s.length; ++l){
                        var h = s.slice(0, l + 1).join(".");
                        if (null != (u = f.path(h))) {
                            if ("Mixed" === u.instance) return a ? "real" : u;
                            if (c = f.pathType(h), (u.$isSingleNested || u.$isMongooseDocumentArrayElement) && null != u.schema.discriminators) {
                                var p = u.schema.discriminators, d = e.get(h + "." + n(u, "schema.options.discriminatorKey"));
                                if (null == d || null == p[d]) continue;
                                var y = s.slice(l + 1).join(".");
                                return t(e.get(h), y, o);
                            }
                        } else c = "adhocOrUndefined";
                    }
                    return a ? c : u;
                };
            },
            5188: (t, e, r)=>{
                "use strict";
                var n = r(7300);
                t.exports = function(t, e) {
                    if (null == t) return !1;
                    if ("_id" === e) return 0 === t._id;
                    for(var r = null, i = 0, o = Object.keys(t); i < o.length; i++){
                        var a = o[i];
                        if (n(t[a])) {
                            r = 1 === t[e] ? "inclusive" : "exclusive";
                            break;
                        }
                    }
                    return "inclusive" === r ? 1 !== t[e] : "exclusive" === r && 0 === t[e];
                };
            },
            5218: (t, e, r)=>{
                var n = r(7799), i = r(9732).Buffer;
                t.exports = function(t, e) {
                    return i.from(t.toRed(n.mont(e.modulus)).redPow(new n(e.publicExponent)).fromRed().toArray());
                };
            },
            5268: (t, e, r)=>{
                "use strict";
                var n = r(2746), i = Symbol("mongoose#emitted");
                t.exports = function(t, e, o, a) {
                    if ("function" == typeof t) try {
                        return e(function(e) {
                            if (null == e) t.apply(this, arguments);
                            else {
                                null != o && null != o.listeners && o.listeners("error").length > 0 && !e[i] && (e[i] = !0, o.emit("error", e));
                                try {
                                    t(e);
                                } catch (e) {
                                    return n(function() {
                                        throw e;
                                    });
                                }
                            }
                        });
                    } catch (e) {
                        return null != o && null != o.listeners && o.listeners("error").length > 0 && !e[i] && (e[i] = !0, o.emit("error", e)), t(e);
                    }
                    return new (a = a || r.g.Promise)(function(t, r) {
                        e(function(e, n) {
                            return null != e ? (null != o && null != o.listeners && o.listeners("error").length > 0 && !e[i] && (e[i] = !0, o.emit("error", e)), r(e)) : arguments.length > 2 ? t(Array.prototype.slice.call(arguments, 1)) : void t(n);
                        });
                    });
                };
            },
            5289: (t)=>{
                "use strict";
                t.exports = function(t) {
                    switch(t){
                        case "p":
                            t = "primary";
                            break;
                        case "pp":
                            t = "primaryPreferred";
                            break;
                        case "s":
                            t = "secondary";
                            break;
                        case "sp":
                            t = "secondaryPreferred";
                            break;
                        case "n":
                            t = "nearest";
                    }
                    return t;
                };
            },
            5335: (t, e, r)=>{
                "use strict";
                var n = r(1091);
                function i(t, e, r) {
                    t.$__.activePaths.default(e), !r && t.$isSubdocument && t.$isSingleNested && null != t.$parent() && t.$parent().$__.activePaths.default(t.$__pathRelativeToParent(e));
                }
                t.exports = function(t, e, r, o, a, s, u) {
                    for(var c = Object.keys(t.$__schema.paths), f = c.length, l = u && u.skipParentChangeTracking, h = 0; h < f; ++h){
                        var p = void 0, d = "", y = c[h];
                        if ("_id" !== y || !t.$__.skipId) {
                            var b = t.$__schema.paths[y], m = b.splitPath(), v = m.length;
                            if ("$*" !== m[v - 1]) for(var g = !1, _ = t._doc, w = 0; w < v && null != _; ++w){
                                var S = m[w];
                                if (d += (d.length ? "." : "") + S, !0 === r) {
                                    if (d in e) break;
                                } else if (!1 === r && e && !g) {
                                    var O = b.$isSingleNested || b.$isMongooseDocumentArray;
                                    if (d in e && !n(e[d]) || w === v - 1 && O && null != o && o[d]) g = !0;
                                    else if (null != o && !o[d]) break;
                                }
                                if (w === v - 1) {
                                    if (void 0 !== _[S]) break;
                                    if (null != a) {
                                        if ("function" == typeof b.defaultValue) {
                                            if (!b.defaultValue.$runBeforeSetters && a) break;
                                            if (b.defaultValue.$runBeforeSetters && !a) break;
                                        } else if (!a) continue;
                                    }
                                    if (s && s[d]) break;
                                    if (e && null !== r) {
                                        if (!0 === r) {
                                            if (y in e) continue;
                                            try {
                                                p = b.getDefault(t, !1);
                                            } catch (e) {
                                                t.invalidate(y, e);
                                                break;
                                            }
                                            void 0 !== p && (_[S] = p, i(t, y, l));
                                        } else if (g) {
                                            try {
                                                p = b.getDefault(t, !1);
                                            } catch (e) {
                                                t.invalidate(y, e);
                                                break;
                                            }
                                            void 0 !== p && (_[S] = p, i(t, y, l));
                                        }
                                    } else {
                                        try {
                                            p = b.getDefault(t, !1);
                                        } catch (e) {
                                            t.invalidate(y, e);
                                            break;
                                        }
                                        void 0 !== p && (_[S] = p, i(t, y, l));
                                    }
                                } else _ = _[S];
                            }
                        }
                    }
                };
            },
            5340: ()=>{},
            5346: (t)=>{
                "use strict";
                t.exports = function(t, e, r) {
                    for(var n = e[0], i = r, o = t, a = 0; a < e.length - 1; ++a){
                        var s = i.path(n);
                        if (s && s.schema) {
                            var u = o.get(n);
                            if (i = s.schema, n = e[a + 1], Array.isArray(u) && !isNaN(n) && (u = u[n], n = ""), null == u) break;
                            o = u;
                        } else n += n.length ? "." + e[a + 1] : e[a + 1];
                    }
                    return o;
                };
            },
            5401: (t, e, r)=>{
                var n = r(9732).Buffer;
                function i(t) {
                    n.isBuffer(t) || (t = n.from(t));
                    for(var e = t.length / 4 | 0, r = new Array(e), i = 0; i < e; i++)r[i] = t.readUInt32BE(4 * i);
                    return r;
                }
                function o(t) {
                    for(; 0 < t.length; t++)t[0] = 0;
                }
                function a(t, e, r, n, i) {
                    for(var o, a, s, u, c = r[0], f = r[1], l = r[2], h = r[3], p = t[0] ^ e[0], d = t[1] ^ e[1], y = t[2] ^ e[2], b = t[3] ^ e[3], m = 4, v = 1; v < i; v++)o = c[p >>> 24] ^ f[d >>> 16 & 255] ^ l[y >>> 8 & 255] ^ h[255 & b] ^ e[m++], a = c[d >>> 24] ^ f[y >>> 16 & 255] ^ l[b >>> 8 & 255] ^ h[255 & p] ^ e[m++], s = c[y >>> 24] ^ f[b >>> 16 & 255] ^ l[p >>> 8 & 255] ^ h[255 & d] ^ e[m++], u = c[b >>> 24] ^ f[p >>> 16 & 255] ^ l[d >>> 8 & 255] ^ h[255 & y] ^ e[m++], p = o, d = a, y = s, b = u;
                    return o = (n[p >>> 24] << 24 | n[d >>> 16 & 255] << 16 | n[y >>> 8 & 255] << 8 | n[255 & b]) ^ e[m++], a = (n[d >>> 24] << 24 | n[y >>> 16 & 255] << 16 | n[b >>> 8 & 255] << 8 | n[255 & p]) ^ e[m++], s = (n[y >>> 24] << 24 | n[b >>> 16 & 255] << 16 | n[p >>> 8 & 255] << 8 | n[255 & d]) ^ e[m++], u = (n[b >>> 24] << 24 | n[p >>> 16 & 255] << 16 | n[d >>> 8 & 255] << 8 | n[255 & y]) ^ e[m++], [
                        o >>>= 0,
                        a >>>= 0,
                        s >>>= 0,
                        u >>>= 0
                    ];
                }
                var s = [
                    0,
                    1,
                    2,
                    4,
                    8,
                    16,
                    32,
                    64,
                    128,
                    27,
                    54
                ], u = function() {
                    for(var t = new Array(256), e = 0; e < 256; e++)t[e] = e < 128 ? e << 1 : e << 1 ^ 283;
                    for(var r = [], n = [], i = [
                        [],
                        [],
                        [],
                        []
                    ], o = [
                        [],
                        [],
                        [],
                        []
                    ], a = 0, s = 0, u = 0; u < 256; ++u){
                        var c = s ^ s << 1 ^ s << 2 ^ s << 3 ^ s << 4;
                        c = c >>> 8 ^ 255 & c ^ 99, r[a] = c, n[c] = a;
                        var f = t[a], l = t[f], h = t[l], p = 257 * t[c] ^ 16843008 * c;
                        i[0][a] = p << 24 | p >>> 8, i[1][a] = p << 16 | p >>> 16, i[2][a] = p << 8 | p >>> 24, i[3][a] = p, p = 16843009 * h ^ 65537 * l ^ 257 * f ^ 16843008 * a, o[0][c] = p << 24 | p >>> 8, o[1][c] = p << 16 | p >>> 16, o[2][c] = p << 8 | p >>> 24, o[3][c] = p, 0 === a ? a = s = 1 : (a = f ^ t[t[t[h ^ f]]], s ^= t[t[s]]);
                    }
                    return {
                        SBOX: r,
                        INV_SBOX: n,
                        SUB_MIX: i,
                        INV_SUB_MIX: o
                    };
                }();
                function c(t) {
                    this._key = i(t), this._reset();
                }
                c.blockSize = 16, c.keySize = 32, c.prototype.blockSize = c.blockSize, c.prototype.keySize = c.keySize, c.prototype._reset = function() {
                    for(var t = this._key, e = t.length, r = e + 6, n = 4 * (r + 1), i = [], o = 0; o < e; o++)i[o] = t[o];
                    for(o = e; o < n; o++){
                        var a = i[o - 1];
                        o % e == 0 ? (a = a << 8 | a >>> 24, a = u.SBOX[a >>> 24] << 24 | u.SBOX[a >>> 16 & 255] << 16 | u.SBOX[a >>> 8 & 255] << 8 | u.SBOX[255 & a], a ^= s[o / e | 0] << 24) : e > 6 && o % e == 4 && (a = u.SBOX[a >>> 24] << 24 | u.SBOX[a >>> 16 & 255] << 16 | u.SBOX[a >>> 8 & 255] << 8 | u.SBOX[255 & a]), i[o] = i[o - e] ^ a;
                    }
                    for(var c = [], f = 0; f < n; f++){
                        var l = n - f, h = i[l - (f % 4 ? 0 : 4)];
                        c[f] = f < 4 || l <= 4 ? h : u.INV_SUB_MIX[0][u.SBOX[h >>> 24]] ^ u.INV_SUB_MIX[1][u.SBOX[h >>> 16 & 255]] ^ u.INV_SUB_MIX[2][u.SBOX[h >>> 8 & 255]] ^ u.INV_SUB_MIX[3][u.SBOX[255 & h]];
                    }
                    this._nRounds = r, this._keySchedule = i, this._invKeySchedule = c;
                }, c.prototype.encryptBlockRaw = function(t) {
                    return a(t = i(t), this._keySchedule, u.SUB_MIX, u.SBOX, this._nRounds);
                }, c.prototype.encryptBlock = function(t) {
                    var e = this.encryptBlockRaw(t), r = n.allocUnsafe(16);
                    return r.writeUInt32BE(e[0], 0), r.writeUInt32BE(e[1], 4), r.writeUInt32BE(e[2], 8), r.writeUInt32BE(e[3], 12), r;
                }, c.prototype.decryptBlock = function(t) {
                    var e = (t = i(t))[1];
                    t[1] = t[3], t[3] = e;
                    var r = a(t, this._invKeySchedule, u.INV_SUB_MIX, u.INV_SBOX, this._nRounds), o = n.allocUnsafe(16);
                    return o.writeUInt32BE(r[0], 0), o.writeUInt32BE(r[3], 4), o.writeUInt32BE(r[2], 8), o.writeUInt32BE(r[1], 12), o;
                }, c.prototype.scrub = function() {
                    o(this._keySchedule), o(this._invKeySchedule), o(this._key);
                }, t.exports.AES = c;
            },
            5407: (t, e, r)=>{
                var n = r(5401), i = r(9732).Buffer, o = r(2533);
                function a(t, e, r, a) {
                    o.call(this), this._cipher = new n.AES(e), this._prev = i.from(r), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = a, this._mode = t;
                }
                r(1679)(a, o), a.prototype._update = function(t) {
                    return this._mode.encrypt(this, t, this._decrypt);
                }, a.prototype._final = function() {
                    this._cipher.scrub();
                }, t.exports = a;
            },
            5413: (t, e, r)=>{
                "use strict";
                var n = r(3305), i = r(2402);
                t.exports = function(t) {
                    if (null == t) return t;
                    if ("" === t) return null;
                    var e = n(t, "Long") ? t.toNumber() : Number(t);
                    if (e === (0 | e) && e >= -2147483648 && e <= 2147483647) return e;
                    i.ok(!1);
                };
            },
            5443: (t, e, r)=>{
                var n = r(5053), i = r(7797), o = r(1190), a = r(7799), s = r(1095), u = r(5833), c = r(5218), f = r(9732).Buffer;
                t.exports = function(t, e, r) {
                    var l;
                    l = t.padding ? t.padding : r ? 1 : 4;
                    var h, p = n(t), d = p.modulus.byteLength();
                    if (e.length > d || new a(e).cmp(p.modulus) >= 0) throw new Error("decryption error");
                    h = r ? c(new a(e), p) : s(e, p);
                    var y = f.alloc(d - h.length);
                    if (h = f.concat([
                        y,
                        h
                    ], d), 4 === l) return function(t, e) {
                        var r = t.modulus.byteLength(), n = u("sha1").update(f.alloc(0)).digest(), a = n.length;
                        if (0 !== e[0]) throw new Error("decryption error");
                        var s = e.slice(1, a + 1), c = e.slice(a + 1), l = o(s, i(c, a)), h = o(c, i(l, r - a - 1));
                        if (function(t, e) {
                            t = f.from(t), e = f.from(e);
                            var r = 0, n = t.length;
                            t.length !== e.length && (r++, n = Math.min(t.length, e.length));
                            for(var i = -1; ++i < n;)r += t[i] ^ e[i];
                            return r;
                        }(n, h.slice(0, a))) throw new Error("decryption error");
                        for(var p = a; 0 === h[p];)p++;
                        if (1 !== h[p++]) throw new Error("decryption error");
                        return h.slice(p);
                    }(p, h);
                    if (1 === l) return function(t, e, r) {
                        for(var n = e.slice(0, 2), i = 2, o = 0; 0 !== e[i++];)if (i >= e.length) {
                            o++;
                            break;
                        }
                        var a = e.slice(2, i - 1);
                        if (("0002" !== n.toString("hex") && !r || "0001" !== n.toString("hex") && r) && o++, a.length < 8 && o++, o) throw new Error("decryption error");
                        return e.slice(i);
                    }(0, h, r);
                    if (3 === l) return h;
                    throw new Error("unknown padding");
                };
            },
            5455: (t)=>{
                var e = {}.toString;
                t.exports = Array.isArray || function(t) {
                    return "[object Array]" == e.call(t);
                };
            },
            5459: (t, e, r)=>{
                var n = r(6876);
                e.encrypt = function(t, e) {
                    var r = n(e, t._prev);
                    return t._prev = t._cipher.encryptBlock(r), t._prev;
                }, e.decrypt = function(t, e) {
                    var r = t._prev;
                    t._prev = e;
                    var i = t._cipher.decryptBlock(e);
                    return n(i, r);
                };
            },
            5477: (t, e, r)=>{
                "use strict";
                var n = r(2354), i = r(3279), o = r(3123), a = r(3388);
                t.exports = a || n.call(o, i);
            },
            5484: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                t.exports = function() {
                    if ("function" != typeof Symbol || "function" != typeof Object.getOwnPropertySymbols) return !1;
                    if ("symbol" === e(Symbol.iterator)) return !0;
                    var t = {}, r = Symbol("test"), n = Object(r);
                    if ("string" == typeof r) return !1;
                    if ("[object Symbol]" !== Object.prototype.toString.call(r)) return !1;
                    if ("[object Symbol]" !== Object.prototype.toString.call(n)) return !1;
                    for(var i in t[r] = 42, t)return !1;
                    if ("function" == typeof Object.keys && 0 !== Object.keys(t).length) return !1;
                    if ("function" == typeof Object.getOwnPropertyNames && 0 !== Object.getOwnPropertyNames(t).length) return !1;
                    var o = Object.getOwnPropertySymbols(t);
                    if (1 !== o.length || o[0] !== r) return !1;
                    if (!Object.prototype.propertyIsEnumerable.call(t, r)) return !1;
                    if ("function" == typeof Object.getOwnPropertyDescriptor) {
                        var a = Object.getOwnPropertyDescriptor(t, r);
                        if (42 !== a.value || !0 !== a.enumerable) return !1;
                    }
                    return !0;
                };
            },
            5497: (t, e, r)=>{
                "use strict";
                var n = r(5879);
                t.exports = function(t) {
                    if ("TopologyDescription" !== n(t)) return !1;
                    var e = Array.from(t.servers.values());
                    return e.length > 0 && e.every(function(t) {
                        return t.error && -1 !== t.error.message.indexOf("Client network socket disconnected before secure TLS connection was established");
                    });
                };
            },
            5510: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = "undefined" != typeof Symbol && Symbol, o = r(5484);
                t.exports = function() {
                    return "function" == typeof i && "function" == typeof Symbol && "symbol" === n(i("foo")) && "symbol" === n(Symbol("bar")) && o();
                };
            },
            5537: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e(t, r) {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            'Cannot create use schema for property "'.concat(t, '" because the schema has the ').concat(r, " option enabled.")
                        ]);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8213));
                Object.defineProperty(s.prototype, "name", {
                    value: "InvalidSchemaOptionError"
                }), t.exports = s;
            },
            5549: (t, e, r)=>{
                "use strict";
                var n = r(3633).ObjectId, i = r(7930).objectIdSymbol;
                Object.defineProperty(n.prototype, "_id", {
                    enumerable: !1,
                    configurable: !0,
                    get: function() {
                        return this;
                    }
                }), n.prototype.hasOwnProperty("valueOf") || (n.prototype.valueOf = function() {
                    return this.toString();
                }), n.prototype[i] = !0, t.exports = n;
            },
            5558: (t, e, r)=>{
                "use strict";
                var n = r(3660);
                function i(t) {
                    return n.cast()(t);
                }
                e.G = i, e.p = function t(e, r) {
                    e.forEach(function(n, o) {
                        Array.isArray(n) ? t(n, r) : e[o] = i.call(r, n);
                    });
                };
            },
            5579: (t)=>{
                "use strict";
                t.exports = JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}');
            },
            5586: (t)=>{
                t.exports = {
                    doubles: {
                        step: 4,
                        points: [
                            [
                                "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
                                "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"
                            ],
                            [
                                "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
                                "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"
                            ],
                            [
                                "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
                                "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"
                            ],
                            [
                                "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
                                "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"
                            ],
                            [
                                "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
                                "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"
                            ],
                            [
                                "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
                                "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"
                            ],
                            [
                                "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
                                "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"
                            ],
                            [
                                "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
                                "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"
                            ],
                            [
                                "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
                                "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"
                            ],
                            [
                                "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
                                "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"
                            ],
                            [
                                "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
                                "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"
                            ],
                            [
                                "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
                                "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"
                            ],
                            [
                                "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
                                "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"
                            ],
                            [
                                "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
                                "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"
                            ],
                            [
                                "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
                                "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"
                            ],
                            [
                                "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
                                "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"
                            ],
                            [
                                "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
                                "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"
                            ],
                            [
                                "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
                                "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"
                            ],
                            [
                                "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
                                "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"
                            ],
                            [
                                "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
                                "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"
                            ],
                            [
                                "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
                                "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"
                            ],
                            [
                                "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
                                "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"
                            ],
                            [
                                "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
                                "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"
                            ],
                            [
                                "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
                                "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"
                            ],
                            [
                                "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
                                "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"
                            ],
                            [
                                "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
                                "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"
                            ],
                            [
                                "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
                                "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"
                            ],
                            [
                                "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
                                "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"
                            ],
                            [
                                "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
                                "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"
                            ],
                            [
                                "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
                                "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"
                            ],
                            [
                                "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
                                "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"
                            ],
                            [
                                "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
                                "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"
                            ],
                            [
                                "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
                                "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"
                            ],
                            [
                                "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
                                "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"
                            ],
                            [
                                "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
                                "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"
                            ],
                            [
                                "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
                                "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"
                            ],
                            [
                                "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
                                "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"
                            ],
                            [
                                "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
                                "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"
                            ],
                            [
                                "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
                                "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"
                            ],
                            [
                                "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
                                "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"
                            ],
                            [
                                "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
                                "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"
                            ],
                            [
                                "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
                                "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"
                            ],
                            [
                                "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
                                "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"
                            ],
                            [
                                "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
                                "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"
                            ],
                            [
                                "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
                                "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"
                            ],
                            [
                                "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
                                "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"
                            ],
                            [
                                "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
                                "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"
                            ],
                            [
                                "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
                                "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"
                            ],
                            [
                                "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
                                "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"
                            ],
                            [
                                "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
                                "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"
                            ],
                            [
                                "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
                                "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"
                            ],
                            [
                                "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
                                "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"
                            ],
                            [
                                "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
                                "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"
                            ],
                            [
                                "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
                                "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"
                            ],
                            [
                                "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
                                "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"
                            ],
                            [
                                "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
                                "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"
                            ],
                            [
                                "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
                                "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"
                            ],
                            [
                                "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
                                "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"
                            ],
                            [
                                "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
                                "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"
                            ],
                            [
                                "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
                                "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"
                            ],
                            [
                                "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
                                "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"
                            ],
                            [
                                "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
                                "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"
                            ],
                            [
                                "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
                                "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"
                            ],
                            [
                                "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
                                "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"
                            ],
                            [
                                "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
                                "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"
                            ]
                        ]
                    },
                    naf: {
                        wnd: 7,
                        points: [
                            [
                                "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
                                "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"
                            ],
                            [
                                "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
                                "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"
                            ],
                            [
                                "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
                                "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"
                            ],
                            [
                                "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
                                "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"
                            ],
                            [
                                "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
                                "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"
                            ],
                            [
                                "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
                                "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"
                            ],
                            [
                                "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
                                "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"
                            ],
                            [
                                "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
                                "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"
                            ],
                            [
                                "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
                                "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"
                            ],
                            [
                                "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
                                "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"
                            ],
                            [
                                "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
                                "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"
                            ],
                            [
                                "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
                                "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"
                            ],
                            [
                                "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
                                "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"
                            ],
                            [
                                "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
                                "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"
                            ],
                            [
                                "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
                                "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"
                            ],
                            [
                                "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
                                "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"
                            ],
                            [
                                "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
                                "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"
                            ],
                            [
                                "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
                                "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"
                            ],
                            [
                                "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
                                "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"
                            ],
                            [
                                "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
                                "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"
                            ],
                            [
                                "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
                                "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"
                            ],
                            [
                                "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
                                "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"
                            ],
                            [
                                "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
                                "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"
                            ],
                            [
                                "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
                                "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"
                            ],
                            [
                                "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
                                "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"
                            ],
                            [
                                "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
                                "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"
                            ],
                            [
                                "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
                                "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"
                            ],
                            [
                                "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
                                "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"
                            ],
                            [
                                "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
                                "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"
                            ],
                            [
                                "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
                                "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"
                            ],
                            [
                                "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
                                "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"
                            ],
                            [
                                "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
                                "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"
                            ],
                            [
                                "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
                                "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"
                            ],
                            [
                                "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
                                "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"
                            ],
                            [
                                "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
                                "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"
                            ],
                            [
                                "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
                                "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"
                            ],
                            [
                                "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
                                "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"
                            ],
                            [
                                "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
                                "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"
                            ],
                            [
                                "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
                                "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"
                            ],
                            [
                                "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
                                "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"
                            ],
                            [
                                "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
                                "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"
                            ],
                            [
                                "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
                                "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"
                            ],
                            [
                                "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
                                "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"
                            ],
                            [
                                "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
                                "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"
                            ],
                            [
                                "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
                                "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"
                            ],
                            [
                                "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
                                "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"
                            ],
                            [
                                "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
                                "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"
                            ],
                            [
                                "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
                                "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"
                            ],
                            [
                                "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
                                "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"
                            ],
                            [
                                "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
                                "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"
                            ],
                            [
                                "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
                                "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"
                            ],
                            [
                                "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
                                "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"
                            ],
                            [
                                "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
                                "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"
                            ],
                            [
                                "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
                                "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"
                            ],
                            [
                                "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
                                "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"
                            ],
                            [
                                "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
                                "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"
                            ],
                            [
                                "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
                                "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"
                            ],
                            [
                                "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
                                "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"
                            ],
                            [
                                "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
                                "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"
                            ],
                            [
                                "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
                                "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"
                            ],
                            [
                                "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
                                "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"
                            ],
                            [
                                "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
                                "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"
                            ],
                            [
                                "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
                                "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"
                            ],
                            [
                                "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
                                "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"
                            ],
                            [
                                "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
                                "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"
                            ],
                            [
                                "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
                                "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"
                            ],
                            [
                                "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
                                "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"
                            ],
                            [
                                "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
                                "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"
                            ],
                            [
                                "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
                                "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"
                            ],
                            [
                                "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
                                "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"
                            ],
                            [
                                "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
                                "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"
                            ],
                            [
                                "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
                                "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"
                            ],
                            [
                                "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
                                "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"
                            ],
                            [
                                "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
                                "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"
                            ],
                            [
                                "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
                                "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"
                            ],
                            [
                                "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
                                "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"
                            ],
                            [
                                "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
                                "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"
                            ],
                            [
                                "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
                                "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"
                            ],
                            [
                                "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
                                "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"
                            ],
                            [
                                "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
                                "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"
                            ],
                            [
                                "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
                                "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"
                            ],
                            [
                                "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
                                "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"
                            ],
                            [
                                "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
                                "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"
                            ],
                            [
                                "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
                                "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"
                            ],
                            [
                                "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
                                "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"
                            ],
                            [
                                "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
                                "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"
                            ],
                            [
                                "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
                                "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"
                            ],
                            [
                                "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
                                "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"
                            ],
                            [
                                "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
                                "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"
                            ],
                            [
                                "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
                                "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"
                            ],
                            [
                                "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
                                "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"
                            ],
                            [
                                "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
                                "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"
                            ],
                            [
                                "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
                                "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"
                            ],
                            [
                                "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
                                "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"
                            ],
                            [
                                "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
                                "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"
                            ],
                            [
                                "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
                                "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"
                            ],
                            [
                                "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
                                "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"
                            ],
                            [
                                "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
                                "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"
                            ],
                            [
                                "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
                                "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"
                            ],
                            [
                                "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
                                "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"
                            ],
                            [
                                "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
                                "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"
                            ],
                            [
                                "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
                                "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"
                            ],
                            [
                                "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
                                "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"
                            ],
                            [
                                "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
                                "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"
                            ],
                            [
                                "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
                                "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"
                            ],
                            [
                                "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
                                "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"
                            ],
                            [
                                "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
                                "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"
                            ],
                            [
                                "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
                                "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"
                            ],
                            [
                                "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
                                "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"
                            ],
                            [
                                "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
                                "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"
                            ],
                            [
                                "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
                                "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"
                            ],
                            [
                                "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
                                "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"
                            ],
                            [
                                "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
                                "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"
                            ],
                            [
                                "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
                                "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"
                            ],
                            [
                                "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
                                "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"
                            ],
                            [
                                "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
                                "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"
                            ],
                            [
                                "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
                                "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"
                            ],
                            [
                                "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
                                "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"
                            ],
                            [
                                "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
                                "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"
                            ],
                            [
                                "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
                                "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"
                            ],
                            [
                                "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
                                "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"
                            ],
                            [
                                "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
                                "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"
                            ],
                            [
                                "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
                                "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"
                            ],
                            [
                                "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
                                "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"
                            ],
                            [
                                "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
                                "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"
                            ],
                            [
                                "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
                                "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"
                            ],
                            [
                                "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
                                "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"
                            ]
                        ]
                    }
                };
            },
            5678: (t, e, r)=>{
                "use strict";
                t.exports = r(2914);
            },
            5761: (t)=>{
                "use strict";
                t.exports = Object.freeze({
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                });
            },
            5782: (t)=>{
                "use strict";
                function e(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                t.exports = function(t, r, n) {
                    if (0 === t.length) return n();
                    var i, o = t.length, a = null, s = function(t, r) {
                        var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (!n) {
                            if (Array.isArray(t) || (n = function(t, r) {
                                if (t) {
                                    if ("string" == typeof t) return e(t, r);
                                    var n = ({}).toString.call(t).slice(8, -1);
                                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? e(t, r) : void 0;
                                }
                            }(t)) || r && t && "number" == typeof t.length) {
                                n && (t = n);
                                var i = 0, o = function() {};
                                return {
                                    s: o,
                                    n: function() {
                                        return i >= t.length ? {
                                            done: !0
                                        } : {
                                            done: !1,
                                            value: t[i++]
                                        };
                                    },
                                    e: function(t) {
                                        throw t;
                                    },
                                    f: o
                                };
                            }
                            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                        }
                        var a, s = !0, u = !1;
                        return {
                            s: function() {
                                n = n.call(t);
                            },
                            n: function() {
                                var t = n.next();
                                return s = t.done, t;
                            },
                            e: function(t) {
                                u = !0, a = t;
                            },
                            f: function() {
                                try {
                                    s || null == n.return || n.return();
                                } finally{
                                    if (u) throw a;
                                }
                            }
                        };
                    }(t);
                    try {
                        for(s.s(); !(i = s.n()).done;)r(i.value, function(t) {
                            if (null == a) return null != t ? n(a = t) : --o <= 0 ? n() : void 0;
                        });
                    } catch (a) {
                        s.e(a);
                    } finally{
                        s.f();
                    }
                };
            },
            5803: (t, e, r)=>{
                "use strict";
                var n = e;
                n.base = r(3334), n.short = r(5045), n.mont = r(3453), n.edwards = r(9723);
            },
            5804: (t, e, r)=>{
                "use strict";
                var n = r(2354), i = r(3279), o = r(5477);
                t.exports = function() {
                    return o(n, i, arguments);
                };
            },
            5807: (t)=>{
                "use strict";
                t.exports = Object.getOwnPropertyDescriptor;
            },
            5825: (t, e, r)=>{
                "use strict";
                var n = r(8093);
                t.exports = n.getPrototypeOf || null;
            },
            5832: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(6775), o = r(2486), a = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
                e.Buffer = c, e.SlowBuffer = function(t) {
                    return +t != t && (t = 0), c.alloc(+t);
                }, e.INSPECT_MAX_BYTES = 50;
                var s = 2147483647;
                function u(t) {
                    if (t > s) throw new RangeError('The value "' + t + '" is invalid for option "size"');
                    var e = new Uint8Array(t);
                    return Object.setPrototypeOf(e, c.prototype), e;
                }
                function c(t, e, r) {
                    if ("number" == typeof t) {
                        if ("string" == typeof e) throw new TypeError('The "string" argument must be of type string. Received type number');
                        return h(t);
                    }
                    return f(t, e, r);
                }
                function f(t, e, r) {
                    if ("string" == typeof t) return function(t, e) {
                        if ("string" == typeof e && "" !== e || (e = "utf8"), !c.isEncoding(e)) throw new TypeError("Unknown encoding: " + e);
                        var r = 0 | b(t, e), n = u(r), i = n.write(t, e);
                        return i !== r && (n = n.slice(0, i)), n;
                    }(t, e);
                    if (ArrayBuffer.isView(t)) return function(t) {
                        if (F(t, Uint8Array)) {
                            var e = new Uint8Array(t);
                            return d(e.buffer, e.byteOffset, e.byteLength);
                        }
                        return p(t);
                    }(t);
                    if (null == t) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + n(t));
                    if (F(t, ArrayBuffer) || t && F(t.buffer, ArrayBuffer)) return d(t, e, r);
                    if ("undefined" != typeof SharedArrayBuffer && (F(t, SharedArrayBuffer) || t && F(t.buffer, SharedArrayBuffer))) return d(t, e, r);
                    if ("number" == typeof t) throw new TypeError('The "value" argument must not be of type number. Received type number');
                    var i = t.valueOf && t.valueOf();
                    if (null != i && i !== t) return c.from(i, e, r);
                    var o = function(t) {
                        if (c.isBuffer(t)) {
                            var e = 0 | y(t.length), r = u(e);
                            return 0 === r.length || t.copy(r, 0, 0, e), r;
                        }
                        return void 0 !== t.length ? "number" != typeof t.length || V(t.length) ? u(0) : p(t) : "Buffer" === t.type && Array.isArray(t.data) ? p(t.data) : void 0;
                    }(t);
                    if (o) return o;
                    if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t[Symbol.toPrimitive]) return c.from(t[Symbol.toPrimitive]("string"), e, r);
                    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + n(t));
                }
                function l(t) {
                    if ("number" != typeof t) throw new TypeError('"size" argument must be of type number');
                    if (t < 0) throw new RangeError('The value "' + t + '" is invalid for option "size"');
                }
                function h(t) {
                    return l(t), u(t < 0 ? 0 : 0 | y(t));
                }
                function p(t) {
                    for(var e = t.length < 0 ? 0 : 0 | y(t.length), r = u(e), n = 0; n < e; n += 1)r[n] = 255 & t[n];
                    return r;
                }
                function d(t, e, r) {
                    if (e < 0 || t.byteLength < e) throw new RangeError('"offset" is outside of buffer bounds');
                    if (t.byteLength < e + (r || 0)) throw new RangeError('"length" is outside of buffer bounds');
                    var n;
                    return n = void 0 === e && void 0 === r ? new Uint8Array(t) : void 0 === r ? new Uint8Array(t, e) : new Uint8Array(t, e, r), Object.setPrototypeOf(n, c.prototype), n;
                }
                function y(t) {
                    if (t >= s) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s.toString(16) + " bytes");
                    return 0 | t;
                }
                function b(t, e) {
                    if (c.isBuffer(t)) return t.length;
                    if (ArrayBuffer.isView(t) || F(t, ArrayBuffer)) return t.byteLength;
                    if ("string" != typeof t) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + n(t));
                    var r = t.length, i = arguments.length > 2 && !0 === arguments[2];
                    if (!i && 0 === r) return 0;
                    for(var o = !1;;)switch(e){
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return r;
                        case "utf8":
                        case "utf-8":
                            return C(t).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return 2 * r;
                        case "hex":
                            return r >>> 1;
                        case "base64":
                            return U(t).length;
                        default:
                            if (o) return i ? -1 : C(t).length;
                            e = ("" + e).toLowerCase(), o = !0;
                    }
                }
                function m(t, e, r) {
                    var n = !1;
                    if ((void 0 === e || e < 0) && (e = 0), e > this.length) return "";
                    if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return "";
                    if ((r >>>= 0) <= (e >>>= 0)) return "";
                    for(t || (t = "utf8");;)switch(t){
                        case "hex":
                            return M(this, e, r);
                        case "utf8":
                        case "utf-8":
                            return A(this, e, r);
                        case "ascii":
                            return x(this, e, r);
                        case "latin1":
                        case "binary":
                            return k(this, e, r);
                        case "base64":
                            return E(this, e, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return T(this, e, r);
                        default:
                            if (n) throw new TypeError("Unknown encoding: " + t);
                            t = (t + "").toLowerCase(), n = !0;
                    }
                }
                function v(t, e, r) {
                    var n = t[e];
                    t[e] = t[r], t[r] = n;
                }
                function g(t, e, r, n, i) {
                    if (0 === t.length) return -1;
                    if ("string" == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), V(r = +r) && (r = i ? 0 : t.length - 1), r < 0 && (r = t.length + r), r >= t.length) {
                        if (i) return -1;
                        r = t.length - 1;
                    } else if (r < 0) {
                        if (!i) return -1;
                        r = 0;
                    }
                    if ("string" == typeof e && (e = c.from(e, n)), c.isBuffer(e)) return 0 === e.length ? -1 : _(t, e, r, n, i);
                    if ("number" == typeof e) return e &= 255, "function" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(t, e, r) : Uint8Array.prototype.lastIndexOf.call(t, e, r) : _(t, [
                        e
                    ], r, n, i);
                    throw new TypeError("val must be string, number or Buffer");
                }
                function _(t, e, r, n, i) {
                    var o, a = 1, s = t.length, u = e.length;
                    if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                        if (t.length < 2 || e.length < 2) return -1;
                        a = 2, s /= 2, u /= 2, r /= 2;
                    }
                    function c(t, e) {
                        return 1 === a ? t[e] : t.readUInt16BE(e * a);
                    }
                    if (i) {
                        var f = -1;
                        for(o = r; o < s; o++)if (c(t, o) === c(e, -1 === f ? 0 : o - f)) {
                            if (-1 === f && (f = o), o - f + 1 === u) return f * a;
                        } else -1 !== f && (o -= o - f), f = -1;
                    } else for(r + u > s && (r = s - u), o = r; o >= 0; o--){
                        for(var l = !0, h = 0; h < u; h++)if (c(t, o + h) !== c(e, h)) {
                            l = !1;
                            break;
                        }
                        if (l) return o;
                    }
                    return -1;
                }
                function w(t, e, r, n) {
                    r = Number(r) || 0;
                    var i = t.length - r;
                    n ? (n = Number(n)) > i && (n = i) : n = i;
                    var o = e.length;
                    n > o / 2 && (n = o / 2);
                    for(var a = 0; a < n; ++a){
                        var s = parseInt(e.substr(2 * a, 2), 16);
                        if (V(s)) return a;
                        t[r + a] = s;
                    }
                    return a;
                }
                function S(t, e, r, n) {
                    return q(C(e, t.length - r), t, r, n);
                }
                function O(t, e, r, n) {
                    return q(function(t) {
                        for(var e = [], r = 0; r < t.length; ++r)e.push(255 & t.charCodeAt(r));
                        return e;
                    }(e), t, r, n);
                }
                function j(t, e, r, n) {
                    return q(U(e), t, r, n);
                }
                function $(t, e, r, n) {
                    return q(function(t, e) {
                        for(var r, n, i, o = [], a = 0; a < t.length && !((e -= 2) < 0); ++a)n = (r = t.charCodeAt(a)) >> 8, i = r % 256, o.push(i), o.push(n);
                        return o;
                    }(e, t.length - r), t, r, n);
                }
                function E(t, e, r) {
                    return 0 === e && r === t.length ? i.fromByteArray(t) : i.fromByteArray(t.slice(e, r));
                }
                function A(t, e, r) {
                    r = Math.min(t.length, r);
                    for(var n = [], i = e; i < r;){
                        var o, a, s, u, c = t[i], f = null, l = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1;
                        if (i + l <= r) switch(l){
                            case 1:
                                c < 128 && (f = c);
                                break;
                            case 2:
                                128 == (192 & (o = t[i + 1])) && (u = (31 & c) << 6 | 63 & o) > 127 && (f = u);
                                break;
                            case 3:
                                o = t[i + 1], a = t[i + 2], 128 == (192 & o) && 128 == (192 & a) && (u = (15 & c) << 12 | (63 & o) << 6 | 63 & a) > 2047 && (u < 55296 || u > 57343) && (f = u);
                                break;
                            case 4:
                                o = t[i + 1], a = t[i + 2], s = t[i + 3], 128 == (192 & o) && 128 == (192 & a) && 128 == (192 & s) && (u = (15 & c) << 18 | (63 & o) << 12 | (63 & a) << 6 | 63 & s) > 65535 && u < 1114112 && (f = u);
                        }
                        null === f ? (f = 65533, l = 1) : f > 65535 && (f -= 65536, n.push(f >>> 10 & 1023 | 55296), f = 56320 | 1023 & f), n.push(f), i += l;
                    }
                    return function(t) {
                        var e = t.length;
                        if (e <= P) return String.fromCharCode.apply(String, t);
                        for(var r = "", n = 0; n < e;)r += String.fromCharCode.apply(String, t.slice(n, n += P));
                        return r;
                    }(n);
                }
                e.kMaxLength = s, c.TYPED_ARRAY_SUPPORT = function() {
                    try {
                        var t = new Uint8Array(1), e = {
                            foo: function() {
                                return 42;
                            }
                        };
                        return Object.setPrototypeOf(e, Uint8Array.prototype), Object.setPrototypeOf(t, e), 42 === t.foo();
                    } catch (t) {
                        return !1;
                    }
                }(), c.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(c.prototype, "parent", {
                    enumerable: !0,
                    get: function() {
                        if (c.isBuffer(this)) return this.buffer;
                    }
                }), Object.defineProperty(c.prototype, "offset", {
                    enumerable: !0,
                    get: function() {
                        if (c.isBuffer(this)) return this.byteOffset;
                    }
                }), c.poolSize = 8192, c.from = function(t, e, r) {
                    return f(t, e, r);
                }, Object.setPrototypeOf(c.prototype, Uint8Array.prototype), Object.setPrototypeOf(c, Uint8Array), c.alloc = function(t, e, r) {
                    return function(t, e, r) {
                        return l(t), t <= 0 ? u(t) : void 0 !== e ? "string" == typeof r ? u(t).fill(e, r) : u(t).fill(e) : u(t);
                    }(t, e, r);
                }, c.allocUnsafe = function(t) {
                    return h(t);
                }, c.allocUnsafeSlow = function(t) {
                    return h(t);
                }, c.isBuffer = function(t) {
                    return null != t && !0 === t._isBuffer && t !== c.prototype;
                }, c.compare = function(t, e) {
                    if (F(t, Uint8Array) && (t = c.from(t, t.offset, t.byteLength)), F(e, Uint8Array) && (e = c.from(e, e.offset, e.byteLength)), !c.isBuffer(t) || !c.isBuffer(e)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                    if (t === e) return 0;
                    for(var r = t.length, n = e.length, i = 0, o = Math.min(r, n); i < o; ++i)if (t[i] !== e[i]) {
                        r = t[i], n = e[i];
                        break;
                    }
                    return r < n ? -1 : n < r ? 1 : 0;
                }, c.isEncoding = function(t) {
                    switch(String(t).toLowerCase()){
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "latin1":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return !0;
                        default:
                            return !1;
                    }
                }, c.concat = function(t, e) {
                    if (!Array.isArray(t)) throw new TypeError('"list" argument must be an Array of Buffers');
                    if (0 === t.length) return c.alloc(0);
                    var r;
                    if (void 0 === e) for(e = 0, r = 0; r < t.length; ++r)e += t[r].length;
                    var n = c.allocUnsafe(e), i = 0;
                    for(r = 0; r < t.length; ++r){
                        var o = t[r];
                        if (F(o, Uint8Array)) i + o.length > n.length ? c.from(o).copy(n, i) : Uint8Array.prototype.set.call(n, o, i);
                        else {
                            if (!c.isBuffer(o)) throw new TypeError('"list" argument must be an Array of Buffers');
                            o.copy(n, i);
                        }
                        i += o.length;
                    }
                    return n;
                }, c.byteLength = b, c.prototype._isBuffer = !0, c.prototype.swap16 = function() {
                    var t = this.length;
                    if (t % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                    for(var e = 0; e < t; e += 2)v(this, e, e + 1);
                    return this;
                }, c.prototype.swap32 = function() {
                    var t = this.length;
                    if (t % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                    for(var e = 0; e < t; e += 4)v(this, e, e + 3), v(this, e + 1, e + 2);
                    return this;
                }, c.prototype.swap64 = function() {
                    var t = this.length;
                    if (t % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                    for(var e = 0; e < t; e += 8)v(this, e, e + 7), v(this, e + 1, e + 6), v(this, e + 2, e + 5), v(this, e + 3, e + 4);
                    return this;
                }, c.prototype.toString = function() {
                    var t = this.length;
                    return 0 === t ? "" : 0 === arguments.length ? A(this, 0, t) : m.apply(this, arguments);
                }, c.prototype.toLocaleString = c.prototype.toString, c.prototype.equals = function(t) {
                    if (!c.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
                    return this === t || 0 === c.compare(this, t);
                }, c.prototype.inspect = function() {
                    var t = "", r = e.INSPECT_MAX_BYTES;
                    return t = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (t += " ... "), "<Buffer " + t + ">";
                }, a && (c.prototype[a] = c.prototype.inspect), c.prototype.compare = function(t, e, r, i, o) {
                    if (F(t, Uint8Array) && (t = c.from(t, t.offset, t.byteLength)), !c.isBuffer(t)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + n(t));
                    if (void 0 === e && (e = 0), void 0 === r && (r = t ? t.length : 0), void 0 === i && (i = 0), void 0 === o && (o = this.length), e < 0 || r > t.length || i < 0 || o > this.length) throw new RangeError("out of range index");
                    if (i >= o && e >= r) return 0;
                    if (i >= o) return -1;
                    if (e >= r) return 1;
                    if (this === t) return 0;
                    for(var a = (o >>>= 0) - (i >>>= 0), s = (r >>>= 0) - (e >>>= 0), u = Math.min(a, s), f = this.slice(i, o), l = t.slice(e, r), h = 0; h < u; ++h)if (f[h] !== l[h]) {
                        a = f[h], s = l[h];
                        break;
                    }
                    return a < s ? -1 : s < a ? 1 : 0;
                }, c.prototype.includes = function(t, e, r) {
                    return -1 !== this.indexOf(t, e, r);
                }, c.prototype.indexOf = function(t, e, r) {
                    return g(this, t, e, r, !0);
                }, c.prototype.lastIndexOf = function(t, e, r) {
                    return g(this, t, e, r, !1);
                }, c.prototype.write = function(t, e, r, n) {
                    if (void 0 === e) n = "utf8", r = this.length, e = 0;
                    else if (void 0 === r && "string" == typeof e) n = e, r = this.length, e = 0;
                    else {
                        if (!isFinite(e)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                        e >>>= 0, isFinite(r) ? (r >>>= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0);
                    }
                    var i = this.length - e;
                    if ((void 0 === r || r > i) && (r = i), t.length > 0 && (r < 0 || e < 0) || e > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                    n || (n = "utf8");
                    for(var o = !1;;)switch(n){
                        case "hex":
                            return w(this, t, e, r);
                        case "utf8":
                        case "utf-8":
                            return S(this, t, e, r);
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return O(this, t, e, r);
                        case "base64":
                            return j(this, t, e, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return $(this, t, e, r);
                        default:
                            if (o) throw new TypeError("Unknown encoding: " + n);
                            n = ("" + n).toLowerCase(), o = !0;
                    }
                }, c.prototype.toJSON = function() {
                    return {
                        type: "Buffer",
                        data: Array.prototype.slice.call(this._arr || this, 0)
                    };
                };
                var P = 4096;
                function x(t, e, r) {
                    var n = "";
                    r = Math.min(t.length, r);
                    for(var i = e; i < r; ++i)n += String.fromCharCode(127 & t[i]);
                    return n;
                }
                function k(t, e, r) {
                    var n = "";
                    r = Math.min(t.length, r);
                    for(var i = e; i < r; ++i)n += String.fromCharCode(t[i]);
                    return n;
                }
                function M(t, e, r) {
                    var n = t.length;
                    (!e || e < 0) && (e = 0), (!r || r < 0 || r > n) && (r = n);
                    for(var i = "", o = e; o < r; ++o)i += z[t[o]];
                    return i;
                }
                function T(t, e, r) {
                    for(var n = t.slice(e, r), i = "", o = 0; o < n.length - 1; o += 2)i += String.fromCharCode(n[o] + 256 * n[o + 1]);
                    return i;
                }
                function B(t, e, r) {
                    if (t % 1 != 0 || t < 0) throw new RangeError("offset is not uint");
                    if (t + e > r) throw new RangeError("Trying to access beyond buffer length");
                }
                function I(t, e, r, n, i, o) {
                    if (!c.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance');
                    if (e > i || e < o) throw new RangeError('"value" argument is out of bounds');
                    if (r + n > t.length) throw new RangeError("Index out of range");
                }
                function R(t, e, r, n, i, o) {
                    if (r + n > t.length) throw new RangeError("Index out of range");
                    if (r < 0) throw new RangeError("Index out of range");
                }
                function N(t, e, r, n, i) {
                    return e = +e, r >>>= 0, i || R(t, 0, r, 4), o.write(t, e, r, n, 23, 4), r + 4;
                }
                function D(t, e, r, n, i) {
                    return e = +e, r >>>= 0, i || R(t, 0, r, 8), o.write(t, e, r, n, 52, 8), r + 8;
                }
                c.prototype.slice = function(t, e) {
                    var r = this.length;
                    (t = ~~t) < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r), (e = void 0 === e ? r : ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r), e < t && (e = t);
                    var n = this.subarray(t, e);
                    return Object.setPrototypeOf(n, c.prototype), n;
                }, c.prototype.readUintLE = c.prototype.readUIntLE = function(t, e, r) {
                    t >>>= 0, e >>>= 0, r || B(t, e, this.length);
                    for(var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);)n += this[t + o] * i;
                    return n;
                }, c.prototype.readUintBE = c.prototype.readUIntBE = function(t, e, r) {
                    t >>>= 0, e >>>= 0, r || B(t, e, this.length);
                    for(var n = this[t + --e], i = 1; e > 0 && (i *= 256);)n += this[t + --e] * i;
                    return n;
                }, c.prototype.readUint8 = c.prototype.readUInt8 = function(t, e) {
                    return t >>>= 0, e || B(t, 1, this.length), this[t];
                }, c.prototype.readUint16LE = c.prototype.readUInt16LE = function(t, e) {
                    return t >>>= 0, e || B(t, 2, this.length), this[t] | this[t + 1] << 8;
                }, c.prototype.readUint16BE = c.prototype.readUInt16BE = function(t, e) {
                    return t >>>= 0, e || B(t, 2, this.length), this[t] << 8 | this[t + 1];
                }, c.prototype.readUint32LE = c.prototype.readUInt32LE = function(t, e) {
                    return t >>>= 0, e || B(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3];
                }, c.prototype.readUint32BE = c.prototype.readUInt32BE = function(t, e) {
                    return t >>>= 0, e || B(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);
                }, c.prototype.readIntLE = function(t, e, r) {
                    t >>>= 0, e >>>= 0, r || B(t, e, this.length);
                    for(var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);)n += this[t + o] * i;
                    return n >= (i *= 128) && (n -= Math.pow(2, 8 * e)), n;
                }, c.prototype.readIntBE = function(t, e, r) {
                    t >>>= 0, e >>>= 0, r || B(t, e, this.length);
                    for(var n = e, i = 1, o = this[t + --n]; n > 0 && (i *= 256);)o += this[t + --n] * i;
                    return o >= (i *= 128) && (o -= Math.pow(2, 8 * e)), o;
                }, c.prototype.readInt8 = function(t, e) {
                    return t >>>= 0, e || B(t, 1, this.length), 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t];
                }, c.prototype.readInt16LE = function(t, e) {
                    t >>>= 0, e || B(t, 2, this.length);
                    var r = this[t] | this[t + 1] << 8;
                    return 32768 & r ? 4294901760 | r : r;
                }, c.prototype.readInt16BE = function(t, e) {
                    t >>>= 0, e || B(t, 2, this.length);
                    var r = this[t + 1] | this[t] << 8;
                    return 32768 & r ? 4294901760 | r : r;
                }, c.prototype.readInt32LE = function(t, e) {
                    return t >>>= 0, e || B(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;
                }, c.prototype.readInt32BE = function(t, e) {
                    return t >>>= 0, e || B(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];
                }, c.prototype.readFloatLE = function(t, e) {
                    return t >>>= 0, e || B(t, 4, this.length), o.read(this, t, !0, 23, 4);
                }, c.prototype.readFloatBE = function(t, e) {
                    return t >>>= 0, e || B(t, 4, this.length), o.read(this, t, !1, 23, 4);
                }, c.prototype.readDoubleLE = function(t, e) {
                    return t >>>= 0, e || B(t, 8, this.length), o.read(this, t, !0, 52, 8);
                }, c.prototype.readDoubleBE = function(t, e) {
                    return t >>>= 0, e || B(t, 8, this.length), o.read(this, t, !1, 52, 8);
                }, c.prototype.writeUintLE = c.prototype.writeUIntLE = function(t, e, r, n) {
                    t = +t, e >>>= 0, r >>>= 0, n || I(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
                    var i = 1, o = 0;
                    for(this[e] = 255 & t; ++o < r && (i *= 256);)this[e + o] = t / i & 255;
                    return e + r;
                }, c.prototype.writeUintBE = c.prototype.writeUIntBE = function(t, e, r, n) {
                    t = +t, e >>>= 0, r >>>= 0, n || I(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
                    var i = r - 1, o = 1;
                    for(this[e + i] = 255 & t; --i >= 0 && (o *= 256);)this[e + i] = t / o & 255;
                    return e + r;
                }, c.prototype.writeUint8 = c.prototype.writeUInt8 = function(t, e, r) {
                    return t = +t, e >>>= 0, r || I(this, t, e, 1, 255, 0), this[e] = 255 & t, e + 1;
                }, c.prototype.writeUint16LE = c.prototype.writeUInt16LE = function(t, e, r) {
                    return t = +t, e >>>= 0, r || I(this, t, e, 2, 65535, 0), this[e] = 255 & t, this[e + 1] = t >>> 8, e + 2;
                }, c.prototype.writeUint16BE = c.prototype.writeUInt16BE = function(t, e, r) {
                    return t = +t, e >>>= 0, r || I(this, t, e, 2, 65535, 0), this[e] = t >>> 8, this[e + 1] = 255 & t, e + 2;
                }, c.prototype.writeUint32LE = c.prototype.writeUInt32LE = function(t, e, r) {
                    return t = +t, e >>>= 0, r || I(this, t, e, 4, 4294967295, 0), this[e + 3] = t >>> 24, this[e + 2] = t >>> 16, this[e + 1] = t >>> 8, this[e] = 255 & t, e + 4;
                }, c.prototype.writeUint32BE = c.prototype.writeUInt32BE = function(t, e, r) {
                    return t = +t, e >>>= 0, r || I(this, t, e, 4, 4294967295, 0), this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t, e + 4;
                }, c.prototype.writeIntLE = function(t, e, r, n) {
                    if (t = +t, e >>>= 0, !n) {
                        var i = Math.pow(2, 8 * r - 1);
                        I(this, t, e, r, i - 1, -i);
                    }
                    var o = 0, a = 1, s = 0;
                    for(this[e] = 255 & t; ++o < r && (a *= 256);)t < 0 && 0 === s && 0 !== this[e + o - 1] && (s = 1), this[e + o] = (t / a | 0) - s & 255;
                    return e + r;
                }, c.prototype.writeIntBE = function(t, e, r, n) {
                    if (t = +t, e >>>= 0, !n) {
                        var i = Math.pow(2, 8 * r - 1);
                        I(this, t, e, r, i - 1, -i);
                    }
                    var o = r - 1, a = 1, s = 0;
                    for(this[e + o] = 255 & t; --o >= 0 && (a *= 256);)t < 0 && 0 === s && 0 !== this[e + o + 1] && (s = 1), this[e + o] = (t / a | 0) - s & 255;
                    return e + r;
                }, c.prototype.writeInt8 = function(t, e, r) {
                    return t = +t, e >>>= 0, r || I(this, t, e, 1, 127, -128), t < 0 && (t = 255 + t + 1), this[e] = 255 & t, e + 1;
                }, c.prototype.writeInt16LE = function(t, e, r) {
                    return t = +t, e >>>= 0, r || I(this, t, e, 2, 32767, -32768), this[e] = 255 & t, this[e + 1] = t >>> 8, e + 2;
                }, c.prototype.writeInt16BE = function(t, e, r) {
                    return t = +t, e >>>= 0, r || I(this, t, e, 2, 32767, -32768), this[e] = t >>> 8, this[e + 1] = 255 & t, e + 2;
                }, c.prototype.writeInt32LE = function(t, e, r) {
                    return t = +t, e >>>= 0, r || I(this, t, e, 4, 2147483647, -2147483648), this[e] = 255 & t, this[e + 1] = t >>> 8, this[e + 2] = t >>> 16, this[e + 3] = t >>> 24, e + 4;
                }, c.prototype.writeInt32BE = function(t, e, r) {
                    return t = +t, e >>>= 0, r || I(this, t, e, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t, e + 4;
                }, c.prototype.writeFloatLE = function(t, e, r) {
                    return N(this, t, e, !0, r);
                }, c.prototype.writeFloatBE = function(t, e, r) {
                    return N(this, t, e, !1, r);
                }, c.prototype.writeDoubleLE = function(t, e, r) {
                    return D(this, t, e, !0, r);
                }, c.prototype.writeDoubleBE = function(t, e, r) {
                    return D(this, t, e, !1, r);
                }, c.prototype.copy = function(t, e, r, n) {
                    if (!c.isBuffer(t)) throw new TypeError("argument should be a Buffer");
                    if (r || (r = 0), n || 0 === n || (n = this.length), e >= t.length && (e = t.length), e || (e = 0), n > 0 && n < r && (n = r), n === r) return 0;
                    if (0 === t.length || 0 === this.length) return 0;
                    if (e < 0) throw new RangeError("targetStart out of bounds");
                    if (r < 0 || r >= this.length) throw new RangeError("Index out of range");
                    if (n < 0) throw new RangeError("sourceEnd out of bounds");
                    n > this.length && (n = this.length), t.length - e < n - r && (n = t.length - e + r);
                    var i = n - r;
                    return this === t && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(e, r, n) : Uint8Array.prototype.set.call(t, this.subarray(r, n), e), i;
                }, c.prototype.fill = function(t, e, r, n) {
                    if ("string" == typeof t) {
                        if ("string" == typeof e ? (n = e, e = 0, r = this.length) : "string" == typeof r && (n = r, r = this.length), void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
                        if ("string" == typeof n && !c.isEncoding(n)) throw new TypeError("Unknown encoding: " + n);
                        if (1 === t.length) {
                            var i = t.charCodeAt(0);
                            ("utf8" === n && i < 128 || "latin1" === n) && (t = i);
                        }
                    } else "number" == typeof t ? t &= 255 : "boolean" == typeof t && (t = Number(t));
                    if (e < 0 || this.length < e || this.length < r) throw new RangeError("Out of range index");
                    if (r <= e) return this;
                    var o;
                    if (e >>>= 0, r = void 0 === r ? this.length : r >>> 0, t || (t = 0), "number" == typeof t) for(o = e; o < r; ++o)this[o] = t;
                    else {
                        var a = c.isBuffer(t) ? t : c.from(t, n), s = a.length;
                        if (0 === s) throw new TypeError('The value "' + t + '" is invalid for argument "value"');
                        for(o = 0; o < r - e; ++o)this[o + e] = a[o % s];
                    }
                    return this;
                };
                var L = /[^+/0-9A-Za-z-_]/g;
                function C(t, e) {
                    var r;
                    e = e || 1 / 0;
                    for(var n = t.length, i = null, o = [], a = 0; a < n; ++a){
                        if ((r = t.charCodeAt(a)) > 55295 && r < 57344) {
                            if (!i) {
                                if (r > 56319) {
                                    (e -= 3) > -1 && o.push(239, 191, 189);
                                    continue;
                                }
                                if (a + 1 === n) {
                                    (e -= 3) > -1 && o.push(239, 191, 189);
                                    continue;
                                }
                                i = r;
                                continue;
                            }
                            if (r < 56320) {
                                (e -= 3) > -1 && o.push(239, 191, 189), i = r;
                                continue;
                            }
                            r = 65536 + (i - 55296 << 10 | r - 56320);
                        } else i && (e -= 3) > -1 && o.push(239, 191, 189);
                        if (i = null, r < 128) {
                            if ((e -= 1) < 0) break;
                            o.push(r);
                        } else if (r < 2048) {
                            if ((e -= 2) < 0) break;
                            o.push(r >> 6 | 192, 63 & r | 128);
                        } else if (r < 65536) {
                            if ((e -= 3) < 0) break;
                            o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);
                        } else {
                            if (!(r < 1114112)) throw new Error("Invalid code point");
                            if ((e -= 4) < 0) break;
                            o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);
                        }
                    }
                    return o;
                }
                function U(t) {
                    return i.toByteArray(function(t) {
                        if ((t = (t = t.split("=")[0]).trim().replace(L, "")).length < 2) return "";
                        for(; t.length % 4 != 0;)t += "=";
                        return t;
                    }(t));
                }
                function q(t, e, r, n) {
                    for(var i = 0; i < n && !(i + r >= e.length || i >= t.length); ++i)e[i + r] = t[i];
                    return i;
                }
                function F(t, e) {
                    return t instanceof e || null != t && null != t.constructor && null != t.constructor.name && t.constructor.name === e.name;
                }
                function V(t) {
                    return t != t;
                }
                var z = function() {
                    for(var t = "0123456789abcdef", e = new Array(256), r = 0; r < 16; ++r)for(var n = 16 * r, i = 0; i < 16; ++i)e[n + i] = t[r] + t[i];
                    return e;
                }();
            },
            5833: (t, e, r)=>{
                "use strict";
                var n = r(1679), i = r(2635), o = r(1058), a = r(3261), s = r(2533);
                function u(t) {
                    s.call(this, "digest"), this._hash = t;
                }
                n(u, s), u.prototype._update = function(t) {
                    this._hash.update(t);
                }, u.prototype._final = function() {
                    return this._hash.digest();
                }, t.exports = function(t) {
                    return "md5" === (t = t.toLowerCase()) ? new i : "rmd160" === t || "ripemd160" === t ? new o : new u(a(t));
                };
            },
            5864: (t, e, r)=>{
                t.exports = r(3550).EventEmitter;
            },
            5879: (t)=>{
                "use strict";
                t.exports = function(t) {
                    if (null != t && "function" == typeof t.constructor) return t.constructor.name;
                };
            },
            5889: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = i(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, o = function() {};
                            return {
                                s: o,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: o
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a, s = !0, u = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return s = t.done, t;
                        },
                        e: function(t) {
                            u = !0, a = t;
                        },
                        f: function() {
                            try {
                                s || null == r.return || r.return();
                            } finally{
                                if (u) throw a;
                            }
                        }
                    };
                }
                function i(t, e) {
                    if (t) {
                        if ("string" == typeof t) return o(t, e);
                        var r = ({}).toString.call(t).slice(8, -1);
                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? o(t, e) : void 0;
                    }
                }
                function o(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var a = r(7930).arrayAtomicsSymbol, s = r(7930).sessionNewDocuments, u = r(8768);
                function c(t, e) {
                    var r;
                    return t = t || {}, null != e.$pullAll && (t.$pullAll = (t.$pullAll || []).concat(e.$pullAll)), null != e.$push && (t.$push = t.$push || {}, t.$push.$each = (t.$push.$each || []).concat(e.$push.$each)), null != e.$addToSet && (t.$addToSet = (t.$addToSet || []).concat(e.$addToSet)), null != e.$set && (t.$set = Array.isArray(e.$set) ? function(t) {
                        if (Array.isArray(t)) return o(t);
                    }(r = e.$set) || function(t) {
                        if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t);
                    }(r) || i(r) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }() : Object.assign({}, e.$set)), t;
                }
                t.exports = function(t) {
                    t.pre("save", function() {
                        var t = this.$session();
                        if (null != t && null != t.transaction && null != t[s] && !t[s].has(this)) {
                            var e = {};
                            this.isNew && (e.isNew = !0), this.$__schema.options.versionKey && (e.versionKey = this.get(this.$__schema.options.versionKey)), e.modifiedPaths = new Set(Object.keys(this.$__.activePaths.getStatePaths("modify"))), e.atomics = function(t, e) {
                                var r = new Map;
                                e = e || new Map;
                                var i, o = n(Object.keys(t.$__.activePaths.init).concat(Object.keys(t.$__.activePaths.modify)));
                                try {
                                    for(o.s(); !(i = o.n()).done;){
                                        var s = i.value, f = t.$__getValue(s);
                                        if (null != f && Array.isArray(f) && u.isMongooseDocumentArray(f) && f.length && null != f[a] && 0 !== Object.keys(f[a]).length) {
                                            var l = e.get(s) || {};
                                            r.set(s, c(l, f[a]));
                                        }
                                    }
                                } catch (t) {
                                    o.e(t);
                                } finally{
                                    o.f();
                                }
                                var h, p = n(t.$__dirty());
                                try {
                                    for(p.s(); !(h = p.n()).done;){
                                        var d = h.value, y = d.path, b = d.value;
                                        if (null != b && null != b[a] && 0 !== Object.keys(b[a]).length) {
                                            var m = e.get(y) || {};
                                            r.set(y, c(m, b[a]));
                                        }
                                    }
                                } catch (t) {
                                    p.e(t);
                                } finally{
                                    p.f();
                                }
                                return r;
                            }(this), t[s].set(this, e);
                        }
                    });
                };
            },
            5899: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(953)(), o = r(3071)("Object.prototype.toString"), a = function(t) {
                    return !(i && t && "object" === n(t) && Symbol.toStringTag in t) && "[object Arguments]" === o(t);
                }, s = function(t) {
                    return !!a(t) || null !== t && "object" === n(t) && "length" in t && "number" == typeof t.length && t.length >= 0 && "[object Array]" !== o(t) && "callee" in t && "[object Function]" === o(t.callee);
                }, u = function() {
                    return a(arguments);
                }();
                a.isLegacyArguments = s, t.exports = u ? a : s;
            },
            5938: (t, e, r)=>{
                var n = r(1679), i = r(6467), o = r(1485), a = r(9732).Buffer, s = new Array(160);
                function u() {
                    this.init(), this._w = s, o.call(this, 128, 112);
                }
                n(u, i), u.prototype.init = function() {
                    return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
                }, u.prototype._hash = function() {
                    var t = a.allocUnsafe(48);
                    function e(e, r, n) {
                        t.writeInt32BE(e, n), t.writeInt32BE(r, n + 4);
                    }
                    return e(this._ah, this._al, 0), e(this._bh, this._bl, 8), e(this._ch, this._cl, 16), e(this._dh, this._dl, 24), e(this._eh, this._el, 32), e(this._fh, this._fl, 40), t;
                }, t.exports = u;
            },
            5994: (t, e, r)=>{
                "use strict";
                var n = Function.prototype.call, i = Object.prototype.hasOwnProperty, o = r(2354);
                t.exports = o.call(n, i);
            },
            6062: (t, e, r)=>{
                "use strict";
                var n = r(9122), i = r(2273), o = r(118), a = r(4183), s = r(7878), u = n(a(), Number);
                i(u, {
                    getPolyfill: a,
                    implementation: o,
                    shim: s
                }), t.exports = u;
            },
            6140: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                function r(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, i(n.key), n);
                    }
                }
                function n(t, e, n) {
                    return e && r(t.prototype, e), n && r(t, n), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), t;
                }
                function i(t) {
                    var r = function(t) {
                        if ("object" != e(t) || !t) return t;
                        var r = t[Symbol.toPrimitive];
                        if (void 0 !== r) {
                            var n = r.call(t, "string");
                            if ("object" != e(n)) return n;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return String(t);
                    }(t);
                    return "symbol" == e(r) ? r : r + "";
                }
                t.exports = n(function t(e, r, n) {
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, t), this.subdocSnapshot = e, this.activePaths = r, this.version = n;
                });
            },
            6155: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                t.exports = function(t) {
                    for(var r = Object.keys(t), n = !0, i = 0, o = r.length; i < o; ++i)if ("object" === e(t[r[i]]) && null !== t[r[i]]) {
                        n = !1;
                        break;
                    }
                    return n;
                };
            },
            6170: (t, e, r)=>{
                "use strict";
                var n = r(1419), i = n.define("Time", function() {
                    this.choice({
                        utcTime: this.utctime(),
                        generalTime: this.gentime()
                    });
                }), o = n.define("AttributeTypeValue", function() {
                    this.seq().obj(this.key("type").objid(), this.key("value").any());
                }), a = n.define("AlgorithmIdentifier", function() {
                    this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
                }), s = n.define("SubjectPublicKeyInfo", function() {
                    this.seq().obj(this.key("algorithm").use(a), this.key("subjectPublicKey").bitstr());
                }), u = n.define("RelativeDistinguishedName", function() {
                    this.setof(o);
                }), c = n.define("RDNSequence", function() {
                    this.seqof(u);
                }), f = n.define("Name", function() {
                    this.choice({
                        rdnSequence: this.use(c)
                    });
                }), l = n.define("Validity", function() {
                    this.seq().obj(this.key("notBefore").use(i), this.key("notAfter").use(i));
                }), h = n.define("Extension", function() {
                    this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(!1), this.key("extnValue").octstr());
                }), p = n.define("TBSCertificate", function() {
                    this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(a), this.key("issuer").use(f), this.key("validity").use(l), this.key("subject").use(f), this.key("subjectPublicKeyInfo").use(s), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(h).optional());
                }), d = n.define("X509Certificate", function() {
                    this.seq().obj(this.key("tbsCertificate").use(p), this.key("signatureAlgorithm").use(a), this.key("signatureValue").bitstr());
                });
                t.exports = d;
            },
            6182: (t)=>{
                "use strict";
                function e(t, e) {
                    if (null == t) throw new TypeError("Cannot convert first argument to object");
                    for(var r = Object(t), n = 1; n < arguments.length; n++){
                        var i = arguments[n];
                        if (null != i) for(var o = Object.keys(Object(i)), a = 0, s = o.length; a < s; a++){
                            var u = o[a], c = Object.getOwnPropertyDescriptor(i, u);
                            void 0 !== c && c.enumerable && (r[u] = i[u]);
                        }
                    }
                    return r;
                }
                t.exports = {
                    assign: e,
                    polyfill: function() {
                        Object.assign || Object.defineProperty(Object, "assign", {
                            enumerable: !1,
                            configurable: !0,
                            writable: !0,
                            value: e
                        });
                    }
                };
            },
            6193: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    return function(t) {
                        if (Array.isArray(t)) return t;
                    }(t) || function(t, e) {
                        var r = [], n = !0, i = !1, o = void 0;
                        try {
                            for(var a, s = t[Symbol.iterator](); !(n = (a = s.next()).done) && (r.push(a.value), !e || r.length !== e); n = !0);
                        } catch (t) {
                            i = !0, o = t;
                        } finally{
                            try {
                                n || null == s.return || s.return();
                            } finally{
                                if (i) throw o;
                            }
                        }
                        return r;
                    }(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance");
                    }();
                }
                function o(t) {
                    return o = "function" == typeof Symbol && "symbol" === n(Symbol.iterator) ? function(t) {
                        return n(t);
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : n(t);
                    }, o(t);
                }
                var a = void 0 !== /a/g.flags, s = function(t) {
                    var e = [];
                    return t.forEach(function(t) {
                        return e.push(t);
                    }), e;
                }, u = function(t) {
                    var e = [];
                    return t.forEach(function(t, r) {
                        return e.push([
                            r,
                            t
                        ]);
                    }), e;
                }, c = Object.is ? Object.is : r(2064), f = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
                    return [];
                }, l = Number.isNaN ? Number.isNaN : r(6062);
                function h(t) {
                    return t.call.bind(t);
                }
                var p = h(Object.prototype.hasOwnProperty), d = h(Object.prototype.propertyIsEnumerable), y = h(Object.prototype.toString), b = r(7352).types, m = b.isAnyArrayBuffer, v = b.isArrayBufferView, g = b.isDate, _ = b.isMap, w = b.isRegExp, S = b.isSet, O = b.isNativeError, j = b.isBoxedPrimitive, $ = b.isNumberObject, E = b.isStringObject, A = b.isBooleanObject, P = b.isBigIntObject, x = b.isSymbolObject, k = b.isFloat32Array, M = b.isFloat64Array;
                function T(t) {
                    if (0 === t.length || t.length > 10) return !0;
                    for(var e = 0; e < t.length; e++){
                        var r = t.charCodeAt(e);
                        if (r < 48 || r > 57) return !0;
                    }
                    return 10 === t.length && t >= Math.pow(2, 32);
                }
                function B(t) {
                    return Object.keys(t).filter(T).concat(f(t).filter(Object.prototype.propertyIsEnumerable.bind(t)));
                }
                function I(t, e) {
                    if (t === e) return 0;
                    for(var r = t.length, n = e.length, i = 0, o = Math.min(r, n); i < o; ++i)if (t[i] !== e[i]) {
                        r = t[i], n = e[i];
                        break;
                    }
                    return r < n ? -1 : n < r ? 1 : 0;
                }
                function R(t, e, r, n) {
                    if (t === e) return 0 !== t || !r || c(t, e);
                    if (r) {
                        if ("object" !== o(t)) return "number" == typeof t && l(t) && l(e);
                        if ("object" !== o(e) || null === t || null === e) return !1;
                        if (Object.getPrototypeOf(t) !== Object.getPrototypeOf(e)) return !1;
                    } else {
                        if (null === t || "object" !== o(t)) return (null === e || "object" !== o(e)) && t == e;
                        if (null === e || "object" !== o(e)) return !1;
                    }
                    var i, s, u, f, h = y(t);
                    if (h !== y(e)) return !1;
                    if (Array.isArray(t)) {
                        if (t.length !== e.length) return !1;
                        var p = B(t), d = B(e);
                        return p.length === d.length && D(t, e, r, n, 1, p);
                    }
                    if ("[object Object]" === h && (!_(t) && _(e) || !S(t) && S(e))) return !1;
                    if (g(t)) {
                        if (!g(e) || Date.prototype.getTime.call(t) !== Date.prototype.getTime.call(e)) return !1;
                    } else if (w(t)) {
                        if (!w(e) || (u = t, f = e, !(a ? u.source === f.source && u.flags === f.flags : RegExp.prototype.toString.call(u) === RegExp.prototype.toString.call(f)))) return !1;
                    } else if (O(t) || t instanceof Error) {
                        if (t.message !== e.message || t.name !== e.name) return !1;
                    } else {
                        if (v(t)) {
                            if (r || !k(t) && !M(t)) {
                                if (!function(t, e) {
                                    return t.byteLength === e.byteLength && 0 === I(new Uint8Array(t.buffer, t.byteOffset, t.byteLength), new Uint8Array(e.buffer, e.byteOffset, e.byteLength));
                                }(t, e)) return !1;
                            } else if (!function(t, e) {
                                if (t.byteLength !== e.byteLength) return !1;
                                for(var r = 0; r < t.byteLength; r++)if (t[r] !== e[r]) return !1;
                                return !0;
                            }(t, e)) return !1;
                            var b = B(t), T = B(e);
                            return b.length === T.length && D(t, e, r, n, 0, b);
                        }
                        if (S(t)) return !(!S(e) || t.size !== e.size) && D(t, e, r, n, 2);
                        if (_(t)) return !(!_(e) || t.size !== e.size) && D(t, e, r, n, 3);
                        if (m(t)) {
                            if (s = e, (i = t).byteLength !== s.byteLength || 0 !== I(new Uint8Array(i), new Uint8Array(s))) return !1;
                        } else if (j(t) && !function(t, e) {
                            return $(t) ? $(e) && c(Number.prototype.valueOf.call(t), Number.prototype.valueOf.call(e)) : E(t) ? E(e) && String.prototype.valueOf.call(t) === String.prototype.valueOf.call(e) : A(t) ? A(e) && Boolean.prototype.valueOf.call(t) === Boolean.prototype.valueOf.call(e) : P(t) ? P(e) && BigInt.prototype.valueOf.call(t) === BigInt.prototype.valueOf.call(e) : x(e) && Symbol.prototype.valueOf.call(t) === Symbol.prototype.valueOf.call(e);
                        }(t, e)) return !1;
                    }
                    return D(t, e, r, n, 0);
                }
                function N(t, e) {
                    return e.filter(function(e) {
                        return d(t, e);
                    });
                }
                function D(t, e, r, n, a, c) {
                    if (5 === arguments.length) {
                        c = Object.keys(t);
                        var l = Object.keys(e);
                        if (c.length !== l.length) return !1;
                    }
                    for(var h = 0; h < c.length; h++)if (!p(e, c[h])) return !1;
                    if (r && 5 === arguments.length) {
                        var y = f(t);
                        if (0 !== y.length) {
                            var b = 0;
                            for(h = 0; h < y.length; h++){
                                var m = y[h];
                                if (d(t, m)) {
                                    if (!d(e, m)) return !1;
                                    c.push(m), b++;
                                } else if (d(e, m)) return !1;
                            }
                            var v = f(e);
                            if (y.length !== v.length && N(e, v).length !== b) return !1;
                        } else {
                            var g = f(e);
                            if (0 !== g.length && 0 !== N(e, g).length) return !1;
                        }
                    }
                    if (0 === c.length && (0 === a || 1 === a && 0 === t.length || 0 === t.size)) return !0;
                    if (void 0 === n) n = {
                        val1: new Map,
                        val2: new Map,
                        position: 0
                    };
                    else {
                        var _ = n.val1.get(t);
                        if (void 0 !== _) {
                            var w = n.val2.get(e);
                            if (void 0 !== w) return _ === w;
                        }
                        n.position++;
                    }
                    n.val1.set(t, n.position), n.val2.set(e, n.position);
                    var S = function(t, e, r, n, a, c) {
                        var f = 0;
                        if (2 === c) {
                            if (!function(t, e, r, n) {
                                for(var i = null, a = s(t), u = 0; u < a.length; u++){
                                    var c = a[u];
                                    if ("object" === o(c) && null !== c) null === i && (i = new Set), i.add(c);
                                    else if (!e.has(c)) {
                                        if (r) return !1;
                                        if (!U(t, e, c)) return !1;
                                        null === i && (i = new Set), i.add(c);
                                    }
                                }
                                if (null !== i) {
                                    for(var f = s(e), l = 0; l < f.length; l++){
                                        var h = f[l];
                                        if ("object" === o(h) && null !== h) {
                                            if (!L(i, h, r, n)) return !1;
                                        } else if (!r && !t.has(h) && !L(i, h, r, n)) return !1;
                                    }
                                    return 0 === i.size;
                                }
                                return !0;
                            }(t, e, r, a)) return !1;
                        } else if (3 === c) {
                            if (!function(t, e, r, n) {
                                for(var a = null, s = u(t), c = 0; c < s.length; c++){
                                    var f = i(s[c], 2), l = f[0], h = f[1];
                                    if ("object" === o(l) && null !== l) null === a && (a = new Set), a.add(l);
                                    else {
                                        var p = e.get(l);
                                        if (void 0 === p && !e.has(l) || !R(h, p, r, n)) {
                                            if (r) return !1;
                                            if (!q(t, e, l, h, n)) return !1;
                                            null === a && (a = new Set), a.add(l);
                                        }
                                    }
                                }
                                if (null !== a) {
                                    for(var d = u(e), y = 0; y < d.length; y++){
                                        var b = i(d[y], 2), m = (l = b[0], b[1]);
                                        if ("object" === o(l) && null !== l) {
                                            if (!F(a, t, l, m, r, n)) return !1;
                                        } else if (!(r || t.has(l) && R(t.get(l), m, !1, n) || F(a, t, l, m, !1, n))) return !1;
                                    }
                                    return 0 === a.size;
                                }
                                return !0;
                            }(t, e, r, a)) return !1;
                        } else if (1 === c) for(; f < t.length; f++){
                            if (!p(t, f)) {
                                if (p(e, f)) return !1;
                                for(var l = Object.keys(t); f < l.length; f++){
                                    var h = l[f];
                                    if (!p(e, h) || !R(t[h], e[h], r, a)) return !1;
                                }
                                return l.length === Object.keys(e).length;
                            }
                            if (!p(e, f) || !R(t[f], e[f], r, a)) return !1;
                        }
                        for(f = 0; f < n.length; f++){
                            var d = n[f];
                            if (!R(t[d], e[d], r, a)) return !1;
                        }
                        return !0;
                    }(t, e, r, c, n, a);
                    return n.val1.delete(t), n.val2.delete(e), S;
                }
                function L(t, e, r, n) {
                    for(var i = s(t), o = 0; o < i.length; o++){
                        var a = i[o];
                        if (R(e, a, r, n)) return t.delete(a), !0;
                    }
                    return !1;
                }
                function C(t) {
                    switch(o(t)){
                        case "undefined":
                            return null;
                        case "object":
                            return;
                        case "symbol":
                            return !1;
                        case "string":
                            t = +t;
                        case "number":
                            if (l(t)) return !1;
                    }
                    return !0;
                }
                function U(t, e, r) {
                    var n = C(r);
                    return null != n ? n : e.has(n) && !t.has(n);
                }
                function q(t, e, r, n, i) {
                    var o = C(r);
                    if (null != o) return o;
                    var a = e.get(o);
                    return !(void 0 === a && !e.has(o) || !R(n, a, !1, i)) && !t.has(o) && R(n, a, !1, i);
                }
                function F(t, e, r, n, i, o) {
                    for(var a = s(t), u = 0; u < a.length; u++){
                        var c = a[u];
                        if (R(r, c, i, o) && R(n, e.get(c), i, o)) return t.delete(c), !0;
                    }
                    return !1;
                }
                t.exports = {
                    isDeepEqual: function(t, e) {
                        return R(t, e, !1);
                    },
                    isDeepStrictEqual: function(t, e) {
                        return R(t, e, !0);
                    }
                };
            },
            6222: (t)=>{
                "use strict";
                function e(t, e) {
                    n(t, e), r(t);
                }
                function r(t) {
                    t._writableState && !t._writableState.emitClose || t._readableState && !t._readableState.emitClose || t.emit("close");
                }
                function n(t, e) {
                    t.emit("error", e);
                }
                t.exports = {
                    destroy: function(t, i) {
                        var o = this, a = this._readableState && this._readableState.destroyed, s = this._writableState && this._writableState.destroyed;
                        return a || s ? (i ? i(t) : t && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, ({
                            env: {}
                        }).nextTick(n, this, t)) : ({
                            env: {}
                        }).nextTick(n, this, t)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(t || null, function(t) {
                            !i && t ? o._writableState ? o._writableState.errorEmitted ? ({
                                env: {}
                            }).nextTick(r, o) : (o._writableState.errorEmitted = !0, ({
                                env: {}
                            }).nextTick(e, o, t)) : ({
                                env: {}
                            }).nextTick(e, o, t) : i ? (({
                                env: {}
                            }).nextTick(r, o), i(t)) : ({
                                env: {}
                            }).nextTick(r, o);
                        }), this);
                    },
                    undestroy: function() {
                        this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
                    },
                    errorOrDestroy: function(t, e) {
                        var r = t._readableState, n = t._writableState;
                        r && r.autoDestroy || n && n.autoDestroy ? t.destroy(e) : t.emit("error", e);
                    }
                };
            },
            6223: (t)=>{
                "use strict";
                var e = /\./g;
                t.exports = function(t) {
                    if (-1 === t.indexOf(".")) return [
                        t
                    ];
                    for(var r = t.split(e), n = r.length, i = new Array(n), o = "", a = 0; a < n; ++a)o += 0 !== o.length ? "." + r[a] : r[a], i[a] = o;
                    return i;
                };
            },
            6292: (t, e, r)=>{
                "use strict";
                var n = r(1419);
                e.certificate = r(6170);
                var i = n.define("RSAPrivateKey", function() {
                    this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
                });
                e.RSAPrivateKey = i;
                var o = n.define("RSAPublicKey", function() {
                    this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
                });
                e.RSAPublicKey = o;
                var a = n.define("AlgorithmIdentifier", function() {
                    this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
                }), s = n.define("SubjectPublicKeyInfo", function() {
                    this.seq().obj(this.key("algorithm").use(a), this.key("subjectPublicKey").bitstr());
                });
                e.PublicKey = s;
                var u = n.define("PrivateKeyInfo", function() {
                    this.seq().obj(this.key("version").int(), this.key("algorithm").use(a), this.key("subjectPrivateKey").octstr());
                });
                e.PrivateKey = u;
                var c = n.define("EncryptedPrivateKeyInfo", function() {
                    this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
                });
                e.EncryptedPrivateKey = c;
                var f = n.define("DSAPrivateKey", function() {
                    this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
                });
                e.DSAPrivateKey = f, e.DSAparam = n.define("DSAparam", function() {
                    this.int();
                });
                var l = n.define("ECParameters", function() {
                    this.choice({
                        namedCurve: this.objid()
                    });
                }), h = n.define("ECPrivateKey", function() {
                    this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(l), this.key("publicKey").optional().explicit(1).bitstr());
                });
                e.ECPrivateKey = h, e.signature = n.define("signature", function() {
                    this.seq().obj(this.key("r").int(), this.key("s").int());
                });
            },
            6312: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                var r = Object.prototype.toString;
                t.exports = function(t) {
                    var n = r.call(t), i = "[object Arguments]" === n;
                    return i || (i = "[object Array]" !== n && null !== t && "object" === e(t) && "number" == typeof t.length && t.length >= 0 && "[object Function]" === r.call(t.callee)), i;
                };
            },
            6322: (t, e, r)=>{
                var n = r(9732).Buffer;
                function i(t, e, r) {
                    var i = t._cipher.encryptBlock(t._prev)[0] ^ e;
                    return t._prev = n.concat([
                        t._prev.slice(1),
                        n.from([
                            r ? e : i
                        ])
                    ]), i;
                }
                e.encrypt = function(t, e, r) {
                    for(var o = e.length, a = n.allocUnsafe(o), s = -1; ++s < o;)a[s] = i(t, e[s], r);
                    return a;
                };
            },
            6365: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer, i = r(3633).Binary, o = r(8768);
                function a(t, e, r) {
                    var i, s, c, f, l = t;
                    return null == t && (l = 0), Array.isArray(e) ? (s = e[0], c = e[1]) : i = e, f = "number" == typeof l || l instanceof Number ? n.alloc(l) : n.from(l, i, r), o.decorate(f, a.mixin), f.isMongooseBuffer = !0, f[a.pathSymbol] = s, f[u] = c, f._subtype = 0, f;
                }
                var s = Symbol.for("mongoose#Buffer#_path"), u = Symbol.for("mongoose#Buffer#_parent");
                a.pathSymbol = s, a.mixin = {
                    _subtype: void 0,
                    _markModified: function() {
                        var t = this[u];
                        return t && t.markModified(this[a.pathSymbol]), this;
                    },
                    write: function() {
                        var t = n.prototype.write.apply(this, arguments);
                        return t > 0 && this._markModified(), t;
                    },
                    copy: function(t) {
                        var e = n.prototype.copy.apply(this, arguments);
                        return t && t.isMongooseBuffer && t._markModified(), e;
                    }
                }, o.each([
                    "writeUInt8",
                    "writeUInt16",
                    "writeUInt32",
                    "writeInt8",
                    "writeInt16",
                    "writeInt32",
                    "writeFloat",
                    "writeDouble",
                    "fill",
                    "utf8Write",
                    "binaryWrite",
                    "asciiWrite",
                    "set",
                    "writeUInt16LE",
                    "writeUInt16BE",
                    "writeUInt32LE",
                    "writeUInt32BE",
                    "writeInt16LE",
                    "writeInt16BE",
                    "writeInt32LE",
                    "writeInt32BE",
                    "writeFloatLE",
                    "writeFloatBE",
                    "writeDoubleLE",
                    "writeDoubleBE"
                ], function(t) {
                    n.prototype[t] && (a.mixin[t] = function() {
                        var e = n.prototype[t].apply(this, arguments);
                        return this._markModified(), e;
                    });
                }), a.mixin.toObject = function(t) {
                    var e = "number" == typeof t ? t : this._subtype || 0;
                    return new i(n.from(this), e);
                }, a.mixin.$toObject = a.mixin.toObject, a.mixin.toBSON = function() {
                    return new i(this, this._subtype || 0);
                }, a.mixin.equals = function(t) {
                    if (!n.isBuffer(t)) return !1;
                    if (this.length !== t.length) return !1;
                    for(var e = 0; e < this.length; ++e)if (this[e] !== t[e]) return !1;
                    return !0;
                }, a.mixin.subtype = function(t) {
                    if ("number" != typeof t) throw new TypeError("Invalid subtype. Expected a number");
                    this._subtype !== t && this._markModified(), this._subtype = t;
                }, a.Binary = i, t.exports = a;
            },
            6379: (t, e, r)=>{
                "use strict";
                var n, i = e, o = r(2859), a = r(5803), s = r(1970).assert;
                function u(t) {
                    "short" === t.type ? this.curve = new a.short(t) : "edwards" === t.type ? this.curve = new a.edwards(t) : this.curve = new a.mont(t), this.g = this.curve.g, this.n = this.curve.n, this.hash = t.hash, s(this.g.validate(), "Invalid curve"), s(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
                }
                function c(t, e) {
                    Object.defineProperty(i, t, {
                        configurable: !0,
                        enumerable: !0,
                        get: function() {
                            var r = new u(e);
                            return Object.defineProperty(i, t, {
                                configurable: !0,
                                enumerable: !0,
                                value: r
                            }), r;
                        }
                    });
                }
                i.PresetCurve = u, c("p192", {
                    type: "short",
                    prime: "p192",
                    p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                    a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                    b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                    n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                    hash: o.sha256,
                    gRed: !1,
                    g: [
                        "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
                        "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
                    ]
                }), c("p224", {
                    type: "short",
                    prime: "p224",
                    p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                    a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                    b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                    n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                    hash: o.sha256,
                    gRed: !1,
                    g: [
                        "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
                        "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
                    ]
                }), c("p256", {
                    type: "short",
                    prime: null,
                    p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                    a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                    b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                    n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                    hash: o.sha256,
                    gRed: !1,
                    g: [
                        "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
                        "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
                    ]
                }), c("p384", {
                    type: "short",
                    prime: null,
                    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                    a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                    b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                    n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                    hash: o.sha384,
                    gRed: !1,
                    g: [
                        "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
                        "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
                    ]
                }), c("p521", {
                    type: "short",
                    prime: null,
                    p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                    a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                    b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                    n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                    hash: o.sha512,
                    gRed: !1,
                    g: [
                        "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
                        "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
                    ]
                }), c("curve25519", {
                    type: "mont",
                    prime: "p25519",
                    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                    a: "76d06",
                    b: "1",
                    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                    hash: o.sha256,
                    gRed: !1,
                    g: [
                        "9"
                    ]
                }), c("ed25519", {
                    type: "edwards",
                    prime: "p25519",
                    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                    a: "-1",
                    c: "1",
                    d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                    hash: o.sha256,
                    gRed: !1,
                    g: [
                        "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
                        "6666666666666666666666666666666666666666666666666666666666666658"
                    ]
                });
                try {
                    n = r(5586);
                } catch (t) {
                    n = void 0;
                }
                c("secp256k1", {
                    type: "short",
                    prime: "k256",
                    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                    a: "0",
                    b: "7",
                    n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                    h: "1",
                    hash: o.sha256,
                    beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                    lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                    basis: [
                        {
                            a: "3086d221a7d46bcde86c90e49284eb15",
                            b: "-e4437ed6010e88286f547fa90abfe4c3"
                        },
                        {
                            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                            b: "3086d221a7d46bcde86c90e49284eb15"
                        }
                    ],
                    gRed: !1,
                    g: [
                        "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
                        "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
                        n
                    ]
                });
            },
            6400: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i, o = r(8093), a = r(9870), s = r(9206), u = r(9939), c = r(783), f = r(2288), l = r(2268), h = r(8188), p = r(9471), d = r(2401), y = r(1697), b = r(8435), m = r(8633), v = r(2151), g = r(674), _ = Function, w = function(t) {
                    try {
                        return _('"use strict"; return (' + t + ").constructor;")();
                    } catch (t) {}
                }, S = r(1464), O = r(988), j = function() {
                    throw new l;
                }, $ = S ? function() {
                    try {
                        return j;
                    } catch (t) {
                        try {
                            return S(arguments, "callee").get;
                        } catch (t) {
                            return j;
                        }
                    }
                }() : j, E = r(5510)(), A = r(209), P = r(5825), x = r(2403), k = r(3279), M = r(3123), T = {}, B = "undefined" != typeof Uint8Array && A ? A(Uint8Array) : i, I = {
                    __proto__: null,
                    "%AggregateError%": "undefined" == typeof AggregateError ? i : AggregateError,
                    "%Array%": Array,
                    "%ArrayBuffer%": "undefined" == typeof ArrayBuffer ? i : ArrayBuffer,
                    "%ArrayIteratorPrototype%": E && A ? A([][Symbol.iterator]()) : i,
                    "%AsyncFromSyncIteratorPrototype%": i,
                    "%AsyncFunction%": T,
                    "%AsyncGenerator%": T,
                    "%AsyncGeneratorFunction%": T,
                    "%AsyncIteratorPrototype%": T,
                    "%Atomics%": "undefined" == typeof Atomics ? i : Atomics,
                    "%BigInt%": "undefined" == typeof BigInt ? i : BigInt,
                    "%BigInt64Array%": "undefined" == typeof BigInt64Array ? i : BigInt64Array,
                    "%BigUint64Array%": "undefined" == typeof BigUint64Array ? i : BigUint64Array,
                    "%Boolean%": Boolean,
                    "%DataView%": "undefined" == typeof DataView ? i : DataView,
                    "%Date%": Date,
                    "%decodeURI%": decodeURI,
                    "%decodeURIComponent%": decodeURIComponent,
                    "%encodeURI%": encodeURI,
                    "%encodeURIComponent%": encodeURIComponent,
                    "%Error%": a,
                    "%eval%": eval,
                    "%EvalError%": s,
                    "%Float16Array%": "undefined" == typeof Float16Array ? i : Float16Array,
                    "%Float32Array%": "undefined" == typeof Float32Array ? i : Float32Array,
                    "%Float64Array%": "undefined" == typeof Float64Array ? i : Float64Array,
                    "%FinalizationRegistry%": "undefined" == typeof FinalizationRegistry ? i : FinalizationRegistry,
                    "%Function%": _,
                    "%GeneratorFunction%": T,
                    "%Int8Array%": "undefined" == typeof Int8Array ? i : Int8Array,
                    "%Int16Array%": "undefined" == typeof Int16Array ? i : Int16Array,
                    "%Int32Array%": "undefined" == typeof Int32Array ? i : Int32Array,
                    "%isFinite%": isFinite,
                    "%isNaN%": isNaN,
                    "%IteratorPrototype%": E && A ? A(A([][Symbol.iterator]())) : i,
                    "%JSON%": "object" === ("undefined" == typeof JSON ? "undefined" : n(JSON)) ? JSON : i,
                    "%Map%": "undefined" == typeof Map ? i : Map,
                    "%MapIteratorPrototype%": "undefined" != typeof Map && E && A ? A((new Map)[Symbol.iterator]()) : i,
                    "%Math%": Math,
                    "%Number%": Number,
                    "%Object%": o,
                    "%Object.getOwnPropertyDescriptor%": S,
                    "%parseFloat%": parseFloat,
                    "%parseInt%": parseInt,
                    "%Promise%": "undefined" == typeof Promise ? i : Promise,
                    "%Proxy%": "undefined" == typeof Proxy ? i : Proxy,
                    "%RangeError%": u,
                    "%ReferenceError%": c,
                    "%Reflect%": "undefined" == typeof Reflect ? i : Reflect,
                    "%RegExp%": RegExp,
                    "%Set%": "undefined" == typeof Set ? i : Set,
                    "%SetIteratorPrototype%": "undefined" != typeof Set && E && A ? A((new Set)[Symbol.iterator]()) : i,
                    "%SharedArrayBuffer%": "undefined" == typeof SharedArrayBuffer ? i : SharedArrayBuffer,
                    "%String%": String,
                    "%StringIteratorPrototype%": E && A ? A(""[Symbol.iterator]()) : i,
                    "%Symbol%": E ? Symbol : i,
                    "%SyntaxError%": f,
                    "%ThrowTypeError%": $,
                    "%TypedArray%": B,
                    "%TypeError%": l,
                    "%Uint8Array%": "undefined" == typeof Uint8Array ? i : Uint8Array,
                    "%Uint8ClampedArray%": "undefined" == typeof Uint8ClampedArray ? i : Uint8ClampedArray,
                    "%Uint16Array%": "undefined" == typeof Uint16Array ? i : Uint16Array,
                    "%Uint32Array%": "undefined" == typeof Uint32Array ? i : Uint32Array,
                    "%URIError%": h,
                    "%WeakMap%": "undefined" == typeof WeakMap ? i : WeakMap,
                    "%WeakRef%": "undefined" == typeof WeakRef ? i : WeakRef,
                    "%WeakSet%": "undefined" == typeof WeakSet ? i : WeakSet,
                    "%Function.prototype.call%": M,
                    "%Function.prototype.apply%": k,
                    "%Object.defineProperty%": O,
                    "%Object.getPrototypeOf%": P,
                    "%Math.abs%": p,
                    "%Math.floor%": d,
                    "%Math.max%": y,
                    "%Math.min%": b,
                    "%Math.pow%": m,
                    "%Math.round%": v,
                    "%Math.sign%": g,
                    "%Reflect.getPrototypeOf%": x
                };
                if (A) try {
                    null.error;
                } catch (t) {
                    var R = A(A(t));
                    I["%Error.prototype%"] = R;
                }
                var N = function t(e) {
                    var r;
                    if ("%AsyncFunction%" === e) r = w("async function () {}");
                    else if ("%GeneratorFunction%" === e) r = w("function* () {}");
                    else if ("%AsyncGeneratorFunction%" === e) r = w("async function* () {}");
                    else if ("%AsyncGenerator%" === e) {
                        var n = t("%AsyncGeneratorFunction%");
                        n && (r = n.prototype);
                    } else if ("%AsyncIteratorPrototype%" === e) {
                        var i = t("%AsyncGenerator%");
                        i && A && (r = A(i.prototype));
                    }
                    return I[e] = r, r;
                }, D = {
                    __proto__: null,
                    "%ArrayBufferPrototype%": [
                        "ArrayBuffer",
                        "prototype"
                    ],
                    "%ArrayPrototype%": [
                        "Array",
                        "prototype"
                    ],
                    "%ArrayProto_entries%": [
                        "Array",
                        "prototype",
                        "entries"
                    ],
                    "%ArrayProto_forEach%": [
                        "Array",
                        "prototype",
                        "forEach"
                    ],
                    "%ArrayProto_keys%": [
                        "Array",
                        "prototype",
                        "keys"
                    ],
                    "%ArrayProto_values%": [
                        "Array",
                        "prototype",
                        "values"
                    ],
                    "%AsyncFunctionPrototype%": [
                        "AsyncFunction",
                        "prototype"
                    ],
                    "%AsyncGenerator%": [
                        "AsyncGeneratorFunction",
                        "prototype"
                    ],
                    "%AsyncGeneratorPrototype%": [
                        "AsyncGeneratorFunction",
                        "prototype",
                        "prototype"
                    ],
                    "%BooleanPrototype%": [
                        "Boolean",
                        "prototype"
                    ],
                    "%DataViewPrototype%": [
                        "DataView",
                        "prototype"
                    ],
                    "%DatePrototype%": [
                        "Date",
                        "prototype"
                    ],
                    "%ErrorPrototype%": [
                        "Error",
                        "prototype"
                    ],
                    "%EvalErrorPrototype%": [
                        "EvalError",
                        "prototype"
                    ],
                    "%Float32ArrayPrototype%": [
                        "Float32Array",
                        "prototype"
                    ],
                    "%Float64ArrayPrototype%": [
                        "Float64Array",
                        "prototype"
                    ],
                    "%FunctionPrototype%": [
                        "Function",
                        "prototype"
                    ],
                    "%Generator%": [
                        "GeneratorFunction",
                        "prototype"
                    ],
                    "%GeneratorPrototype%": [
                        "GeneratorFunction",
                        "prototype",
                        "prototype"
                    ],
                    "%Int8ArrayPrototype%": [
                        "Int8Array",
                        "prototype"
                    ],
                    "%Int16ArrayPrototype%": [
                        "Int16Array",
                        "prototype"
                    ],
                    "%Int32ArrayPrototype%": [
                        "Int32Array",
                        "prototype"
                    ],
                    "%JSONParse%": [
                        "JSON",
                        "parse"
                    ],
                    "%JSONStringify%": [
                        "JSON",
                        "stringify"
                    ],
                    "%MapPrototype%": [
                        "Map",
                        "prototype"
                    ],
                    "%NumberPrototype%": [
                        "Number",
                        "prototype"
                    ],
                    "%ObjectPrototype%": [
                        "Object",
                        "prototype"
                    ],
                    "%ObjProto_toString%": [
                        "Object",
                        "prototype",
                        "toString"
                    ],
                    "%ObjProto_valueOf%": [
                        "Object",
                        "prototype",
                        "valueOf"
                    ],
                    "%PromisePrototype%": [
                        "Promise",
                        "prototype"
                    ],
                    "%PromiseProto_then%": [
                        "Promise",
                        "prototype",
                        "then"
                    ],
                    "%Promise_all%": [
                        "Promise",
                        "all"
                    ],
                    "%Promise_reject%": [
                        "Promise",
                        "reject"
                    ],
                    "%Promise_resolve%": [
                        "Promise",
                        "resolve"
                    ],
                    "%RangeErrorPrototype%": [
                        "RangeError",
                        "prototype"
                    ],
                    "%ReferenceErrorPrototype%": [
                        "ReferenceError",
                        "prototype"
                    ],
                    "%RegExpPrototype%": [
                        "RegExp",
                        "prototype"
                    ],
                    "%SetPrototype%": [
                        "Set",
                        "prototype"
                    ],
                    "%SharedArrayBufferPrototype%": [
                        "SharedArrayBuffer",
                        "prototype"
                    ],
                    "%StringPrototype%": [
                        "String",
                        "prototype"
                    ],
                    "%SymbolPrototype%": [
                        "Symbol",
                        "prototype"
                    ],
                    "%SyntaxErrorPrototype%": [
                        "SyntaxError",
                        "prototype"
                    ],
                    "%TypedArrayPrototype%": [
                        "TypedArray",
                        "prototype"
                    ],
                    "%TypeErrorPrototype%": [
                        "TypeError",
                        "prototype"
                    ],
                    "%Uint8ArrayPrototype%": [
                        "Uint8Array",
                        "prototype"
                    ],
                    "%Uint8ClampedArrayPrototype%": [
                        "Uint8ClampedArray",
                        "prototype"
                    ],
                    "%Uint16ArrayPrototype%": [
                        "Uint16Array",
                        "prototype"
                    ],
                    "%Uint32ArrayPrototype%": [
                        "Uint32Array",
                        "prototype"
                    ],
                    "%URIErrorPrototype%": [
                        "URIError",
                        "prototype"
                    ],
                    "%WeakMapPrototype%": [
                        "WeakMap",
                        "prototype"
                    ],
                    "%WeakSetPrototype%": [
                        "WeakSet",
                        "prototype"
                    ]
                }, L = r(2354), C = r(5994), U = L.call(M, Array.prototype.concat), q = L.call(k, Array.prototype.splice), F = L.call(M, String.prototype.replace), V = L.call(M, String.prototype.slice), z = L.call(M, RegExp.prototype.exec), K = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, H = /\\(\\)?/g, W = function(t, e) {
                    var r, n = t;
                    if (C(D, n) && (n = "%" + (r = D[n])[0] + "%"), C(I, n)) {
                        var i = I[n];
                        if (i === T && (i = N(n)), void 0 === i && !e) throw new l("intrinsic " + t + " exists, but is not available. Please file an issue!");
                        return {
                            alias: r,
                            name: n,
                            value: i
                        };
                    }
                    throw new f("intrinsic " + t + " does not exist!");
                };
                t.exports = function(t, e) {
                    if ("string" != typeof t || 0 === t.length) throw new l("intrinsic name must be a non-empty string");
                    if (arguments.length > 1 && "boolean" != typeof e) throw new l('"allowMissing" argument must be a boolean');
                    if (null === z(/^%?[^%]*%?$/, t)) throw new f("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
                    var r = function(t) {
                        var e = V(t, 0, 1), r = V(t, -1);
                        if ("%" === e && "%" !== r) throw new f("invalid intrinsic syntax, expected closing `%`");
                        if ("%" === r && "%" !== e) throw new f("invalid intrinsic syntax, expected opening `%`");
                        var n = [];
                        return F(t, K, function(t, e, r, i) {
                            n[n.length] = r ? F(i, H, "$1") : e || t;
                        }), n;
                    }(t), n = r.length > 0 ? r[0] : "", i = W("%" + n + "%", e), o = i.name, a = i.value, s = !1, u = i.alias;
                    u && (n = u[0], q(r, U([
                        0,
                        1
                    ], u)));
                    for(var c = 1, h = !0; c < r.length; c += 1){
                        var p = r[c], d = V(p, 0, 1), y = V(p, -1);
                        if (('"' === d || "'" === d || "`" === d || '"' === y || "'" === y || "`" === y) && d !== y) throw new f("property names with quotes must have matching quotes");
                        if ("constructor" !== p && h || (s = !0), C(I, o = "%" + (n += "." + p) + "%")) a = I[o];
                        else if (null != a) {
                            if (!(p in a)) {
                                if (!e) throw new l("base intrinsic for " + t + " exists, but the property is not available.");
                                return;
                            }
                            if (S && c + 1 >= r.length) {
                                var b = S(a, p);
                                a = (h = !!b) && "get" in b && !("originalValue" in b.get) ? b.get : a[p];
                            } else h = C(a, p), a = a[p];
                            h && !s && (I[o] = a);
                        }
                    }
                    return a;
                };
            },
            6413: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var a = r(3609), s = r(6426), u = r(8953), c = r(4327);
                function f(t, e) {
                    s.call(this, t, e, "Boolean");
                }
                f.schemaName = "Boolean", f.defaultOptions = {}, f.prototype = Object.create(s.prototype), f.prototype.constructor = f, f._cast = u, f.set = s.set, f.setters = [], f.get = s.get, f.cast = function(t) {
                    return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
                }, f._defaultCaster = function(t) {
                    if (null != t && "boolean" != typeof t) throw new Error;
                    return t;
                }, f._checkRequired = function(t) {
                    return !0 === t || !1 === t;
                }, f.checkRequired = s.checkRequired, f.prototype.checkRequired = function(t) {
                    return this.constructor._checkRequired(t);
                }, Object.defineProperty(f, "convertToTrue", {
                    get: function() {
                        return u.convertToTrue;
                    },
                    set: function(t) {
                        u.convertToTrue = t;
                    }
                }), Object.defineProperty(f, "convertToFalse", {
                    get: function() {
                        return u.convertToFalse;
                    },
                    set: function(t) {
                        u.convertToFalse = t;
                    }
                }), f.prototype.cast = function(t) {
                    var e;
                    e = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : f.cast();
                    try {
                        return e(t);
                    } catch (e) {
                        throw new a("Boolean", t, this.path, e, this);
                    }
                }, f.$conditionalHandlers = function(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? i(Object(r), !0).forEach(function(e) {
                            o(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }({}, s.prototype.$conditionalHandlers), f.prototype.castForQuery = function(t, e, r) {
                    var n;
                    if (null != t) return (n = f.$conditionalHandlers[t]) ? n.call(this, e) : this.applySetters(e, r);
                    try {
                        return this.applySetters(e, r);
                    } catch (t) {
                        throw t instanceof a && t.path === this.path && null != this.$fullPath && (t.path = this.$fullPath), t;
                    }
                }, f.prototype._castNullish = function(t) {
                    if (void 0 === t) return t;
                    var e = "function" == typeof this.constructor.cast ? this.constructor.cast() : f.cast();
                    return null == e ? t : !(e.convertToFalse instanceof Set && e.convertToFalse.has(t)) && (!!(e.convertToTrue instanceof Set && e.convertToTrue.has(t)) || t);
                }, f.prototype.toJSONSchema = function(t) {
                    var e = this.options.required && "function" != typeof this.options.required;
                    return c("boolean", "bool", null == t ? void 0 : t.useBsonType, e);
                }, t.exports = f;
            },
            6426: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                function i(t) {
                    return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, i(t);
                }
                var o = r(3672), a = r(8879), s = r(8499), u = r(2555), c = r(4450), f = r(8133), l = r(9183), h = r(6155), p = r(2746), d = r(7930).schemaTypeSymbol, y = r(8768), b = r(7930).validatorErrorSymbol, m = r(7930).documentIsModified, v = r(7930).populateModelSymbol, g = o.CastError, _ = o.ValidatorError, w = {
                    _skipMarkModified: !0
                };
                function S(t, e, r) {
                    this[d] = !0, this.path = t, this.instance = r, this.validators = [], this.getters = this.constructor.hasOwnProperty("getters") ? this.constructor.getters.slice() : [], this.setters = this.constructor.hasOwnProperty("setters") ? this.constructor.setters.slice() : [], this.splitPath(), e = e || {};
                    for(var n = this.constructor.defaultOptions || {}, o = 0, s = Object.keys(n); o < s.length; o++){
                        var u = s[o];
                        "validate" === u ? this.validate(n.validate) : n.hasOwnProperty(u) && !Object.prototype.hasOwnProperty.call(e, u) && (e[u] = n[u]);
                    }
                    null == e.select && delete e.select;
                    var c = this.OptionsConstructor || a;
                    this.options = new c(e), this._index = null, y.hasUserDefinedProperty(this.options, "immutable") && (this.$immutable = this.options.immutable, f(this));
                    for(var l = 0, h = Object.keys(this.options); l < h.length; l++){
                        var p = h[l];
                        if ("cast" !== p) {
                            if (y.hasUserDefinedProperty(this.options, p) && "function" == typeof this[p]) {
                                if ("index" === p && this._index) {
                                    if (!1 === e.index) {
                                        var b = this._index;
                                        if ("object" === i(b) && null != b) {
                                            if (b.unique) throw new Error('Path "' + this.path + '" may not have `index` set to false and `unique` set to true');
                                            if (b.sparse) throw new Error('Path "' + this.path + '" may not have `index` set to false and `sparse` set to true');
                                        }
                                        this._index = !1;
                                    }
                                    continue;
                                }
                                var m = e[p];
                                if ("default" === p) {
                                    this.default(m);
                                    continue;
                                }
                                var v = Array.isArray(m) ? m : [
                                    m
                                ];
                                this[p].apply(this, v);
                            }
                        } else Array.isArray(this.options[p]) ? this.castFunction.apply(this, this.options[p]) : this.castFunction(this.options[p]);
                    }
                    Object.defineProperty(this, "$$context", {
                        enumerable: !1,
                        configurable: !1,
                        writable: !0,
                        value: null
                    });
                }
                function O(t, e) {
                    if (void 0 !== t && !t) {
                        var r = new (e.ErrorConstructor || _)(e);
                        return r[b] = !0, r;
                    }
                }
                function j(t, e) {
                    return this.castForQuery(null, t, e);
                }
                function $(t, e) {
                    var r = this;
                    return Array.isArray(t) ? t.map(function(t) {
                        return Array.isArray(t) && 0 === t.length ? t : r.castForQuery(null, t, e);
                    }) : [
                        this.castForQuery(null, t, e)
                    ];
                }
                S.prototype.OptionsConstructor = a, S.prototype.path, S.prototype.validators, S.prototype.isRequired, S.prototype.splitPath = function() {
                    return null != this._presplitPath ? this._presplitPath : null != this.path ? (this._presplitPath = -1 === this.path.indexOf(".") ? [
                        this.path
                    ] : this.path.split("."), this._presplitPath) : void 0;
                }, S.cast = function(t) {
                    return 0 === arguments.length || (!1 === t && (t = function(t) {
                        return t;
                    }), this._cast = t), this._cast;
                }, S.prototype.castFunction = function(t, e) {
                    return 0 === arguments.length ? this._castFunction : (!1 === t && (t = this.constructor._defaultCaster || function(t) {
                        return t;
                    }), "string" == typeof t ? (this._castErrorMessage = t, this._castFunction) : (null != t && (this._castFunction = t), null != e && (this._castErrorMessage = e), this._castFunction));
                }, S.prototype.cast = function() {
                    throw new Error("Base SchemaType class does not implement a `cast()` function");
                }, S.set = function(t, e) {
                    this.hasOwnProperty("defaultOptions") || (this.defaultOptions = Object.assign({}, this.defaultOptions)), this.defaultOptions[t] = e;
                }, S.get = function(t) {
                    this.getters = this.hasOwnProperty("getters") ? this.getters : [], this.getters.push(t);
                }, S.prototype.default = function(t) {
                    if (1 === arguments.length) {
                        if (void 0 === t) return void (this.defaultValue = void 0);
                        if (null != t && t.instanceOfSchema) throw new o("Cannot set default value of path `" + this.path + "` to a mongoose Schema instance.");
                        return this.defaultValue = t, this.defaultValue;
                    }
                    return arguments.length > 1 && (this.defaultValue = Array.prototype.slice.call(arguments)), this.defaultValue;
                }, S.prototype.index = function(t) {
                    return this._index = t, y.expires(this._index), this;
                }, S.prototype.unique = function(t, e) {
                    if (!1 === this._index) {
                        if (!t) return;
                        throw new Error('Path "' + this.path + '" may not have `index` set to false and `unique` set to true');
                    }
                    return this.options.hasOwnProperty("index") || !1 !== t ? (null == this._index || !0 === this._index ? this._index = {} : "string" == typeof this._index && (this._index = {
                        type: this._index
                    }), this._index.unique = !!t, "string" == typeof e && (this._duplicateKeyErrorMessage = e), this) : this;
                }, S.prototype.text = function(t) {
                    if (!1 === this._index) {
                        if (!t) return this;
                        throw new Error('Path "' + this.path + '" may not have `index` set to false and `text` set to true');
                    }
                    return this.options.hasOwnProperty("index") || !1 !== t ? (null === this._index || void 0 === this._index || "boolean" == typeof this._index ? this._index = {} : "string" == typeof this._index && (this._index = {
                        type: this._index
                    }), this._index.text = t, this) : this;
                }, S.prototype.sparse = function(t) {
                    if (!1 === this._index) {
                        if (!t) return this;
                        throw new Error('Path "' + this.path + '" may not have `index` set to false and `sparse` set to true');
                    }
                    return this.options.hasOwnProperty("index") || !1 !== t ? (null == this._index || "boolean" == typeof this._index ? this._index = {} : "string" == typeof this._index && (this._index = {
                        type: this._index
                    }), this._index.sparse = t, this) : this;
                }, S.prototype.immutable = function(t) {
                    return this.$immutable = t, f(this), this;
                }, S.prototype.transform = function(t) {
                    return this.options.transform = t, this;
                }, S.prototype.set = function(t) {
                    if ("function" != typeof t) throw new TypeError("A setter must be a function.");
                    return this.setters.push(t), this;
                }, S.prototype.get = function(t) {
                    if ("function" != typeof t) throw new TypeError("A getter must be a function.");
                    return this.getters.push(t), this;
                }, S.prototype.validateAll = function(t) {
                    for(var e = 0; e < t.length; e++)this.validate(t[e]);
                    return this;
                }, S.prototype.validate = function(t, e, r) {
                    var n, a, s, u;
                    if ("function" == typeof t || t && "RegExp" === y.getFunctionName(t.constructor)) return "function" == typeof e ? (n = {
                        validator: t,
                        message: e
                    }).type = r || "user defined" : e instanceof Object && !r ? ((n = h(e) ? Object.assign({}, e) : c(e)).message || (n.message = n.msg), n.validator = t, n.type = n.type || "user defined") : (null == e && (e = o.messages.general.default), r || (r = "user defined"), n = {
                        message: e,
                        type: r,
                        validator: t
                    }), this.validators.push(n), this;
                    for(a = 0, s = arguments.length; a < s; a++){
                        if (u = arguments[a], !y.isPOJO(u)) {
                            var f = "Invalid validator. Received (" + i(u) + ") " + u + ". See https://mongoosejs.com/docs/api/schematype.html#SchemaType.prototype.validate()";
                            throw new Error(f);
                        }
                        this.validate(u.validator, u);
                    }
                    return this;
                }, S.prototype.required = function(t, e) {
                    var r = {};
                    if (arguments.length > 0 && null == t) return this.validators = this.validators.filter(function(t) {
                        return t.validator !== this.requiredValidator;
                    }, this), this.isRequired = !1, delete this.originalRequiredValue, this;
                    if ("object" === i(t) && (e = (r = t).message || e, t = t.isRequired), !1 === t) return this.validators = this.validators.filter(function(t) {
                        return t.validator !== this.requiredValidator;
                    }, this), this.isRequired = !1, delete this.originalRequiredValue, this;
                    var n = this;
                    this.isRequired = !0, this.requiredValidator = function(e) {
                        var r = this && this.$__ && this.$__.cachedRequired;
                        if (null != r && !this.$__isSelected(n.path) && !this[m](n.path)) return !0;
                        if (null != r && n.path in r) {
                            var i = !r[n.path] || n.checkRequired(e, this);
                            return delete r[n.path], i;
                        }
                        return "function" == typeof t && !t.apply(this) || n.checkRequired(e, this);
                    }, this.originalRequiredValue = t, "string" == typeof t && (e = t, t = void 0);
                    var a = e || o.messages.general.required;
                    return this.validators.unshift(Object.assign({}, r, {
                        validator: this.requiredValidator,
                        message: a,
                        type: "required"
                    })), this;
                }, S.prototype.ref = function(t) {
                    return this.options.ref = t, this;
                }, S.prototype.getDefault = function(t, e, r) {
                    var n;
                    if (null != (n = "function" == typeof this.defaultValue ? this.defaultValue === Date.now || this.defaultValue === Array || "objectid" === this.defaultValue.name.toLowerCase() ? this.defaultValue.call(t) : this.defaultValue.call(t, t) : this.defaultValue)) {
                        if ("object" !== i(n) || this.options && this.options.shared || (n = c(n)), r && r.skipCast) return this._applySetters(n, t);
                        var o = this.applySetters(n, t, e, void 0, w);
                        return o && !Array.isArray(o) && o.$isSingleNested && (o.$__parent = t), o;
                    }
                    return n;
                }, S.prototype._applySetters = function(t, e, r, n, i) {
                    var o = t;
                    if (r) return o;
                    for(var a = this.setters, s = a.length - 1; s >= 0; s--)o = a[s].call(e, o, n, this, i);
                    return o;
                }, S.prototype._castNullish = function(t) {
                    return t;
                }, S.prototype.applySetters = function(t, e, r, n, i) {
                    var o = this._applySetters(t, e, r, n, i);
                    return null == o ? this._castNullish(o) : o = this.cast(o, e, r, n, i);
                }, S.prototype.applyGetters = function(t, e) {
                    var r = t, n = this.getters, i = n.length;
                    if (0 === i) return r;
                    for(var o = 0; o < i; ++o)r = n[o].call(e, r, this);
                    return r;
                }, S.prototype.select = function(t) {
                    return this.selected = !!t, this;
                }, S.prototype.doValidate = function(t, e, r, n) {
                    var o = this, a = !1, s = this.path;
                    if ("function" != typeof e) throw new TypeError("Must pass callback function to doValidate(), got ".concat(i(e)));
                    var u = this.validators.filter(function(t) {
                        return "object" === i(t) && null !== t;
                    }), f = u.length;
                    if (!f) return e(null);
                    for(var l = function() {
                        if (a) return 0;
                        var e, i = u[d], f = i.validator, l = h(i) ? Object.assign({}, i) : c(i);
                        if (l.path = n && n.path ? n.path : s, l.fullPath = o.$fullPath, l.value = t, f instanceof RegExp) return m(f.test(t), l, r), 1;
                        if ("function" != typeof f) return 1;
                        if (void 0 === t && f !== o.requiredValidator) return m(!0, l, r), 1;
                        try {
                            e = l.propsParameter ? f.call(r, t, l) : f.call(r, t);
                        } catch (t) {
                            e = !1, l.reason = t, t.message && (l.message = t.message);
                        }
                        null != e && "function" == typeof e.then ? e.then(function(t) {
                            m(t, l, r);
                        }, function(t) {
                            l.reason = t, l.message = t.message, m(e = !1, l, r);
                        }) : m(e, l, r);
                    }, d = 0, y = u.length; d < y && 0 !== l(); ++d);
                    function m(t, r, n) {
                        if (!a) {
                            if (void 0 === t || t) --f <= 0 && p(function() {
                                e(null);
                            });
                            else {
                                var i = r.ErrorConstructor || _;
                                (a = new i(r, n))[b] = !0, p(function() {
                                    e(a);
                                });
                            }
                        }
                    }
                }, S.prototype.doValidateSync = function(t, e, r) {
                    var n = this.path;
                    if (!this.validators.length) return null;
                    var o = this.validators;
                    if (void 0 === t) {
                        if (0 === this.validators.length || "required" !== this.validators[0].type) return null;
                        o = [
                            this.validators[0]
                        ];
                    }
                    var a = null, s = 0, u = o.length;
                    for(s = 0; s < u; ++s){
                        var f = o[s];
                        if (null !== f && "object" === i(f)) {
                            var p = f.validator, d = h(f) ? Object.assign({}, f) : c(f);
                            d.path = r && r.path ? r.path : n, d.fullPath = this.$fullPath, d.value = t;
                            var y = !1;
                            if (!l(p)) {
                                if (p instanceof RegExp) a = O(p.test(t), d);
                                else if ("function" == typeof p) {
                                    try {
                                        y = d.propsParameter ? p.call(e, t, d) : p.call(e, t);
                                    } catch (t) {
                                        y = !1, d.reason = t;
                                    }
                                    if ((null == y || "function" != typeof y.then) && (a = O(y, d))) break;
                                }
                            }
                        }
                    }
                    return a;
                }, S._isRef = function(t, e, r, i) {
                    var o = i && t.options && (t.options.ref || t.options.refPath);
                    if (!o && r && null != r.$__) {
                        var a = r.$__fullPath(t.path, !0), s = r.ownerDocument();
                        o = null != a && s.$populated(a) || r.$populated(t.path);
                    }
                    return !!o && (null == e || !(n.isBuffer(e) || "Binary" === e._bsontype || !y.isObject(e)) || i);
                }, S.prototype._castRef = function(t, e, r, o) {
                    if (null == t) return t;
                    if (null != t.$__) return t.$__.wasPopulated = t.$__.wasPopulated || {
                        value: t._doc._id
                    }, t;
                    if (n.isBuffer(t) || !y.isObject(t)) {
                        if (r) return t;
                        throw new g(this.instance, t, this.path, null, this);
                    }
                    var a, s, u, c = e.$__fullPath(this.path, !0), f = e.ownerDocument().$populated(c, !0), l = t;
                    if (!(e.$__.populated && e.$__.populated[c] && e.$__.populated[c].options && e.$__.populated[c].options.options && e.$__.populated[c].options.options.lean)) {
                        var h = f ? f.options[v] : e.constructor.db.model(this.options.ref);
                        (l = h.hydrate(t, null, o)).$__.wasPopulated = {
                            value: l._doc._id,
                            options: (a = {}, s = v, u = h, (s = function(t) {
                                var e = function(t) {
                                    if ("object" != i(t) || !t) return t;
                                    var e = t[Symbol.toPrimitive];
                                    if (void 0 !== e) {
                                        var r = e.call(t, "string");
                                        if ("object" != i(r)) return r;
                                        throw new TypeError("@@toPrimitive must return a primitive value.");
                                    }
                                    return String(t);
                                }(t);
                                return "symbol" == i(e) ? e : e + "";
                            }(s)) in a ? Object.defineProperty(a, s, {
                                value: u,
                                enumerable: !0,
                                configurable: !0,
                                writable: !0
                            }) : a[s] = u, a)
                        };
                    }
                    return l;
                }, S.prototype.$conditionalHandlers = {
                    $all: function(t, e) {
                        var r = this;
                        return Array.isArray(t) ? t.map(function(t) {
                            return r.castForQuery(null, t, e);
                        }) : [
                            this.castForQuery(null, t, e)
                        ];
                    },
                    $eq: j,
                    $in: $,
                    $ne: j,
                    $nin: $,
                    $exists: s,
                    $type: u
                }, S.prototype.castForQuery = function(t, e, r) {
                    var n;
                    if (null != t) {
                        if (!(n = this.$conditionalHandlers[t])) throw new Error("Can't use " + t);
                        return n.call(this, e, r);
                    }
                    try {
                        return this.applySetters(e, r);
                    } catch (t) {
                        throw t instanceof g && t.path === this.path && null != this.$fullPath && (t.path = this.$fullPath), t;
                    }
                }, S.checkRequired = function(t) {
                    return 0 !== arguments.length && (this._checkRequired = t), this._checkRequired;
                }, S.prototype.checkRequired = function(t) {
                    return null != t;
                }, S.prototype.clone = function() {
                    var t = Object.assign({}, this.options), e = new this.constructor(this.path, t, this.instance);
                    return e.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e.requiredValidator = this.requiredValidator), void 0 !== this.defaultValue && (e.defaultValue = this.defaultValue), void 0 !== this.$immutable && void 0 === this.options.immutable && (e.$immutable = this.$immutable, f(e)), void 0 !== this._index && (e._index = this._index), void 0 !== this.selected && (e.selected = this.selected), void 0 !== this.isRequired && (e.isRequired = this.isRequired), void 0 !== this.originalRequiredValue && (e.originalRequiredValue = this.originalRequiredValue), e.getters = this.getters.slice(), e.setters = this.setters.slice(), e;
                }, S.prototype.getEmbeddedSchemaType = function() {
                    return this.$embeddedSchemaType;
                }, S.prototype._duplicateKeyErrorMessage = null, S.prototype.toJSONSchema = function() {
                    throw new Error("Converting unsupported SchemaType to JSON Schema: " + this.instance);
                }, t.exports = e = S, e.CastError = g, e.ValidatorError = _;
            },
            6451: (t, e, r)=>{
                "use strict";
                var n = r(8768).isPOJO;
                t.exports = function t(e) {
                    for(var r, i, o, a = Object.keys(e), s = a.length; s--;)o = e[i = a[s]], n(o) && (e[i] = t(o)), void 0 !== e[i] ? r = !0 : delete e[i];
                    return r ? e : void 0;
                };
            },
            6467: (t, e, r)=>{
                var n = r(1679), i = r(1485), o = r(9732).Buffer, a = [
                    1116352408,
                    3609767458,
                    1899447441,
                    602891725,
                    3049323471,
                    3964484399,
                    3921009573,
                    2173295548,
                    961987163,
                    4081628472,
                    1508970993,
                    3053834265,
                    2453635748,
                    2937671579,
                    2870763221,
                    3664609560,
                    3624381080,
                    2734883394,
                    310598401,
                    1164996542,
                    607225278,
                    1323610764,
                    1426881987,
                    3590304994,
                    1925078388,
                    4068182383,
                    2162078206,
                    991336113,
                    2614888103,
                    633803317,
                    3248222580,
                    3479774868,
                    3835390401,
                    2666613458,
                    4022224774,
                    944711139,
                    264347078,
                    2341262773,
                    604807628,
                    2007800933,
                    770255983,
                    1495990901,
                    1249150122,
                    1856431235,
                    1555081692,
                    3175218132,
                    1996064986,
                    2198950837,
                    2554220882,
                    3999719339,
                    2821834349,
                    766784016,
                    2952996808,
                    2566594879,
                    3210313671,
                    3203337956,
                    3336571891,
                    1034457026,
                    3584528711,
                    2466948901,
                    113926993,
                    3758326383,
                    338241895,
                    168717936,
                    666307205,
                    1188179964,
                    773529912,
                    1546045734,
                    1294757372,
                    1522805485,
                    1396182291,
                    2643833823,
                    1695183700,
                    2343527390,
                    1986661051,
                    1014477480,
                    2177026350,
                    1206759142,
                    2456956037,
                    344077627,
                    2730485921,
                    1290863460,
                    2820302411,
                    3158454273,
                    3259730800,
                    3505952657,
                    3345764771,
                    106217008,
                    3516065817,
                    3606008344,
                    3600352804,
                    1432725776,
                    4094571909,
                    1467031594,
                    275423344,
                    851169720,
                    430227734,
                    3100823752,
                    506948616,
                    1363258195,
                    659060556,
                    3750685593,
                    883997877,
                    3785050280,
                    958139571,
                    3318307427,
                    1322822218,
                    3812723403,
                    1537002063,
                    2003034995,
                    1747873779,
                    3602036899,
                    1955562222,
                    1575990012,
                    2024104815,
                    1125592928,
                    2227730452,
                    2716904306,
                    2361852424,
                    442776044,
                    2428436474,
                    593698344,
                    2756734187,
                    3733110249,
                    3204031479,
                    2999351573,
                    3329325298,
                    3815920427,
                    3391569614,
                    3928383900,
                    3515267271,
                    566280711,
                    3940187606,
                    3454069534,
                    4118630271,
                    4000239992,
                    116418474,
                    1914138554,
                    174292421,
                    2731055270,
                    289380356,
                    3203993006,
                    460393269,
                    320620315,
                    685471733,
                    587496836,
                    852142971,
                    1086792851,
                    1017036298,
                    365543100,
                    1126000580,
                    2618297676,
                    1288033470,
                    3409855158,
                    1501505948,
                    4234509866,
                    1607167915,
                    987167468,
                    1816402316,
                    1246189591
                ], s = new Array(160);
                function u() {
                    this.init(), this._w = s, i.call(this, 128, 112);
                }
                function c(t, e, r) {
                    return r ^ t & (e ^ r);
                }
                function f(t, e, r) {
                    return t & e | r & (t | e);
                }
                function l(t, e) {
                    return (t >>> 28 | e << 4) ^ (e >>> 2 | t << 30) ^ (e >>> 7 | t << 25);
                }
                function h(t, e) {
                    return (t >>> 14 | e << 18) ^ (t >>> 18 | e << 14) ^ (e >>> 9 | t << 23);
                }
                function p(t, e) {
                    return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ t >>> 7;
                }
                function d(t, e) {
                    return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ (t >>> 7 | e << 25);
                }
                function y(t, e) {
                    return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ t >>> 6;
                }
                function b(t, e) {
                    return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ (t >>> 6 | e << 26);
                }
                function m(t, e) {
                    return t >>> 0 < e >>> 0 ? 1 : 0;
                }
                n(u, i), u.prototype.init = function() {
                    return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
                }, u.prototype._update = function(t) {
                    for(var e = this._w, r = 0 | this._ah, n = 0 | this._bh, i = 0 | this._ch, o = 0 | this._dh, s = 0 | this._eh, u = 0 | this._fh, v = 0 | this._gh, g = 0 | this._hh, _ = 0 | this._al, w = 0 | this._bl, S = 0 | this._cl, O = 0 | this._dl, j = 0 | this._el, $ = 0 | this._fl, E = 0 | this._gl, A = 0 | this._hl, P = 0; P < 32; P += 2)e[P] = t.readInt32BE(4 * P), e[P + 1] = t.readInt32BE(4 * P + 4);
                    for(; P < 160; P += 2){
                        var x = e[P - 30], k = e[P - 30 + 1], M = p(x, k), T = d(k, x), B = y(x = e[P - 4], k = e[P - 4 + 1]), I = b(k, x), R = e[P - 14], N = e[P - 14 + 1], D = e[P - 32], L = e[P - 32 + 1], C = T + N | 0, U = M + R + m(C, T) | 0;
                        U = (U = U + B + m(C = C + I | 0, I) | 0) + D + m(C = C + L | 0, L) | 0, e[P] = U, e[P + 1] = C;
                    }
                    for(var q = 0; q < 160; q += 2){
                        U = e[q], C = e[q + 1];
                        var F = f(r, n, i), V = f(_, w, S), z = l(r, _), K = l(_, r), H = h(s, j), W = h(j, s), J = a[q], G = a[q + 1], Y = c(s, u, v), Q = c(j, $, E), X = A + W | 0, Z = g + H + m(X, A) | 0;
                        Z = (Z = (Z = Z + Y + m(X = X + Q | 0, Q) | 0) + J + m(X = X + G | 0, G) | 0) + U + m(X = X + C | 0, C) | 0;
                        var tt = K + V | 0, et = z + F + m(tt, K) | 0;
                        g = v, A = E, v = u, E = $, u = s, $ = j, s = o + Z + m(j = O + X | 0, O) | 0, o = i, O = S, i = n, S = w, n = r, w = _, r = Z + et + m(_ = X + tt | 0, X) | 0;
                    }
                    this._al = this._al + _ | 0, this._bl = this._bl + w | 0, this._cl = this._cl + S | 0, this._dl = this._dl + O | 0, this._el = this._el + j | 0, this._fl = this._fl + $ | 0, this._gl = this._gl + E | 0, this._hl = this._hl + A | 0, this._ah = this._ah + r + m(this._al, _) | 0, this._bh = this._bh + n + m(this._bl, w) | 0, this._ch = this._ch + i + m(this._cl, S) | 0, this._dh = this._dh + o + m(this._dl, O) | 0, this._eh = this._eh + s + m(this._el, j) | 0, this._fh = this._fh + u + m(this._fl, $) | 0, this._gh = this._gh + v + m(this._gl, E) | 0, this._hh = this._hh + g + m(this._hl, A) | 0;
                }, u.prototype._hash = function() {
                    var t = o.allocUnsafe(64);
                    function e(e, r, n) {
                        t.writeInt32BE(e, n), t.writeInt32BE(r, n + 4);
                    }
                    return e(this._ah, this._al, 0), e(this._bh, this._bl, 8), e(this._ch, this._cl, 16), e(this._dh, this._dl, 24), e(this._eh, this._el, 32), e(this._fh, this._fl, 40), e(this._gh, this._gl, 48), e(this._hh, this._hl, 56), t;
                }, t.exports = u;
            },
            6511: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function o(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function a(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? o(Object(r), !0).forEach(function(e) {
                            s(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : o(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function s(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                r(8768);
                var u = t.exports = function() {};
                u.ctor = function() {
                    var t = Array.prototype.slice.call(arguments), e = function() {
                        u.apply(this, arguments), this.paths = {}, this.states = {};
                    };
                    return (e.prototype = new u).constructor = e, e.prototype.stateNames = t, t.forEach(function(t) {
                        e.prototype[t] = function(e) {
                            this._changeState(e, t);
                        };
                    }), e;
                }, u.prototype._changeState = function(t, e) {
                    var r = this.paths[t];
                    if (r !== e) {
                        var n = this.states[r];
                        n && delete n[t], this.paths[t] = e, this.states[e] = this.states[e] || {}, this.states[e][t] = !0;
                    }
                }, u.prototype.clear = function(t) {
                    if (null != this.states[t]) for(var e, r = Object.keys(this.states[t]), n = r.length; n--;)e = r[n], delete this.states[t][e], delete this.paths[e];
                }, u.prototype.clearPath = function(t) {
                    var e = this.paths[t];
                    e && (delete this.paths[t], delete this.states[e][t]);
                }, u.prototype.getStatePaths = function(t) {
                    return null != this.states[t] ? this.states[t] : {};
                }, u.prototype.some = function() {
                    var t = this, e = arguments.length ? arguments : this.stateNames;
                    return Array.prototype.some.call(e, function(e) {
                        return null != t.states[e] && Object.keys(t.states[e]).length;
                    });
                }, u.prototype._iter = function(t) {
                    return function() {
                        var e = Array.prototype.slice.call(arguments), r = e.pop();
                        e.length || (e = this.stateNames);
                        var n = this;
                        return e.reduce(function(t, e) {
                            return null == n.states[e] ? t : t.concat(Object.keys(n.states[e]));
                        }, [])[t](function(t, e, n) {
                            return r(t, e, n);
                        });
                    };
                }, u.prototype.forEach = function() {
                    return this.forEach = this._iter("forEach"), this.forEach.apply(this, arguments);
                }, u.prototype.map = function() {
                    return this.map = this._iter("map"), this.map.apply(this, arguments);
                }, u.prototype.clone = function() {
                    var t = new this.constructor;
                    t.paths = a({}, this.paths);
                    var e, r = function(t, e) {
                        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (!r) {
                            if (Array.isArray(t) || (r = function(t, e) {
                                if (t) {
                                    if ("string" == typeof t) return i(t, e);
                                    var r = ({}).toString.call(t).slice(8, -1);
                                    return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? i(t, e) : void 0;
                                }
                            }(t)) || e && t && "number" == typeof t.length) {
                                r && (t = r);
                                var n = 0, o = function() {};
                                return {
                                    s: o,
                                    n: function() {
                                        return n >= t.length ? {
                                            done: !0
                                        } : {
                                            done: !1,
                                            value: t[n++]
                                        };
                                    },
                                    e: function(t) {
                                        throw t;
                                    },
                                    f: o
                                };
                            }
                            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                        }
                        var a, s = !0, u = !1;
                        return {
                            s: function() {
                                r = r.call(t);
                            },
                            n: function() {
                                var t = r.next();
                                return s = t.done, t;
                            },
                            e: function(t) {
                                u = !0, a = t;
                            },
                            f: function() {
                                try {
                                    s || null == r.return || r.return();
                                } finally{
                                    if (u) throw a;
                                }
                            }
                        };
                    }(this.stateNames);
                    try {
                        for(r.s(); !(e = r.n()).done;){
                            var n = e.value;
                            n in this.states && (t.states[n] = null == this.states[n] ? this.states[n] : a({}, this.states[n]));
                        }
                    } catch (t) {
                        r.e(t);
                    } finally{
                        r.f();
                    }
                    return t;
                };
            },
            6544: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i;
                if (!Object.keys) {
                    var o = Object.prototype.hasOwnProperty, a = Object.prototype.toString, s = r(6312), u = Object.prototype.propertyIsEnumerable, c = !u.call({
                        toString: null
                    }, "toString"), f = u.call(function() {}, "prototype"), l = [
                        "toString",
                        "toLocaleString",
                        "valueOf",
                        "hasOwnProperty",
                        "isPrototypeOf",
                        "propertyIsEnumerable",
                        "constructor"
                    ], h = function(t) {
                        var e = t.constructor;
                        return e && e.prototype === t;
                    }, p = {
                        $applicationCache: !0,
                        $console: !0,
                        $external: !0,
                        $frame: !0,
                        $frameElement: !0,
                        $frames: !0,
                        $innerHeight: !0,
                        $innerWidth: !0,
                        $onmozfullscreenchange: !0,
                        $onmozfullscreenerror: !0,
                        $outerHeight: !0,
                        $outerWidth: !0,
                        $pageXOffset: !0,
                        $pageYOffset: !0,
                        $parent: !0,
                        $scrollLeft: !0,
                        $scrollTop: !0,
                        $scrollX: !0,
                        $scrollY: !0,
                        $self: !0,
                        $webkitIndexedDB: !0,
                        $webkitStorageInfo: !0,
                        $window: !0
                    }, d = function() {
                        if ("undefined" == typeof window) return !1;
                        for(var t in window)try {
                            if (!p["$" + t] && o.call(window, t) && null !== window[t] && "object" === n(window[t])) try {
                                h(window[t]);
                            } catch (t) {
                                return !0;
                            }
                        } catch (t) {
                            return !0;
                        }
                        return !1;
                    }();
                    i = function(t) {
                        var e = null !== t && "object" === n(t), r = "[object Function]" === a.call(t), i = s(t), u = e && "[object String]" === a.call(t), p = [];
                        if (!e && !r && !i) throw new TypeError("Object.keys called on a non-object");
                        var y = f && r;
                        if (u && t.length > 0 && !o.call(t, 0)) for(var b = 0; b < t.length; ++b)p.push(String(b));
                        if (i && t.length > 0) for(var m = 0; m < t.length; ++m)p.push(String(m));
                        else for(var v in t)y && "prototype" === v || !o.call(t, v) || p.push(String(v));
                        if (c) for(var g = function(t) {
                            if ("undefined" == typeof window || !d) return h(t);
                            try {
                                return h(t);
                            } catch (t) {
                                return !1;
                            }
                        }(t), _ = 0; _ < l.length; ++_)g && "constructor" === l[_] || !o.call(t, l[_]) || p.push(l[_]);
                        return p;
                    };
                }
                t.exports = i;
            },
            6547: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function i(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != o(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != o(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == o(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function o(t) {
                    return o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, o(t);
                }
                var a = r(3550).EventEmitter, s = r(9380), u = r(8768), c = r(7930).documentArrayParent;
                function f(t, e, r, a, f) {
                    var l;
                    u.isMongooseDocumentArray(e) ? (this.__parentArray = e, this[c] = e.$parent()) : (this.__parentArray = void 0, this[c] = void 0), this.$setIndex(f), this.$__parent = this[c], "object" === o(r) && null != r ? (l = function(t) {
                        for(var e = 1; e < arguments.length; e++){
                            var r = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? n(Object(r), !0).forEach(function(e) {
                                i(t, e, r[e]);
                            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function(e) {
                                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                            });
                        }
                        return t;
                    }({
                        isNew: !0
                    }, r), r = void 0) : l = {
                        isNew: !0
                    }, s.call(this, t, a, this[c], r, l);
                }
                for(var l in f.prototype = Object.create(s.prototype), f.prototype.constructor = f, Object.defineProperty(f.prototype, "$isSingleNested", {
                    configurable: !1,
                    writable: !1,
                    value: !1
                }), Object.defineProperty(f.prototype, "$isDocumentArrayElement", {
                    configurable: !1,
                    writable: !1,
                    value: !0
                }), a.prototype)f[l] = a.prototype[l];
                f.prototype.$setIndex = function(t) {
                    if (this.__index = t, null != this.$__ && null != this.$__.validationError) for(var e = 0, r = Object.keys(this.$__.validationError.errors); e < r.length; e++){
                        var n = r[e];
                        this.invalidate(n, this.$__.validationError.errors[n]);
                    }
                }, f.prototype.populate = function() {
                    throw new Error('Mongoose does not support calling populate() on nested docs. Instead of `doc.arr[0].populate("path")`, use `doc.populate("arr.0.path")`');
                }, f.prototype.$__removeFromParent = function() {
                    var t = this._doc._id;
                    if (!t) throw new Error("For your own good, Mongoose does not know how to remove an ArraySubdocument that has no _id");
                    this.__parentArray.pull({
                        _id: t
                    });
                }, f.prototype.$__fullPath = function(t, e) {
                    return null == this.__index ? null : (this.$__.fullPath || this.ownerDocument(), e ? t ? this.$__.fullPath + "." + t : this.$__.fullPath : t ? this.$__.fullPath + "." + this.__index + "." + t : this.$__.fullPath + "." + this.__index);
                }, f.prototype.$__pathRelativeToParent = function(t, e) {
                    return null != this.__index && this.__parentArray && this.__parentArray.$path ? e ? null == t ? this.__parentArray.$path() : this.__parentArray.$path() + "." + t : null == t ? this.__parentArray.$path() + "." + this.__index : this.__parentArray.$path() + "." + this.__index + "." + t : null;
                }, f.prototype.$parent = function() {
                    return this[c];
                }, f.prototype.parentArray = function() {
                    return this.__parentArray;
                }, t.exports = f;
            },
            6555: (t, e, r)=>{
                var n = r(1679);
                function i(t) {
                    this._reporterState = {
                        obj: null,
                        path: [],
                        options: t || {},
                        errors: []
                    };
                }
                function o(t, e) {
                    this.path = t, this.rethrow(e);
                }
                e.a = i, i.prototype.isError = function(t) {
                    return t instanceof o;
                }, i.prototype.save = function() {
                    var t = this._reporterState;
                    return {
                        obj: t.obj,
                        pathLen: t.path.length
                    };
                }, i.prototype.restore = function(t) {
                    var e = this._reporterState;
                    e.obj = t.obj, e.path = e.path.slice(0, t.pathLen);
                }, i.prototype.enterKey = function(t) {
                    return this._reporterState.path.push(t);
                }, i.prototype.exitKey = function(t) {
                    var e = this._reporterState;
                    e.path = e.path.slice(0, t - 1);
                }, i.prototype.leaveKey = function(t, e, r) {
                    var n = this._reporterState;
                    this.exitKey(t), null !== n.obj && (n.obj[e] = r);
                }, i.prototype.path = function() {
                    return this._reporterState.path.join("/");
                }, i.prototype.enterObject = function() {
                    var t = this._reporterState, e = t.obj;
                    return t.obj = {}, e;
                }, i.prototype.leaveObject = function(t) {
                    var e = this._reporterState, r = e.obj;
                    return e.obj = t, r;
                }, i.prototype.error = function(t) {
                    var e, r = this._reporterState, n = t instanceof o;
                    if (e = n ? t : new o(r.path.map(function(t) {
                        return "[" + JSON.stringify(t) + "]";
                    }).join(""), t.message || t, t.stack), !r.options.partial) throw e;
                    return n || r.errors.push(e), e;
                }, i.prototype.wrapResult = function(t) {
                    var e = this._reporterState;
                    return e.options.partial ? {
                        result: this.isError(t) ? null : t,
                        errors: e.errors
                    } : t;
                }, n(o, Error), o.prototype.rethrow = function(t) {
                    if (this.message = t + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, o), !this.stack) try {
                        throw new Error(this.message);
                    } catch (t) {
                        this.stack = t.stack;
                    }
                    return this;
                };
            },
            6567: (t, e, r)=>{
                "use strict";
                var n = r(8317).Buffer, i = r(5340);
                t.exports = function() {
                    function t() {
                        !function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, t), this.head = null, this.tail = null, this.length = 0;
                    }
                    return t.prototype.push = function(t) {
                        var e = {
                            data: t,
                            next: null
                        };
                        this.length > 0 ? this.tail.next = e : this.head = e, this.tail = e, ++this.length;
                    }, t.prototype.unshift = function(t) {
                        var e = {
                            data: t,
                            next: this.head
                        };
                        0 === this.length && (this.tail = e), this.head = e, ++this.length;
                    }, t.prototype.shift = function() {
                        if (0 !== this.length) {
                            var t = this.head.data;
                            return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t;
                        }
                    }, t.prototype.clear = function() {
                        this.head = this.tail = null, this.length = 0;
                    }, t.prototype.join = function(t) {
                        if (0 === this.length) return "";
                        for(var e = this.head, r = "" + e.data; e = e.next;)r += t + e.data;
                        return r;
                    }, t.prototype.concat = function(t) {
                        if (0 === this.length) return n.alloc(0);
                        for(var e, r, i = n.allocUnsafe(t >>> 0), o = this.head, a = 0; o;)e = i, r = a, o.data.copy(e, r), a += o.data.length, o = o.next;
                        return i;
                    }, t;
                }(), i && i.inspect && i.inspect.custom && (t.exports.prototype[i.inspect.custom] = function() {
                    var t = i.inspect({
                        length: this.length
                    });
                    return this.constructor.name + " " + t;
                });
            },
            6583: (t, e, r)=>{
                "use strict";
                var n = r(1679), i = r(9732).Buffer, o = r(2533), a = i.alloc(128), s = 64;
                function u(t, e) {
                    o.call(this, "digest"), "string" == typeof e && (e = i.from(e)), this._alg = t, this._key = e, e.length > s ? e = t(e) : e.length < s && (e = i.concat([
                        e,
                        a
                    ], s));
                    for(var r = this._ipad = i.allocUnsafe(s), n = this._opad = i.allocUnsafe(s), u = 0; u < s; u++)r[u] = 54 ^ e[u], n[u] = 92 ^ e[u];
                    this._hash = [
                        r
                    ];
                }
                n(u, o), u.prototype._update = function(t) {
                    this._hash.push(t);
                }, u.prototype._final = function() {
                    var t = this._alg(i.concat(this._hash));
                    return this._alg(i.concat([
                        this._opad,
                        t
                    ]));
                }, t.exports = u;
            },
            6620: (t, e, r)=>{
                "use strict";
                var n = r(9732).Buffer, i = r(2046), o = r(1095), a = r(7312).ec, s = r(7799), u = r(5053), c = r(4589);
                function f(t, e, r, o) {
                    if ((t = n.from(t.toArray())).length < e.byteLength()) {
                        var a = n.alloc(e.byteLength() - t.length);
                        t = n.concat([
                            a,
                            t
                        ]);
                    }
                    var s = r.length, u = function(t, e) {
                        t = (t = l(t, e)).mod(e);
                        var r = n.from(t.toArray());
                        if (r.length < e.byteLength()) {
                            var i = n.alloc(e.byteLength() - r.length);
                            r = n.concat([
                                i,
                                r
                            ]);
                        }
                        return r;
                    }(r, e), c = n.alloc(s);
                    c.fill(1);
                    var f = n.alloc(s);
                    return f = i(o, f).update(c).update(n.from([
                        0
                    ])).update(t).update(u).digest(), c = i(o, f).update(c).digest(), {
                        k: f = i(o, f).update(c).update(n.from([
                            1
                        ])).update(t).update(u).digest(),
                        v: c = i(o, f).update(c).digest()
                    };
                }
                function l(t, e) {
                    var r = new s(t), n = (t.length << 3) - e.bitLength();
                    return n > 0 && r.ishrn(n), r;
                }
                function h(t, e, r) {
                    var o, a;
                    do {
                        for(o = n.alloc(0); 8 * o.length < t.bitLength();)e.v = i(r, e.k).update(e.v).digest(), o = n.concat([
                            o,
                            e.v
                        ]);
                        a = l(o, t), e.k = i(r, e.k).update(e.v).update(n.from([
                            0
                        ])).digest(), e.v = i(r, e.k).update(e.v).digest();
                    }while (-1 !== a.cmp(t));
                    return a;
                }
                function p(t, e, r, n) {
                    return t.toRed(s.mont(r)).redPow(e).fromRed().mod(n);
                }
                t.exports = function(t, e, r, i, d) {
                    var y = u(e);
                    if (y.curve) {
                        if ("ecdsa" !== i && "ecdsa/rsa" !== i) throw new Error("wrong private key type");
                        return function(t, e) {
                            var r = c[e.curve.join(".")];
                            if (!r) throw new Error("unknown curve " + e.curve.join("."));
                            var i = new a(r).keyFromPrivate(e.privateKey).sign(t);
                            return n.from(i.toDER());
                        }(t, y);
                    }
                    if ("dsa" === y.type) {
                        if ("dsa" !== i) throw new Error("wrong private key type");
                        return function(t, e, r) {
                            for(var i, o = e.params.priv_key, a = e.params.p, u = e.params.q, c = e.params.g, d = new s(0), y = l(t, u).mod(u), b = !1, m = f(o, u, t, r); !1 === b;)d = p(c, i = h(u, m, r), a, u), 0 === (b = i.invm(u).imul(y.add(o.mul(d))).mod(u)).cmpn(0) && (b = !1, d = new s(0));
                            return function(t, e) {
                                t = t.toArray(), e = e.toArray(), 128 & t[0] && (t = [
                                    0
                                ].concat(t)), 128 & e[0] && (e = [
                                    0
                                ].concat(e));
                                var r = [
                                    48,
                                    t.length + e.length + 4,
                                    2,
                                    t.length
                                ];
                                return r = r.concat(t, [
                                    2,
                                    e.length
                                ], e), n.from(r);
                            }(d, b);
                        }(t, y, r);
                    }
                    if ("rsa" !== i && "ecdsa/rsa" !== i) throw new Error("wrong private key type");
                    if (void 0 !== e.padding && 1 !== e.padding) throw new Error("illegal or unsupported padding mode");
                    t = n.concat([
                        d,
                        t
                    ]);
                    for(var b = y.modulus.byteLength(), m = [
                        0,
                        1
                    ]; t.length + m.length + 1 < b;)m.push(255);
                    m.push(0);
                    for(var v = -1; ++v < t.length;)m.push(t[v]);
                    return o(m, y);
                }, t.exports.getKey = f, t.exports.makeKey = h;
            },
            6661: (t, e, r)=>{
                var n = r(9732).Buffer;
                t.exports = function(t, e, r) {
                    if (n.isBuffer(t)) return t;
                    if ("string" == typeof t) return n.from(t, e);
                    if (ArrayBuffer.isView(t)) return n.from(t.buffer);
                    throw new TypeError(r + " must be a string, a Buffer, a typed array or a DataView");
                };
            },
            6665: (t)=>{
                "use strict";
                t.exports = function(t, e) {
                    for(var r, n, i, o = e.split("."), a = "", s = 0; s < o.length; ++s)if (t[a += a.length ? "." : "" + o[s]]) {
                        for(i = (n = Object.keys(t)).length, r = 0; r < i; ++r)0 !== n[s].indexOf(a + ".") || n[s].indexOf(e);
                        return !0;
                    }
                    return !1;
                };
            },
            6706: (t, e)=>{
                "use strict";
                var r = e;
                function n(t) {
                    return 1 === t.length ? "0" + t : t;
                }
                function i(t) {
                    for(var e = "", r = 0; r < t.length; r++)e += n(t[r].toString(16));
                    return e;
                }
                r.toArray = function(t, e) {
                    if (Array.isArray(t)) return t.slice();
                    if (!t) return [];
                    var r = [];
                    if ("string" != typeof t) {
                        for(var n = 0; n < t.length; n++)r[n] = 0 | t[n];
                        return r;
                    }
                    if ("hex" === e) for((t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t = "0" + t), n = 0; n < t.length; n += 2)r.push(parseInt(t[n] + t[n + 1], 16));
                    else for(n = 0; n < t.length; n++){
                        var i = t.charCodeAt(n), o = i >> 8, a = 255 & i;
                        o ? r.push(o, a) : r.push(a);
                    }
                    return r;
                }, r.zero2 = n, r.toHex = i, r.encode = function(t, e) {
                    return "hex" === e ? i(t) : t;
                };
            },
            6730: (t)=>{
                "use strict";
                var e = Object.prototype.toString, r = Math.max, n = function(t, e) {
                    for(var r = [], n = 0; n < t.length; n += 1)r[n] = t[n];
                    for(var i = 0; i < e.length; i += 1)r[i + t.length] = e[i];
                    return r;
                };
                t.exports = function(t) {
                    var i = this;
                    if ("function" != typeof i || "[object Function]" !== e.apply(i)) throw new TypeError("Function.prototype.bind called on incompatible " + i);
                    for(var o, a = function(t) {
                        for(var e = [], r = 1, n = 0; r < t.length; r += 1, n += 1)e[n] = t[r];
                        return e;
                    }(arguments), s = r(0, i.length - a.length), u = [], c = 0; c < s; c++)u[c] = "$" + c;
                    if (o = Function("binder", "return function (" + function(t) {
                        for(var e = "", r = 0; r < t.length; r += 1)e += t[r], r + 1 < t.length && (e += ",");
                        return e;
                    }(u) + "){ return binder.apply(this,arguments); }")(function() {
                        if (this instanceof o) {
                            var e = i.apply(this, n(a, arguments));
                            return Object(e) === e ? e : this;
                        }
                        return i.apply(t, n(a, arguments));
                    }), i.prototype) {
                        var f = function() {};
                        f.prototype = i.prototype, o.prototype = new f, f.prototype = null;
                    }
                    return o;
                };
            },
            6749: (t, e, r)=>{
                "use strict";
                var n = r(4685), i = r(7695), o = r(3528), a = n.rotr64_hi, s = n.rotr64_lo, u = n.shr64_hi, c = n.shr64_lo, f = n.sum64, l = n.sum64_hi, h = n.sum64_lo, p = n.sum64_4_hi, d = n.sum64_4_lo, y = n.sum64_5_hi, b = n.sum64_5_lo, m = i.BlockHash, v = [
                    1116352408,
                    3609767458,
                    1899447441,
                    602891725,
                    3049323471,
                    3964484399,
                    3921009573,
                    2173295548,
                    961987163,
                    4081628472,
                    1508970993,
                    3053834265,
                    2453635748,
                    2937671579,
                    2870763221,
                    3664609560,
                    3624381080,
                    2734883394,
                    310598401,
                    1164996542,
                    607225278,
                    1323610764,
                    1426881987,
                    3590304994,
                    1925078388,
                    4068182383,
                    2162078206,
                    991336113,
                    2614888103,
                    633803317,
                    3248222580,
                    3479774868,
                    3835390401,
                    2666613458,
                    4022224774,
                    944711139,
                    264347078,
                    2341262773,
                    604807628,
                    2007800933,
                    770255983,
                    1495990901,
                    1249150122,
                    1856431235,
                    1555081692,
                    3175218132,
                    1996064986,
                    2198950837,
                    2554220882,
                    3999719339,
                    2821834349,
                    766784016,
                    2952996808,
                    2566594879,
                    3210313671,
                    3203337956,
                    3336571891,
                    1034457026,
                    3584528711,
                    2466948901,
                    113926993,
                    3758326383,
                    338241895,
                    168717936,
                    666307205,
                    1188179964,
                    773529912,
                    1546045734,
                    1294757372,
                    1522805485,
                    1396182291,
                    2643833823,
                    1695183700,
                    2343527390,
                    1986661051,
                    1014477480,
                    2177026350,
                    1206759142,
                    2456956037,
                    344077627,
                    2730485921,
                    1290863460,
                    2820302411,
                    3158454273,
                    3259730800,
                    3505952657,
                    3345764771,
                    106217008,
                    3516065817,
                    3606008344,
                    3600352804,
                    1432725776,
                    4094571909,
                    1467031594,
                    275423344,
                    851169720,
                    430227734,
                    3100823752,
                    506948616,
                    1363258195,
                    659060556,
                    3750685593,
                    883997877,
                    3785050280,
                    958139571,
                    3318307427,
                    1322822218,
                    3812723403,
                    1537002063,
                    2003034995,
                    1747873779,
                    3602036899,
                    1955562222,
                    1575990012,
                    2024104815,
                    1125592928,
                    2227730452,
                    2716904306,
                    2361852424,
                    442776044,
                    2428436474,
                    593698344,
                    2756734187,
                    3733110249,
                    3204031479,
                    2999351573,
                    3329325298,
                    3815920427,
                    3391569614,
                    3928383900,
                    3515267271,
                    566280711,
                    3940187606,
                    3454069534,
                    4118630271,
                    4000239992,
                    116418474,
                    1914138554,
                    174292421,
                    2731055270,
                    289380356,
                    3203993006,
                    460393269,
                    320620315,
                    685471733,
                    587496836,
                    852142971,
                    1086792851,
                    1017036298,
                    365543100,
                    1126000580,
                    2618297676,
                    1288033470,
                    3409855158,
                    1501505948,
                    4234509866,
                    1607167915,
                    987167468,
                    1816402316,
                    1246189591
                ];
                function g() {
                    if (!(this instanceof g)) return new g;
                    m.call(this), this.h = [
                        1779033703,
                        4089235720,
                        3144134277,
                        2227873595,
                        1013904242,
                        4271175723,
                        2773480762,
                        1595750129,
                        1359893119,
                        2917565137,
                        2600822924,
                        725511199,
                        528734635,
                        4215389547,
                        1541459225,
                        327033209
                    ], this.k = v, this.W = new Array(160);
                }
                function _(t, e, r, n, i) {
                    var o = t & r ^ ~t & i;
                    return o < 0 && (o += 4294967296), o;
                }
                function w(t, e, r, n, i, o) {
                    var a = e & n ^ ~e & o;
                    return a < 0 && (a += 4294967296), a;
                }
                function S(t, e, r, n, i) {
                    var o = t & r ^ t & i ^ r & i;
                    return o < 0 && (o += 4294967296), o;
                }
                function O(t, e, r, n, i, o) {
                    var a = e & n ^ e & o ^ n & o;
                    return a < 0 && (a += 4294967296), a;
                }
                function j(t, e) {
                    var r = a(t, e, 28) ^ a(e, t, 2) ^ a(e, t, 7);
                    return r < 0 && (r += 4294967296), r;
                }
                function $(t, e) {
                    var r = s(t, e, 28) ^ s(e, t, 2) ^ s(e, t, 7);
                    return r < 0 && (r += 4294967296), r;
                }
                function E(t, e) {
                    var r = s(t, e, 14) ^ s(t, e, 18) ^ s(e, t, 9);
                    return r < 0 && (r += 4294967296), r;
                }
                function A(t, e) {
                    var r = a(t, e, 1) ^ a(t, e, 8) ^ u(t, e, 7);
                    return r < 0 && (r += 4294967296), r;
                }
                function P(t, e) {
                    var r = s(t, e, 1) ^ s(t, e, 8) ^ c(t, e, 7);
                    return r < 0 && (r += 4294967296), r;
                }
                function x(t, e) {
                    var r = s(t, e, 19) ^ s(e, t, 29) ^ c(t, e, 6);
                    return r < 0 && (r += 4294967296), r;
                }
                n.inherits(g, m), t.exports = g, g.blockSize = 1024, g.outSize = 512, g.hmacStrength = 192, g.padLength = 128, g.prototype._prepareBlock = function(t, e) {
                    for(var r = this.W, n = 0; n < 32; n++)r[n] = t[e + n];
                    for(; n < r.length; n += 2){
                        var i = (b = r[n - 4], m = r[n - 3], v = void 0, (v = a(b, m, 19) ^ a(m, b, 29) ^ u(b, m, 6)) < 0 && (v += 4294967296), v), o = x(r[n - 4], r[n - 3]), s = r[n - 14], c = r[n - 13], f = A(r[n - 30], r[n - 29]), l = P(r[n - 30], r[n - 29]), h = r[n - 32], y = r[n - 31];
                        r[n] = p(i, o, s, c, f, l, h, y), r[n + 1] = d(i, o, s, c, f, l, h, y);
                    }
                    var b, m, v;
                }, g.prototype._update = function(t, e) {
                    this._prepareBlock(t, e);
                    var r, n, i, s = this.W, u = this.h[0], c = this.h[1], p = this.h[2], d = this.h[3], m = this.h[4], v = this.h[5], g = this.h[6], A = this.h[7], P = this.h[8], x = this.h[9], k = this.h[10], M = this.h[11], T = this.h[12], B = this.h[13], I = this.h[14], R = this.h[15];
                    o(this.k.length === s.length);
                    for(var N = 0; N < s.length; N += 2){
                        var D = I, L = R, C = (i = void 0, (i = a(r = P, n = x, 14) ^ a(r, n, 18) ^ a(n, r, 9)) < 0 && (i += 4294967296), i), U = E(P, x), q = _(P, 0, k, 0, T), F = w(0, x, 0, M, 0, B), V = this.k[N], z = this.k[N + 1], K = s[N], H = s[N + 1], W = y(D, L, C, U, q, F, V, z, K, H), J = b(D, L, C, U, q, F, V, z, K, H);
                        D = j(u, c), L = $(u, c), C = S(u, 0, p, 0, m), U = O(0, c, 0, d, 0, v);
                        var G = l(D, L, C, U), Y = h(D, L, C, U);
                        I = T, R = B, T = k, B = M, k = P, M = x, P = l(g, A, W, J), x = h(A, A, W, J), g = m, A = v, m = p, v = d, p = u, d = c, u = l(W, J, G, Y), c = h(W, J, G, Y);
                    }
                    f(this.h, 0, u, c), f(this.h, 2, p, d), f(this.h, 4, m, v), f(this.h, 6, g, A), f(this.h, 8, P, x), f(this.h, 10, k, M), f(this.h, 12, T, B), f(this.h, 14, I, R);
                }, g.prototype._digest = function(t) {
                    return "hex" === t ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
                };
            },
            6750: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(988), o = r(2288), a = r(2268), s = r(1464);
                t.exports = function(t, e, r) {
                    if (!t || "object" !== n(t) && "function" != typeof t) throw new a("`obj` must be an object or a function`");
                    if ("string" != typeof e && "symbol" !== n(e)) throw new a("`property` must be a string or a symbol`");
                    if (arguments.length > 3 && "boolean" != typeof arguments[3] && null !== arguments[3]) throw new a("`nonEnumerable`, if provided, must be a boolean or null");
                    if (arguments.length > 4 && "boolean" != typeof arguments[4] && null !== arguments[4]) throw new a("`nonWritable`, if provided, must be a boolean or null");
                    if (arguments.length > 5 && "boolean" != typeof arguments[5] && null !== arguments[5]) throw new a("`nonConfigurable`, if provided, must be a boolean or null");
                    if (arguments.length > 6 && "boolean" != typeof arguments[6]) throw new a("`loose`, if provided, must be a boolean");
                    var u = arguments.length > 3 ? arguments[3] : null, c = arguments.length > 4 ? arguments[4] : null, f = arguments.length > 5 ? arguments[5] : null, l = arguments.length > 6 && arguments[6], h = !!s && s(t, e);
                    if (i) i(t, e, {
                        configurable: null === f && h ? h.configurable : !f,
                        enumerable: null === u && h ? h.enumerable : !u,
                        value: r,
                        writable: null === c && h ? h.writable : !c
                    });
                    else {
                        if (!l && (u || c || f)) throw new o("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
                        t[e] = r;
                    }
                };
            },
            6754: (t, e, r)=>{
                "use strict";
                var n = r(3528), i = r(1679), o = {};
                function a(t) {
                    n.equal(t.length, 8, "Invalid IV length"), this.iv = new Array(8);
                    for(var e = 0; e < this.iv.length; e++)this.iv[e] = t[e];
                }
                e.instantiate = function(t) {
                    function e(e) {
                        t.call(this, e), this._cbcInit();
                    }
                    i(e, t);
                    for(var r = Object.keys(o), n = 0; n < r.length; n++){
                        var a = r[n];
                        e.prototype[a] = o[a];
                    }
                    return e.create = function(t) {
                        return new e(t);
                    }, e;
                }, o._cbcInit = function() {
                    var t = new a(this.options.iv);
                    this._cbcState = t;
                }, o._update = function(t, e, r, n) {
                    var i = this._cbcState, o = this.constructor.super_.prototype, a = i.iv;
                    if ("encrypt" === this.type) {
                        for(var s = 0; s < this.blockSize; s++)a[s] ^= t[e + s];
                        for(o._update.call(this, a, 0, r, n), s = 0; s < this.blockSize; s++)a[s] = r[n + s];
                    } else {
                        for(o._update.call(this, t, e, r, n), s = 0; s < this.blockSize; s++)r[n + s] ^= a[s];
                        for(s = 0; s < this.blockSize; s++)a[s] = t[e + s];
                    }
                };
            },
            6775: (t, e)=>{
                "use strict";
                e.byteLength = function(t) {
                    var e = s(t), r = e[0], n = e[1];
                    return 3 * (r + n) / 4 - n;
                }, e.toByteArray = function(t) {
                    var e, r, o = s(t), a = o[0], u = o[1], c = new i(function(t, e, r) {
                        return 3 * (e + r) / 4 - r;
                    }(0, a, u)), f = 0, l = u > 0 ? a - 4 : a;
                    for(r = 0; r < l; r += 4)e = n[t.charCodeAt(r)] << 18 | n[t.charCodeAt(r + 1)] << 12 | n[t.charCodeAt(r + 2)] << 6 | n[t.charCodeAt(r + 3)], c[f++] = e >> 16 & 255, c[f++] = e >> 8 & 255, c[f++] = 255 & e;
                    return 2 === u && (e = n[t.charCodeAt(r)] << 2 | n[t.charCodeAt(r + 1)] >> 4, c[f++] = 255 & e), 1 === u && (e = n[t.charCodeAt(r)] << 10 | n[t.charCodeAt(r + 1)] << 4 | n[t.charCodeAt(r + 2)] >> 2, c[f++] = e >> 8 & 255, c[f++] = 255 & e), c;
                }, e.fromByteArray = function(t) {
                    for(var e, n = t.length, i = n % 3, o = [], a = 16383, s = 0, c = n - i; s < c; s += a)o.push(u(t, s, s + a > c ? c : s + a));
                    return 1 === i ? (e = t[n - 1], o.push(r[e >> 2] + r[e << 4 & 63] + "==")) : 2 === i && (e = (t[n - 2] << 8) + t[n - 1], o.push(r[e >> 10] + r[e >> 4 & 63] + r[e << 2 & 63] + "=")), o.join("");
                };
                for(var r = [], n = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0; a < 64; ++a)r[a] = o[a], n[o.charCodeAt(a)] = a;
                function s(t) {
                    var e = t.length;
                    if (e % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                    var r = t.indexOf("=");
                    return -1 === r && (r = e), [
                        r,
                        r === e ? 0 : 4 - r % 4
                    ];
                }
                function u(t, e, n) {
                    for(var i, o, a = [], s = e; s < n; s += 3)i = (t[s] << 16 & 16711680) + (t[s + 1] << 8 & 65280) + (255 & t[s + 2]), a.push(r[(o = i) >> 18 & 63] + r[o >> 12 & 63] + r[o >> 6 & 63] + r[63 & o]);
                    return a.join("");
                }
                n["-".charCodeAt(0)] = 62, n["_".charCodeAt(0)] = 63;
            },
            6801: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e(t, r) {
                        var a;
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), (a = function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            r = r || "Cannot populate path `" + t + "` because it is not in your schema. Set the `strictPopulate` option to false to override."
                        ])).path = t, a;
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8213));
                Object.defineProperty(s.prototype, "name", {
                    value: "StrictPopulateError"
                }), t.exports = s;
            },
            6811: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? i(Object(r), !0).forEach(function(e) {
                            a(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function a(t, e, r) {
                    return (e = u(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function s(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, u(n.key), n);
                    }
                }
                function u(t) {
                    var e = function(t) {
                        if ("object" !== n(t) || null === t) return t;
                        var e = t[Symbol.toPrimitive];
                        if (void 0 !== e) {
                            var r = e.call(t, "string");
                            if ("object" !== n(r)) return r;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return String(t);
                    }(t);
                    return "symbol" === n(e) ? e : String(e);
                }
                var c = r(5832).Buffer, f = r(3779).inspect, l = f && f.custom || "inspect";
                t.exports = function() {
                    function t() {
                        !function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, t), this.head = null, this.tail = null, this.length = 0;
                    }
                    var e, r;
                    return e = t, r = [
                        {
                            key: "push",
                            value: function(t) {
                                var e = {
                                    data: t,
                                    next: null
                                };
                                this.length > 0 ? this.tail.next = e : this.head = e, this.tail = e, ++this.length;
                            }
                        },
                        {
                            key: "unshift",
                            value: function(t) {
                                var e = {
                                    data: t,
                                    next: this.head
                                };
                                0 === this.length && (this.tail = e), this.head = e, ++this.length;
                            }
                        },
                        {
                            key: "shift",
                            value: function() {
                                if (0 !== this.length) {
                                    var t = this.head.data;
                                    return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t;
                                }
                            }
                        },
                        {
                            key: "clear",
                            value: function() {
                                this.head = this.tail = null, this.length = 0;
                            }
                        },
                        {
                            key: "join",
                            value: function(t) {
                                if (0 === this.length) return "";
                                for(var e = this.head, r = "" + e.data; e = e.next;)r += t + e.data;
                                return r;
                            }
                        },
                        {
                            key: "concat",
                            value: function(t) {
                                if (0 === this.length) return c.alloc(0);
                                for(var e, r, n, i = c.allocUnsafe(t >>> 0), o = this.head, a = 0; o;)e = o.data, r = i, n = a, c.prototype.copy.call(e, r, n), a += o.data.length, o = o.next;
                                return i;
                            }
                        },
                        {
                            key: "consume",
                            value: function(t, e) {
                                var r;
                                return t < this.head.data.length ? (r = this.head.data.slice(0, t), this.head.data = this.head.data.slice(t)) : r = t === this.head.data.length ? this.shift() : e ? this._getString(t) : this._getBuffer(t), r;
                            }
                        },
                        {
                            key: "first",
                            value: function() {
                                return this.head.data;
                            }
                        },
                        {
                            key: "_getString",
                            value: function(t) {
                                var e = this.head, r = 1, n = e.data;
                                for(t -= n.length; e = e.next;){
                                    var i = e.data, o = t > i.length ? i.length : t;
                                    if (o === i.length ? n += i : n += i.slice(0, t), 0 == (t -= o)) {
                                        o === i.length ? (++r, e.next ? this.head = e.next : this.head = this.tail = null) : (this.head = e, e.data = i.slice(o));
                                        break;
                                    }
                                    ++r;
                                }
                                return this.length -= r, n;
                            }
                        },
                        {
                            key: "_getBuffer",
                            value: function(t) {
                                var e = c.allocUnsafe(t), r = this.head, n = 1;
                                for(r.data.copy(e), t -= r.data.length; r = r.next;){
                                    var i = r.data, o = t > i.length ? i.length : t;
                                    if (i.copy(e, e.length - t, 0, o), 0 == (t -= o)) {
                                        o === i.length ? (++n, r.next ? this.head = r.next : this.head = this.tail = null) : (this.head = r, r.data = i.slice(o));
                                        break;
                                    }
                                    ++n;
                                }
                                return this.length -= n, e;
                            }
                        },
                        {
                            key: l,
                            value: function(t, e) {
                                return f(this, o(o({}, e), {}, {
                                    depth: 0,
                                    customInspect: !1
                                }));
                            }
                        }
                    ], s(e.prototype, r), Object.defineProperty(e, "prototype", {
                        writable: !1
                    }), t;
                }();
            },
            6814: (t)=>{
                "use strict";
                t.exports = function(t) {
                    for(var e = {}, r = 0, n = Object.keys(t); r < n.length; r++){
                        var i = n[r];
                        if (-1 !== i.indexOf(".")) for(var o = i.split("."), a = o[0], s = 0; s < o.length; ++s)e[a] = 1, s + 1 < o.length && (a = a + "." + o[s + 1]);
                        else e[i] = 1;
                    }
                    return e;
                };
            },
            6867: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function o(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, a(n.key), n);
                    }
                }
                function a(t) {
                    var e = function(t) {
                        if ("object" != n(t) || !t) return t;
                        var e = t[Symbol.toPrimitive];
                        if (void 0 !== e) {
                            var r = e.call(t, "string");
                            if ("object" != n(r)) return r;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return String(t);
                    }(t);
                    return "symbol" == n(e) ? e : e + "";
                }
                function s() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (s = function() {
                        return !!t;
                    })();
                }
                function u() {
                    return u = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(t, e, r) {
                        var n = function(t, e) {
                            for(; !({}).hasOwnProperty.call(t, e) && null !== (t = c(t)););
                            return t;
                        }(t, e);
                        if (n) {
                            var i = Object.getOwnPropertyDescriptor(n, e);
                            return i.get ? i.get.call(arguments.length < 3 ? t : r) : i.value;
                        }
                    }, u.apply(null, arguments);
                }
                function c(t) {
                    return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, c(t);
                }
                function f(t, e) {
                    return f = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, f(t, e);
                }
                var l = r(2081), h = r(241), p = r(6426), d = r(4327), y = function(t) {
                    function e(t, r) {
                        var i;
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), (i = function(t, e, r) {
                            return e = c(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, s() ? Reflect.construct(e, r || [], c(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            t,
                            r,
                            "Map"
                        ])).$isSchemaMap = !0, i;
                    }
                    var a, h;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && f(t, e);
                    }(e, t), a = e, h = [
                        {
                            key: "set",
                            value: function(t, e) {
                                return p.set(t, e);
                            }
                        },
                        {
                            key: "cast",
                            value: function(t, e, n) {
                                if (t instanceof l) return t;
                                var o = this.path;
                                if (n) {
                                    var a = new l({}, o, e, this.$__schemaType);
                                    if (t instanceof r.g.Map) {
                                        var s, u = function(t, e) {
                                            var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                                            if (!r) {
                                                if (Array.isArray(t) || (r = function(t, e) {
                                                    if (t) {
                                                        if ("string" == typeof t) return i(t, e);
                                                        var r = ({}).toString.call(t).slice(8, -1);
                                                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? i(t, e) : void 0;
                                                    }
                                                }(t)) || e && t && "number" == typeof t.length) {
                                                    r && (t = r);
                                                    var n = 0, o = function() {};
                                                    return {
                                                        s: o,
                                                        n: function() {
                                                            return n >= t.length ? {
                                                                done: !0
                                                            } : {
                                                                done: !1,
                                                                value: t[n++]
                                                            };
                                                        },
                                                        e: function(t) {
                                                            throw t;
                                                        },
                                                        f: o
                                                    };
                                                }
                                                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                            }
                                            var a, s = !0, u = !1;
                                            return {
                                                s: function() {
                                                    r = r.call(t);
                                                },
                                                n: function() {
                                                    var t = r.next();
                                                    return s = t.done, t;
                                                },
                                                e: function(t) {
                                                    u = !0, a = t;
                                                },
                                                f: function() {
                                                    try {
                                                        s || null == r.return || r.return();
                                                    } finally{
                                                        if (u) throw a;
                                                    }
                                                }
                                            };
                                        }(t.keys());
                                        try {
                                            for(u.s(); !(s = u.n()).done;){
                                                var c = s.value, f = t.get(c);
                                                f = null == f ? a.$__schemaType._castNullish(f) : a.$__schemaType.cast(f, e, !0, null, {
                                                    path: o + "." + c
                                                }), a.$init(c, f);
                                            }
                                        } catch (t) {
                                            u.e(t);
                                        } finally{
                                            u.f();
                                        }
                                    } else for(var h = 0, p = Object.keys(t); h < p.length; h++){
                                        var d = p[h], y = t[d];
                                        y = null == y ? a.$__schemaType._castNullish(y) : a.$__schemaType.cast(y, e, !0, null, {
                                            path: o + "." + d
                                        }), a.$init(d, y);
                                    }
                                    return a;
                                }
                                return new l(t, o, e, this.$__schemaType);
                            }
                        },
                        {
                            key: "clone",
                            value: function() {
                                var t, r, n, i = (t = e, r = this, "function" == typeof (n = u(c(1 & 3 ? t.prototype : t), "clone", r)) ? function(t) {
                                    return n.apply(r, t);
                                } : n)([]);
                                return null != this.$__schemaType && (i.$__schemaType = this.$__schemaType.clone()), i;
                            }
                        },
                        {
                            key: "getEmbeddedSchemaType",
                            value: function() {
                                return this.$__schemaType;
                            }
                        },
                        {
                            key: "toJSONSchema",
                            value: function(t) {
                                var e = null == t ? void 0 : t.useBsonType, r = this.getEmbeddedSchemaType(), n = this.options.required && "function" != typeof this.options.required, i = d("object", "object", e, n);
                                return i.additionalProperties = r.toJSONSchema(t), i;
                            }
                        }
                    ], h && o(a.prototype, h), Object.defineProperty(a, "prototype", {
                        writable: !1
                    }), a;
                }(p);
                y.schemaName = "Map", y.prototype.OptionsConstructor = h, y.defaultOptions = {}, t.exports = y;
            },
            6871: (t, e, r)=>{
                t.exports = r(3550).EventEmitter;
            },
            6876: (t, e, r)=>{
                var n = r(5832).Buffer;
                t.exports = function(t, e) {
                    for(var r = Math.min(t.length, e.length), i = new n(r), o = 0; o < r; ++o)i[o] = t[o] ^ e[o];
                    return i;
                };
            },
            6934: (t, e, r)=>{
                "use strict";
                var n = r(2859), i = r(6706), o = r(3528);
                function a(t) {
                    if (!(this instanceof a)) return new a(t);
                    this.hash = t.hash, this.predResist = !!t.predResist, this.outLen = this.hash.outSize, this.minEntropy = t.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                    var e = i.toArray(t.entropy, t.entropyEnc || "hex"), r = i.toArray(t.nonce, t.nonceEnc || "hex"), n = i.toArray(t.pers, t.persEnc || "hex");
                    o(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e, r, n);
                }
                t.exports = a, a.prototype._init = function(t, e, r) {
                    var n = t.concat(e).concat(r);
                    this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                    for(var i = 0; i < this.V.length; i++)this.K[i] = 0, this.V[i] = 1;
                    this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656;
                }, a.prototype._hmac = function() {
                    return new n.hmac(this.hash, this.K);
                }, a.prototype._update = function(t) {
                    var e = this._hmac().update(this.V).update([
                        0
                    ]);
                    t && (e = e.update(t)), this.K = e.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([
                        1
                    ]).update(t).digest(), this.V = this._hmac().update(this.V).digest());
                }, a.prototype.reseed = function(t, e, r, n) {
                    "string" != typeof e && (n = r, r = e, e = null), t = i.toArray(t, e), r = i.toArray(r, n), o(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t.concat(r || [])), this._reseed = 1;
                }, a.prototype.generate = function(t, e, r, n) {
                    if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                    "string" != typeof e && (n = r, r = e, e = null), r && (r = i.toArray(r, n || "hex"), this._update(r));
                    for(var o = []; o.length < t;)this.V = this._hmac().update(this.V).digest(), o = o.concat(this.V);
                    var a = o.slice(0, t);
                    return this._update(r), this._reseed++, i.encode(a, e);
                };
            },
            6936: (t, e, r)=>{
                "use strict";
                var n = r(9732).Buffer, i = r(7775).Transform;
                function o(t) {
                    i.call(this), this._block = n.allocUnsafe(t), this._blockSize = t, this._blockOffset = 0, this._length = [
                        0,
                        0,
                        0,
                        0
                    ], this._finalized = !1;
                }
                r(1679)(o, i), o.prototype._transform = function(t, e, r) {
                    var n = null;
                    try {
                        this.update(t, e);
                    } catch (t) {
                        n = t;
                    }
                    r(n);
                }, o.prototype._flush = function(t) {
                    var e = null;
                    try {
                        this.push(this.digest());
                    } catch (t) {
                        e = t;
                    }
                    t(e);
                };
                var a = "undefined" != typeof Uint8Array, s = "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array && ArrayBuffer.isView && (n.prototype instanceof Uint8Array || n.TYPED_ARRAY_SUPPORT);
                o.prototype.update = function(t, e) {
                    if (this._finalized) throw new Error("Digest already called");
                    t = function(t, e) {
                        if (t instanceof n) return t;
                        if ("string" == typeof t) return n.from(t, e);
                        if (s && ArrayBuffer.isView(t)) {
                            if (0 === t.byteLength) return n.alloc(0);
                            var r = n.from(t.buffer, t.byteOffset, t.byteLength);
                            if (r.byteLength === t.byteLength) return r;
                        }
                        if (a && t instanceof Uint8Array) return n.from(t);
                        if (n.isBuffer(t) && t.constructor && "function" == typeof t.constructor.isBuffer && t.constructor.isBuffer(t)) return n.from(t);
                        throw new TypeError('The "data" argument must be of type string or an instance of Buffer, TypedArray, or DataView.');
                    }(t, e);
                    for(var r = this._block, i = 0; this._blockOffset + t.length - i >= this._blockSize;){
                        for(var o = this._blockOffset; o < this._blockSize;)r[o++] = t[i++];
                        this._update(), this._blockOffset = 0;
                    }
                    for(; i < t.length;)r[this._blockOffset++] = t[i++];
                    for(var u = 0, c = 8 * t.length; c > 0; ++u)this._length[u] += c, (c = this._length[u] / 4294967296 | 0) > 0 && (this._length[u] -= 4294967296 * c);
                    return this;
                }, o.prototype._update = function() {
                    throw new Error("_update is not implemented");
                }, o.prototype.digest = function(t) {
                    if (this._finalized) throw new Error("Digest already called");
                    this._finalized = !0;
                    var e = this._digest();
                    void 0 !== t && (e = e.toString(t)), this._block.fill(0), this._blockOffset = 0;
                    for(var r = 0; r < 4; ++r)this._length[r] = 0;
                    return e;
                }, o.prototype._digest = function() {
                    throw new Error("_digest is not implemented");
                }, t.exports = o;
            },
            6948: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, a(n.key), n);
                    }
                }
                function o(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), t;
                }
                function a(t) {
                    var e = function(t) {
                        if ("object" != n(t) || !t) return t;
                        var e = t[Symbol.toPrimitive];
                        if (void 0 !== e) {
                            var r = e.call(t, "string");
                            if ("object" != n(r)) return r;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return String(t);
                    }(t);
                    return "symbol" == n(e) ? e : e + "";
                }
                var s = r(4450), u = o(function t(e) {
                    if (function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, t), this._docs = {}, this._childDocs = [], null != e && (e = s(e), Object.assign(this, e), "object" === n(e.subPopulate) && (this.populate = e.subPopulate), null != e.perDocumentLimit && null != e.limit)) throw new Error("Can not use `limit` and `perDocumentLimit` at the same time. Path: `" + e.path + "`.");
                });
                t.exports = u;
            },
            6949: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, o(n.key), n);
                    }
                }
                function o(t) {
                    var e = function(t) {
                        if ("object" != n(t) || !t) return t;
                        var e = t[Symbol.toPrimitive];
                        if (void 0 !== e) {
                            var r = e.call(t, "string");
                            if ("object" != n(r)) return r;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return String(t);
                    }(t);
                    return "symbol" == n(e) ? e : e + "";
                }
                function a() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (a = function() {
                        return !!t;
                    })();
                }
                function s(t) {
                    return s = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, s(t);
                }
                function u(t, e) {
                    return u = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, u(t, e);
                }
                var c = r(8213), f = r(5879), l = r(7352), h = r(1875), p = function(t) {
                    function e(t) {
                        var r, i;
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), (r = function(t, e, r) {
                            return e = s(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, a() ? Reflect.construct(e, r || [], s(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            i = "model" === f(t) ? t.constructor.modelName + " validation failed" : "Validation failed"
                        ])).errors = {}, r._message = i, t && (t.$errors = r.errors), r;
                    }
                    var r, o;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && u(t, e);
                    }(e, t), r = e, o = [
                        {
                            key: "toString",
                            value: function() {
                                return this.name + ": " + h(this);
                            }
                        },
                        {
                            key: "inspect",
                            value: function() {
                                return Object.assign(new Error(this.message), this);
                            }
                        },
                        {
                            key: "addError",
                            value: function(t, r) {
                                if (r instanceof e) for(var n = r.errors, i = 0, o = Object.keys(n); i < o.length; i++){
                                    var a = o[i];
                                    this.addError("".concat(t, ".").concat(a), n[a]);
                                }
                                else this.errors[t] = r, this.message = this._message + ": " + h(this);
                            }
                        }
                    ], i(r.prototype, o), Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(c);
                l.inspect.custom && (p.prototype[l.inspect.custom] = p.prototype.inspect), Object.defineProperty(p.prototype, "toJSON", {
                    enumerable: !1,
                    writable: !1,
                    configurable: !0,
                    value: function() {
                        return Object.assign({}, this, {
                            name: this.name,
                            message: this.message
                        });
                    }
                }), Object.defineProperty(p.prototype, "name", {
                    value: "ValidationError"
                }), t.exports = p;
            },
            6996: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e(t, r, a) {
                        var s;
                        !function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e);
                        var u = a.join(", ");
                        return (s = function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            'No matching document found for id "' + t._doc._id + '" version ' + r + ' modifiedPaths "' + u + '"'
                        ])).version = r, s.modifiedPaths = a, s;
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8213));
                Object.defineProperty(s.prototype, "name", {
                    value: "VersionError"
                }), t.exports = s;
            },
            7032: (t, e, r)=>{
                "use strict";
                var n = r(9732).Buffer, i = r(7799), o = r(7312).ec, a = r(5053), s = r(4589);
                function u(t, e) {
                    if (t.cmpn(0) <= 0) throw new Error("invalid sig");
                    if (t.cmp(e) >= 0) throw new Error("invalid sig");
                }
                t.exports = function(t, e, r, c, f) {
                    var l = a(r);
                    if ("ec" === l.type) {
                        if ("ecdsa" !== c && "ecdsa/rsa" !== c) throw new Error("wrong public key type");
                        return function(t, e, r) {
                            var n = s[r.data.algorithm.curve.join(".")];
                            if (!n) throw new Error("unknown curve " + r.data.algorithm.curve.join("."));
                            var i = new o(n), a = r.data.subjectPrivateKey.data;
                            return i.verify(e, t, a);
                        }(t, e, l);
                    }
                    if ("dsa" === l.type) {
                        if ("dsa" !== c) throw new Error("wrong public key type");
                        return function(t, e, r) {
                            var n = r.data.p, o = r.data.q, s = r.data.g, c = r.data.pub_key, f = a.signature.decode(t, "der"), l = f.s, h = f.r;
                            u(l, o), u(h, o);
                            var p = i.mont(n), d = l.invm(o);
                            return 0 === s.toRed(p).redPow(new i(e).mul(d).mod(o)).fromRed().mul(c.toRed(p).redPow(h.mul(d).mod(o)).fromRed()).mod(n).mod(o).cmp(h);
                        }(t, e, l);
                    }
                    if ("rsa" !== c && "ecdsa/rsa" !== c) throw new Error("wrong public key type");
                    e = n.concat([
                        f,
                        e
                    ]);
                    for(var h = l.modulus.byteLength(), p = [
                        1
                    ], d = 0; e.length + p.length + 2 < h;)p.push(255), d += 1;
                    p.push(0);
                    for(var y = -1; ++y < e.length;)p.push(e[y]);
                    p = n.from(p);
                    var b = i.mont(l.modulus);
                    t = (t = new i(t).toRed(b)).redPow(new i(l.publicExponent)), t = n.from(t.fromRed().toArray());
                    var m = d < 8 ? 1 : 0;
                    for(h = Math.min(t.length, p.length), t.length !== p.length && (m = 1), y = -1; ++y < h;)m |= t[y] ^ p[y];
                    return 0 === m;
                };
            },
            7045: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? i(Object(r), !0).forEach(function(e) {
                            a(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function a(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var s = r(6426), u = s.CastError, c = r(9553), f = r(4327), l = r(3305);
                function h(t, e) {
                    s.call(this, t, e, "Decimal128");
                }
                function p(t) {
                    return this.cast(t);
                }
                h.schemaName = "Decimal128", h.defaultOptions = {}, h.prototype = Object.create(s.prototype), h.prototype.constructor = h, h._cast = c, h.set = s.set, h.setters = [], h.get = s.get, h.cast = function(t) {
                    return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
                }, h._defaultCaster = function(t) {
                    if (null != t && !l(t, "Decimal128")) throw new Error;
                    return t;
                }, h._checkRequired = function(t) {
                    return l(t, "Decimal128");
                }, h.checkRequired = s.checkRequired, h.prototype.checkRequired = function(t, e) {
                    return s._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : h.checkRequired())(t);
                }, h.prototype.cast = function(t, e, r, n, i) {
                    if (s._isRef(this, t, e, r)) return l(t, "Decimal128") ? t : this._castRef(t, e, r, i);
                    var o;
                    o = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : h.cast();
                    try {
                        return o(t);
                    } catch (e) {
                        throw new u("Decimal128", t, this.path, e, this);
                    }
                }, h.prototype.$conditionalHandlers = o(o({}, s.prototype.$conditionalHandlers), {}, {
                    $gt: p,
                    $gte: p,
                    $lt: p,
                    $lte: p
                }), h.prototype.toJSONSchema = function(t) {
                    var e = this.options.required && "function" != typeof this.options.required;
                    return f("string", "decimal", null == t ? void 0 : t.useBsonType, e);
                }, t.exports = h;
            },
            7058: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? i(Object(r), !0).forEach(function(e) {
                            a(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function a(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != s(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != s(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == s(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function s(t) {
                    return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, s(t);
                }
                function u(t, e) {
                    return function(t) {
                        if (Array.isArray(t)) return t;
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, i, o, a, s = [], u = !0, c = !1;
                            try {
                                if (o = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1;
                                } else for(; !(u = (n = o.call(r)).done) && (s.push(n.value), s.length !== e); u = !0);
                            } catch (t) {
                                c = !0, i = t;
                            } finally{
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return;
                                } finally{
                                    if (c) throw i;
                                }
                            }
                            return s;
                        }
                    }(t, e) || f(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }();
                }
                function c(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = f(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, i = function() {};
                            return {
                                s: i,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: i
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var o, a = !0, s = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return a = t.done, t;
                        },
                        e: function(t) {
                            s = !0, o = t;
                        },
                        f: function() {
                            try {
                                a || null == r.return || r.return();
                            } finally{
                                if (s) throw o;
                            }
                        }
                    };
                }
                function f(t, e) {
                    if (t) {
                        if ("string" == typeof t) return l(t, e);
                        var r = ({}).toString.call(t).slice(8, -1);
                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? l(t, e) : void 0;
                    }
                }
                function l(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var h, p = r(3550).EventEmitter, d = r(8297), y = r(8213), b = r(6426), m = r(8879), v = r(2069), g = r(622), _ = r(486), w = r(4450), S = r(3703), O = r(5879), j = r(2003), $ = r(5289), E = r(3381), A = r(1199), P = r(9539), x = r(5678), k = r(7834), M = r(2097), T = r(8768), B = r(533), I = /\.\d+(\.|$)/, R = r(1260).Ut, N = r(4957).middlewareFunctions, D = R.concat(N).reduce(function(t, e) {
                    return t.add(e);
                }, new Set), L = T.isPOJO, C = 0, U = /^\d+$/;
                function q(t, e) {
                    if (!(this instanceof q)) return new q(t, e);
                    if (this.obj = t, this.paths = {}, this.aliases = {}, this.subpaths = {}, this.virtuals = {}, this.singleNestedPaths = {}, this.nested = {}, this.inherits = {}, this.callQueue = [], this._indexes = [], this._searchIndexes = [], this.methods = e && e.methods || {}, this.methodOptions = {}, this.statics = e && e.statics || {}, this.tree = {}, this.query = e && e.query || {}, this.childSchemas = [], this.plugins = [], this.$id = ++C, this.mapPaths = [], this.s = {
                        hooks: new d
                    }, this.options = this.defaultOptions(e), Array.isArray(t)) {
                        var r, n = c(t);
                        try {
                            for(n.s(); !(r = n.n()).done;){
                                var i = r.value;
                                this.add(i);
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                    } else t && this.add(t);
                    if (e && e.virtuals) for(var o = e.virtuals, a = 0, s = Object.keys(o); a < s.length; a++){
                        var u = s[a], f = o[u].options ? o[u].options : void 0, l = this.virtual(u, f);
                        o[u].get && l.get(o[u].get), o[u].set && l.set(o[u].set);
                    }
                    var h = t && t._id && T.isObject(t._id);
                    !this.paths._id && this.options._id && !h && _(this), this.setupTimestamp(this.options.timestamps);
                }
                function F(t, e) {
                    for(var r = 0, n = Object.keys(e); r < n.length; r++){
                        var i = n[r], o = null;
                        if (null != e[i]) o = e[i];
                        else {
                            var a = S(t.paths[i], "options");
                            if (null == a) continue;
                            o = a.alias;
                        }
                        if (o) {
                            var s = t.paths[i].path;
                            if (Array.isArray(o)) {
                                var u, f = c(o);
                                try {
                                    for(f.s(); !(u = f.n()).done;){
                                        var l = u.value;
                                        if ("string" != typeof l) throw new Error("Invalid value for alias option on " + s + ", got " + l);
                                        t.aliases[l] = s, t.virtual(l).get(function(t) {
                                            return function() {
                                                return "function" == typeof this.get ? this.get(t) : this[t];
                                            };
                                        }(s)).set(function(t) {
                                            return function(e) {
                                                return this.$set(t, e);
                                            };
                                        }(s));
                                    }
                                } catch (t) {
                                    f.e(t);
                                } finally{
                                    f.f();
                                }
                            } else {
                                if ("string" != typeof o) throw new Error("Invalid value for alias option on " + s + ", got " + o);
                                t.aliases[o] = s, t.virtual(o).get(function(t) {
                                    return function() {
                                        return "function" == typeof this.get ? this.get(t) : this[t];
                                    };
                                }(s)).set(function(t) {
                                    return function(e) {
                                        return this.$set(t, e);
                                    };
                                }(s));
                            }
                        }
                    }
                }
                q.prototype = Object.create(p.prototype), q.prototype.constructor = q, q.prototype.instanceOfSchema = !0, Object.defineProperty(q.prototype, "$schemaType", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !0
                }), Object.defineProperty(q.prototype, "childSchemas", {
                    configurable: !1,
                    enumerable: !0,
                    writable: !0
                }), Object.defineProperty(q.prototype, "virtuals", {
                    configurable: !1,
                    enumerable: !0,
                    writable: !0
                }), q.prototype.obj, q.prototype.paths, q.prototype.tree, q.prototype.clone = function() {
                    var t = this, e = this._clone();
                    return e.on("init", function(e) {
                        return t.emit("init", e);
                    }), e;
                }, q.prototype._clone = function(t) {
                    var e = new (t = t || (null == this.base ? q : this.base.Schema))({}, this._userProvidedOptions);
                    e.base = this.base, e.obj = this.obj, e.options = w(this.options), e.callQueue = this.callQueue.map(function(t) {
                        return t;
                    }), e.methods = w(this.methods), e.methodOptions = w(this.methodOptions), e.statics = w(this.statics), e.query = w(this.query), e.plugins = Array.prototype.slice.call(this.plugins), e._indexes = w(this._indexes), e._searchIndexes = w(this._searchIndexes), e.s.hooks = this.s.hooks.clone(), e.tree = w(this.tree), e.paths = Object.fromEntries(Object.entries(this.paths).map(function(t) {
                        var e = u(t, 2);
                        return [
                            e[0],
                            e[1].clone()
                        ];
                    })), e.nested = w(this.nested), e.subpaths = w(this.subpaths);
                    for(var r = 0, n = Object.values(e.paths); r < n.length; r++){
                        var i = n[r];
                        if (i.$isSingleNested) {
                            for(var o = i.path, a = 0, s = Object.keys(i.schema.paths); a < s.length; a++){
                                var c = s[a];
                                e.singleNestedPaths[o + "." + c] = i.schema.paths[c];
                            }
                            for(var f = 0, l = Object.keys(i.schema.singleNestedPaths); f < l.length; f++){
                                var h = l[f];
                                e.singleNestedPaths[o + "." + h] = i.schema.singleNestedPaths[h];
                            }
                            for(var p = 0, d = Object.keys(i.schema.subpaths); p < d.length; p++){
                                var y = d[p];
                                e.singleNestedPaths[o + "." + y] = i.schema.subpaths[y];
                            }
                            for(var b = 0, m = Object.keys(i.schema.nested); b < m.length; b++){
                                var v = m[b];
                                e.singleNestedPaths[o + "." + v] = "nested";
                            }
                        }
                    }
                    return e._gatherChildSchemas(), e.virtuals = w(this.virtuals), e.$globalPluginsApplied = this.$globalPluginsApplied, e.$isRootDiscriminator = this.$isRootDiscriminator, e.$implicitlyCreated = this.$implicitlyCreated, e.$id = ++C, e.$originalSchemaId = this.$id, e.mapPaths = [].concat(this.mapPaths), null != this.discriminatorMapping && (e.discriminatorMapping = Object.assign({}, this.discriminatorMapping)), null != this.discriminators && (e.discriminators = Object.assign({}, this.discriminators)), null != this._applyDiscriminators && (e._applyDiscriminators = new Map(this._applyDiscriminators)), e.aliases = Object.assign({}, this.aliases), e;
                }, q.prototype.pick = function(t, e) {
                    var r = new q({}, e || this.options);
                    if (!Array.isArray(t)) throw new y('Schema#pick() only accepts an array argument, got "' + s(t) + '"');
                    var n, i = c(t);
                    try {
                        for(i.s(); !(n = i.n()).done;){
                            var o = n.value;
                            if (this.nested[o]) r.add(a({}, o, S(this.tree, o)));
                            else {
                                var u = this.path(o);
                                if (null == u) throw new y("Path `" + o + "` is not in the schema");
                                r.add(a({}, o, u));
                            }
                        }
                    } catch (t) {
                        i.e(t);
                    } finally{
                        i.f();
                    }
                    return r;
                }, q.prototype.omit = function(t, e) {
                    var r = new q(this, e || this.options);
                    if (!Array.isArray(t)) throw new y('Schema#omit() only accepts an array argument, got "' + s(t) + '"');
                    for(var n in r.remove(t), r.singleNestedPaths)t.includes(n) && delete r.singleNestedPaths[n];
                    return r;
                }, q.prototype.defaultOptions = function(t) {
                    this._userProvidedOptions = null == t ? {} : w(t);
                    var e = this.base && this.base.options || {};
                    if ((t = o({
                        strict: !("strict" in e) || e.strict,
                        strictQuery: "strictQuery" in e && e.strictQuery,
                        bufferCommands: !0,
                        capped: !1,
                        versionKey: "__v",
                        optimisticConcurrency: !1,
                        minimize: !0,
                        autoIndex: null,
                        discriminatorKey: "__t",
                        shardKey: null,
                        read: null,
                        validateBeforeSave: !0,
                        validateModifiedOnly: !1,
                        _id: !0,
                        id: !("id" in e) || e.id,
                        typeKey: "type"
                    }, t)).versionKey && "string" != typeof t.versionKey) throw new y("`versionKey` must be falsy or string, got `" + s(t.versionKey) + "`");
                    if ("string" == typeof t.read ? t.read = $(t.read) : Array.isArray(t.read) && "string" == typeof t.read[0] && (t.read = {
                        mode: $(t.read[0]),
                        tags: t.read[1]
                    }), t.optimisticConcurrency && !t.versionKey) throw new y("Must set `versionKey` if using `optimisticConcurrency`");
                    return t;
                }, q.prototype.discriminator = function(t, e, r) {
                    return this._applyDiscriminators = this._applyDiscriminators || new Map, this._applyDiscriminators.set(t, {
                        schema: e,
                        options: r
                    }), this;
                }, q.prototype._defaultToObjectOptions = function(t) {
                    var e = t ? "toJSON" : "toObject";
                    if (this._defaultToObjectOptionsMap && this._defaultToObjectOptionsMap[e]) return this._defaultToObjectOptionsMap[e];
                    var r = this.base && this.base.options && this.base.options[e] || {}, n = this.options[e] || {}, i = Object.assign({}, r, n);
                    return this._defaultToObjectOptionsMap = this._defaultToObjectOptionsMap || {}, this._defaultToObjectOptionsMap[e] = i, i;
                }, q.prototype.add = function(t, e) {
                    if (t instanceof q || null != t && t.instanceOfSchema) return P(this, t), this;
                    if (!1 === t._id && null == e && (this.options._id = !1), "__proto__." === (e = e || "") || "constructor." === e || "prototype." === e) return this;
                    for(var r = Object.keys(t), n = this.options.typeKey, i = 0, o = r; i < o.length; i++){
                        var c = o[i];
                        if (!T.specialProperties.has(c)) {
                            var f = e + c, l = t[c];
                            if (null == l) throw new TypeError("Invalid value for schema path `" + f + '`, got value "' + l + '"');
                            if ("_id" !== c || !1 !== l) {
                                var h = !1;
                                if ("string" == typeof l && (h = null != (null != this.base ? this.base.Schema.Types : q.Types)[l.charAt(0).toUpperCase() + l.substring(1)]), "_id" !== c && ("object" !== s(l) && "function" != typeof l && !h || null == l)) throw new TypeError("Invalid schema configuration: `".concat(l, "` is not ") + "a valid type at path `".concat(c, "`. See ") + "https://bit.ly/mongoose-schematypes for a list of valid schema types.");
                                if (l instanceof g || "VirtualType" === (l.constructor && l.constructor.name || null)) this.virtual(l);
                                else {
                                    if (Array.isArray(l) && 1 === l.length && null == l[0]) throw new TypeError("Invalid value for schema Array path `" + f + '`, got value "' + l[0] + '"');
                                    if (L(l) || l instanceof m) {
                                        if (Object.keys(l).length < 1) e && (this.nested[e.substring(0, e.length - 1)] = !0), this.path(f, l);
                                        else if (!l[n] || "type" === n && L(l.type) && l.type.type) this.nested[f] = !0, this.add(l, f + ".");
                                        else {
                                            var p = l[n];
                                            if (L(p) && Object.keys(p).length > 0) {
                                                e && (this.nested[e.substring(0, e.length - 1)] = !0);
                                                var d = {};
                                                this._userProvidedOptions.typeKey && (d.typeKey = this._userProvidedOptions.typeKey), null != this._userProvidedOptions.strict && (d.strict = this._userProvidedOptions.strict), null != this._userProvidedOptions.toObject && (d.toObject = T.omit(this._userProvidedOptions.toObject, [
                                                    "transform"
                                                ])), null != this._userProvidedOptions.toJSON && (d.toJSON = T.omit(this._userProvidedOptions.toJSON, [
                                                    "transform"
                                                ]));
                                                var y = new q(p, d);
                                                y.$implicitlyCreated = !0;
                                                var b = Object.assign({}, l, a({}, n, y));
                                                this.path(e + c, b);
                                            } else if (e && (this.nested[e.substring(0, e.length - 1)] = !0), this.path(e + c, l), null != l && !l.instanceOfSchema && T.isPOJO(l.discriminators)) {
                                                var v = this.path(e + c);
                                                for(var _ in l.discriminators)v.discriminator(_, l.discriminators[_]);
                                            }
                                        }
                                    } else if (e && (this.nested[e.substring(0, e.length - 1)] = !0), this.path(e + c, l), null != l[0] && !l[0].instanceOfSchema && T.isPOJO(l[0].discriminators)) {
                                        var w = this.path(e + c);
                                        for(var S in l[0].discriminators)w.discriminator(S, l[0].discriminators[S]);
                                    }
                                }
                            }
                        }
                    }
                    var O = Object.fromEntries(Object.entries(t).map(function(t) {
                        var r = u(t, 1)[0];
                        return [
                            e + r,
                            null
                        ];
                    }));
                    return F(this, O), this;
                }, q.prototype.alias = function(t, e) {
                    return F(this, a({}, t, e)), this;
                }, q.prototype.removeIndex = function(t) {
                    if (arguments.length > 1) throw new Error("removeIndex() takes only 1 argument");
                    if ("object" !== s(t) && "string" != typeof t) throw new Error("removeIndex() may only take either an object or a string as an argument");
                    if ("object" === s(t)) for(var e = this._indexes.length - 1; e >= 0; --e)A(this._indexes[e][0], t) && this._indexes.splice(e, 1);
                    else for(var r = this._indexes.length - 1; r >= 0; --r)null != this._indexes[r][1] && this._indexes[r][1].name === t && this._indexes.splice(r, 1);
                    return this;
                }, q.prototype.clearIndexes = function() {
                    return this._indexes.length = 0, this;
                }, q.prototype.searchIndex = function(t) {
                    return this._searchIndexes.push(t), this;
                }, q.reserved = Object.create(null), q.prototype.reserved = q.reserved;
                var V = q.reserved;
                function z(t) {
                    return /\.\d+/.test(t) ? t.replace(/\.\d+\./g, ".$.").replace(/\.\d+$/, ".$") : t;
                }
                function K(t, e) {
                    if (0 === t.mapPaths.length) return null;
                    var r, n = c(t.mapPaths);
                    try {
                        for(n.s(); !(r = n.n()).done;){
                            var i = r.value.path;
                            if (new RegExp("^" + i.replace(/\.\$\*/g, "\\.[^.]+") + "$").test(e)) return t.paths[i];
                        }
                    } catch (t) {
                        n.e(t);
                    } finally{
                        n.f();
                    }
                    return null;
                }
                function H(t, e, r) {
                    var n = e.split(/\.(\d+)\.|\.(\d+)$/).filter(Boolean);
                    if (n.length < 2) return t.paths.hasOwnProperty(n[0]) ? t.paths[n[0]] : "adhocOrUndefined";
                    var i = t.path(n[0]), o = !1;
                    if (!i) return "adhocOrUndefined";
                    for(var a = n.length - 1, s = 1; s < n.length; ++s){
                        o = !1;
                        var u = n[s];
                        if (s === a && i && !/\D/.test(u)) {
                            i = i.$isMongooseDocumentArray ? i.$embeddedSchemaType : i instanceof h.Array ? i.caster : void 0;
                            break;
                        }
                        if (/\D/.test(u)) {
                            if (!i || !i.schema) {
                                i = void 0;
                                break;
                            }
                            o = "nested" === i.schema.pathType(u), i = i.schema.path(u);
                        } else i instanceof h.Array && s !== a && (i = i.caster);
                    }
                    return t.subpaths[r] = i, i ? "real" : o ? "nested" : "adhocOrUndefined";
                }
                function W(t, e) {
                    var r, n = c(t.childSchemas);
                    try {
                        for(n.s(); !(r = n.n()).done;){
                            var i = r.value.schema;
                            i.$implicitlyCreated && (Object.assign(i.options, e), W(i, e));
                        }
                    } catch (t) {
                        n.e(t);
                    } finally{
                        n.f();
                    }
                }
                V.prototype = V.emit = V.listeners = V.removeListener = V.collection = V.errors = V.get = V.init = V.isModified = V.isNew = V.populated = V.remove = V.save = V.toObject = V.validate = 1, V.collection = 1, q.prototype.path = function(t, e) {
                    if (void 0 === e) {
                        if (null != this.paths[t]) return this.paths[t];
                        var r = z(t), n = function(t, e, r) {
                            if (t.paths.hasOwnProperty(e)) return t.paths[e];
                            if (t.subpaths.hasOwnProperty(r)) {
                                var n = t.subpaths[r];
                                if ("nested" === n) return;
                                return n;
                            }
                            if (t.singleNestedPaths.hasOwnProperty(r) && "object" === s(t.singleNestedPaths[r])) {
                                var i = t.singleNestedPaths[r];
                                if ("nested" === i) return;
                                return i;
                            }
                            return null;
                        }(this, t, r);
                        if (null != n) return n;
                        var i = K(this, t);
                        return null != i ? i : null != (n = this.hasMixedParent(r)) ? n : I.test(t) ? function(t, e, r) {
                            return H(t, e, r), t.subpaths[r];
                        }(this, t, r) : void 0;
                    }
                    var o = t.split(".")[0];
                    if (V[o] && !this.options.suppressReservedKeysWarning) {
                        var a = "`".concat(o, "` is a reserved schema pathname and may break some functionality. ") + "You are allowed to use it, but use at your own risk. To disable this warning pass `suppressReservedKeysWarning` as a schema option.";
                        T.warn(a);
                    }
                    "object" === s(e) && T.hasUserDefinedProperty(e, "ref") && B(e.ref, t);
                    var u, f = t.split(/\./), l = f.pop(), h = this.tree, p = "", d = c(f);
                    try {
                        for(d.s(); !(u = d.n()).done;){
                            var y = u.value;
                            if (T.specialProperties.has(y)) throw new Error("Cannot set special property `" + y + "` on a schema");
                            if (p = p += (p.length > 0 ? "." : "") + y, h[y] || (this.nested[p] = !0, h[y] = {}), "object" !== s(h[y])) {
                                var m = "Cannot set nested path `" + t + "`. Parent path `" + p + "` already set to type " + h[y].name + ".";
                                throw new Error(m);
                            }
                            h = h[y];
                        }
                    } catch (t) {
                        d.e(t);
                    } finally{
                        d.f();
                    }
                    h[l] = w(e), this.paths[t] = this.interpretAsType(t, e, this.options);
                    var v = this.paths[t];
                    if (this.childSchemas = this.childSchemas.filter(function(e) {
                        return e.path !== t;
                    }), v.$isSchemaMap) {
                        var g = t + ".$*";
                        this.paths[g] = v.$__schemaType, this.mapPaths.push(this.paths[g]), v.$__schemaType.$isSingleNested && this.childSchemas.push({
                            schema: v.$__schemaType.schema,
                            model: v.$__schemaType.caster,
                            path: t
                        });
                    }
                    if (v.$isSingleNested) {
                        for(var _ = 0, S = Object.keys(v.schema.paths); _ < S.length; _++){
                            var O = S[_];
                            this.singleNestedPaths[t + "." + O] = v.schema.paths[O];
                        }
                        for(var j = 0, $ = Object.keys(v.schema.singleNestedPaths); j < $.length; j++){
                            var E = $[j];
                            this.singleNestedPaths[t + "." + E] = v.schema.singleNestedPaths[E];
                        }
                        for(var A = 0, P = Object.keys(v.schema.subpaths); A < P.length; A++){
                            var x = P[A];
                            this.singleNestedPaths[t + "." + x] = v.schema.subpaths[x];
                        }
                        for(var k = 0, M = Object.keys(v.schema.nested); k < M.length; k++){
                            var R = M[k];
                            this.singleNestedPaths[t + "." + R] = "nested";
                        }
                        Object.defineProperty(v.schema, "base", {
                            configurable: !0,
                            enumerable: !1,
                            writable: !1,
                            value: this.base
                        }), v.caster.base = this.base, this.childSchemas.push({
                            schema: v.schema,
                            model: v.caster,
                            path: t
                        });
                    } else v.$isMongooseDocumentArray && (Object.defineProperty(v.schema, "base", {
                        configurable: !0,
                        enumerable: !1,
                        writable: !1,
                        value: this.base
                    }), v.casterConstructor.base = this.base, this.childSchemas.push({
                        schema: v.schema,
                        model: v.casterConstructor,
                        path: t
                    }));
                    if (v.$isMongooseArray && v.caster instanceof b) {
                        for(var N = t, D = v; D.$isMongooseArray;)N += ".$", D.$isMongooseDocumentArray ? (D.$embeddedSchemaType._arrayPath = N, D.$embeddedSchemaType._arrayParentPath = t, D = D.$embeddedSchemaType) : (D.caster._arrayPath = N, D.caster._arrayParentPath = t, D = D.caster), this.subpaths[N] = D;
                        for(var L = 0, C = []; L < C.length; L++){
                            var U = C[L];
                            this.subpaths[U.path] = U;
                        }
                    }
                    if (v.$isMongooseDocumentArray) {
                        for(var q = 0, F = Object.keys(v.schema.paths); q < F.length; q++){
                            var W = F[q], J = v.schema.paths[W];
                            this.subpaths[t + "." + W] = J, "object" === s(J) && null != J && null == J.$parentSchemaDocArray && (J.$parentSchemaDocArray = v);
                        }
                        for(var G = 0, Y = Object.keys(v.schema.subpaths); G < Y.length; G++){
                            var Q = Y[G], X = v.schema.subpaths[Q];
                            this.subpaths[t + "." + Q] = X, "object" === s(X) && null != X && null == X.$parentSchemaDocArray && (X.$parentSchemaDocArray = v);
                        }
                        for(var Z = 0, tt = Object.keys(v.schema.singleNestedPaths); Z < tt.length; Z++){
                            var et = tt[Z], rt = v.schema.singleNestedPaths[et];
                            this.subpaths[t + "." + et] = rt, "object" === s(rt) && null != rt && null == rt.$parentSchemaDocArray && (rt.$parentSchemaDocArray = v);
                        }
                    }
                    return this;
                }, q.prototype._gatherChildSchemas = function() {
                    for(var t = [], e = 0, r = Object.keys(this.paths); e < r.length; e++){
                        var n = r[e];
                        if ("string" == typeof n) {
                            var i = this.paths[n];
                            i.$isMongooseDocumentArray || i.$isSingleNested ? t.push({
                                schema: i.schema,
                                model: i.caster,
                                path: n
                            }) : i.$isSchemaMap && i.$__schemaType.$isSingleNested && t.push({
                                schema: i.$__schemaType.schema,
                                model: i.$__schemaType.caster,
                                path: n
                            });
                        }
                    }
                    return this.childSchemas = t, t;
                }, Object.defineProperty(q.prototype, "base", {
                    configurable: !0,
                    enumerable: !1,
                    writable: !0,
                    value: null
                }), q.prototype.interpretAsType = function(t, e, i) {
                    if (e instanceof b) {
                        if (e.path === t) return e;
                        var o = e.clone();
                        return o.path = t, o;
                    }
                    var u = null != this.base ? this.base.Schema.Types : q.Types, c = null != this.base ? this.base.Types : r(9600);
                    if (!(T.isPOJO(e) || e instanceof m) && "Object" !== T.getFunctionName(e.constructor)) {
                        var f = e;
                        (e = {})[i.typeKey] = f;
                    }
                    var l, h = e[i.typeKey] && (e[i.typeKey] instanceof Function || "type" !== i.typeKey || !e.type.type) ? e[i.typeKey] : {};
                    if (T.isPOJO(h) || "mixed" === h) return new u.Mixed(t, e);
                    if (Array.isArray(h) || h === Array || "array" === h || h === u.Array) {
                        var p = h === Array || "array" === h ? e.cast || e.of : h[0];
                        if (p && p.instanceOfSchema) {
                            if (!(p instanceof q)) {
                                if (!this.options._isMerging) throw new TypeError("Schema for array path `" + t + "` is from a different copy of the Mongoose module. Please make sure you're using the same version of Mongoose everywhere with `npm list mongoose`. If you are still getting this error, please add `new Schema()` around the path: " + "".concat(t, ": new Schema(...)"));
                                p = new q(p);
                            }
                            return new u.DocumentArray(t, p, e);
                        }
                        if (p && p[i.typeKey] && p[i.typeKey].instanceOfSchema) {
                            if (!(p[i.typeKey] instanceof q)) {
                                if (!this.options._isMerging) throw new TypeError("Schema for array path `" + t + "` is from a different copy of the Mongoose module. Please make sure you're using the same version of Mongoose everywhere with `npm list mongoose`. If you are still getting this error, please add `new Schema()` around the path: " + "".concat(t, ": new Schema(...)"));
                                p[i.typeKey] = new q(p[i.typeKey]);
                            }
                            return new u.DocumentArray(t, p[i.typeKey], e, p);
                        }
                        if (void 0 !== p && (Array.isArray(p) || p.type === Array || "Array" == p.type)) return p && "Array" == p.type && (p.type = Array), new u.Array(t, this.interpretAsType(t, p, i), e);
                        var d = null == p || !p[i.typeKey] || "type" === i.typeKey && p.type.type ? p : p[i.typeKey];
                        if ("string" == typeof p) p = u[p.charAt(0).toUpperCase() + p.substring(1)];
                        else if (T.isPOJO(d)) {
                            if (Object.keys(d).length) {
                                var v = {
                                    minimize: i.minimize
                                };
                                i.typeKey && (v.typeKey = i.typeKey), i.hasOwnProperty("strict") && (v.strict = i.strict), i.hasOwnProperty("strictQuery") && (v.strictQuery = i.strictQuery), i.hasOwnProperty("toObject") && (v.toObject = T.omit(i.toObject, [
                                    "transform"
                                ])), i.hasOwnProperty("toJSON") && (v.toJSON = T.omit(i.toJSON, [
                                    "transform"
                                ])), this._userProvidedOptions.hasOwnProperty("_id") ? v._id = this._userProvidedOptions._id : null != q.Types.DocumentArray.defaultOptions._id && (v._id = q.Types.DocumentArray.defaultOptions._id);
                                var g = new q(d, v);
                                return g.$implicitlyCreated = !0, new u.DocumentArray(t, g, e);
                            }
                            return new u.Array(t, u.Mixed, e);
                        }
                        if (p) {
                            if (h = !p[i.typeKey] || "type" === i.typeKey && p.type.type ? p : p[i.typeKey], Array.isArray(h)) return new u.Array(t, this.interpretAsType(t, h, i), e);
                            if ("ClockDate" === (l = "string" == typeof h ? h : h.schemaName || T.getFunctionName(h)) && (l = "Date"), void 0 === l) throw new TypeError("Invalid schema configuration: " + "Could not determine the embedded type for array `".concat(t, "`. ") + "See https://mongoosejs.com/docs/guide.html#definition for more info on supported schema syntaxes.");
                            if (!u.hasOwnProperty(l)) throw new TypeError("Invalid schema configuration: " + "`".concat(l, "` is not a valid type within the array `").concat(t, "`.") + "See https://bit.ly/mongoose-schematypes for a list of valid schema types.");
                        }
                        return new u.Array(t, p || u.Mixed, e, i);
                    }
                    if (h && h.instanceOfSchema) return new u.Subdocument(h, t, e);
                    if ((l = n.isBuffer(h) ? "Buffer" : "function" == typeof h || "object" === s(h) ? h.schemaName || T.getFunctionName(h) : h === c.ObjectId ? "ObjectId" : h === c.Decimal128 ? "Decimal128" : null == h ? "" + h : h.toString()) && (l = l.charAt(0).toUpperCase() + l.substring(1)), "ObjectID" === l && (l = "ObjectId"), "ClockDate" === l && (l = "Date"), void 0 === l) throw new TypeError("Invalid schema configuration: `".concat(t, "` schematype definition is ") + "invalid. See https://mongoosejs.com/docs/guide.html#definition for more info on supported schema syntaxes.");
                    if (null == u[l]) throw new TypeError("Invalid schema configuration: `".concat(l, "` is not ") + "a valid type at path `".concat(t, "`. See ") + "https://bit.ly/mongoose-schematypes for a list of valid schema types.");
                    var _ = new u[l](t, e);
                    return _.$isSchemaMap && function(t, e, r, n, i) {
                        var o = r + ".$*", s = {
                            type: {}
                        };
                        T.hasUserDefinedProperty(n, "of") && ((s = T.isPOJO(n.of) && Object.keys(n.of).length > 0 && !T.hasUserDefinedProperty(n.of, t.options.typeKey) ? a({}, t.options.typeKey, new q(n.of)) : T.isPOJO(n.of) ? Object.assign({}, n.of) : a({}, t.options.typeKey, n.of))[t.options.typeKey] && s[t.options.typeKey].instanceOfSchema && s[t.options.typeKey].eachPath(function(t, e) {
                            if (!0 === e.options.select || !1 === e.options.select) throw new y('Cannot use schema-level projections (`select: true` or `select: false`) within maps at path "' + r + "." + t + '"');
                        }), T.hasUserDefinedProperty(n, "ref") && (s.ref = n.ref)), e.$__schemaType = t.interpretAsType(o, s, i);
                    }(this, _, t, e, i), _;
                }, q.prototype.eachPath = function(t) {
                    for(var e = Object.keys(this.paths), r = e.length, n = 0; n < r; ++n)t(e[n], this.paths[e[n]]);
                    return this;
                }, q.prototype.requiredPaths = function(t) {
                    if (this._requiredpaths && !t) return this._requiredpaths;
                    for(var e = Object.keys(this.paths), r = e.length, n = []; r--;){
                        var i = e[r];
                        this.paths[i].isRequired && n.push(i);
                    }
                    return this._requiredpaths = n, this._requiredpaths;
                }, q.prototype.indexedPaths = function() {
                    return this._indexedpaths || (this._indexedpaths = this.indexes()), this._indexedpaths;
                }, q.prototype.pathType = function(t) {
                    if (this.paths.hasOwnProperty(t)) return "real";
                    if (this.virtuals.hasOwnProperty(t)) return "virtual";
                    if (this.nested.hasOwnProperty(t)) return "nested";
                    var e = z(t);
                    if (this.subpaths.hasOwnProperty(e) || this.subpaths.hasOwnProperty(t)) return "real";
                    var r = this.singleNestedPaths.hasOwnProperty(e) || this.singleNestedPaths.hasOwnProperty(t);
                    return r ? "nested" === r ? "nested" : "real" : null != K(this, t) ? "real" : /\.\d+\.|\.\d+$/.test(t) ? H(this, t, e) : "adhocOrUndefined";
                }, q.prototype.hasMixedParent = function(t) {
                    var e = t.split(/\./g);
                    t = "";
                    for(var r = 0; r < e.length; ++r)if (t = r > 0 ? t + "." + e[r] : e[r], this.paths.hasOwnProperty(t) && this.paths[t] instanceof h.Mixed) return this.paths[t];
                    return null;
                }, q.prototype.setupTimestamp = function(t) {
                    return M(this, t);
                }, q.prototype.queue = function(t, e) {
                    return this.callQueue.push([
                        t,
                        e
                    ]), this;
                }, q.prototype.pre = function(t) {
                    if (t instanceof RegExp) {
                        var e, r = Array.prototype.slice.call(arguments, 1), n = c(D);
                        try {
                            for(n.s(); !(e = n.n()).done;){
                                var i = e.value;
                                t.test(i) && this.pre.apply(this, [
                                    i
                                ].concat(r));
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                        return this;
                    }
                    if (Array.isArray(t)) {
                        var o, a = Array.prototype.slice.call(arguments, 1), s = c(t);
                        try {
                            for(s.s(); !(o = s.n()).done;){
                                var u = o.value;
                                this.pre.apply(this, [
                                    u
                                ].concat(a));
                            }
                        } catch (t) {
                            s.e(t);
                        } finally{
                            s.f();
                        }
                        return this;
                    }
                    return this.s.hooks.pre.apply(this.s.hooks, arguments), this;
                }, q.prototype.post = function(t) {
                    if (t instanceof RegExp) {
                        var e, r = Array.prototype.slice.call(arguments, 1), n = c(D);
                        try {
                            for(n.s(); !(e = n.n()).done;){
                                var i = e.value;
                                t.test(i) && this.post.apply(this, [
                                    i
                                ].concat(r));
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                        return this;
                    }
                    if (Array.isArray(t)) {
                        var o, a = Array.prototype.slice.call(arguments, 1), s = c(t);
                        try {
                            for(s.s(); !(o = s.n()).done;){
                                var u = o.value;
                                this.post.apply(this, [
                                    u
                                ].concat(a));
                            }
                        } catch (t) {
                            s.e(t);
                        } finally{
                            s.f();
                        }
                        return this;
                    }
                    return this.s.hooks.post.apply(this.s.hooks, arguments), this;
                }, q.prototype.plugin = function(t, e) {
                    if ("function" != typeof t) throw new Error('First param to `schema.plugin()` must be a function, got "' + s(t) + '"');
                    if (e && e.deduplicate) {
                        var r, n = c(this.plugins);
                        try {
                            for(n.s(); !(r = n.n()).done;)if (r.value.fn === t) return this;
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                    }
                    return this.plugins.push({
                        fn: t,
                        opts: e
                    }), t(this, e), this;
                }, q.prototype.method = function(t, e, r) {
                    if ("string" != typeof t) for(var n in t)this.methods[n] = t[n], this.methodOptions[n] = w(r);
                    else this.methods[t] = e, this.methodOptions[t] = w(r);
                    return this;
                }, q.prototype.static = function(t, e) {
                    if ("string" != typeof t) for(var r in t)this.statics[r] = t[r];
                    else this.statics[t] = e;
                    return this;
                }, q.prototype.index = function(t, e) {
                    for(var r in t || (t = {}), e || (e = {}), e.expires && T.expires(e), t)this.aliases[r] && (t = T.renameObjKey(t, r, this.aliases[r]));
                    for(var n = 0, i = Object.keys(t); n < i.length; n++){
                        var o = i[n];
                        "ascending" === t[o] || "asc" === t[o] ? t[o] = 1 : "descending" !== t[o] && "desc" !== t[o] || (t[o] = -1);
                    }
                    var a, s = c(this.indexes());
                    try {
                        for(s.s(); !(a = s.n()).done;){
                            var u = a.value;
                            null == e.name && null == u[1].name && A(u[0], t) && T.warn("Duplicate schema index on ".concat(JSON.stringify(t), ' found. This is often due to declaring an index using both "index: true" and "schema.index()". Please remove the duplicate index definition.'));
                        }
                    } catch (t) {
                        s.e(t);
                    } finally{
                        s.f();
                    }
                    return this._indexes.push([
                        t,
                        e
                    ]), this;
                }, q.prototype.set = function(t, e, r) {
                    if (1 === arguments.length) return this.options[t];
                    switch(t){
                        case "read":
                            "string" == typeof e ? this.options[t] = {
                                mode: $(e),
                                tags: r
                            } : Array.isArray(e) && "string" == typeof e[0] ? this.options[t] = {
                                mode: $(e[0]),
                                tags: e[1]
                            } : this.options[t] = e, this._userProvidedOptions[t] = this.options[t];
                            break;
                        case "timestamps":
                            this.setupTimestamp(e), this.options[t] = e, this._userProvidedOptions[t] = this.options[t];
                            break;
                        case "_id":
                            this.options[t] = e, this._userProvidedOptions[t] = this.options[t], e && !this.paths._id ? _(this) : !e && null != this.paths._id && this.paths._id.auto && this.remove("_id");
                            break;
                        default:
                            this.options[t] = e, this._userProvidedOptions[t] = this.options[t];
                    }
                    return "strict" === t && W(this, {
                        strict: e
                    }), "strictQuery" === t && W(this, {
                        strictQuery: e
                    }), "toObject" === t && (delete (e = o({}, e)).transform, W(this, {
                        toObject: e
                    })), "toJSON" === t && (delete (e = o({}, e)).transform, W(this, {
                        toJSON: e
                    })), this;
                }, q.prototype.get = function(t) {
                    return this.options[t];
                };
                var J = "2d 2dsphere hashed text".split(" ");
                function G(t, e) {
                    var r, n = e.split("."), i = n.pop(), o = t.tree, a = c(n);
                    try {
                        for(a.s(); !(r = a.n()).done;)o = o[r.value];
                    } catch (t) {
                        a.e(t);
                    } finally{
                        a.f();
                    }
                    delete o[i];
                }
                function Y(t) {
                    return t.startsWith("$[") && t.endsWith("]");
                }
                Object.defineProperty(q, "indexTypes", {
                    get: function() {
                        return J;
                    },
                    set: function() {
                        throw new Error("Cannot overwrite Schema.indexTypes");
                    }
                }), q.prototype.indexes = function() {
                    return j(this);
                }, q.prototype.virtual = function(t, e) {
                    if (t instanceof g || "VirtualType" === O(t)) return this.virtual(t.path, t.options);
                    if (e = new v(e), T.hasUserDefinedProperty(e, [
                        "ref",
                        "refPath"
                    ])) {
                        if (null == e.localField) throw new Error("Reference virtuals require `localField` option");
                        if (null == e.foreignField) throw new Error("Reference virtuals require `foreignField` option");
                        var r = this.virtual(t);
                        r.options = e, this.pre("init", function(n, i) {
                            if (x.has(t, n)) {
                                var o = x.get(t, n);
                                if (this.$$populatedVirtuals || (this.$$populatedVirtuals = {}), e.justOne || e.count ? this.$$populatedVirtuals[t] = Array.isArray(o) ? o[0] : o : this.$$populatedVirtuals[t] = Array.isArray(o) ? o : null == o ? [] : [
                                    o
                                ], null != i && i.hydratedPopulatedDocs && !e.count) {
                                    var a = r._getModelNamesForPopulate(this), s = this.$$populatedVirtuals[t];
                                    if (Array.isArray(s) || s.$__ || 1 !== (null == a ? void 0 : a.length)) {
                                        if (Array.isArray(s) && 1 === (null == a ? void 0 : a.length)) {
                                            for(var u = this.db.model(a[0]), c = 0; c < s.length; ++c)s[c].$__ || (s[c] = u.hydrate(s[c], null, {
                                                hydratedPopulatedDocs: !0
                                            }));
                                            var f = e.foreignField;
                                            this.$populated(t, s.map(function(t) {
                                                return null == t ? t : t.get("function" == typeof f ? f.call(t, t) : f);
                                            }), {
                                                populateModelSymbol: u
                                            });
                                        }
                                    } else {
                                        var l = this.db.model(a[0]);
                                        this.$$populatedVirtuals[t] = l.hydrate(s);
                                    }
                                }
                                x.unset(t, n);
                            }
                        }), r.set(function(r) {
                            return this.$$populatedVirtuals || (this.$$populatedVirtuals = {}), k(this.$$populatedVirtuals, t, r, e);
                        }), "function" == typeof e.get && r.get(e.get);
                        for(var n = t.split("."), i = n[0], o = 0; o < n.length - 1; ++o)if (null != this.paths[i]) {
                            if (this.paths[i].$isMongooseDocumentArray || this.paths[i].$isSingleNested) {
                                var a = n.slice(o + 1).join(".");
                                this.paths[i].schema.virtual(a, e);
                                break;
                            }
                            i += "." + n[o + 1];
                        }
                        return r;
                    }
                    var s = this.virtuals, u = t.split(".");
                    if ("real" === this.pathType(t)) throw new Error('Virtual path "' + t + '" conflicts with a real path in the schema');
                    if (s[t] = u.reduce(function(r, n, i) {
                        return r[n] || (r[n] = i === u.length - 1 ? new g(e, t) : {}), r[n];
                    }, this.tree), e && e.applyToArray && u.length > 1) {
                        var c = this.path(u.slice(0, -1).join("."));
                        if (c && c.$isMongooseArray) return c.virtual(u[u.length - 1], e);
                        throw new y('Path "'.concat(c, '" is not an array'));
                    }
                    return s[t];
                }, q.prototype.virtualpath = function(t) {
                    return this.virtuals.hasOwnProperty(t) ? this.virtuals[t] : null;
                }, q.prototype.remove = function(t) {
                    return "string" == typeof t && (t = [
                        t
                    ]), Array.isArray(t) && t.forEach(function(t) {
                        if (null != this.path(t) || this.nested[t]) {
                            if (this.nested[t]) {
                                var e, r = c(Object.keys(this.paths).concat(Object.keys(this.nested)));
                                try {
                                    for(r.s(); !(e = r.n()).done;){
                                        var n = e.value;
                                        n.startsWith(t + ".") && (delete this.paths[n], delete this.nested[n], G(this, n));
                                    }
                                } catch (t) {
                                    r.e(t);
                                } finally{
                                    r.f();
                                }
                                return delete this.nested[t], void G(this, t);
                            }
                            delete this.paths[t], G(this, t);
                        }
                    }, this), this;
                }, q.prototype.removeVirtual = function(t) {
                    if ("string" == typeof t && (t = [
                        t
                    ]), Array.isArray(t)) {
                        var e, r = c(t);
                        try {
                            for(r.s(); !(e = r.n()).done;){
                                var n = e.value;
                                if (null == this.virtuals[n]) throw new y('Attempting to remove virtual "'.concat(n, '" that does not exist.'));
                            }
                        } catch (t) {
                            r.e(t);
                        } finally{
                            r.f();
                        }
                        var i, o = c(t);
                        try {
                            for(o.s(); !(i = o.n()).done;){
                                var a = i.value;
                                delete this.paths[a], delete this.virtuals[a], -1 !== a.indexOf(".") ? x.unset(a, this.tree) : delete this.tree[a];
                            }
                        } catch (t) {
                            o.e(t);
                        } finally{
                            o.f();
                        }
                    }
                    return this;
                }, q.prototype.loadClass = function(t, e) {
                    return t === Object.prototype || t === Function.prototype || t.prototype.hasOwnProperty("$isMongooseModelPrototype") || t.prototype.hasOwnProperty("$isMongooseDocumentPrototype") || (this.loadClass(Object.getPrototypeOf(t), e), e || Object.getOwnPropertyNames(t).forEach(function(e) {
                        if (!e.match(/^(length|name|prototype|constructor|__proto__)$/)) {
                            var r = Object.getOwnPropertyDescriptor(t, e);
                            r.hasOwnProperty("value") && this.static(e, r.value);
                        }
                    }, this), Object.getOwnPropertyNames(t.prototype).forEach(function(r) {
                        if (!r.match(/^(constructor)$/)) {
                            var n = Object.getOwnPropertyDescriptor(t.prototype, r);
                            e || "function" == typeof n.value && this.method(r, n.value), "function" == typeof n.get && (this.virtuals[r] && (this.virtuals[r].getters = []), this.virtual(r).get(n.get)), "function" == typeof n.set && (this.virtuals[r] && (this.virtuals[r].setters = []), this.virtual(r).set(n.set));
                        }
                    }, this)), this;
                }, q.prototype._getSchema = function(t) {
                    var e = this.path(t), r = [];
                    if (e) return e.$fullPath = t, e;
                    for(var n = t.split("."), i = 0; i < n.length; ++i)("$" === n[i] || Y(n[i])) && (n[i] = "0"), U.test(n[i]) && (n[i] = "$");
                    return function t(e, n) {
                        for(var i, o, a = e.length + 1; a--;)if (o = e.slice(0, a).join("."), i = n.path(o)) {
                            if (r.push(o), i.caster) {
                                if (i.caster instanceof h.Mixed) return i.caster.$fullPath = r.join("."), i.caster;
                                if (a !== e.length) {
                                    if (a + 1 === e.length && i.$embeddedSchemaType && ("$" === e[a] || Y(e[a]))) return i.$embeddedSchemaType;
                                    if (i.schema) {
                                        var s = void 0;
                                        return "$" === e[a] || Y(e[a]) ? a + 1 === e.length ? i.$embeddedSchemaType : ((s = t(e.slice(a + 1), i.schema)) && (s.$parentSchemaDocArray = s.$parentSchemaDocArray || (i.schema.$isSingleNested ? null : i)), s) : ((s = t(e.slice(a), i.schema)) && (s.$parentSchemaDocArray = s.$parentSchemaDocArray || (i.schema.$isSingleNested ? null : i)), s);
                                    }
                                }
                            } else if (i.$isSchemaMap) {
                                if (a >= e.length) return i;
                                if (a + 1 >= e.length) return i.$__schemaType;
                                if (i.$__schemaType instanceof h.Mixed) return i.$__schemaType;
                                if (null != i.$__schemaType.schema) return t(e.slice(a + 1), i.$__schemaType.schema);
                            }
                            return i.$fullPath = r.join("."), i;
                        }
                    }(n, this);
                }, q.prototype._getPathType = function(t) {
                    return this.path(t) ? "real" : function t(e, r) {
                        for(var n, i, o = e.length + 1; o--;){
                            if (i = e.slice(0, o).join("."), n = r.path(i)) return n.caster ? n.caster instanceof h.Mixed ? {
                                schema: n,
                                pathType: "mixed"
                            } : o !== e.length && n.schema ? "$" === e[o] || Y(e[o]) ? o === e.length - 1 ? {
                                schema: n,
                                pathType: "nested"
                            } : t(e.slice(o + 1), n.schema) : t(e.slice(o), n.schema) : {
                                schema: n,
                                pathType: n.$isSingleNested ? "nested" : "array"
                            } : {
                                schema: n,
                                pathType: "real"
                            };
                            if (o === e.length && r.nested[i]) return {
                                schema: r,
                                pathType: "nested"
                            };
                        }
                        return {
                            schema: n || r,
                            pathType: "undefined"
                        };
                    }(t.split("."), this);
                }, q.prototype._transformDuplicateKeyError = function(t) {
                    if (!this._duplicateKeyErrorMessagesByPath) return t;
                    if (11e3 !== t.code && 11001 !== t.code) return t;
                    if (null != t.keyPattern) {
                        var e = t.keyPattern, r = Object.keys(e);
                        if (1 !== r.length) return t;
                        var n = r[0];
                        return this._duplicateKeyErrorMessagesByPath.hasOwnProperty(n) ? new y(this._duplicateKeyErrorMessagesByPath[n], {
                            cause: t
                        }) : t;
                    }
                    return t;
                }, q.prototype._preCompile = function() {
                    this.plugin(E, {
                        deduplicate: !0
                    });
                }, q.prototype.toJSONSchema = function(t) {
                    for(var e, r = null !== (e = null == t ? void 0 : t.useBsonType) && void 0 !== e && e, n = r ? {
                        required: [],
                        properties: {}
                    } : {
                        type: "object",
                        required: [],
                        properties: {}
                    }, i = 0, o = Object.keys(this.paths); i < o.length; i++){
                        var a = o[i], s = this.paths[a];
                        if (-1 === s._presplitPath.indexOf("$*")) {
                            var u = n;
                            if (s._presplitPath.length > 1) for(var c = 0; c < s._presplitPath.length - 1; ++c){
                                var h = s._presplitPath[c];
                                null == u.properties[h] && (u.properties[h] = r ? {
                                    bsonType: [
                                        "object",
                                        "null"
                                    ],
                                    properties: {}
                                } : {
                                    type: [
                                        "object",
                                        "null"
                                    ],
                                    properties: {}
                                }), u = u.properties[h];
                            }
                            var p = s._presplitPath[s._presplitPath.length - 1], d = !1;
                            "_id" === a ? (u.required || (u.required = []), u.required.push("_id"), d = !0) : s.options.required && "function" != typeof s.options.required && (u.required || (u.required = []), u.required.push(p), d = !0), u.properties[p] = s.toJSONSchema(t), s.options.enum && (u.properties[p].enum = d ? s.options.enum : [].concat(function(t) {
                                if (Array.isArray(t)) return l(t);
                            }(y = s.options.enum) || function(t) {
                                if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t);
                            }(y) || f(y) || function() {
                                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                            }(), [
                                null
                            ]));
                        }
                    }
                    var y;
                    return 0 === n.required.length && delete n.required, n;
                }, t.exports = e = q, q.Types = h = r(7953), e.ObjectId = h.ObjectId;
            },
            7160: (t, e)=>{
                "use strict";
                e.schemaMixedSymbol = Symbol.for("mongoose:schema_mixed"), e.builtInMiddleware = Symbol.for("mongoose:built-in-middleware");
            },
            7199: ()=>{},
            7219: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, o(n.key), n);
                    }
                }
                function o(t) {
                    var e = function(t) {
                        if ("object" != n(t) || !t) return t;
                        var e = t[Symbol.toPrimitive];
                        if (void 0 !== e) {
                            var r = e.call(t, "string");
                            if ("object" != n(r)) return r;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return String(t);
                    }(t);
                    return "symbol" == n(e) ? e : e + "";
                }
                function a() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (a = function() {
                        return !!t;
                    })();
                }
                function s(t) {
                    return s = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, s(t);
                }
                function u(t, e) {
                    return u = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, u(t, e);
                }
                var c = r(8213), f = r(2900), l = r(4070), h = r(5497), p = function(t) {
                    function e() {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = s(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, a() ? Reflect.construct(e, r || [], s(t).constructor) : e.apply(t, r));
                        }(this, e, arguments);
                    }
                    var r, o;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && u(t, e);
                    }(e, t), r = e, o = [
                        {
                            key: "assimilateError",
                            value: function(t) {
                                var e = t.reason, r = l(e) && f(e) && -1 === t.message.indexOf("bad auth") && -1 === t.message.indexOf("Authentication failed");
                                for(var n in r ? this.message = "Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/" : h(e) ? this.message = "Mongoose is connecting with SSL enabled, but the server is not accepting SSL connections. Please ensure that the MongoDB server you are connecting to is configured to accept SSL connections. Learn more: https://mongoosejs.com/docs/tutorials/ssl.html" : this.message = t.message, t)"name" !== n && (this[n] = t[n]);
                                return this;
                            }
                        }
                    ], i(r.prototype, o), Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(c);
                Object.defineProperty(p.prototype, "name", {
                    value: "MongooseServerSelectionError"
                }), t.exports = p;
            },
            7236: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                t.exports = function(t) {
                    if (null == t || "object" !== e(t)) return t;
                    if (Array.isArray(t)) for(var r = t.length - 1; r >= 0; --r)void 0 === t[r] && t.splice(r, 1);
                    for(var n = 0, i = Object.keys(t); n < i.length; n++){
                        var o = i[n];
                        void 0 === t[o] && delete t[o];
                    }
                    return t;
                };
            },
            7291: (t, e)=>{
                "use strict";
                function r(t) {
                    return r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, r(t);
                }
                var n = Symbol("mongoose#trustedSymbol");
                e.trustedSymbol = n, e.trusted = function(t) {
                    return null == t || "object" !== r(t) || (t[n] = !0), t;
                };
            },
            7300: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                t.exports = function(t) {
                    return null == t || "object" !== e(t) || !("$meta" in t) && !("$slice" in t);
                };
            },
            7312: (t, e, r)=>{
                "use strict";
                var n = e;
                n.version = r(1636).rE, n.utils = r(1970), n.rand = r(8904), n.curve = r(5803), n.curves = r(6379), n.ec = r(7416), n.eddsa = r(4919);
            },
            7352: (t, e, r)=>{
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = Object.getOwnPropertyDescriptors || function(t) {
                    for(var e = Object.keys(t), r = {}, n = 0; n < e.length; n++)r[e[n]] = Object.getOwnPropertyDescriptor(t, e[n]);
                    return r;
                }, o = /%[sdj%]/g;
                e.format = function(t) {
                    if (!g(t)) {
                        for(var e = [], r = 0; r < arguments.length; r++)e.push(c(arguments[r]));
                        return e.join(" ");
                    }
                    r = 1;
                    for(var n = arguments, i = n.length, a = String(t).replace(o, function(t) {
                        if ("%%" === t) return "%";
                        if (r >= i) return t;
                        switch(t){
                            case "%s":
                                return String(n[r++]);
                            case "%d":
                                return Number(n[r++]);
                            case "%j":
                                try {
                                    return JSON.stringify(n[r++]);
                                } catch (t) {
                                    return "[Circular]";
                                }
                            default:
                                return t;
                        }
                    }), s = n[r]; r < i; s = n[++r])m(s) || !S(s) ? a += " " + s : a += " " + c(s);
                    return a;
                }, e.deprecate = function(t, e) {
                    if (!0 === ({
                        env: {}
                    }).noDeprecation) return t;
                    var r = !1;
                    return function() {
                        if (!r) {
                            if (({
                                env: {}
                            }).throwDeprecation) throw new Error(e);
                            !({
                                env: {}
                            }).traceDeprecation ? console.error(e) : console.trace(e), r = !0;
                        }
                        return t.apply(this, arguments);
                    };
                };
                var a = {}, s = /^$/;
                if (({}).NODE_DEBUG) {
                    var u = {}.NODE_DEBUG;
                    u = u.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), s = new RegExp("^" + u + "$", "i");
                }
                function c(t, r) {
                    var n = {
                        seen: [],
                        stylize: l
                    };
                    return arguments.length >= 3 && (n.depth = arguments[2]), arguments.length >= 4 && (n.colors = arguments[3]), b(r) ? n.showHidden = r : r && e._extend(n, r), _(n.showHidden) && (n.showHidden = !1), _(n.depth) && (n.depth = 2), _(n.colors) && (n.colors = !1), _(n.customInspect) && (n.customInspect = !0), n.colors && (n.stylize = f), h(n, t, n.depth);
                }
                function f(t, e) {
                    var r = c.styles[e];
                    return r ? "[" + c.colors[r][0] + "m" + t + "[" + c.colors[r][1] + "m" : t;
                }
                function l(t, e) {
                    return t;
                }
                function h(t, r, n) {
                    if (t.customInspect && r && $(r.inspect) && r.inspect !== e.inspect && (!r.constructor || r.constructor.prototype !== r)) {
                        var i = r.inspect(n, t);
                        return g(i) || (i = h(t, i, n)), i;
                    }
                    var o = function(t, e) {
                        if (_(e)) return t.stylize("undefined", "undefined");
                        if (g(e)) {
                            var r = "'" + JSON.stringify(e).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                            return t.stylize(r, "string");
                        }
                        return v(e) ? t.stylize("" + e, "number") : b(e) ? t.stylize("" + e, "boolean") : m(e) ? t.stylize("null", "null") : void 0;
                    }(t, r);
                    if (o) return o;
                    var a = Object.keys(r), s = function(t) {
                        var e = {};
                        return t.forEach(function(t, r) {
                            e[t] = !0;
                        }), e;
                    }(a);
                    if (t.showHidden && (a = Object.getOwnPropertyNames(r)), j(r) && (a.indexOf("message") >= 0 || a.indexOf("description") >= 0)) return p(r);
                    if (0 === a.length) {
                        if ($(r)) {
                            var u = r.name ? ": " + r.name : "";
                            return t.stylize("[Function" + u + "]", "special");
                        }
                        if (w(r)) return t.stylize(RegExp.prototype.toString.call(r), "regexp");
                        if (O(r)) return t.stylize(Date.prototype.toString.call(r), "date");
                        if (j(r)) return p(r);
                    }
                    var c, f = "", l = !1, S = [
                        "{",
                        "}"
                    ];
                    return y(r) && (l = !0, S = [
                        "[",
                        "]"
                    ]), $(r) && (f = " [Function" + (r.name ? ": " + r.name : "") + "]"), w(r) && (f = " " + RegExp.prototype.toString.call(r)), O(r) && (f = " " + Date.prototype.toUTCString.call(r)), j(r) && (f = " " + p(r)), 0 !== a.length || l && 0 != r.length ? n < 0 ? w(r) ? t.stylize(RegExp.prototype.toString.call(r), "regexp") : t.stylize("[Object]", "special") : (t.seen.push(r), c = l ? function(t, e, r, n, i) {
                        for(var o = [], a = 0, s = e.length; a < s; ++a)x(e, String(a)) ? o.push(d(t, e, r, n, String(a), !0)) : o.push("");
                        return i.forEach(function(i) {
                            i.match(/^\d+$/) || o.push(d(t, e, r, n, i, !0));
                        }), o;
                    }(t, r, n, s, a) : a.map(function(e) {
                        return d(t, r, n, s, e, l);
                    }), t.seen.pop(), function(t, e, r) {
                        return t.reduce(function(t, e) {
                            return e.indexOf("\n"), t + e.replace(/\u001b\[\d\d?m/g, "").length + 1;
                        }, 0) > 60 ? r[0] + ("" === e ? "" : e + "\n ") + " " + t.join(",\n  ") + " " + r[1] : r[0] + e + " " + t.join(", ") + " " + r[1];
                    }(c, f, S)) : S[0] + f + S[1];
                }
                function p(t) {
                    return "[" + Error.prototype.toString.call(t) + "]";
                }
                function d(t, e, r, n, i, o) {
                    var a, s, u;
                    if ((u = Object.getOwnPropertyDescriptor(e, i) || {
                        value: e[i]
                    }).get ? s = u.set ? t.stylize("[Getter/Setter]", "special") : t.stylize("[Getter]", "special") : u.set && (s = t.stylize("[Setter]", "special")), x(n, i) || (a = "[" + i + "]"), s || (t.seen.indexOf(u.value) < 0 ? (s = m(r) ? h(t, u.value, null) : h(t, u.value, r - 1)).indexOf("\n") > -1 && (s = o ? s.split("\n").map(function(t) {
                        return "  " + t;
                    }).join("\n").slice(2) : "\n" + s.split("\n").map(function(t) {
                        return "   " + t;
                    }).join("\n")) : s = t.stylize("[Circular]", "special")), _(a)) {
                        if (o && i.match(/^\d+$/)) return s;
                        (a = JSON.stringify("" + i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (a = a.slice(1, -1), a = t.stylize(a, "name")) : (a = a.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), a = t.stylize(a, "string"));
                    }
                    return a + ": " + s;
                }
                function y(t) {
                    return Array.isArray(t);
                }
                function b(t) {
                    return "boolean" == typeof t;
                }
                function m(t) {
                    return null === t;
                }
                function v(t) {
                    return "number" == typeof t;
                }
                function g(t) {
                    return "string" == typeof t;
                }
                function _(t) {
                    return void 0 === t;
                }
                function w(t) {
                    return S(t) && "[object RegExp]" === E(t);
                }
                function S(t) {
                    return "object" === n(t) && null !== t;
                }
                function O(t) {
                    return S(t) && "[object Date]" === E(t);
                }
                function j(t) {
                    return S(t) && ("[object Error]" === E(t) || t instanceof Error);
                }
                function $(t) {
                    return "function" == typeof t;
                }
                function E(t) {
                    return Object.prototype.toString.call(t);
                }
                function A(t) {
                    return t < 10 ? "0" + t.toString(10) : t.toString(10);
                }
                e.debuglog = function(t) {
                    if (t = t.toUpperCase(), !a[t]) {
                        if (s.test(t)) {
                            var r = {
                                env: {}
                            }.pid;
                            a[t] = function() {
                                var n = e.format.apply(e, arguments);
                                console.error("%s %d: %s", t, r, n);
                            };
                        } else a[t] = function() {};
                    }
                    return a[t];
                }, e.inspect = c, c.colors = {
                    bold: [
                        1,
                        22
                    ],
                    italic: [
                        3,
                        23
                    ],
                    underline: [
                        4,
                        24
                    ],
                    inverse: [
                        7,
                        27
                    ],
                    white: [
                        37,
                        39
                    ],
                    grey: [
                        90,
                        39
                    ],
                    black: [
                        30,
                        39
                    ],
                    blue: [
                        34,
                        39
                    ],
                    cyan: [
                        36,
                        39
                    ],
                    green: [
                        32,
                        39
                    ],
                    magenta: [
                        35,
                        39
                    ],
                    red: [
                        31,
                        39
                    ],
                    yellow: [
                        33,
                        39
                    ]
                }, c.styles = {
                    special: "cyan",
                    number: "yellow",
                    boolean: "yellow",
                    undefined: "grey",
                    null: "bold",
                    string: "green",
                    date: "magenta",
                    regexp: "red"
                }, e.types = r(7595), e.isArray = y, e.isBoolean = b, e.isNull = m, e.isNullOrUndefined = function(t) {
                    return null == t;
                }, e.isNumber = v, e.isString = g, e.isSymbol = function(t) {
                    return "symbol" === n(t);
                }, e.isUndefined = _, e.isRegExp = w, e.types.isRegExp = w, e.isObject = S, e.isDate = O, e.types.isDate = O, e.isError = j, e.types.isNativeError = j, e.isFunction = $, e.isPrimitive = function(t) {
                    return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" === n(t) || void 0 === t;
                }, e.isBuffer = r(7944);
                var P = [
                    "Jan",
                    "Feb",
                    "Mar",
                    "Apr",
                    "May",
                    "Jun",
                    "Jul",
                    "Aug",
                    "Sep",
                    "Oct",
                    "Nov",
                    "Dec"
                ];
                function x(t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e);
                }
                e.log = function() {
                    var t, r;
                    console.log("%s - %s", (r = [
                        A((t = new Date).getHours()),
                        A(t.getMinutes()),
                        A(t.getSeconds())
                    ].join(":"), [
                        t.getDate(),
                        P[t.getMonth()],
                        r
                    ].join(" ")), e.format.apply(e, arguments));
                }, e.inherits = r(1679), e._extend = function(t, e) {
                    if (!e || !S(e)) return t;
                    for(var r = Object.keys(e), n = r.length; n--;)t[r[n]] = e[r[n]];
                    return t;
                };
                var k = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;
                function M(t, e) {
                    if (!t) {
                        var r = new Error("Promise was rejected with a falsy value");
                        r.reason = t, t = r;
                    }
                    return e(t);
                }
                e.promisify = function(t) {
                    if ("function" != typeof t) throw new TypeError('The "original" argument must be of type Function');
                    if (k && t[k]) {
                        var e;
                        if ("function" != typeof (e = t[k])) throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                        return Object.defineProperty(e, k, {
                            value: e,
                            enumerable: !1,
                            writable: !1,
                            configurable: !0
                        }), e;
                    }
                    function e() {
                        for(var e, r, n = new Promise(function(t, n) {
                            e = t, r = n;
                        }), i = [], o = 0; o < arguments.length; o++)i.push(arguments[o]);
                        i.push(function(t, n) {
                            t ? r(t) : e(n);
                        });
                        try {
                            t.apply(this, i);
                        } catch (t) {
                            r(t);
                        }
                        return n;
                    }
                    return Object.setPrototypeOf(e, Object.getPrototypeOf(t)), k && Object.defineProperty(e, k, {
                        value: e,
                        enumerable: !1,
                        writable: !1,
                        configurable: !0
                    }), Object.defineProperties(e, i(t));
                }, e.promisify.custom = k, e.callbackify = function(t) {
                    if ("function" != typeof t) throw new TypeError('The "original" argument must be of type Function');
                    function e() {
                        for(var e = [], r = 0; r < arguments.length; r++)e.push(arguments[r]);
                        var n = e.pop();
                        if ("function" != typeof n) throw new TypeError("The last argument must be of type Function");
                        var i = this, o = function() {
                            return n.apply(i, arguments);
                        };
                        t.apply(this, e).then(function(t) {
                            ({
                                env: {}
                            }).nextTick(o.bind(null, null, t));
                        }, function(t) {
                            ({
                                env: {}
                            }).nextTick(M.bind(null, t, o));
                        });
                    }
                    return Object.setPrototypeOf(e, Object.getPrototypeOf(t)), Object.defineProperties(e, i(t)), e;
                };
            },
            7416: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(7799), o = r(6934), a = r(1970), s = r(6379), u = r(8904), c = a.assert, f = r(3643), l = r(3686);
                function h(t) {
                    if (!(this instanceof h)) return new h(t);
                    "string" == typeof t && (c(Object.prototype.hasOwnProperty.call(s, t), "Unknown curve " + t), t = s[t]), t instanceof s.PresetCurve && (t = {
                        curve: t
                    }), this.curve = t.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t.curve.g, this.g.precompute(t.curve.n.bitLength() + 1), this.hash = t.hash || t.curve.hash;
                }
                t.exports = h, h.prototype.keyPair = function(t) {
                    return new f(this, t);
                }, h.prototype.keyFromPrivate = function(t, e) {
                    return f.fromPrivate(this, t, e);
                }, h.prototype.keyFromPublic = function(t, e) {
                    return f.fromPublic(this, t, e);
                }, h.prototype.genKeyPair = function(t) {
                    t || (t = {});
                    for(var e = new o({
                        hash: this.hash,
                        pers: t.pers,
                        persEnc: t.persEnc || "utf8",
                        entropy: t.entropy || u(this.hash.hmacStrength),
                        entropyEnc: t.entropy && t.entropyEnc || "utf8",
                        nonce: this.n.toArray()
                    }), r = this.n.byteLength(), n = this.n.sub(new i(2));;){
                        var a = new i(e.generate(r));
                        if (!(a.cmp(n) > 0)) return a.iaddn(1), this.keyFromPrivate(a);
                    }
                }, h.prototype._truncateToN = function(t, e, r) {
                    var o;
                    if (i.isBN(t) || "number" == typeof t) o = (t = new i(t, 16)).byteLength();
                    else if ("object" === n(t)) o = t.length, t = new i(t, 16);
                    else {
                        var a = t.toString();
                        o = a.length + 1 >>> 1, t = new i(a, 16);
                    }
                    "number" != typeof r && (r = 8 * o);
                    var s = r - this.n.bitLength();
                    return s > 0 && (t = t.ushrn(s)), !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t;
                }, h.prototype.sign = function(t, e, r, a) {
                    if ("object" === n(r) && (a = r, r = null), a || (a = {}), "string" != typeof t && "number" != typeof t && !i.isBN(t)) {
                        c("object" === n(t) && t && "number" == typeof t.length, "Expected message to be an array-like, a hex string, or a BN instance"), c(t.length >>> 0 === t.length);
                        for(var s = 0; s < t.length; s++)c((255 & t[s]) === t[s]);
                    }
                    e = this.keyFromPrivate(e, r), t = this._truncateToN(t, !1, a.msgBitLength), c(!t.isNeg(), "Can not sign a negative message");
                    var u = this.n.byteLength(), f = e.getPrivate().toArray("be", u), h = t.toArray("be", u);
                    c(new i(h).eq(t), "Can not sign message");
                    for(var p = new o({
                        hash: this.hash,
                        entropy: f,
                        nonce: h,
                        pers: a.pers,
                        persEnc: a.persEnc || "utf8"
                    }), d = this.n.sub(new i(1)), y = 0;; y++){
                        var b = a.k ? a.k(y) : new i(p.generate(this.n.byteLength()));
                        if (!((b = this._truncateToN(b, !0)).cmpn(1) <= 0 || b.cmp(d) >= 0)) {
                            var m = this.g.mul(b);
                            if (!m.isInfinity()) {
                                var v = m.getX(), g = v.umod(this.n);
                                if (0 !== g.cmpn(0)) {
                                    var _ = b.invm(this.n).mul(g.mul(e.getPrivate()).iadd(t));
                                    if (0 !== (_ = _.umod(this.n)).cmpn(0)) {
                                        var w = (m.getY().isOdd() ? 1 : 0) | (0 !== v.cmp(g) ? 2 : 0);
                                        return a.canonical && _.cmp(this.nh) > 0 && (_ = this.n.sub(_), w ^= 1), new l({
                                            r: g,
                                            s: _,
                                            recoveryParam: w
                                        });
                                    }
                                }
                            }
                        }
                    }
                }, h.prototype.verify = function(t, e, r, n, i) {
                    i || (i = {}), t = this._truncateToN(t, !1, i.msgBitLength), r = this.keyFromPublic(r, n);
                    var o = (e = new l(e, "hex")).r, a = e.s;
                    if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
                    if (a.cmpn(1) < 0 || a.cmp(this.n) >= 0) return !1;
                    var s, u = a.invm(this.n), c = u.mul(t).umod(this.n), f = u.mul(o).umod(this.n);
                    return this.curve._maxwellTrick ? !(s = this.g.jmulAdd(c, r.getPublic(), f)).isInfinity() && s.eqXToP(o) : !(s = this.g.mulAdd(c, r.getPublic(), f)).isInfinity() && 0 === s.getX().umod(this.n).cmp(o);
                }, h.prototype.recoverPubKey = function(t, e, r, n) {
                    c((3 & r) === r, "The recovery param is more than two bits"), e = new l(e, n);
                    var o = this.n, a = new i(t), s = e.r, u = e.s, f = 1 & r, h = r >> 1;
                    if (s.cmp(this.curve.p.umod(this.curve.n)) >= 0 && h) throw new Error("Unable to find sencond key candinate");
                    s = h ? this.curve.pointFromX(s.add(this.curve.n), f) : this.curve.pointFromX(s, f);
                    var p = e.r.invm(o), d = o.sub(a).mul(p).umod(o), y = u.mul(p).umod(o);
                    return this.g.mulAdd(d, s, y);
                }, h.prototype.getKeyRecoveryParam = function(t, e, r, n) {
                    if (null !== (e = new l(e, n)).recoveryParam) return e.recoveryParam;
                    for(var i = 0; i < 4; i++){
                        var o;
                        try {
                            o = this.recoverPubKey(t, e, i);
                        } catch (t) {
                            continue;
                        }
                        if (o.eq(r)) return i;
                    }
                    throw new Error("Unable to find valid recovery factor");
                };
            },
            7425: (t, e, r)=>{
                "use strict";
                var n = r(2696);
                t.exports = function(t, e) {
                    if (null == t || null == t.discriminators) return null;
                    for(var r = 0, i = Object.keys(t.discriminators); r < i.length; r++){
                        var o = i[r], a = t.discriminators[o];
                        if (null != a.discriminatorMapping && n(a.discriminatorMapping.value, e)) return a;
                    }
                    return null;
                };
            },
            7430: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                function i(t) {
                    return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, i(t);
                }
                var o = r(3633).Binary, a = r(3305), s = r(2497);
                r(3672), r(7352);
                function u(t) {
                    return t && "object" === i(t) && !(t instanceof Date) && !a(t, "ObjectId") && (!Array.isArray(t) || 0 !== t.length) && !(t instanceof n) && !a(t, "Decimal128") && !(t instanceof o);
                }
                e.B = function t(e, r, i, o) {
                    var a, c = (a = e && s(e) && !n.isBuffer(e) ? Object.keys(e.toObject({
                        transform: !1,
                        virtuals: !1
                    }) || {}) : Object.keys(e || {})).length, f = {};
                    r = r ? r + "." : "";
                    for(var l = 0; l < c; ++l){
                        var h = a[l], p = e[h];
                        f[r + h] = p;
                        var d = o && o.path && o.path(r + h), y = o && o.nested && o.nested[r + h];
                        if (!d || "Mixed" !== d.instance) {
                            if (u(p)) {
                                if (i && i.skipArrays && Array.isArray(p)) continue;
                                var b = t(p, r + h, i, o);
                                for(var m in b)f[m] = b[m];
                                Array.isArray(p) && (f[r + h] = p);
                            }
                            if (y) for(var v = 0, g = Object.keys(o.paths); v < g.length; v++){
                                var _ = g[v];
                                _.startsWith(r + h + ".") && !f.hasOwnProperty(_) && (f[_] = void 0);
                            }
                        }
                    }
                    return f;
                };
            },
            7494: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e() {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, arguments);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8879)), u = r(5761);
                Object.defineProperty(s.prototype, "_id", u), t.exports = s;
            },
            7557: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var o = r(2400), a = r(8920), s = r(7930).arrayAtomicsSymbol, u = r(7930).arrayAtomicsBackupSymbol, c = r(7930).arrayParentSymbol, f = r(7930).arrayPathSymbol, l = r(7930).arraySchemaSymbol, h = Array.prototype.push, p = /^\d+$/;
                t.exports = function(t, e, r, n) {
                    var d;
                    if (Array.isArray(t)) {
                        var y = t.length;
                        if (0 === y) d = new Array;
                        else if (1 === y) (d = new Array(1))[0] = t[0];
                        else if (y < 1e4) d = new Array, h.apply(d, t);
                        else {
                            d = new Array;
                            for(var b = 0; b < y; ++b)h.call(d, t[b]);
                        }
                    } else d = [];
                    var m = i(i(i(i(i(i(i(i({}, s, {}), u, void 0), f, e), l, n), c, void 0), "isMongooseArray", !0), "isMongooseArrayProxy", !0), "__array", d);
                    t && null != t[s] && (m[s] = t[s]), null != r && r instanceof o && (m[c] = r, m[l] = n || r.schema.path(e));
                    var v = new Proxy(d, {
                        get: function(t, e) {
                            return m.hasOwnProperty(e) ? m[e] : a.hasOwnProperty(e) ? a[e] : n && n.virtuals && n.virtuals.hasOwnProperty(e) ? n.virtuals[e].applyGetters(void 0, t) : "string" == typeof e && p.test(e) && null != (null == n ? void 0 : n.$embeddedSchemaType) ? n.$embeddedSchemaType.applyGetters(d[e], r) : d[e];
                        },
                        set: function(t, e, r) {
                            return "string" == typeof e && p.test(e) ? a.set.call(v, e, r, !1) : m.hasOwnProperty(e) ? m[e] = r : n && n.virtuals && n.virtuals.hasOwnProperty(e) ? n.virtuals[e].applySetters(r, t) : d[e] = r, !0;
                        }
                    });
                    return v;
                };
            },
            7591: (t)=>{
                "use strict";
                var e = null;
                t.exports.get = function() {
                    return e;
                }, t.exports.set = function(t) {
                    e = t;
                };
            },
            7595: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(5899), o = r(1905), a = r(9834), s = r(7911);
                function u(t) {
                    return t.call.bind(t);
                }
                var c = "undefined" != typeof BigInt, f = "undefined" != typeof Symbol, l = u(Object.prototype.toString), h = u(Number.prototype.valueOf), p = u(String.prototype.valueOf), d = u(Boolean.prototype.valueOf);
                if (c) var y = u(BigInt.prototype.valueOf);
                if (f) var b = u(Symbol.prototype.valueOf);
                function m(t, e) {
                    if ("object" !== n(t)) return !1;
                    try {
                        return e(t), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                function v(t) {
                    return "[object Map]" === l(t);
                }
                function g(t) {
                    return "[object Set]" === l(t);
                }
                function _(t) {
                    return "[object WeakMap]" === l(t);
                }
                function w(t) {
                    return "[object WeakSet]" === l(t);
                }
                function S(t) {
                    return "[object ArrayBuffer]" === l(t);
                }
                function O(t) {
                    return "undefined" != typeof ArrayBuffer && (S.working ? S(t) : t instanceof ArrayBuffer);
                }
                function j(t) {
                    return "[object DataView]" === l(t);
                }
                function $(t) {
                    return "undefined" != typeof DataView && (j.working ? j(t) : t instanceof DataView);
                }
                e.isArgumentsObject = i, e.isGeneratorFunction = o, e.isTypedArray = s, e.isPromise = function(t) {
                    return "undefined" != typeof Promise && t instanceof Promise || null !== t && "object" === n(t) && "function" == typeof t.then && "function" == typeof t.catch;
                }, e.isArrayBufferView = function(t) {
                    return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t) : s(t) || $(t);
                }, e.isUint8Array = function(t) {
                    return "Uint8Array" === a(t);
                }, e.isUint8ClampedArray = function(t) {
                    return "Uint8ClampedArray" === a(t);
                }, e.isUint16Array = function(t) {
                    return "Uint16Array" === a(t);
                }, e.isUint32Array = function(t) {
                    return "Uint32Array" === a(t);
                }, e.isInt8Array = function(t) {
                    return "Int8Array" === a(t);
                }, e.isInt16Array = function(t) {
                    return "Int16Array" === a(t);
                }, e.isInt32Array = function(t) {
                    return "Int32Array" === a(t);
                }, e.isFloat32Array = function(t) {
                    return "Float32Array" === a(t);
                }, e.isFloat64Array = function(t) {
                    return "Float64Array" === a(t);
                }, e.isBigInt64Array = function(t) {
                    return "BigInt64Array" === a(t);
                }, e.isBigUint64Array = function(t) {
                    return "BigUint64Array" === a(t);
                }, v.working = "undefined" != typeof Map && v(new Map), e.isMap = function(t) {
                    return "undefined" != typeof Map && (v.working ? v(t) : t instanceof Map);
                }, g.working = "undefined" != typeof Set && g(new Set), e.isSet = function(t) {
                    return "undefined" != typeof Set && (g.working ? g(t) : t instanceof Set);
                }, _.working = "undefined" != typeof WeakMap && _(new WeakMap), e.isWeakMap = function(t) {
                    return "undefined" != typeof WeakMap && (_.working ? _(t) : t instanceof WeakMap);
                }, w.working = "undefined" != typeof WeakSet && w(new WeakSet), e.isWeakSet = function(t) {
                    return w(t);
                }, S.working = "undefined" != typeof ArrayBuffer && S(new ArrayBuffer), e.isArrayBuffer = O, j.working = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView && j(new DataView(new ArrayBuffer(1), 0, 1)), e.isDataView = $;
                var E = "undefined" != typeof SharedArrayBuffer ? SharedArrayBuffer : void 0;
                function A(t) {
                    return "[object SharedArrayBuffer]" === l(t);
                }
                function P(t) {
                    return void 0 !== E && (void 0 === A.working && (A.working = A(new E)), A.working ? A(t) : t instanceof E);
                }
                function x(t) {
                    return m(t, h);
                }
                function k(t) {
                    return m(t, p);
                }
                function M(t) {
                    return m(t, d);
                }
                function T(t) {
                    return c && m(t, y);
                }
                function B(t) {
                    return f && m(t, b);
                }
                e.isSharedArrayBuffer = P, e.isAsyncFunction = function(t) {
                    return "[object AsyncFunction]" === l(t);
                }, e.isMapIterator = function(t) {
                    return "[object Map Iterator]" === l(t);
                }, e.isSetIterator = function(t) {
                    return "[object Set Iterator]" === l(t);
                }, e.isGeneratorObject = function(t) {
                    return "[object Generator]" === l(t);
                }, e.isWebAssemblyCompiledModule = function(t) {
                    return "[object WebAssembly.Module]" === l(t);
                }, e.isNumberObject = x, e.isStringObject = k, e.isBooleanObject = M, e.isBigIntObject = T, e.isSymbolObject = B, e.isBoxedPrimitive = function(t) {
                    return x(t) || k(t) || M(t) || T(t) || B(t);
                }, e.isAnyArrayBuffer = function(t) {
                    return "undefined" != typeof Uint8Array && (O(t) || P(t));
                }, [
                    "isProxy",
                    "isExternal",
                    "isModuleNamespaceObject"
                ].forEach(function(t) {
                    Object.defineProperty(e, t, {
                        enumerable: !1,
                        value: function() {
                            throw new Error(t + " is not supported in userland");
                        }
                    });
                });
            },
            7695: (t, e, r)=>{
                "use strict";
                var n = r(4685), i = r(3528);
                function o() {
                    this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
                }
                e.BlockHash = o, o.prototype.update = function(t, e) {
                    if (t = n.toArray(t, e), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {
                        var r = (t = this.pending).length % this._delta8;
                        this.pending = t.slice(t.length - r, t.length), 0 === this.pending.length && (this.pending = null), t = n.join32(t, 0, t.length - r, this.endian);
                        for(var i = 0; i < t.length; i += this._delta32)this._update(t, i, i + this._delta32);
                    }
                    return this;
                }, o.prototype.digest = function(t) {
                    return this.update(this._pad()), i(null === this.pending), this._digest(t);
                }, o.prototype._pad = function() {
                    var t = this.pendingTotal, e = this._delta8, r = e - (t + this.padLength) % e, n = new Array(r + this.padLength);
                    n[0] = 128;
                    for(var i = 1; i < r; i++)n[i] = 0;
                    if (t <<= 3, "big" === this.endian) {
                        for(var o = 8; o < this.padLength; o++)n[i++] = 0;
                        n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = t >>> 24 & 255, n[i++] = t >>> 16 & 255, n[i++] = t >>> 8 & 255, n[i++] = 255 & t;
                    } else for(n[i++] = 255 & t, n[i++] = t >>> 8 & 255, n[i++] = t >>> 16 & 255, n[i++] = t >>> 24 & 255, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, o = 8; o < this.padLength; o++)n[i++] = 0;
                    return n;
                };
            },
            7760: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function i(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? n(Object(r), !0).forEach(function(e) {
                            o(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function o(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != s(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != s(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == s(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function a(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function s(t) {
                    return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, s(t);
                }
                var u, c, f = r(8499), l = r(2555), h = r(8213), p = r(4592), d = r(6426), y = d.CastError, b = r(5022), m = r(2069), v = r(622), g = r(2073), _ = r(7982), w = r(4450), S = r(5879), O = r(5110), j = r(7352), $ = r(8768), E = r(5558).G, A = r(4327), P = r(9604), x = r(8677), k = Symbol("mongoose#isNestedArray"), M = Object.freeze({});
                function T(t, e, n, i) {
                    c || (c = r(9600).Embedded);
                    var o, a, s = "type";
                    if (i && i.typeKey && (s = i.typeKey), this.schemaOptions = i, e) {
                        var u = {};
                        $.isPOJO(e) && (e[s] ? (delete (u = w(e))[s], e = e[s]) : e = b), null != n && null != n.ref && null == u.ref && (u.ref = n.ref), e === Object && (e = b);
                        var f = "string" == typeof e ? e : $.getFunctionName(e), l = r(7953), h = l.hasOwnProperty(f) ? l[f] : e;
                        if (this.casterConstructor = h, this.casterConstructor instanceof T && (this.casterConstructor[k] = !0), "function" != typeof h || h.$isArraySubdocument || h.$isSchemaMap) this.caster = h, this.caster instanceof c || (this.caster.path = t);
                        else {
                            var p = this.caster instanceof c ? null : t;
                            this.caster = new h(p, u);
                        }
                        this.$embeddedSchemaType = this.caster;
                    }
                    if (this.$isMongooseArray = !0, d.call(this, t, n, "Array"), null != this.defaultValue && (o = this.defaultValue, a = "function" == typeof o), !("defaultValue" in this) || null != this.defaultValue) {
                        var y = function() {
                            return a ? o.call(this) : null != o ? [].concat(o) : [];
                        };
                        y.$runBeforeSetters = !a, this.default(y);
                    }
                }
                T.schemaName = "Array", T.options = {
                    castNonArrays: !0
                }, T.defaultOptions = {}, T.set = d.set, T.setters = [], T.get = d.get, T.prototype = Object.create(d.prototype), T.prototype.constructor = T, T.prototype.OptionsConstructor = p, T._checkRequired = d.prototype.checkRequired, T.checkRequired = d.checkRequired, T.prototype.virtuals = null, T.prototype.checkRequired = function(t, e) {
                    return "object" === s(t) && d._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : T.checkRequired())(t);
                }, T.prototype.enum = function() {
                    for(var t = this;;){
                        var e = t && t.caster && t.caster.instance;
                        if ("Array" !== e) {
                            if ("String" !== e && "Number" !== e) throw new Error("`enum` can only be set on an array of strings or numbers , not " + e);
                            break;
                        }
                        t = t.caster;
                    }
                    var r = arguments;
                    return !Array.isArray(arguments) && $.isObject(arguments) && (r = $.object.vals(r)), t.caster.enum.apply(t.caster, r), this;
                }, T.prototype.applyGetters = function(t, e) {
                    return null != e && null != e.$__ && e.$populated(this.path) ? t : d.prototype.applyGetters.call(this, t, e);
                }, T.prototype._applySetters = function(t, e, r, n) {
                    if (this.casterConstructor.$isMongooseArray && T.options.castNonArrays && !this[k]) {
                        for(var i = 0, o = this; null != o && o.$isMongooseArray && !o.$isMongooseDocumentArray;)++i, o = o.casterConstructor;
                        if (null != t && 0 !== t.length) {
                            var a = g(t);
                            if (a.min === a.max && a.max < i && a.containsNonArrayItem) for(var s = a.max; s < i; ++s)t = [
                                t
                            ];
                        }
                    }
                    return d.prototype._applySetters.call(this, t, e, r, n);
                }, T.prototype.cast = function(t, e, n, i, o) {
                    var a, s;
                    if (u || (u = r(9600).Array), Array.isArray(t)) {
                        if (!t.length && e) {
                            var c = e.schema.indexedPaths(), f = this.path;
                            for(a = 0, s = c.length; a < s; ++a){
                                var l = c[a][0][f];
                                if ("2dsphere" === l || "2d" === l) return;
                            }
                            var h = this.path.endsWith(".coordinates") ? this.path.substring(0, this.path.lastIndexOf(".")) : null;
                            if (null != h) {
                                for(a = 0, s = c.length; a < s; ++a)if ("2dsphere" === c[a][0][h]) return;
                            }
                        }
                        o = o || M;
                        var p = $.isMongooseArray(t) ? t.__array : t, d = o.path || this.path;
                        if (null != o.arrayPathIndex && (d += "." + o.arrayPathIndex), p = (t = u(p, d, e, this)).__array, n && null != e && null != e.$__ && e.$populated(this.path)) return t;
                        var m = this.caster, v = m.$isMongooseArray;
                        if (m && this.casterConstructor !== b) try {
                            var g = p.length;
                            for(a = 0; a < g; a++){
                                var _ = {};
                                v && (null != o.arrayPath || null != m._arrayParentPath) && (_.arrayPathIndex = a), o.hydratedPopulatedDocs && (_.hydratedPopulatedDocs = o.hydratedPopulatedDocs), p[a] = m.applySetters(p[a], e, n, void 0, _);
                            }
                        } catch (e) {
                            throw new y("[" + e.kind + "]", j.inspect(t), this.path + "." + a, e, this);
                        }
                        return t;
                    }
                    var w = null != this.options.castNonArrays ? this.options.castNonArrays : T.options.castNonArrays;
                    if (n || w) return e && n && e.markModified(this.path), this.cast([
                        t
                    ], e, n);
                    throw new y("Array", j.inspect(t), this.path, null, this);
                }, T.prototype._castForPopulate = function(t, e) {
                    if (u || (u = r(9600).Array), Array.isArray(t)) {
                        var n, i = t.__array ? t.__array : t, o = i.length, a = this.caster;
                        if (a && this.casterConstructor !== b) try {
                            for(n = 0; n < o; n++){
                                var s = {};
                                a.$isMongooseArray && null != a._arrayParentPath && (s.arrayPathIndex = n), i[n] = a.cast(i[n], e, !1, void 0, s);
                            }
                        } catch (e) {
                            throw new y("[" + e.kind + "]", j.inspect(t), this.path + "." + n, e, this);
                        }
                        return t;
                    }
                    throw new y("Array", j.inspect(t), this.path, null, this);
                }, T.prototype.$toObject = T.prototype.toObject, T.prototype.discriminator = function() {
                    for(var t, e = this; e.$isMongooseArray && !e.$isMongooseDocumentArray;)if (null == (e = e.casterConstructor) || "function" == typeof e) throw new h("You can only add an embedded discriminator on a document array, " + this.path + " is a plain array");
                    return (t = e).discriminator.apply(t, arguments);
                }, T.prototype.clone = function() {
                    var t = Object.assign({}, this.options), e = new this.constructor(this.path, this.caster, t, this.schemaOptions);
                    return e.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e.requiredValidator = this.requiredValidator), e;
                }, T.prototype._castForQuery = function(t, e) {
                    var r = this, n = this.casterConstructor;
                    if (t && n.discriminators && n.schema && n.schema.options && n.schema.options.discriminatorKey) {
                        if ("string" == typeof t[n.schema.options.discriminatorKey] && n.discriminators[t[n.schema.options.discriminatorKey]]) n = n.discriminators[t[n.schema.options.discriminatorKey]];
                        else {
                            var i = x(n.discriminators, t[n.schema.options.discriminatorKey]);
                            i && (n = i);
                        }
                    }
                    var o = this.casterConstructor.prototype, a = o && o.castForQuery, s = o && o.cast, u = n.castForQuery, c = this.caster;
                    return Array.isArray(t) ? (this.setters.reverse().forEach(function(e) {
                        t = e.call(r, t, r);
                    }), t = t.map(function(t) {
                        return $.isObject(t) && t.$elemMatch ? t : a ? t = a.call(c, null, t, e) : s ? t = s.call(c, t) : u ? t = u.call(c, null, t, e) : null != t ? t = new n(t) : t;
                    })) : a ? t = a.call(c, null, t, e) : s ? t = s.call(c, t) : u ? t = u.call(c, null, t, e) : null != t && (t = new n(t)), t;
                }, T.prototype.castForQuery = function(t, e, r) {
                    var n;
                    if (null != t) {
                        if (!(n = this.$conditionalHandlers[t])) throw new Error("Can't use " + t + " with Array.");
                        return n.call(this, e, r);
                    }
                    return this._castForQuery(e, r);
                }, T.prototype.virtual = function(t, e) {
                    if (t instanceof v || "VirtualType" === S(t)) return this.virtual(t.path, t.options);
                    if (e = new m(e), $.hasUserDefinedProperty(e, [
                        "ref",
                        "refPath"
                    ])) throw new h("Cannot set populate virtual as a property of an array");
                    var r = new v(e, t);
                    return null === this.virtuals && (this.virtuals = {}), this.virtuals[t] = r, r;
                };
                var B = T.prototype.$conditionalHandlers = {};
                function I(t) {
                    return function(e, r) {
                        if (!Array.isArray(e)) throw new TypeError("conditional " + t + " requires an array");
                        var n, i = [], o = function(t, e) {
                            var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (!r) {
                                if (Array.isArray(t) || (r = function(t, e) {
                                    if (t) {
                                        if ("string" == typeof t) return a(t, e);
                                        var r = ({}).toString.call(t).slice(8, -1);
                                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? a(t, e) : void 0;
                                    }
                                }(t)) || e && t && "number" == typeof t.length) {
                                    r && (t = r);
                                    var n = 0, i = function() {};
                                    return {
                                        s: i,
                                        n: function() {
                                            return n >= t.length ? {
                                                done: !0
                                            } : {
                                                done: !1,
                                                value: t[n++]
                                            };
                                        },
                                        e: function(t) {
                                            throw t;
                                        },
                                        f: i
                                    };
                                }
                                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                            }
                            var o, s = !0, u = !1;
                            return {
                                s: function() {
                                    r = r.call(t);
                                },
                                n: function() {
                                    var t = r.next();
                                    return s = t.done, t;
                                },
                                e: function(t) {
                                    u = !0, o = t;
                                },
                                f: function() {
                                    try {
                                        s || null == r.return || r.return();
                                    } finally{
                                        if (u) throw o;
                                    }
                                }
                            };
                        }(e);
                        try {
                            for(o.s(); !(n = o.n()).done;){
                                var s, u = n.value;
                                i.push(_(null !== (s = this.casterConstructor.schema) && void 0 !== s ? s : r.schema, u, null, this && this.$$context));
                            }
                        } catch (t) {
                            o.e(t);
                        } finally{
                            o.f();
                        }
                        return i;
                    };
                }
                B.$all = function(t, e) {
                    var r = this;
                    return Array.isArray(t) || (t = [
                        t
                    ]), t = t.map(function(t) {
                        if (!$.isObject(t)) return t;
                        if (null != t.$elemMatch) return {
                            $elemMatch: _(r.casterConstructor.schema, t.$elemMatch, null, r && r.$$context)
                        };
                        var e = {};
                        return e[r.path] = t, _(r.casterConstructor.schema, e, null, r && r.$$context)[r.path];
                    }, this), this.castForQuery(null, t, e);
                }, B.$options = String, B.$elemMatch = function(t, e) {
                    for(var r = Object.keys(t), n = r.length, i = 0; i < n; ++i){
                        var o = r[i], a = t[o];
                        O(o) && null != a && (t[o] = this.castForQuery(o, a, e));
                    }
                    return t;
                }, B.$geoIntersects = P.cast$geoIntersects, B.$or = I("$or"), B.$and = I("$and"), B.$nor = I("$nor"), B.$near = B.$nearSphere = P.cast$near, B.$within = B.$geoWithin = P.cast$within, B.$size = B.$minDistance = B.$maxDistance = E, B.$exists = f, B.$type = l, B.$eq = B.$gt = B.$gte = B.$lt = B.$lte = B.$not = B.$regex = B.$ne = T.prototype._castForQuery, B.$nin = d.prototype.$conditionalHandlers.$nin, B.$in = d.prototype.$conditionalHandlers.$in, T.prototype.toJSONSchema = function(t) {
                    var e = this.getEmbeddedSchemaType(), r = this.options.required && "function" != typeof this.options.required;
                    return i(i({}, A("array", "array", null == t ? void 0 : t.useBsonType, r)), {}, {
                        items: e.toJSONSchema(t)
                    });
                }, t.exports = T;
            },
            7768: (t, e, r)=>{
                "use strict";
                var n = r(2402);
                t.exports = function(t) {
                    return null == t ? t : "" === t ? null : ("string" != typeof t && "boolean" != typeof t || (t = Number(t)), n.ok(!isNaN(t)), t instanceof Number ? t.valueOf() : "number" == typeof t ? t : Array.isArray(t) || "function" != typeof t.valueOf ? t.toString && !Array.isArray(t) && t.toString() == Number(t) ? Number(t) : void n.ok(!1) : Number(t.valueOf()));
                };
            },
            7775: (t, e, r)=>{
                t.exports = i;
                var n = r(3550).EventEmitter;
                function i() {
                    n.call(this);
                }
                r(1679)(i, n), i.Readable = r(8134), i.Writable = r(4186), i.Duplex = r(4560), i.Transform = r(8784), i.PassThrough = r(1026), i.finished = r(8500), i.pipeline = r(1144), i.Stream = i, i.prototype.pipe = function(t, e) {
                    var r = this;
                    function i(e) {
                        t.writable && !1 === t.write(e) && r.pause && r.pause();
                    }
                    function o() {
                        r.readable && r.resume && r.resume();
                    }
                    r.on("data", i), t.on("drain", o), t._isStdio || e && !1 === e.end || (r.on("end", s), r.on("close", u));
                    var a = !1;
                    function s() {
                        a || (a = !0, t.end());
                    }
                    function u() {
                        a || (a = !0, "function" == typeof t.destroy && t.destroy());
                    }
                    function c(t) {
                        if (f(), 0 === n.listenerCount(this, "error")) throw t;
                    }
                    function f() {
                        r.removeListener("data", i), t.removeListener("drain", o), r.removeListener("end", s), r.removeListener("close", u), r.removeListener("error", c), t.removeListener("error", c), r.removeListener("end", f), r.removeListener("close", f), t.removeListener("close", f);
                    }
                    return r.on("error", c), t.on("error", c), r.on("end", f), r.on("close", f), t.on("close", f), t.emit("pipe", r), t;
                };
            },
            7790: ()=>{},
            7797: (t, e, r)=>{
                var n = r(5833), i = r(9732).Buffer;
                function o(t) {
                    var e = i.allocUnsafe(4);
                    return e.writeUInt32BE(t, 0), e;
                }
                t.exports = function(t, e) {
                    for(var r, a = i.alloc(0), s = 0; a.length < e;)r = o(s++), a = i.concat([
                        a,
                        n("sha1").update(t).update(r).digest()
                    ]);
                    return a.slice(0, e);
                };
            },
            7799: function(t, e, r) {
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                !function(t, e) {
                    "use strict";
                    function i(t, e) {
                        if (!t) throw new Error(e || "Assertion failed");
                    }
                    function o(t, e) {
                        t.super_ = e;
                        var r = function() {};
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t;
                    }
                    function a(t, e, r) {
                        if (a.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
                    }
                    var s;
                    "object" === n(t) ? t.exports = a : e.BN = a, a.BN = a, a.wordSize = 26;
                    try {
                        s = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(7790).Buffer;
                    } catch (t) {}
                    function u(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 48 && r <= 57 ? r - 48 : r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : void i(!1, "Invalid character in " + t);
                    }
                    function c(t, e, r) {
                        var n = u(t, r);
                        return r - 1 >= e && (n |= u(t, r - 1) << 4), n;
                    }
                    function f(t, e, r, n) {
                        for(var o = 0, a = 0, s = Math.min(t.length, r), u = e; u < s; u++){
                            var c = t.charCodeAt(u) - 48;
                            o *= n, a = c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c, i(c >= 0 && a < n, "Invalid character"), o += a;
                        }
                        return o;
                    }
                    function l(t, e) {
                        t.words = e.words, t.length = e.length, t.negative = e.negative, t.red = e.red;
                    }
                    if (a.isBN = function(t) {
                        return t instanceof a || null !== t && "object" === n(t) && t.constructor.wordSize === a.wordSize && Array.isArray(t.words);
                    }, a.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e;
                    }, a.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e;
                    }, a.prototype._init = function(t, e, r) {
                        if ("number" == typeof t) return this._initNumber(t, e, r);
                        if ("object" === n(t)) return this._initArray(t, e, r);
                        "hex" === e && (e = 16), i(e === (0 | e) && e >= 2 && e <= 36);
                        var o = 0;
                        "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === e ? this._parseHex(t, o, r) : (this._parseBase(t, e, o), "le" === r && this._initArray(this.toArray(), e, r)));
                    }, a.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [
                            67108863 & t
                        ], this.length = 1) : t < 4503599627370496 ? (this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863
                        ], this.length = 2) : (i(t < 9007199254740992), this.words = [
                            67108863 & t,
                            t / 67108864 & 67108863,
                            1
                        ], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
                    }, a.prototype._initArray = function(t, e, r) {
                        if (i("number" == typeof t.length), t.length <= 0) return this.words = [
                            0
                        ], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var o, a, s = 0;
                        if ("be" === r) for(n = t.length - 1, o = 0; n >= 0; n -= 3)a = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= a << s & 67108863, this.words[o + 1] = a >>> 26 - s & 67108863, (s += 24) >= 26 && (s -= 26, o++);
                        else if ("le" === r) for(n = 0, o = 0; n < t.length; n += 3)a = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= a << s & 67108863, this.words[o + 1] = a >>> 26 - s & 67108863, (s += 24) >= 26 && (s -= 26, o++);
                        return this._strip();
                    }, a.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var i, o = 0, a = 0;
                        if ("be" === r) for(n = t.length - 1; n >= e; n -= 2)i = c(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                        else for(n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2)i = c(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                        this._strip();
                    }, a.prototype._parseBase = function(t, e, r) {
                        this.words = [
                            0
                        ], this.length = 1;
                        for(var n = 0, i = 1; i <= 67108863; i *= e)n++;
                        n--, i = i / e | 0;
                        for(var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n)u = f(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== a) {
                            var l = 1;
                            for(u = f(t, c, t.length, e), c = 0; c < a; c++)l *= e;
                            this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        }
                        this._strip();
                    }, a.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for(var e = 0; e < this.length; e++)t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red;
                    }, a.prototype._move = function(t) {
                        l(t, this);
                    }, a.prototype.clone = function() {
                        var t = new a(null);
                        return this.copy(t), t;
                    }, a.prototype._expand = function(t) {
                        for(; this.length < t;)this.words[this.length++] = 0;
                        return this;
                    }, a.prototype._strip = function() {
                        for(; this.length > 1 && 0 === this.words[this.length - 1];)this.length--;
                        return this._normSign();
                    }, a.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }, "undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
                        a.prototype[Symbol.for("nodejs.util.inspect.custom")] = h;
                    } catch (t) {
                        a.prototype.inspect = h;
                    }
                    else a.prototype.inspect = h;
                    function h() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    }
                    var p = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000"
                    ], d = [
                        0,
                        0,
                        25,
                        16,
                        12,
                        11,
                        10,
                        9,
                        8,
                        8,
                        7,
                        7,
                        7,
                        7,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5
                    ], y = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176
                    ];
                    function b(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0], o = 0 | e.words[0], a = i * o, s = 67108863 & a, u = a / 67108864 | 0;
                        r.words[0] = s;
                        for(var c = 1; c < n; c++){
                            for(var f = u >>> 26, l = 67108863 & u, h = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= h; p++){
                                var d = c - p | 0;
                                f += (a = (i = 0 | t.words[d]) * (o = 0 | e.words[p]) + l) / 67108864 | 0, l = 67108863 & a;
                            }
                            r.words[c] = 0 | l, u = 0 | f;
                        }
                        return 0 !== u ? r.words[c] = 0 | u : r.length--, r._strip();
                    }
                    a.prototype.toString = function(t, e) {
                        var r;
                        if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                            r = "";
                            for(var n = 0, o = 0, a = 0; a < this.length; a++){
                                var s = this.words[a], u = (16777215 & (s << n | o)).toString(16);
                                o = s >>> 24 - n & 16777215, (n += 2) >= 26 && (n -= 26, a--), r = 0 !== o || a !== this.length - 1 ? p[6 - u.length] + u + r : u + r;
                            }
                            for(0 !== o && (r = o.toString(16) + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var c = d[t], f = y[t];
                            r = "";
                            var l = this.clone();
                            for(l.negative = 0; !l.isZero();){
                                var h = l.modrn(f).toString(t);
                                r = (l = l.idivn(f)).isZero() ? h + r : p[c - h.length] + h + r;
                            }
                            for(this.isZero() && (r = "0" + r); r.length % e != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        i(!1, "Base should be between 2 and 36");
                    }, a.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
                    }, a.prototype.toJSON = function() {
                        return this.toString(16, 2);
                    }, s && (a.prototype.toBuffer = function(t, e) {
                        return this.toArrayLike(s, t, e);
                    }), a.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e);
                    }, a.prototype.toArrayLike = function(t, e, r) {
                        this._strip();
                        var n = this.byteLength(), o = r || Math.max(1, n);
                        i(n <= o, "byte array longer than desired length"), i(o > 0, "Requested array length <= 0");
                        var a = function(t, e) {
                            return t.allocUnsafe ? t.allocUnsafe(e) : new t(e);
                        }(t, o);
                        return this["_toArrayLike" + ("le" === e ? "LE" : "BE")](a, n), a;
                    }, a.prototype._toArrayLikeLE = function(t, e) {
                        for(var r = 0, n = 0, i = 0, o = 0; i < this.length; i++){
                            var a = this.words[i] << o | n;
                            t[r++] = 255 & a, r < t.length && (t[r++] = a >> 8 & 255), r < t.length && (t[r++] = a >> 16 & 255), 6 === o ? (r < t.length && (t[r++] = a >> 24 & 255), n = 0, o = 0) : (n = a >>> 24, o += 2);
                        }
                        if (r < t.length) for(t[r++] = n; r < t.length;)t[r++] = 0;
                    }, a.prototype._toArrayLikeBE = function(t, e) {
                        for(var r = t.length - 1, n = 0, i = 0, o = 0; i < this.length; i++){
                            var a = this.words[i] << o | n;
                            t[r--] = 255 & a, r >= 0 && (t[r--] = a >> 8 & 255), r >= 0 && (t[r--] = a >> 16 & 255), 6 === o ? (r >= 0 && (t[r--] = a >> 24 & 255), n = 0, o = 0) : (n = a >>> 24, o += 2);
                        }
                        if (r >= 0) for(t[r--] = n; r >= 0;)t[r--] = 0;
                    }, Math.clz32 ? a.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t);
                    } : a.prototype._countBits = function(t) {
                        var e = t, r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
                    }, a.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t, r = 0;
                        return 8191 & e || (r += 13, e >>>= 13), 127 & e || (r += 7, e >>>= 7), 15 & e || (r += 4, e >>>= 4), 3 & e || (r += 2, e >>>= 2), 1 & e || r++, r;
                    }, a.prototype.bitLength = function() {
                        var t = this.words[this.length - 1], e = this._countBits(t);
                        return 26 * (this.length - 1) + e;
                    }, a.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for(var t = 0, e = 0; e < this.length; e++){
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break;
                        }
                        return t;
                    }, a.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8);
                    }, a.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
                    }, a.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
                    }, a.prototype.isNeg = function() {
                        return 0 !== this.negative;
                    }, a.prototype.neg = function() {
                        return this.clone().ineg();
                    }, a.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this;
                    }, a.prototype.iuor = function(t) {
                        for(; this.length < t.length;)this.words[this.length++] = 0;
                        for(var e = 0; e < t.length; e++)this.words[e] = this.words[e] | t.words[e];
                        return this._strip();
                    }, a.prototype.ior = function(t) {
                        return i(!(this.negative | t.negative)), this.iuor(t);
                    }, a.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
                    }, a.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
                    }, a.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for(var r = 0; r < e.length; r++)this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this._strip();
                    }, a.prototype.iand = function(t) {
                        return i(!(this.negative | t.negative)), this.iuand(t);
                    }, a.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
                    }, a.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
                    }, a.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for(var n = 0; n < r.length; n++)this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e) for(; n < e.length; n++)this.words[n] = e.words[n];
                        return this.length = e.length, this._strip();
                    }, a.prototype.ixor = function(t) {
                        return i(!(this.negative | t.negative)), this.iuxor(t);
                    }, a.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
                    }, a.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
                    }, a.prototype.inotn = function(t) {
                        i("number" == typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26), r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for(var n = 0; n < e; n++)this.words[n] = 67108863 & ~this.words[n];
                        return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this._strip();
                    }, a.prototype.notn = function(t) {
                        return this.clone().inotn(t);
                    }, a.prototype.setn = function(t, e) {
                        i("number" == typeof t && t >= 0);
                        var r = t / 26 | 0, n = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this._strip();
                    }, a.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for(var i = 0, o = 0; o < n.length; o++)e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for(; 0 !== i && o < r.length; o++)e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this) for(; o < r.length; o++)this.words[o] = r.words[o];
                        return this;
                    }, a.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
                    }, a.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign();
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for(var o = 0, a = 0; a < n.length; a++)o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                        for(; 0 !== o && a < r.length; a++)o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                        if (0 === o && a < r.length && r !== this) for(; a < r.length; a++)this.words[a] = r.words[a];
                        return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this._strip();
                    }, a.prototype.sub = function(t) {
                        return this.clone().isub(t);
                    };
                    var m = function(t, e, r) {
                        var n, i, o, a = t.words, s = e.words, u = r.words, c = 0, f = 0 | a[0], l = 8191 & f, h = f >>> 13, p = 0 | a[1], d = 8191 & p, y = p >>> 13, b = 0 | a[2], m = 8191 & b, v = b >>> 13, g = 0 | a[3], _ = 8191 & g, w = g >>> 13, S = 0 | a[4], O = 8191 & S, j = S >>> 13, $ = 0 | a[5], E = 8191 & $, A = $ >>> 13, P = 0 | a[6], x = 8191 & P, k = P >>> 13, M = 0 | a[7], T = 8191 & M, B = M >>> 13, I = 0 | a[8], R = 8191 & I, N = I >>> 13, D = 0 | a[9], L = 8191 & D, C = D >>> 13, U = 0 | s[0], q = 8191 & U, F = U >>> 13, V = 0 | s[1], z = 8191 & V, K = V >>> 13, H = 0 | s[2], W = 8191 & H, J = H >>> 13, G = 0 | s[3], Y = 8191 & G, Q = G >>> 13, X = 0 | s[4], Z = 8191 & X, tt = X >>> 13, et = 0 | s[5], rt = 8191 & et, nt = et >>> 13, it = 0 | s[6], ot = 8191 & it, at = it >>> 13, st = 0 | s[7], ut = 8191 & st, ct = st >>> 13, ft = 0 | s[8], lt = 8191 & ft, ht = ft >>> 13, pt = 0 | s[9], dt = 8191 & pt, yt = pt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19;
                        var bt = (c + (n = Math.imul(l, q)) | 0) + ((8191 & (i = (i = Math.imul(l, F)) + Math.imul(h, q) | 0)) << 13) | 0;
                        c = ((o = Math.imul(h, F)) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(d, q), i = (i = Math.imul(d, F)) + Math.imul(y, q) | 0, o = Math.imul(y, F);
                        var mt = (c + (n = n + Math.imul(l, z) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(l, K) | 0) + Math.imul(h, z) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(h, K) | 0) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(m, q), i = (i = Math.imul(m, F)) + Math.imul(v, q) | 0, o = Math.imul(v, F), n = n + Math.imul(d, z) | 0, i = (i = i + Math.imul(d, K) | 0) + Math.imul(y, z) | 0, o = o + Math.imul(y, K) | 0;
                        var vt = (c + (n = n + Math.imul(l, W) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(l, J) | 0) + Math.imul(h, W) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(h, J) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(_, q), i = (i = Math.imul(_, F)) + Math.imul(w, q) | 0, o = Math.imul(w, F), n = n + Math.imul(m, z) | 0, i = (i = i + Math.imul(m, K) | 0) + Math.imul(v, z) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(d, W) | 0, i = (i = i + Math.imul(d, J) | 0) + Math.imul(y, W) | 0, o = o + Math.imul(y, J) | 0;
                        var gt = (c + (n = n + Math.imul(l, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(l, Q) | 0) + Math.imul(h, Y) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(h, Q) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(O, q), i = (i = Math.imul(O, F)) + Math.imul(j, q) | 0, o = Math.imul(j, F), n = n + Math.imul(_, z) | 0, i = (i = i + Math.imul(_, K) | 0) + Math.imul(w, z) | 0, o = o + Math.imul(w, K) | 0, n = n + Math.imul(m, W) | 0, i = (i = i + Math.imul(m, J) | 0) + Math.imul(v, W) | 0, o = o + Math.imul(v, J) | 0, n = n + Math.imul(d, Y) | 0, i = (i = i + Math.imul(d, Q) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, Q) | 0;
                        var _t = (c + (n = n + Math.imul(l, Z) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(l, tt) | 0) + Math.imul(h, Z) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(h, tt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(E, q), i = (i = Math.imul(E, F)) + Math.imul(A, q) | 0, o = Math.imul(A, F), n = n + Math.imul(O, z) | 0, i = (i = i + Math.imul(O, K) | 0) + Math.imul(j, z) | 0, o = o + Math.imul(j, K) | 0, n = n + Math.imul(_, W) | 0, i = (i = i + Math.imul(_, J) | 0) + Math.imul(w, W) | 0, o = o + Math.imul(w, J) | 0, n = n + Math.imul(m, Y) | 0, i = (i = i + Math.imul(m, Q) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, Q) | 0, n = n + Math.imul(d, Z) | 0, i = (i = i + Math.imul(d, tt) | 0) + Math.imul(y, Z) | 0, o = o + Math.imul(y, tt) | 0;
                        var wt = (c + (n = n + Math.imul(l, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(l, nt) | 0) + Math.imul(h, rt) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(h, nt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(x, q), i = (i = Math.imul(x, F)) + Math.imul(k, q) | 0, o = Math.imul(k, F), n = n + Math.imul(E, z) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(A, z) | 0, o = o + Math.imul(A, K) | 0, n = n + Math.imul(O, W) | 0, i = (i = i + Math.imul(O, J) | 0) + Math.imul(j, W) | 0, o = o + Math.imul(j, J) | 0, n = n + Math.imul(_, Y) | 0, i = (i = i + Math.imul(_, Q) | 0) + Math.imul(w, Y) | 0, o = o + Math.imul(w, Q) | 0, n = n + Math.imul(m, Z) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(v, Z) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(d, rt) | 0, i = (i = i + Math.imul(d, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                        var St = (c + (n = n + Math.imul(l, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(l, at) | 0) + Math.imul(h, ot) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(h, at) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(T, q), i = (i = Math.imul(T, F)) + Math.imul(B, q) | 0, o = Math.imul(B, F), n = n + Math.imul(x, z) | 0, i = (i = i + Math.imul(x, K) | 0) + Math.imul(k, z) | 0, o = o + Math.imul(k, K) | 0, n = n + Math.imul(E, W) | 0, i = (i = i + Math.imul(E, J) | 0) + Math.imul(A, W) | 0, o = o + Math.imul(A, J) | 0, n = n + Math.imul(O, Y) | 0, i = (i = i + Math.imul(O, Q) | 0) + Math.imul(j, Y) | 0, o = o + Math.imul(j, Q) | 0, n = n + Math.imul(_, Z) | 0, i = (i = i + Math.imul(_, tt) | 0) + Math.imul(w, Z) | 0, o = o + Math.imul(w, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(d, ot) | 0, i = (i = i + Math.imul(d, at) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, at) | 0;
                        var Ot = (c + (n = n + Math.imul(l, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(l, ct) | 0) + Math.imul(h, ut) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(h, ct) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(R, q), i = (i = Math.imul(R, F)) + Math.imul(N, q) | 0, o = Math.imul(N, F), n = n + Math.imul(T, z) | 0, i = (i = i + Math.imul(T, K) | 0) + Math.imul(B, z) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(x, W) | 0, i = (i = i + Math.imul(x, J) | 0) + Math.imul(k, W) | 0, o = o + Math.imul(k, J) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, Q) | 0) + Math.imul(A, Y) | 0, o = o + Math.imul(A, Q) | 0, n = n + Math.imul(O, Z) | 0, i = (i = i + Math.imul(O, tt) | 0) + Math.imul(j, Z) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(_, rt) | 0, i = (i = i + Math.imul(_, nt) | 0) + Math.imul(w, rt) | 0, o = o + Math.imul(w, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, at) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, at) | 0, n = n + Math.imul(d, ut) | 0, i = (i = i + Math.imul(d, ct) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ct) | 0;
                        var jt = (c + (n = n + Math.imul(l, lt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(l, ht) | 0) + Math.imul(h, lt) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(h, ht) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(L, q), i = (i = Math.imul(L, F)) + Math.imul(C, q) | 0, o = Math.imul(C, F), n = n + Math.imul(R, z) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(N, z) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(T, W) | 0, i = (i = i + Math.imul(T, J) | 0) + Math.imul(B, W) | 0, o = o + Math.imul(B, J) | 0, n = n + Math.imul(x, Y) | 0, i = (i = i + Math.imul(x, Q) | 0) + Math.imul(k, Y) | 0, o = o + Math.imul(k, Q) | 0, n = n + Math.imul(E, Z) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(A, Z) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(O, rt) | 0, i = (i = i + Math.imul(O, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(_, ot) | 0, i = (i = i + Math.imul(_, at) | 0) + Math.imul(w, ot) | 0, o = o + Math.imul(w, at) | 0, n = n + Math.imul(m, ut) | 0, i = (i = i + Math.imul(m, ct) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ct) | 0, n = n + Math.imul(d, lt) | 0, i = (i = i + Math.imul(d, ht) | 0) + Math.imul(y, lt) | 0, o = o + Math.imul(y, ht) | 0;
                        var $t = (c + (n = n + Math.imul(l, dt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(l, yt) | 0) + Math.imul(h, dt) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(h, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(L, z), i = (i = Math.imul(L, K)) + Math.imul(C, z) | 0, o = Math.imul(C, K), n = n + Math.imul(R, W) | 0, i = (i = i + Math.imul(R, J) | 0) + Math.imul(N, W) | 0, o = o + Math.imul(N, J) | 0, n = n + Math.imul(T, Y) | 0, i = (i = i + Math.imul(T, Q) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, Q) | 0, n = n + Math.imul(x, Z) | 0, i = (i = i + Math.imul(x, tt) | 0) + Math.imul(k, Z) | 0, o = o + Math.imul(k, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(O, ot) | 0, i = (i = i + Math.imul(O, at) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, at) | 0, n = n + Math.imul(_, ut) | 0, i = (i = i + Math.imul(_, ct) | 0) + Math.imul(w, ut) | 0, o = o + Math.imul(w, ct) | 0, n = n + Math.imul(m, lt) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(v, lt) | 0, o = o + Math.imul(v, ht) | 0;
                        var Et = (c + (n = n + Math.imul(d, dt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, yt) | 0) + Math.imul(y, dt) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(L, W), i = (i = Math.imul(L, J)) + Math.imul(C, W) | 0, o = Math.imul(C, J), n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, Q) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, Q) | 0, n = n + Math.imul(T, Z) | 0, i = (i = i + Math.imul(T, tt) | 0) + Math.imul(B, Z) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(x, rt) | 0, i = (i = i + Math.imul(x, nt) | 0) + Math.imul(k, rt) | 0, o = o + Math.imul(k, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, at) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, at) | 0, n = n + Math.imul(O, ut) | 0, i = (i = i + Math.imul(O, ct) | 0) + Math.imul(j, ut) | 0, o = o + Math.imul(j, ct) | 0, n = n + Math.imul(_, lt) | 0, i = (i = i + Math.imul(_, ht) | 0) + Math.imul(w, lt) | 0, o = o + Math.imul(w, ht) | 0;
                        var At = (c + (n = n + Math.imul(m, dt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, yt) | 0) + Math.imul(v, dt) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(L, Y), i = (i = Math.imul(L, Q)) + Math.imul(C, Y) | 0, o = Math.imul(C, Q), n = n + Math.imul(R, Z) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(N, Z) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(T, rt) | 0, i = (i = i + Math.imul(T, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(x, ot) | 0, i = (i = i + Math.imul(x, at) | 0) + Math.imul(k, ot) | 0, o = o + Math.imul(k, at) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ct) | 0) + Math.imul(A, ut) | 0, o = o + Math.imul(A, ct) | 0, n = n + Math.imul(O, lt) | 0, i = (i = i + Math.imul(O, ht) | 0) + Math.imul(j, lt) | 0, o = o + Math.imul(j, ht) | 0;
                        var Pt = (c + (n = n + Math.imul(_, dt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(_, yt) | 0) + Math.imul(w, dt) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(w, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(L, Z), i = (i = Math.imul(L, tt)) + Math.imul(C, Z) | 0, o = Math.imul(C, tt), n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(T, ot) | 0, i = (i = i + Math.imul(T, at) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, at) | 0, n = n + Math.imul(x, ut) | 0, i = (i = i + Math.imul(x, ct) | 0) + Math.imul(k, ut) | 0, o = o + Math.imul(k, ct) | 0, n = n + Math.imul(E, lt) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(A, lt) | 0, o = o + Math.imul(A, ht) | 0;
                        var xt = (c + (n = n + Math.imul(O, dt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(O, yt) | 0) + Math.imul(j, dt) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(j, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(L, rt), i = (i = Math.imul(L, nt)) + Math.imul(C, rt) | 0, o = Math.imul(C, nt), n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, at) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, at) | 0, n = n + Math.imul(T, ut) | 0, i = (i = i + Math.imul(T, ct) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ct) | 0, n = n + Math.imul(x, lt) | 0, i = (i = i + Math.imul(x, ht) | 0) + Math.imul(k, lt) | 0, o = o + Math.imul(k, ht) | 0;
                        var kt = (c + (n = n + Math.imul(E, dt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(A, dt) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(A, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(L, ot), i = (i = Math.imul(L, at)) + Math.imul(C, ot) | 0, o = Math.imul(C, at), n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ct) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ct) | 0, n = n + Math.imul(T, lt) | 0, i = (i = i + Math.imul(T, ht) | 0) + Math.imul(B, lt) | 0, o = o + Math.imul(B, ht) | 0;
                        var Mt = (c + (n = n + Math.imul(x, dt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(x, yt) | 0) + Math.imul(k, dt) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(k, yt) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(L, ut), i = (i = Math.imul(L, ct)) + Math.imul(C, ut) | 0, o = Math.imul(C, ct), n = n + Math.imul(R, lt) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(N, lt) | 0, o = o + Math.imul(N, ht) | 0;
                        var Tt = (c + (n = n + Math.imul(T, dt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(T, yt) | 0) + Math.imul(B, dt) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(L, lt), i = (i = Math.imul(L, ht)) + Math.imul(C, lt) | 0, o = Math.imul(C, ht);
                        var Bt = (c + (n = n + Math.imul(R, dt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(N, dt) | 0)) << 13) | 0;
                        c = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
                        var It = (c + (n = Math.imul(L, dt)) | 0) + ((8191 & (i = (i = Math.imul(L, yt)) + Math.imul(C, dt) | 0)) << 13) | 0;
                        return c = ((o = Math.imul(C, yt)) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, u[0] = bt, u[1] = mt, u[2] = vt, u[3] = gt, u[4] = _t, u[5] = wt, u[6] = St, u[7] = Ot, u[8] = jt, u[9] = $t, u[10] = Et, u[11] = At, u[12] = Pt, u[13] = xt, u[14] = kt, u[15] = Mt, u[16] = Tt, u[17] = Bt, u[18] = It, 0 !== c && (u[19] = c, r.length++), r;
                    };
                    function v(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for(var n = 0, i = 0, o = 0; o < r.length - 1; o++){
                            var a = i;
                            i = 0;
                            for(var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++){
                                var f = o - c, l = (0 | t.words[f]) * (0 | e.words[c]), h = 67108863 & l;
                                s = 67108863 & (h = h + s | 0), i += (a = (a = a + (l / 67108864 | 0) | 0) + (h >>> 26) | 0) >>> 26, a &= 67108863;
                            }
                            r.words[o] = s, n = a, a = i;
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r._strip();
                    }
                    function g(t, e, r) {
                        return v(t, e, r);
                    }
                    function _(t, e) {
                        this.x = t, this.y = e;
                    }
                    Math.imul || (m = b), a.prototype.mulTo = function(t, e) {
                        var r = this.length + t.length;
                        return 10 === this.length && 10 === t.length ? m(this, t, e) : r < 63 ? b(this, t, e) : r < 1024 ? v(this, t, e) : g(this, t, e);
                    }, _.prototype.makeRBT = function(t) {
                        for(var e = new Array(t), r = a.prototype._countBits(t) - 1, n = 0; n < t; n++)e[n] = this.revBin(n, r, t);
                        return e;
                    }, _.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for(var n = 0, i = 0; i < e; i++)n |= (1 & t) << e - i - 1, t >>= 1;
                        return n;
                    }, _.prototype.permute = function(t, e, r, n, i, o) {
                        for(var a = 0; a < o; a++)n[a] = e[t[a]], i[a] = r[t[a]];
                    }, _.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for(var a = 1; a < i; a <<= 1)for(var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), f = 0; f < i; f += s)for(var l = u, h = c, p = 0; p < a; p++){
                            var d = r[f + p], y = n[f + p], b = r[f + p + a], m = n[f + p + a], v = l * b - h * m;
                            m = l * m + h * b, b = v, r[f + p] = d + b, n[f + p] = y + m, r[f + p + a] = d - b, n[f + p + a] = y - m, p !== s && (v = u * l - c * h, h = u * h + c * l, l = v);
                        }
                    }, _.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t), n = 1 & r, i = 0;
                        for(r = r / 2 | 0; r; r >>>= 1)i++;
                        return 1 << i + 1 + n;
                    }, _.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1)) for(var n = 0; n < r / 2; n++){
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
                        }
                    }, _.prototype.normalize13b = function(t, e) {
                        for(var r = 0, n = 0; n < e / 2; n++){
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
                        }
                        return t;
                    }, _.prototype.convert13b = function(t, e, r, n) {
                        for(var o = 0, a = 0; a < e; a++)o += 0 | t[a], r[2 * a] = 8191 & o, o >>>= 13, r[2 * a + 1] = 8191 & o, o >>>= 13;
                        for(a = 2 * e; a < n; ++a)r[a] = 0;
                        i(0 === o), i(!(-8192 & o));
                    }, _.prototype.stub = function(t) {
                        for(var e = new Array(t), r = 0; r < t; r++)e[r] = 0;
                        return e;
                    }, _.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length), i = this.makeRBT(n), o = this.stub(n), a = new Array(n), s = new Array(n), u = new Array(n), c = new Array(n), f = new Array(n), l = new Array(n), h = r.words;
                        h.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, f, l, n, i);
                        for(var p = 0; p < n; p++){
                            var d = s[p] * f[p] - u[p] * l[p];
                            u[p] = s[p] * l[p] + u[p] * f[p], s[p] = d;
                        }
                        return this.conjugate(s, u, n), this.transform(s, u, h, o, n, i), this.conjugate(h, o, n), this.normalize13b(h, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r._strip();
                    }, a.prototype.mul = function(t) {
                        var e = new a(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e);
                    }, a.prototype.mulf = function(t) {
                        var e = new a(null);
                        return e.words = new Array(this.length + t.length), g(this, t, e);
                    }, a.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this);
                    }, a.prototype.imuln = function(t) {
                        var e = t < 0;
                        e && (t = -t), i("number" == typeof t), i(t < 67108864);
                        for(var r = 0, n = 0; n < this.length; n++){
                            var o = (0 | this.words[n]) * t, a = (67108863 & o) + (67108863 & r);
                            r >>= 26, r += o / 67108864 | 0, r += a >>> 26, this.words[n] = 67108863 & a;
                        }
                        return 0 !== r && (this.words[n] = r, this.length++), e ? this.ineg() : this;
                    }, a.prototype.muln = function(t) {
                        return this.clone().imuln(t);
                    }, a.prototype.sqr = function() {
                        return this.mul(this);
                    }, a.prototype.isqr = function() {
                        return this.imul(this.clone());
                    }, a.prototype.pow = function(t) {
                        var e = function(t) {
                            for(var e = new Array(t.bitLength()), r = 0; r < e.length; r++){
                                var n = r / 26 | 0, i = r % 26;
                                e[r] = t.words[n] >>> i & 1;
                            }
                            return e;
                        }(t);
                        if (0 === e.length) return new a(1);
                        for(var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                        if (++n < e.length) for(var i = r.sqr(); n < e.length; n++, i = i.sqr())0 !== e[n] && (r = r.mul(i));
                        return r;
                    }, a.prototype.iushln = function(t) {
                        i("number" == typeof t && t >= 0);
                        var e, r = t % 26, n = (t - r) / 26, o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var a = 0;
                            for(e = 0; e < this.length; e++){
                                var s = this.words[e] & o, u = (0 | this.words[e]) - s << r;
                                this.words[e] = u | a, a = s >>> 26 - r;
                            }
                            a && (this.words[e] = a, this.length++);
                        }
                        if (0 !== n) {
                            for(e = this.length - 1; e >= 0; e--)this.words[e + n] = this.words[e];
                            for(e = 0; e < n; e++)this.words[e] = 0;
                            this.length += n;
                        }
                        return this._strip();
                    }, a.prototype.ishln = function(t) {
                        return i(0 === this.negative), this.iushln(t);
                    }, a.prototype.iushrn = function(t, e, r) {
                        var n;
                        i("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26, a = Math.min((t - o) / 26, this.length), s = 67108863 ^ 67108863 >>> o << o, u = r;
                        if (n -= a, n = Math.max(0, n), u) {
                            for(var c = 0; c < a; c++)u.words[c] = this.words[c];
                            u.length = a;
                        }
                        if (0 === a) ;
                        else if (this.length > a) for(this.length -= a, c = 0; c < this.length; c++)this.words[c] = this.words[c + a];
                        else this.words[0] = 0, this.length = 1;
                        var f = 0;
                        for(c = this.length - 1; c >= 0 && (0 !== f || c >= n); c--){
                            var l = 0 | this.words[c];
                            this.words[c] = f << 26 - o | l >>> o, f = l & s;
                        }
                        return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip();
                    }, a.prototype.ishrn = function(t, e, r) {
                        return i(0 === this.negative), this.iushrn(t, e, r);
                    }, a.prototype.shln = function(t) {
                        return this.clone().ishln(t);
                    }, a.prototype.ushln = function(t) {
                        return this.clone().iushln(t);
                    }, a.prototype.shrn = function(t) {
                        return this.clone().ishrn(t);
                    }, a.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t);
                    }, a.prototype.testn = function(t) {
                        i("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        return !(this.length <= r || !(this.words[r] & n));
                    }, a.prototype.imaskn = function(t) {
                        i("number" == typeof t && t >= 0);
                        var e = t % 26, r = (t - e) / 26;
                        if (i(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var n = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= n;
                        }
                        return this._strip();
                    }, a.prototype.maskn = function(t) {
                        return this.clone().imaskn(t);
                    }, a.prototype.iaddn = function(t) {
                        return i("number" == typeof t), i(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
                    }, a.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for(var e = 0; e < this.length && this.words[e] >= 67108864; e++)this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this;
                    }, a.prototype.isubn = function(t) {
                        if (i("number" == typeof t), i(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else for(var e = 0; e < this.length && this.words[e] < 0; e++)this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this._strip();
                    }, a.prototype.addn = function(t) {
                        return this.clone().iaddn(t);
                    }, a.prototype.subn = function(t) {
                        return this.clone().isubn(t);
                    }, a.prototype.iabs = function() {
                        return this.negative = 0, this;
                    }, a.prototype.abs = function() {
                        return this.clone().iabs();
                    }, a.prototype._ishlnsubmul = function(t, e, r) {
                        var n, o, a = t.length + r;
                        this._expand(a);
                        var s = 0;
                        for(n = 0; n < t.length; n++){
                            o = (0 | this.words[n + r]) + s;
                            var u = (0 | t.words[n]) * e;
                            s = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
                        }
                        for(; n < this.length - r; n++)s = (o = (0 | this.words[n + r]) + s) >> 26, this.words[n + r] = 67108863 & o;
                        if (0 === s) return this._strip();
                        for(i(-1 === s), s = 0, n = 0; n < this.length; n++)s = (o = -(0 | this.words[n]) + s) >> 26, this.words[n] = 67108863 & o;
                        return this.negative = 1, this._strip();
                    }, a.prototype._wordDiv = function(t, e) {
                        var r = (this.length, t.length), n = this.clone(), i = t, o = 0 | i.words[i.length - 1];
                        0 != (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                        var s, u = n.length - i.length;
                        if ("mod" !== e) {
                            (s = new a(null)).length = u + 1, s.words = new Array(s.length);
                            for(var c = 0; c < s.length; c++)s.words[c] = 0;
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, u);
                        0 === f.negative && (n = f, s && (s.words[u] = 1));
                        for(var l = u - 1; l >= 0; l--){
                            var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                            for(h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;)h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                            s && (s.words[l] = h);
                        }
                        return s && s._strip(), n._strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: s || null,
                            mod: n
                        };
                    }, a.prototype.divmod = function(t, e, r) {
                        var n, o, s;
                        return i(!t.isZero()), this.isZero() ? {
                            div: new a(0),
                            mod: new a(0)
                        } : 0 !== this.negative && 0 === t.negative ? (s = this.neg().divmod(t, e), "mod" !== e && (n = s.div.neg()), "div" !== e && (o = s.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
                            div: n,
                            mod: o
                        }) : 0 === this.negative && 0 !== t.negative ? (s = this.divmod(t.neg(), e), "mod" !== e && (n = s.div.neg()), {
                            div: n,
                            mod: s.mod
                        }) : this.negative & t.negative ? (s = this.neg().divmod(t.neg(), e), "div" !== e && (o = s.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
                            div: s.div,
                            mod: o
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new a(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new a(this.modrn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new a(this.modrn(t.words[0]))
                        } : this._wordDiv(t, e);
                    }, a.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div;
                    }, a.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod;
                    }, a.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod;
                    }, a.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod, n = t.ushrn(1), i = t.andln(1), o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
                    }, a.prototype.modrn = function(t) {
                        var e = t < 0;
                        e && (t = -t), i(t <= 67108863);
                        for(var r = 67108864 % t, n = 0, o = this.length - 1; o >= 0; o--)n = (r * n + (0 | this.words[o])) % t;
                        return e ? -n : n;
                    }, a.prototype.modn = function(t) {
                        return this.modrn(t);
                    }, a.prototype.idivn = function(t) {
                        var e = t < 0;
                        e && (t = -t), i(t <= 67108863);
                        for(var r = 0, n = this.length - 1; n >= 0; n--){
                            var o = (0 | this.words[n]) + 67108864 * r;
                            this.words[n] = o / t | 0, r = o % t;
                        }
                        return this._strip(), e ? this.ineg() : this;
                    }, a.prototype.divn = function(t) {
                        return this.clone().idivn(t);
                    }, a.prototype.egcd = function(t) {
                        i(0 === t.negative), i(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n = new a(1), o = new a(0), s = new a(0), u = new a(1), c = 0; e.isEven() && r.isEven();)e.iushrn(1), r.iushrn(1), ++c;
                        for(var f = r.clone(), l = e.clone(); !e.isZero();){
                            for(var h = 0, p = 1; !(e.words[0] & p) && h < 26; ++h, p <<= 1);
                            if (h > 0) for(e.iushrn(h); h-- > 0;)(n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(l)), n.iushrn(1), o.iushrn(1);
                            for(var d = 0, y = 1; !(r.words[0] & y) && d < 26; ++d, y <<= 1);
                            if (d > 0) for(r.iushrn(d); d-- > 0;)(s.isOdd() || u.isOdd()) && (s.iadd(f), u.isub(l)), s.iushrn(1), u.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), n.isub(s), o.isub(u)) : (r.isub(e), s.isub(n), u.isub(o));
                        }
                        return {
                            a: s,
                            b: u,
                            gcd: r.iushln(c)
                        };
                    }, a.prototype._invmp = function(t) {
                        i(0 === t.negative), i(!t.isZero());
                        var e = this, r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for(var n, o = new a(1), s = new a(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;){
                            for(var c = 0, f = 1; !(e.words[0] & f) && c < 26; ++c, f <<= 1);
                            if (c > 0) for(e.iushrn(c); c-- > 0;)o.isOdd() && o.iadd(u), o.iushrn(1);
                            for(var l = 0, h = 1; !(r.words[0] & h) && l < 26; ++l, h <<= 1);
                            if (l > 0) for(r.iushrn(l); l-- > 0;)s.isOdd() && s.iadd(u), s.iushrn(1);
                            e.cmp(r) >= 0 ? (e.isub(r), o.isub(s)) : (r.isub(e), s.isub(o));
                        }
                        return (n = 0 === e.cmpn(1) ? o : s).cmpn(0) < 0 && n.iadd(t), n;
                    }, a.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(), r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for(var n = 0; e.isEven() && r.isEven(); n++)e.iushrn(1), r.iushrn(1);
                        for(;;){
                            for(; e.isEven();)e.iushrn(1);
                            for(; r.isEven();)r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o;
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r);
                        }
                        return r.iushln(n);
                    }, a.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t);
                    }, a.prototype.isEven = function() {
                        return !(1 & this.words[0]);
                    }, a.prototype.isOdd = function() {
                        return !(1 & ~this.words[0]);
                    }, a.prototype.andln = function(t) {
                        return this.words[0] & t;
                    }, a.prototype.bincn = function(t) {
                        i("number" == typeof t);
                        var e = t % 26, r = (t - e) / 26, n = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                        for(var o = n, a = r; 0 !== o && a < this.length; a++){
                            var s = 0 | this.words[a];
                            o = (s += o) >>> 26, s &= 67108863, this.words[a] = s;
                        }
                        return 0 !== o && (this.words[a] = o, this.length++), this;
                    }, a.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0];
                    }, a.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this._strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), i(t <= 67108863, "Number is too big");
                            var n = 0 | this.words[0];
                            e = n === t ? 0 : n < t ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -e : e;
                    }, a.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e;
                    }, a.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for(var e = 0, r = this.length - 1; r >= 0; r--){
                            var n = 0 | this.words[r], i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break;
                            }
                        }
                        return e;
                    }, a.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t);
                    }, a.prototype.gt = function(t) {
                        return 1 === this.cmp(t);
                    }, a.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0;
                    }, a.prototype.gte = function(t) {
                        return this.cmp(t) >= 0;
                    }, a.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t);
                    }, a.prototype.lt = function(t) {
                        return -1 === this.cmp(t);
                    }, a.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0;
                    }, a.prototype.lte = function(t) {
                        return this.cmp(t) <= 0;
                    }, a.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t);
                    }, a.prototype.eq = function(t) {
                        return 0 === this.cmp(t);
                    }, a.red = function(t) {
                        return new A(t);
                    }, a.prototype.toRed = function(t) {
                        return i(!this.red, "Already a number in reduction context"), i(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
                    }, a.prototype.fromRed = function() {
                        return i(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }, a.prototype._forceRed = function(t) {
                        return this.red = t, this;
                    }, a.prototype.forceRed = function(t) {
                        return i(!this.red, "Already a number in reduction context"), this._forceRed(t);
                    }, a.prototype.redAdd = function(t) {
                        return i(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
                    }, a.prototype.redIAdd = function(t) {
                        return i(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
                    }, a.prototype.redSub = function(t) {
                        return i(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
                    }, a.prototype.redISub = function(t) {
                        return i(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
                    }, a.prototype.redShl = function(t) {
                        return i(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
                    }, a.prototype.redMul = function(t) {
                        return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
                    }, a.prototype.redIMul = function(t) {
                        return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
                    }, a.prototype.redSqr = function() {
                        return i(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }, a.prototype.redISqr = function() {
                        return i(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }, a.prototype.redSqrt = function() {
                        return i(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }, a.prototype.redInvm = function() {
                        return i(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }, a.prototype.redNeg = function() {
                        return i(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }, a.prototype.redPow = function(t) {
                        return i(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
                    };
                    var w = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };
                    function S(t, e) {
                        this.name = t, this.p = new a(e, 16), this.n = this.p.bitLength(), this.k = new a(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
                    }
                    function O() {
                        S.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                    }
                    function j() {
                        S.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                    }
                    function $() {
                        S.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                    }
                    function E() {
                        S.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                    }
                    function A(t) {
                        if ("string" == typeof t) {
                            var e = a._prime(t);
                            this.m = e.p, this.prime = e;
                        } else i(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
                    }
                    function P(t) {
                        A.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new a(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
                    }
                    S.prototype._tmp = function() {
                        var t = new a(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t;
                    }, S.prototype.ireduce = function(t) {
                        var e, r = t;
                        do this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                        while (e > this.n);
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }, S.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e);
                    }, S.prototype.imulK = function(t) {
                        return t.imul(this.k);
                    }, o(O, S), O.prototype.split = function(t, e) {
                        for(var r = 4194303, n = Math.min(t.length, 9), i = 0; i < n; i++)e.words[i] = t.words[i];
                        if (e.length = n, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
                        var o = t.words[9];
                        for(e.words[e.length++] = o & r, i = 10; i < t.length; i++){
                            var a = 0 | t.words[i];
                            t.words[i - 10] = (a & r) << 4 | o >>> 22, o = a;
                        }
                        o >>>= 22, t.words[i - 10] = o, 0 === o && t.length > 10 ? t.length -= 10 : t.length -= 9;
                    }, O.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
                    }, o(j, S), o($, S), o(E, S), E.prototype.imulK = function(t) {
                        for(var e = 0, r = 0; r < t.length; r++){
                            var n = 19 * (0 | t.words[r]) + e, i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n;
                        }
                        return 0 !== e && (t.words[t.length++] = e), t;
                    }, a._prime = function(t) {
                        if (w[t]) return w[t];
                        var e;
                        if ("k256" === t) e = new O;
                        else if ("p224" === t) e = new j;
                        else if ("p192" === t) e = new $;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new E;
                        }
                        return w[t] = e, e;
                    }, A.prototype._verify1 = function(t) {
                        i(0 === t.negative, "red works only with positives"), i(t.red, "red works only with red numbers");
                    }, A.prototype._verify2 = function(t, e) {
                        i(!(t.negative | e.negative), "red works only with positives"), i(t.red && t.red === e.red, "red works only with red numbers");
                    }, A.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : (l(t, t.umod(this.m)._forceRed(this)), t);
                    }, A.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
                    }, A.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
                    }, A.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                    }, A.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
                    }, A.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r;
                    }, A.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e));
                    }, A.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e));
                    }, A.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e));
                    }, A.prototype.isqr = function(t) {
                        return this.imul(t, t.clone());
                    }, A.prototype.sqr = function(t) {
                        return this.mul(t, t);
                    }, A.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (i(e % 2 == 1), 3 === e) {
                            var r = this.m.add(new a(1)).iushrn(2);
                            return this.pow(t, r);
                        }
                        for(var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);)o++, n.iushrn(1);
                        i(!n.isZero());
                        var s = new a(1).toRed(this), u = s.redNeg(), c = this.m.subn(1).iushrn(1), f = this.m.bitLength();
                        for(f = new a(2 * f * f).toRed(this); 0 !== this.pow(f, c).cmp(u);)f.redIAdd(u);
                        for(var l = this.pow(f, n), h = this.pow(t, n.addn(1).iushrn(1)), p = this.pow(t, n), d = o; 0 !== p.cmp(s);){
                            for(var y = p, b = 0; 0 !== y.cmp(s); b++)y = y.redSqr();
                            i(b < d);
                            var m = this.pow(l, new a(1).iushln(d - b - 1));
                            h = h.redMul(m), l = m.redSqr(), p = p.redMul(l), d = b;
                        }
                        return h;
                    }, A.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
                    }, A.prototype.pow = function(t, e) {
                        if (e.isZero()) return new a(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = new Array(16);
                        r[0] = new a(1).toRed(this), r[1] = t;
                        for(var n = 2; n < r.length; n++)r[n] = this.mul(r[n - 1], t);
                        var i = r[0], o = 0, s = 0, u = e.bitLength() % 26;
                        for(0 === u && (u = 26), n = e.length - 1; n >= 0; n--){
                            for(var c = e.words[n], f = u - 1; f >= 0; f--){
                                var l = c >> f & 1;
                                i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 == ++s || 0 === n && 0 === f) && (i = this.mul(i, r[o]), s = 0, o = 0)) : s = 0;
                            }
                            u = 26;
                        }
                        return i;
                    }, A.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e;
                    }, A.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e;
                    }, a.mont = function(t) {
                        return new P(t);
                    }, o(P, A), P.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift));
                    }, P.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e;
                    }, P.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, P.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new a(0)._forceRed(this);
                        var r = t.mul(e), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, P.prototype.invm = function(t) {
                        return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
                    };
                }(t = r.nmd(t), this);
            },
            7834: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                t.exports = function(t, r, n, i) {
                    return i.justOne || i.count ? (t[r] = Array.isArray(n) ? n[0] : n, "object" !== e(t[r]) && (t[r] = i.count ? n : null)) : (t[r] = Array.isArray(n) ? n : null == n ? [] : [
                        n
                    ], t[r] = t[r].filter(function(t) {
                        return t && "object" === e(t);
                    })), t[r];
                };
            },
            7860: (t)=>{
                "use strict";
                t.exports = function(t) {
                    for(var e = [], r = "", n = "DEFAULT", i = 0; i < t.length; ++i)"IN_SQUARE_BRACKETS" !== n || /\d/.test(t[i]) || "]" === t[i] || (n = "DEFAULT", r = e[e.length - 1] + "[" + r, e.splice(e.length - 1, 1)), "[" === t[i] ? ("IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n && (e.push(r), r = ""), n = "IN_SQUARE_BRACKETS") : "]" === t[i] ? "IN_SQUARE_BRACKETS" === n ? (n = "IMMEDIATELY_AFTER_SQUARE_BRACKETS", e.push(r), r = "") : (n = "DEFAULT", r += t[i]) : "." === t[i] ? ("IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n && (e.push(r), r = ""), n = "DEFAULT") : r += t[i];
                    return "IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n && e.push(r), e;
                };
            },
            7878: (t, e, r)=>{
                "use strict";
                var n = r(2273), i = r(4183);
                t.exports = function() {
                    var t = i();
                    return n(Number, {
                        isNaN: t
                    }, {
                        isNaN: function() {
                            return Number.isNaN !== t;
                        }
                    }), t;
                };
            },
            7910: (t, e, r)=>{
                "use strict";
                var n = r(8677);
                t.exports = function(t, e, r) {
                    var i = t.schema.options.discriminatorKey, o = null != e && e[i];
                    if (null == o && (o = r), t.discriminators && null != o) {
                        if (t.discriminators[o]) t = t.discriminators[o];
                        else {
                            var a = n(t.discriminators, o);
                            a && (t = a);
                        }
                    }
                    return t;
                };
            },
            7911: (t, e, r)=>{
                "use strict";
                var n = r(9834);
                t.exports = function(t) {
                    return !!n(t);
                };
            },
            7919: (t, e, r)=>{
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t) {
                    return Object.prototype.toString.call(t);
                }
                e.isArray = function(t) {
                    return Array.isArray ? Array.isArray(t) : "[object Array]" === i(t);
                }, e.isBoolean = function(t) {
                    return "boolean" == typeof t;
                }, e.isNull = function(t) {
                    return null === t;
                }, e.isNullOrUndefined = function(t) {
                    return null == t;
                }, e.isNumber = function(t) {
                    return "number" == typeof t;
                }, e.isString = function(t) {
                    return "string" == typeof t;
                }, e.isSymbol = function(t) {
                    return "symbol" === n(t);
                }, e.isUndefined = function(t) {
                    return void 0 === t;
                }, e.isRegExp = function(t) {
                    return "[object RegExp]" === i(t);
                }, e.isObject = function(t) {
                    return "object" === n(t) && null !== t;
                }, e.isDate = function(t) {
                    return "[object Date]" === i(t);
                }, e.isError = function(t) {
                    return "[object Error]" === i(t) || t instanceof Error;
                }, e.isFunction = function(t) {
                    return "function" == typeof t;
                }, e.isPrimitive = function(t) {
                    return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" === n(t) || void 0 === t;
                }, e.isBuffer = r(5832).Buffer.isBuffer;
            },
            7930: (t, e)=>{
                "use strict";
                e.arrayAtomicsBackupSymbol = Symbol("mongoose#Array#atomicsBackup"), e.arrayAtomicsSymbol = Symbol("mongoose#Array#_atomics"), e.arrayParentSymbol = Symbol("mongoose#Array#_parent"), e.arrayPathSymbol = Symbol("mongoose#Array#_path"), e.arraySchemaSymbol = Symbol("mongoose#Array#_schema"), e.documentArrayParent = Symbol("mongoose#documentArrayParent"), e.documentIsSelected = Symbol("mongoose#Document#isSelected"), e.documentIsModified = Symbol("mongoose#Document#isModified"), e.documentModifiedPaths = Symbol("mongoose#Document#modifiedPaths"), e.documentSchemaSymbol = Symbol("mongoose#Document#schema"), e.getSymbol = Symbol("mongoose#Document#get"), e.modelSymbol = Symbol("mongoose#Model"), e.objectIdSymbol = Symbol("mongoose#ObjectId"), e.populateModelSymbol = Symbol("mongoose#PopulateOptions#Model"), e.schemaTypeSymbol = Symbol("mongoose#schemaType"), e.sessionNewDocuments = Symbol("mongoose#ClientSession#newDocuments"), e.scopeSymbol = Symbol("mongoose#Document#scope"), e.validatorErrorSymbol = Symbol("mongoose#validatorError");
            },
            7937: (t, e, r)=>{
                "use strict";
                var n = r(9732).Buffer, i = r(5833), o = r(3292), a = r(1679), s = r(6620), u = r(7032), c = r(2951);
                function f(t) {
                    o.Writable.call(this);
                    var e = c[t];
                    if (!e) throw new Error("Unknown message digest");
                    this._hashType = e.hash, this._hash = i(e.hash), this._tag = e.id, this._signType = e.sign;
                }
                function l(t) {
                    o.Writable.call(this);
                    var e = c[t];
                    if (!e) throw new Error("Unknown message digest");
                    this._hash = i(e.hash), this._tag = e.id, this._signType = e.sign;
                }
                function h(t) {
                    return new f(t);
                }
                function p(t) {
                    return new l(t);
                }
                Object.keys(c).forEach(function(t) {
                    c[t].id = n.from(c[t].id, "hex"), c[t.toLowerCase()] = c[t];
                }), a(f, o.Writable), f.prototype._write = function(t, e, r) {
                    this._hash.update(t), r();
                }, f.prototype.update = function(t, e) {
                    return this._hash.update("string" == typeof t ? n.from(t, e) : t), this;
                }, f.prototype.sign = function(t, e) {
                    this.end();
                    var r = this._hash.digest(), n = s(r, t, this._hashType, this._signType, this._tag);
                    return e ? n.toString(e) : n;
                }, a(l, o.Writable), l.prototype._write = function(t, e, r) {
                    this._hash.update(t), r();
                }, l.prototype.update = function(t, e) {
                    return this._hash.update("string" == typeof t ? n.from(t, e) : t), this;
                }, l.prototype.verify = function(t, e, r) {
                    var i = "string" == typeof e ? n.from(e, r) : e;
                    this.end();
                    var o = this._hash.digest();
                    return u(i, o, t, this._signType, this._tag);
                }, t.exports = {
                    Sign: h,
                    Verify: p,
                    createSign: h,
                    createVerify: p
                };
            },
            7944: (t)=>{
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                t.exports = function(t) {
                    return t && "object" === e(t) && "function" == typeof t.copy && "function" == typeof t.fill && "function" == typeof t.readUInt8;
                };
            },
            7952: (t, e, r)=>{
                "use strict";
                function n() {
                    throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");
                }
                var i = r(9732), o = r(4276), a = i.Buffer, s = i.kMaxLength, u = r.g.crypto || r.g.msCrypto, c = Math.pow(2, 32) - 1;
                function f(t, e) {
                    if ("number" != typeof t || t != t) throw new TypeError("offset must be a number");
                    if (t > c || t < 0) throw new TypeError("offset must be a uint32");
                    if (t > s || t > e) throw new RangeError("offset out of range");
                }
                function l(t, e, r) {
                    if ("number" != typeof t || t != t) throw new TypeError("size must be a number");
                    if (t > c || t < 0) throw new TypeError("size must be a uint32");
                    if (t + e > r || t > s) throw new RangeError("buffer too small");
                }
                function h(t, e, r, n) {
                    if (({
                        env: {}
                    }).browser) {
                        var i = t.buffer, a = new Uint8Array(i, e, r);
                        return u.getRandomValues(a), n ? void ({
                            env: {}
                        }).nextTick(function() {
                            n(null, t);
                        }) : t;
                    }
                    if (!n) return o(r).copy(t, e), t;
                    o(r, function(r, i) {
                        if (r) return n(r);
                        i.copy(t, e), n(null, t);
                    });
                }
                u && u.getRandomValues || !({
                    env: {}
                }).browser ? (e.randomFill = function(t, e, n, i) {
                    if (!(a.isBuffer(t) || t instanceof r.g.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                    if ("function" == typeof e) i = e, e = 0, n = t.length;
                    else if ("function" == typeof n) i = n, n = t.length - e;
                    else if ("function" != typeof i) throw new TypeError('"cb" argument must be a function');
                    return f(e, t.length), l(n, e, t.length), h(t, e, n, i);
                }, e.randomFillSync = function(t, e, n) {
                    if (void 0 === e && (e = 0), !(a.isBuffer(t) || t instanceof r.g.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                    return f(e, t.length), void 0 === n && (n = t.length - e), l(n, e, t.length), h(t, e, n);
                }) : (e.randomFill = n, e.randomFillSync = n);
            },
            7953: (t, e, r)=>{
                "use strict";
                e.Array = r(7760), e.BigInt = r(3318), e.Boolean = r(6413), e.Buffer = r(2307), e.Date = r(2345), e.Decimal128 = e.Decimal = r(7045), e.DocumentArray = r(9123), e.Map = r(6867), e.Mixed = r(5022), e.Number = r(3660), e.ObjectId = r(3091), e.String = r(8728), e.Subdocument = r(5098), e.UUID = r(2134), e.Double = r(1732), e.Int32 = r(433), e.Oid = e.ObjectId, e.Object = e.Mixed, e.Bool = e.Boolean, e.ObjectID = e.ObjectId;
            },
            7982: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return i(t, e);
                                var r = ({}).toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? i(t, e) : void 0;
                            }
                        }(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, o = function() {};
                            return {
                                s: o,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: o
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a, s = !0, u = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return s = t.done, t;
                        },
                        e: function(t) {
                            u = !0, a = t;
                        },
                        f: function() {
                            try {
                                s || null == r.return || r.return();
                            } finally{
                                if (u) throw a;
                            }
                        }
                    };
                }
                function i(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function o(t) {
                    return o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, o(t);
                }
                var a = r(3609), s = r(8995), u = r(7953), c = r(170), f = r(1244), l = r(9064), h = r(3703), p = r(7425), d = r(5110), y = r(7352), b = r(608), m = r(2497), v = r(8768), g = [
                    "Polygon",
                    "MultiPolygon"
                ];
                function _(t, e, r) {
                    if (Array.isArray(t)) t.forEach(function(n, i) {
                        if (Array.isArray(n) || b(n)) return _(n, e, r);
                        t[i] = e.castForQuery(null, n, r);
                    });
                    else for(var n = Object.keys(t), i = n.length; i--;){
                        var o = n[i], a = t[o];
                        Array.isArray(a) || b(a) ? (_(a, e, r), t[o] = a) : t[o] = e.castForQuery({
                            val: a,
                            context: r
                        });
                    }
                }
                function w(t, e, r, n) {
                    if ("strictQuery" in t) return t.strictQuery;
                    if ("strictQuery" in e) return e.strictQuery;
                    var i = n && n.mongooseCollection && n.mongooseCollection.conn && n.mongooseCollection.conn.base && n.mongooseCollection.conn.base.options;
                    return i && "strictQuery" in i ? i.strictQuery : r.strictQuery;
                }
                t.exports = function t(e, r, i, S) {
                    if (Array.isArray(r)) throw new Error("Query filter must be an object, got an array ", y.inspect(r));
                    if (null == r) return r;
                    null != e && null != e.discriminators && null != r[e.options.discriminatorKey] && (e = p(e, r[e.options.discriminatorKey]) || e);
                    var O, j, $, E, A, P, x = Object.keys(r), k = x.length;
                    for(i = i || {}; k--;)if (P = r[E = x[k]], "$or" === E || "$nor" === E || "$and" === E) {
                        if (!Array.isArray(P)) throw new a("Array", P, E);
                        for(var M = P.length - 1; M >= 0; M--){
                            if (null == P[M] || "object" !== o(P[M])) throw new a("Object", P[M], E + "." + M);
                            var T = Object.keys(P[M]).length, B = P[M][e.options.discriminatorKey];
                            if (null == B) P[M] = t(e, P[M], i, S);
                            else {
                                var I = p(S.schema, B);
                                P[M] = t(I || e, P[M], i, S);
                            }
                            0 === Object.keys(P[M]).length && 0 !== T && P.splice(M, 1);
                        }
                        0 === P.length && delete r[E];
                    } else {
                        if ("$where" === E) {
                            if ("string" !== (A = o(P)) && "function" !== A) throw new Error("Must have a string or function for $where");
                            "function" === A && (r[E] = P.toString());
                            continue;
                        }
                        if ("$expr" === E) {
                            P = c(P, e);
                            continue;
                        }
                        if ("$elemMatch" === E) P = t(e, P, i, S);
                        else if ("$text" === E) P = l(P, E);
                        else if ("$comment" !== E || e.paths.hasOwnProperty("$comment")) {
                            if (!e) continue;
                            if (!(j = e.path(E))) for(var R = E.split("."), N = R.length; N--;){
                                var D = R.slice(0, N).join("."), L = R.slice(N).join("."), C = e.path(D), U = C && C.schema && C.schema.options && C.schema.options.discriminatorKey;
                                if (null != C && null != (C.schema && C.schema.discriminators) && null != U && L !== U) {
                                    var q = h(r, D + "." + U), F = C.schema.discriminators;
                                    "string" == typeof q && null != F[q] ? j = F[q].path(L) : null != q && 1 === Object.keys(q).length && Array.isArray(q.$in) && 1 === q.$in.length && "string" == typeof q.$in[0] && null != F[q.$in[0]] && (j = F[q.$in[0]].path(L));
                                }
                            }
                            if (j) {
                                if (null == P) continue;
                                if (v.isPOJO(P)) {
                                    if (Object.keys(P).some(d)) for(var V = Object.keys(P), z = void 0, K = V.length; K--;)if ($ = P[z = V[K]], "$elemMatch" === z) $ && null != j && null != j.schema ? t(j.schema, $, i, S) : $ && null != j && j.$isMongooseArray && (v.isPOJO($) && null != $.$not ? t(e, $, i, S) : P[z] = j.castForQuery(z, $, S));
                                    else if ("$not" === z) {
                                        if ($ && j) {
                                            if ((O = Object.keys($)).length && d(O[0])) for(var H in $)$[H] = j.castForQuery(H, $[H], S);
                                            else P[z] = j.castForQuery(z, $, S);
                                            continue;
                                        }
                                    } else P[z] = j.castForQuery(z, $, S);
                                    else r[E] = j.castForQuery(null, P, S);
                                } else if (Array.isArray(P) && -1 === [
                                    "Buffer",
                                    "Array"
                                ].indexOf(j.instance) && !i.sanitizeFilter) {
                                    var W, J = [], G = n(P);
                                    try {
                                        for(G.s(); !(W = G.n()).done;){
                                            var Y = W.value;
                                            J.push(j.castForQuery(null, Y, S));
                                        }
                                    } catch (t) {
                                        G.e(t);
                                    } finally{
                                        G.f();
                                    }
                                    r[E] = {
                                        $in: J
                                    };
                                } else r[E] = j.castForQuery(null, P, S);
                            } else {
                                for(var Q = E.split("."), X = Q.length, Z = void 0, tt = void 0, et = void 0; X-- && (Z = Q.slice(0, X).join("."), !(j = e.path(Z))););
                                if (j) {
                                    if (j.caster && j.caster.schema) {
                                        (et = {})[tt = Q.slice(X).join(".")] = P;
                                        var rt = t(j.caster.schema, et, i, S)[tt];
                                        void 0 === rt ? delete r[E] : r[E] = rt;
                                    } else r[E] = P;
                                    continue;
                                }
                                if (b(P)) {
                                    var nt = "";
                                    if (P.$near ? nt = "$near" : P.$nearSphere ? nt = "$nearSphere" : P.$within ? nt = "$within" : P.$geoIntersects ? nt = "$geoIntersects" : P.$geoWithin && (nt = "$geoWithin"), nt) {
                                        var it = new u.Number("__QueryCasting__"), ot = P[nt];
                                        if (null != P.$maxDistance && (P.$maxDistance = it.castForQuery(null, P.$maxDistance, S)), null != P.$minDistance && (P.$minDistance = it.castForQuery(null, P.$minDistance, S)), "$within" === nt) {
                                            var at = ot.$center || ot.$centerSphere || ot.$box || ot.$polygon;
                                            if (!at) throw new Error("Bad $within parameter: " + JSON.stringify(P));
                                            ot = at;
                                        } else if ("$near" === nt && "string" == typeof ot.type && Array.isArray(ot.coordinates)) ot = ot.coordinates;
                                        else if (("$near" === nt || "$nearSphere" === nt || "$geoIntersects" === nt) && ot.$geometry && "string" == typeof ot.$geometry.type && Array.isArray(ot.$geometry.coordinates)) null != ot.$maxDistance && (ot.$maxDistance = it.castForQuery(null, ot.$maxDistance, S)), null != ot.$minDistance && (ot.$minDistance = it.castForQuery(null, ot.$minDistance, S)), m(ot.$geometry) && (ot.$geometry = ot.$geometry.toObject({
                                            transform: !1,
                                            virtuals: !1
                                        })), ot = ot.$geometry.coordinates;
                                        else if ("$geoWithin" === nt) {
                                            if (ot.$geometry) {
                                                m(ot.$geometry) && (ot.$geometry = ot.$geometry.toObject({
                                                    virtuals: !1
                                                }));
                                                var st = ot.$geometry.type;
                                                if (-1 === g.indexOf(st)) throw new Error('Invalid geoJSON type for $geoWithin "' + st + '", must be "Polygon" or "MultiPolygon"');
                                                ot = ot.$geometry.coordinates;
                                            } else ot = ot.$box || ot.$polygon || ot.$center || ot.$centerSphere, m(ot) && (ot = ot.toObject({
                                                virtuals: !1
                                            }));
                                        }
                                        _(ot, it, S);
                                        continue;
                                    }
                                }
                                if (e.nested[E]) continue;
                                var ut = "strict" in i ? i.strict : e.options.strict, ct = w(i, e._userProvidedOptions, e.options, S);
                                if (i.upsert && ut) {
                                    if ("throw" === ut) throw new s(E);
                                    throw new s(E, 'Path "' + E + '" is not in schema, strict mode is `true`, and upsert is `true`.');
                                }
                                if ("throw" === ct) throw new s(E, 'Path "' + E + "\" is not in schema and strictQuery is 'throw'.");
                                ct && delete r[E];
                            }
                        } else P = f(P, E), r[E] = P;
                    }
                    return r;
                };
            },
            7991: (t, e, r)=>{
                "use strict";
                var n = r(4758);
                t.exports = v;
                var i, o = r(5455);
                v.ReadableState = m, r(3550).EventEmitter;
                var a = function(t, e) {
                    return t.listeners(e).length;
                }, s = r(5864), u = r(8317).Buffer, c = (void 0 !== r.g ? r.g : "undefined" != typeof window ? window : "undefined" != typeof self ? self : {}).Uint8Array || function() {}, f = Object.create(r(7919));
                f.inherits = r(1679);
                var l = r(9838), h = void 0;
                h = l && l.debuglog ? l.debuglog("stream") : function() {};
                var p, d = r(6567), y = r(8639);
                f.inherits(v, s);
                var b = [
                    "error",
                    "close",
                    "destroy",
                    "pause",
                    "resume"
                ];
                function m(t, e) {
                    t = t || {};
                    var n = e instanceof (i = i || r(1313));
                    this.objectMode = !!t.objectMode, n && (this.objectMode = this.objectMode || !!t.readableObjectMode);
                    var o = t.highWaterMark, a = t.readableHighWaterMark, s = this.objectMode ? 16 : 16384;
                    this.highWaterMark = o || 0 === o ? o : n && (a || 0 === a) ? a : s, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new d, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.destroyed = !1, this.defaultEncoding = t.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, t.encoding && (p || (p = r(136).I), this.decoder = new p(t.encoding), this.encoding = t.encoding);
                }
                function v(t) {
                    if (i = i || r(1313), !(this instanceof v)) return new v(t);
                    this._readableState = new m(t, this), this.readable = !0, t && ("function" == typeof t.read && (this._read = t.read), "function" == typeof t.destroy && (this._destroy = t.destroy)), s.call(this);
                }
                function g(t, e, r, n, i) {
                    var o, a = t._readableState;
                    return null === e ? (a.reading = !1, function(t, e) {
                        if (!e.ended) {
                            if (e.decoder) {
                                var r = e.decoder.end();
                                r && r.length && (e.buffer.push(r), e.length += e.objectMode ? 1 : r.length);
                            }
                            e.ended = !0, O(t);
                        }
                    }(t, a)) : (i || (o = function(t, e) {
                        var r, n;
                        return n = e, u.isBuffer(n) || n instanceof c || "string" == typeof e || void 0 === e || t.objectMode || (r = new TypeError("Invalid non-string/buffer chunk")), r;
                    }(a, e)), o ? t.emit("error", o) : a.objectMode || e && e.length > 0 ? ("string" == typeof e || a.objectMode || Object.getPrototypeOf(e) === u.prototype || (e = function(t) {
                        return u.from(t);
                    }(e)), n ? a.endEmitted ? t.emit("error", new Error("stream.unshift() after end event")) : _(t, a, e, !0) : a.ended ? t.emit("error", new Error("stream.push() after EOF")) : (a.reading = !1, a.decoder && !r ? (e = a.decoder.write(e), a.objectMode || 0 !== e.length ? _(t, a, e, !1) : $(t, a)) : _(t, a, e, !1))) : n || (a.reading = !1)), function(t) {
                        return !t.ended && (t.needReadable || t.length < t.highWaterMark || 0 === t.length);
                    }(a);
                }
                function _(t, e, r, n) {
                    e.flowing && 0 === e.length && !e.sync ? (t.emit("data", r), t.read(0)) : (e.length += e.objectMode ? 1 : r.length, n ? e.buffer.unshift(r) : e.buffer.push(r), e.needReadable && O(t)), $(t, e);
                }
                Object.defineProperty(v.prototype, "destroyed", {
                    get: function() {
                        return void 0 !== this._readableState && this._readableState.destroyed;
                    },
                    set: function(t) {
                        this._readableState && (this._readableState.destroyed = t);
                    }
                }), v.prototype.destroy = y.destroy, v.prototype._undestroy = y.undestroy, v.prototype._destroy = function(t, e) {
                    this.push(null), e(t);
                }, v.prototype.push = function(t, e) {
                    var r, n = this._readableState;
                    return n.objectMode ? r = !0 : "string" == typeof t && ((e = e || n.defaultEncoding) !== n.encoding && (t = u.from(t, e), e = ""), r = !0), g(this, t, e, !1, r);
                }, v.prototype.unshift = function(t) {
                    return g(this, t, null, !0, !1);
                }, v.prototype.isPaused = function() {
                    return !1 === this._readableState.flowing;
                }, v.prototype.setEncoding = function(t) {
                    return p || (p = r(136).I), this._readableState.decoder = new p(t), this._readableState.encoding = t, this;
                };
                var w = 8388608;
                function S(t, e) {
                    return t <= 0 || 0 === e.length && e.ended ? 0 : e.objectMode ? 1 : t != t ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t > e.highWaterMark && (e.highWaterMark = function(t) {
                        return t >= w ? t = w : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++), t;
                    }(t)), t <= e.length ? t : e.ended ? e.length : (e.needReadable = !0, 0));
                }
                function O(t) {
                    var e = t._readableState;
                    e.needReadable = !1, e.emittedReadable || (h("emitReadable", e.flowing), e.emittedReadable = !0, e.sync ? n.nextTick(j, t) : j(t));
                }
                function j(t) {
                    h("emit readable"), t.emit("readable"), x(t);
                }
                function $(t, e) {
                    e.readingMore || (e.readingMore = !0, n.nextTick(E, t, e));
                }
                function E(t, e) {
                    for(var r = e.length; !e.reading && !e.flowing && !e.ended && e.length < e.highWaterMark && (h("maybeReadMore read 0"), t.read(0), r !== e.length);)r = e.length;
                    e.readingMore = !1;
                }
                function A(t) {
                    h("readable nexttick read 0"), t.read(0);
                }
                function P(t, e) {
                    e.reading || (h("resume read 0"), t.read(0)), e.resumeScheduled = !1, e.awaitDrain = 0, t.emit("resume"), x(t), e.flowing && !e.reading && t.read(0);
                }
                function x(t) {
                    var e = t._readableState;
                    for(h("flow", e.flowing); e.flowing && null !== t.read(););
                }
                function k(t, e) {
                    var r;
                    return 0 === e.length ? null : (e.objectMode ? r = e.buffer.shift() : !t || t >= e.length ? (r = e.decoder ? e.buffer.join("") : 1 === e.buffer.length ? e.buffer.head.data : e.buffer.concat(e.length), e.buffer.clear()) : r = function(t, e, r) {
                        var n;
                        return t < e.head.data.length ? (n = e.head.data.slice(0, t), e.head.data = e.head.data.slice(t)) : n = t === e.head.data.length ? e.shift() : r ? function(t, e) {
                            var r = e.head, n = 1, i = r.data;
                            for(t -= i.length; r = r.next;){
                                var o = r.data, a = t > o.length ? o.length : t;
                                if (a === o.length ? i += o : i += o.slice(0, t), 0 == (t -= a)) {
                                    a === o.length ? (++n, r.next ? e.head = r.next : e.head = e.tail = null) : (e.head = r, r.data = o.slice(a));
                                    break;
                                }
                                ++n;
                            }
                            return e.length -= n, i;
                        }(t, e) : function(t, e) {
                            var r = u.allocUnsafe(t), n = e.head, i = 1;
                            for(n.data.copy(r), t -= n.data.length; n = n.next;){
                                var o = n.data, a = t > o.length ? o.length : t;
                                if (o.copy(r, r.length - t, 0, a), 0 == (t -= a)) {
                                    a === o.length ? (++i, n.next ? e.head = n.next : e.head = e.tail = null) : (e.head = n, n.data = o.slice(a));
                                    break;
                                }
                                ++i;
                            }
                            return e.length -= i, r;
                        }(t, e), n;
                    }(t, e.buffer, e.decoder), r);
                }
                function M(t) {
                    var e = t._readableState;
                    if (e.length > 0) throw new Error('"endReadable()" called on non-empty stream');
                    e.endEmitted || (e.ended = !0, n.nextTick(T, e, t));
                }
                function T(t, e) {
                    t.endEmitted || 0 !== t.length || (t.endEmitted = !0, e.readable = !1, e.emit("end"));
                }
                function B(t, e) {
                    for(var r = 0, n = t.length; r < n; r++)if (t[r] === e) return r;
                    return -1;
                }
                v.prototype.read = function(t) {
                    h("read", t), t = parseInt(t, 10);
                    var e = this._readableState, r = t;
                    if (0 !== t && (e.emittedReadable = !1), 0 === t && e.needReadable && (e.length >= e.highWaterMark || e.ended)) return h("read: emitReadable", e.length, e.ended), 0 === e.length && e.ended ? M(this) : O(this), null;
                    if (0 === (t = S(t, e)) && e.ended) return 0 === e.length && M(this), null;
                    var n, i = e.needReadable;
                    return h("need readable", i), (0 === e.length || e.length - t < e.highWaterMark) && h("length less than watermark", i = !0), e.ended || e.reading ? h("reading or ended", i = !1) : i && (h("do read"), e.reading = !0, e.sync = !0, 0 === e.length && (e.needReadable = !0), this._read(e.highWaterMark), e.sync = !1, e.reading || (t = S(r, e))), null === (n = t > 0 ? k(t, e) : null) ? (e.needReadable = !0, t = 0) : e.length -= t, 0 === e.length && (e.ended || (e.needReadable = !0), r !== t && e.ended && M(this)), null !== n && this.emit("data", n), n;
                }, v.prototype._read = function(t) {
                    this.emit("error", new Error("_read() is not implemented"));
                }, v.prototype.pipe = function(t, e) {
                    var r = this, i = this._readableState;
                    switch(i.pipesCount){
                        case 0:
                            i.pipes = t;
                            break;
                        case 1:
                            i.pipes = [
                                i.pipes,
                                t
                            ];
                            break;
                        default:
                            i.pipes.push(t);
                    }
                    i.pipesCount += 1, h("pipe count=%d opts=%j", i.pipesCount, e);
                    var s = e && !1 === e.end || t === ({
                        env: {}
                    }).stdout || t === ({
                        env: {}
                    }).stderr ? m : u;
                    function u() {
                        h("onend"), t.end();
                    }
                    i.endEmitted ? n.nextTick(s) : r.once("end", s), t.on("unpipe", function e(n, o) {
                        h("onunpipe"), n === r && o && !1 === o.hasUnpiped && (o.hasUnpiped = !0, h("cleanup"), t.removeListener("close", y), t.removeListener("finish", b), t.removeListener("drain", c), t.removeListener("error", d), t.removeListener("unpipe", e), r.removeListener("end", u), r.removeListener("end", m), r.removeListener("data", p), f = !0, !i.awaitDrain || t._writableState && !t._writableState.needDrain || c());
                    });
                    var c = function(t) {
                        return function() {
                            var e = t._readableState;
                            h("pipeOnDrain", e.awaitDrain), e.awaitDrain && e.awaitDrain--, 0 === e.awaitDrain && a(t, "data") && (e.flowing = !0, x(t));
                        };
                    }(r);
                    t.on("drain", c);
                    var f = !1, l = !1;
                    function p(e) {
                        h("ondata"), l = !1, !1 !== t.write(e) || l || ((1 === i.pipesCount && i.pipes === t || i.pipesCount > 1 && -1 !== B(i.pipes, t)) && !f && (h("false write response, pause", i.awaitDrain), i.awaitDrain++, l = !0), r.pause());
                    }
                    function d(e) {
                        h("onerror", e), m(), t.removeListener("error", d), 0 === a(t, "error") && t.emit("error", e);
                    }
                    function y() {
                        t.removeListener("finish", b), m();
                    }
                    function b() {
                        h("onfinish"), t.removeListener("close", y), m();
                    }
                    function m() {
                        h("unpipe"), r.unpipe(t);
                    }
                    return r.on("data", p), function(t, e, r) {
                        if ("function" == typeof t.prependListener) return t.prependListener(e, r);
                        t._events && t._events[e] ? o(t._events[e]) ? t._events[e].unshift(r) : t._events[e] = [
                            r,
                            t._events[e]
                        ] : t.on(e, r);
                    }(t, "error", d), t.once("close", y), t.once("finish", b), t.emit("pipe", r), i.flowing || (h("pipe resume"), r.resume()), t;
                }, v.prototype.unpipe = function(t) {
                    var e = this._readableState, r = {
                        hasUnpiped: !1
                    };
                    if (0 === e.pipesCount) return this;
                    if (1 === e.pipesCount) return t && t !== e.pipes || (t || (t = e.pipes), e.pipes = null, e.pipesCount = 0, e.flowing = !1, t && t.emit("unpipe", this, r)), this;
                    if (!t) {
                        var n = e.pipes, i = e.pipesCount;
                        e.pipes = null, e.pipesCount = 0, e.flowing = !1;
                        for(var o = 0; o < i; o++)n[o].emit("unpipe", this, {
                            hasUnpiped: !1
                        });
                        return this;
                    }
                    var a = B(e.pipes, t);
                    return -1 === a || (e.pipes.splice(a, 1), e.pipesCount -= 1, 1 === e.pipesCount && (e.pipes = e.pipes[0]), t.emit("unpipe", this, r)), this;
                }, v.prototype.on = function(t, e) {
                    var r = s.prototype.on.call(this, t, e);
                    if ("data" === t) !1 !== this._readableState.flowing && this.resume();
                    else if ("readable" === t) {
                        var i = this._readableState;
                        i.endEmitted || i.readableListening || (i.readableListening = i.needReadable = !0, i.emittedReadable = !1, i.reading ? i.length && O(this) : n.nextTick(A, this));
                    }
                    return r;
                }, v.prototype.addListener = v.prototype.on, v.prototype.resume = function() {
                    var t = this._readableState;
                    return t.flowing || (h("resume"), t.flowing = !0, function(t, e) {
                        e.resumeScheduled || (e.resumeScheduled = !0, n.nextTick(P, t, e));
                    }(this, t)), this;
                }, v.prototype.pause = function() {
                    return h("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (h("pause"), this._readableState.flowing = !1, this.emit("pause")), this;
                }, v.prototype.wrap = function(t) {
                    var e = this, r = this._readableState, n = !1;
                    for(var i in t.on("end", function() {
                        if (h("wrapped end"), r.decoder && !r.ended) {
                            var t = r.decoder.end();
                            t && t.length && e.push(t);
                        }
                        e.push(null);
                    }), t.on("data", function(i) {
                        h("wrapped data"), r.decoder && (i = r.decoder.write(i)), r.objectMode && null == i || (r.objectMode || i && i.length) && (e.push(i) || (n = !0, t.pause()));
                    }), t)void 0 === this[i] && "function" == typeof t[i] && (this[i] = function(e) {
                        return function() {
                            return t[e].apply(t, arguments);
                        };
                    }(i));
                    for(var o = 0; o < b.length; o++)t.on(b[o], this.emit.bind(this, b[o]));
                    return this._read = function(e) {
                        h("wrapped _read", e), n && (n = !1, t.resume());
                    }, this;
                }, Object.defineProperty(v.prototype, "readableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState.highWaterMark;
                    }
                }), v._fromList = k;
            },
            8050: (t, e, r)=>{
                var n = e;
                n._reverse = function(t) {
                    var e = {};
                    return Object.keys(t).forEach(function(r) {
                        (0 | r) == r && (r |= 0);
                        var n = t[r];
                        e[n] = r;
                    }), e;
                }, n.der = r(425);
            },
            8063: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e(t) {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            "Schema hasn't been registered for model \"" + t + '".\nUse mongoose.model(name, schema)'
                        ]);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8213));
                Object.defineProperty(s.prototype, "name", {
                    value: "MissingSchemaError"
                }), t.exports = s;
            },
            8093: (t)=>{
                "use strict";
                t.exports = Object;
            },
            8133: (t, e, r)=>{
                "use strict";
                var n = r(8995);
                t.exports = function(t) {
                    var e, r;
                    t.$immutable ? (t.$immutableSetter = (e = t.path, r = t.options.immutable, function(t, i, o, a) {
                        if (null == this || null == this.$__) return t;
                        if (this.isNew) return t;
                        if (a && a.overwriteImmutable) return t;
                        if (!("function" == typeof r ? r.call(this, this) : r)) return t;
                        var s = null != this.$__.priorDoc ? this.$__.priorDoc.$__getValue(e) : this.$__getValue(e);
                        if ("throw" === this.$__.strictMode && t !== s) throw new n(e, "Path `" + e + "` is immutable and strict mode is set to throw.", !0);
                        return s;
                    }), t.set(t.$immutableSetter)) : t.$immutableSetter && (t.setters = t.setters.filter(function(e) {
                        return e !== t.$immutableSetter;
                    }), delete t.$immutableSetter);
                };
            },
            8134: (t, e, r)=>{
                "use strict";
                var n;
                t.exports = j, j.ReadableState = O, r(3550).EventEmitter;
                var i, o = function(t, e) {
                    return t.listeners(e).length;
                }, a = r(6871), s = r(5832).Buffer, u = (void 0 !== r.g ? r.g : "undefined" != typeof window ? window : "undefined" != typeof self ? self : {}).Uint8Array || function() {}, c = r(7199);
                i = c && c.debuglog ? c.debuglog("stream") : function() {};
                var f, l, h, p = r(6811), d = r(6222), y = r(9681).getHighWaterMark, b = r(198).F, m = b.ERR_INVALID_ARG_TYPE, v = b.ERR_STREAM_PUSH_AFTER_EOF, g = b.ERR_METHOD_NOT_IMPLEMENTED, _ = b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
                r(1679)(j, a);
                var w = d.errorOrDestroy, S = [
                    "error",
                    "close",
                    "destroy",
                    "pause",
                    "resume"
                ];
                function O(t, e, i) {
                    n = n || r(4560), t = t || {}, "boolean" != typeof i && (i = e instanceof n), this.objectMode = !!t.objectMode, i && (this.objectMode = this.objectMode || !!t.readableObjectMode), this.highWaterMark = y(this, t, "readableHighWaterMark", i), this.buffer = new p, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = !1 !== t.emitClose, this.autoDestroy = !!t.autoDestroy, this.destroyed = !1, this.defaultEncoding = t.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, t.encoding && (f || (f = r(136).I), this.decoder = new f(t.encoding), this.encoding = t.encoding);
                }
                function j(t) {
                    if (n = n || r(4560), !(this instanceof j)) return new j(t);
                    var e = this instanceof n;
                    this._readableState = new O(t, this, e), this.readable = !0, t && ("function" == typeof t.read && (this._read = t.read), "function" == typeof t.destroy && (this._destroy = t.destroy)), a.call(this);
                }
                function $(t, e, r, n, o) {
                    i("readableAddChunk", e);
                    var a, c = t._readableState;
                    if (null === e) c.reading = !1, function(t, e) {
                        if (i("onEofChunk"), !e.ended) {
                            if (e.decoder) {
                                var r = e.decoder.end();
                                r && r.length && (e.buffer.push(r), e.length += e.objectMode ? 1 : r.length);
                            }
                            e.ended = !0, e.sync ? x(t) : (e.needReadable = !1, e.emittedReadable || (e.emittedReadable = !0, k(t)));
                        }
                    }(t, c);
                    else if (o || (a = function(t, e) {
                        var r, n;
                        return n = e, s.isBuffer(n) || n instanceof u || "string" == typeof e || void 0 === e || t.objectMode || (r = new m("chunk", [
                            "string",
                            "Buffer",
                            "Uint8Array"
                        ], e)), r;
                    }(c, e)), a) w(t, a);
                    else if (c.objectMode || e && e.length > 0) {
                        if ("string" == typeof e || c.objectMode || Object.getPrototypeOf(e) === s.prototype || (e = function(t) {
                            return s.from(t);
                        }(e)), n) c.endEmitted ? w(t, new _) : E(t, c, e, !0);
                        else if (c.ended) w(t, new v);
                        else {
                            if (c.destroyed) return !1;
                            c.reading = !1, c.decoder && !r ? (e = c.decoder.write(e), c.objectMode || 0 !== e.length ? E(t, c, e, !1) : M(t, c)) : E(t, c, e, !1);
                        }
                    } else n || (c.reading = !1, M(t, c));
                    return !c.ended && (c.length < c.highWaterMark || 0 === c.length);
                }
                function E(t, e, r, n) {
                    e.flowing && 0 === e.length && !e.sync ? (e.awaitDrain = 0, t.emit("data", r)) : (e.length += e.objectMode ? 1 : r.length, n ? e.buffer.unshift(r) : e.buffer.push(r), e.needReadable && x(t)), M(t, e);
                }
                Object.defineProperty(j.prototype, "destroyed", {
                    enumerable: !1,
                    get: function() {
                        return void 0 !== this._readableState && this._readableState.destroyed;
                    },
                    set: function(t) {
                        this._readableState && (this._readableState.destroyed = t);
                    }
                }), j.prototype.destroy = d.destroy, j.prototype._undestroy = d.undestroy, j.prototype._destroy = function(t, e) {
                    e(t);
                }, j.prototype.push = function(t, e) {
                    var r, n = this._readableState;
                    return n.objectMode ? r = !0 : "string" == typeof t && ((e = e || n.defaultEncoding) !== n.encoding && (t = s.from(t, e), e = ""), r = !0), $(this, t, e, !1, r);
                }, j.prototype.unshift = function(t) {
                    return $(this, t, null, !0, !1);
                }, j.prototype.isPaused = function() {
                    return !1 === this._readableState.flowing;
                }, j.prototype.setEncoding = function(t) {
                    f || (f = r(136).I);
                    var e = new f(t);
                    this._readableState.decoder = e, this._readableState.encoding = this._readableState.decoder.encoding;
                    for(var n = this._readableState.buffer.head, i = ""; null !== n;)i += e.write(n.data), n = n.next;
                    return this._readableState.buffer.clear(), "" !== i && this._readableState.buffer.push(i), this._readableState.length = i.length, this;
                };
                var A = 1073741824;
                function P(t, e) {
                    return t <= 0 || 0 === e.length && e.ended ? 0 : e.objectMode ? 1 : t != t ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t > e.highWaterMark && (e.highWaterMark = function(t) {
                        return t >= A ? t = A : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++), t;
                    }(t)), t <= e.length ? t : e.ended ? e.length : (e.needReadable = !0, 0));
                }
                function x(t) {
                    var e = t._readableState;
                    i("emitReadable", e.needReadable, e.emittedReadable), e.needReadable = !1, e.emittedReadable || (i("emitReadable", e.flowing), e.emittedReadable = !0, ({
                        env: {}
                    }).nextTick(k, t));
                }
                function k(t) {
                    var e = t._readableState;
                    i("emitReadable_", e.destroyed, e.length, e.ended), e.destroyed || !e.length && !e.ended || (t.emit("readable"), e.emittedReadable = !1), e.needReadable = !e.flowing && !e.ended && e.length <= e.highWaterMark, N(t);
                }
                function M(t, e) {
                    e.readingMore || (e.readingMore = !0, ({
                        env: {}
                    }).nextTick(T, t, e));
                }
                function T(t, e) {
                    for(; !e.reading && !e.ended && (e.length < e.highWaterMark || e.flowing && 0 === e.length);){
                        var r = e.length;
                        if (i("maybeReadMore read 0"), t.read(0), r === e.length) break;
                    }
                    e.readingMore = !1;
                }
                function B(t) {
                    var e = t._readableState;
                    e.readableListening = t.listenerCount("readable") > 0, e.resumeScheduled && !e.paused ? e.flowing = !0 : t.listenerCount("data") > 0 && t.resume();
                }
                function I(t) {
                    i("readable nexttick read 0"), t.read(0);
                }
                function R(t, e) {
                    i("resume", e.reading), e.reading || t.read(0), e.resumeScheduled = !1, t.emit("resume"), N(t), e.flowing && !e.reading && t.read(0);
                }
                function N(t) {
                    var e = t._readableState;
                    for(i("flow", e.flowing); e.flowing && null !== t.read(););
                }
                function D(t, e) {
                    var r;
                    return 0 === e.length ? null : (e.objectMode ? r = e.buffer.shift() : !t || t >= e.length ? (r = e.decoder ? e.buffer.join("") : 1 === e.buffer.length ? e.buffer.first() : e.buffer.concat(e.length), e.buffer.clear()) : r = e.buffer.consume(t, e.decoder), r);
                }
                function L(t) {
                    var e = t._readableState;
                    i("endReadable", e.endEmitted), e.endEmitted || (e.ended = !0, ({
                        env: {}
                    }).nextTick(C, e, t));
                }
                function C(t, e) {
                    if (i("endReadableNT", t.endEmitted, t.length), !t.endEmitted && 0 === t.length && (t.endEmitted = !0, e.readable = !1, e.emit("end"), t.autoDestroy)) {
                        var r = e._writableState;
                        (!r || r.autoDestroy && r.finished) && e.destroy();
                    }
                }
                function U(t, e) {
                    for(var r = 0, n = t.length; r < n; r++)if (t[r] === e) return r;
                    return -1;
                }
                j.prototype.read = function(t) {
                    i("read", t), t = parseInt(t, 10);
                    var e = this._readableState, r = t;
                    if (0 !== t && (e.emittedReadable = !1), 0 === t && e.needReadable && ((0 !== e.highWaterMark ? e.length >= e.highWaterMark : e.length > 0) || e.ended)) return i("read: emitReadable", e.length, e.ended), 0 === e.length && e.ended ? L(this) : x(this), null;
                    if (0 === (t = P(t, e)) && e.ended) return 0 === e.length && L(this), null;
                    var n, o = e.needReadable;
                    return i("need readable", o), (0 === e.length || e.length - t < e.highWaterMark) && i("length less than watermark", o = !0), e.ended || e.reading ? i("reading or ended", o = !1) : o && (i("do read"), e.reading = !0, e.sync = !0, 0 === e.length && (e.needReadable = !0), this._read(e.highWaterMark), e.sync = !1, e.reading || (t = P(r, e))), null === (n = t > 0 ? D(t, e) : null) ? (e.needReadable = e.length <= e.highWaterMark, t = 0) : (e.length -= t, e.awaitDrain = 0), 0 === e.length && (e.ended || (e.needReadable = !0), r !== t && e.ended && L(this)), null !== n && this.emit("data", n), n;
                }, j.prototype._read = function(t) {
                    w(this, new g("_read()"));
                }, j.prototype.pipe = function(t, e) {
                    var r = this, n = this._readableState;
                    switch(n.pipesCount){
                        case 0:
                            n.pipes = t;
                            break;
                        case 1:
                            n.pipes = [
                                n.pipes,
                                t
                            ];
                            break;
                        default:
                            n.pipes.push(t);
                    }
                    n.pipesCount += 1, i("pipe count=%d opts=%j", n.pipesCount, e);
                    var a = e && !1 === e.end || t === ({
                        env: {}
                    }).stdout || t === ({
                        env: {}
                    }).stderr ? d : s;
                    function s() {
                        i("onend"), t.end();
                    }
                    n.endEmitted ? ({
                        env: {}
                    }).nextTick(a) : r.once("end", a), t.on("unpipe", function e(o, a) {
                        i("onunpipe"), o === r && a && !1 === a.hasUnpiped && (a.hasUnpiped = !0, i("cleanup"), t.removeListener("close", h), t.removeListener("finish", p), t.removeListener("drain", u), t.removeListener("error", l), t.removeListener("unpipe", e), r.removeListener("end", s), r.removeListener("end", d), r.removeListener("data", f), c = !0, !n.awaitDrain || t._writableState && !t._writableState.needDrain || u());
                    });
                    var u = function(t) {
                        return function() {
                            var e = t._readableState;
                            i("pipeOnDrain", e.awaitDrain), e.awaitDrain && e.awaitDrain--, 0 === e.awaitDrain && o(t, "data") && (e.flowing = !0, N(t));
                        };
                    }(r);
                    t.on("drain", u);
                    var c = !1;
                    function f(e) {
                        i("ondata");
                        var o = t.write(e);
                        i("dest.write", o), !1 === o && ((1 === n.pipesCount && n.pipes === t || n.pipesCount > 1 && -1 !== U(n.pipes, t)) && !c && (i("false write response, pause", n.awaitDrain), n.awaitDrain++), r.pause());
                    }
                    function l(e) {
                        i("onerror", e), d(), t.removeListener("error", l), 0 === o(t, "error") && w(t, e);
                    }
                    function h() {
                        t.removeListener("finish", p), d();
                    }
                    function p() {
                        i("onfinish"), t.removeListener("close", h), d();
                    }
                    function d() {
                        i("unpipe"), r.unpipe(t);
                    }
                    return r.on("data", f), function(t, e, r) {
                        if ("function" == typeof t.prependListener) return t.prependListener(e, r);
                        t._events && t._events[e] ? Array.isArray(t._events[e]) ? t._events[e].unshift(r) : t._events[e] = [
                            r,
                            t._events[e]
                        ] : t.on(e, r);
                    }(t, "error", l), t.once("close", h), t.once("finish", p), t.emit("pipe", r), n.flowing || (i("pipe resume"), r.resume()), t;
                }, j.prototype.unpipe = function(t) {
                    var e = this._readableState, r = {
                        hasUnpiped: !1
                    };
                    if (0 === e.pipesCount) return this;
                    if (1 === e.pipesCount) return t && t !== e.pipes || (t || (t = e.pipes), e.pipes = null, e.pipesCount = 0, e.flowing = !1, t && t.emit("unpipe", this, r)), this;
                    if (!t) {
                        var n = e.pipes, i = e.pipesCount;
                        e.pipes = null, e.pipesCount = 0, e.flowing = !1;
                        for(var o = 0; o < i; o++)n[o].emit("unpipe", this, {
                            hasUnpiped: !1
                        });
                        return this;
                    }
                    var a = U(e.pipes, t);
                    return -1 === a || (e.pipes.splice(a, 1), e.pipesCount -= 1, 1 === e.pipesCount && (e.pipes = e.pipes[0]), t.emit("unpipe", this, r)), this;
                }, j.prototype.on = function(t, e) {
                    var r = a.prototype.on.call(this, t, e), n = this._readableState;
                    return "data" === t ? (n.readableListening = this.listenerCount("readable") > 0, !1 !== n.flowing && this.resume()) : "readable" === t && (n.endEmitted || n.readableListening || (n.readableListening = n.needReadable = !0, n.flowing = !1, n.emittedReadable = !1, i("on readable", n.length, n.reading), n.length ? x(this) : n.reading || ({
                        env: {}
                    }).nextTick(I, this))), r;
                }, j.prototype.addListener = j.prototype.on, j.prototype.removeListener = function(t, e) {
                    var r = a.prototype.removeListener.call(this, t, e);
                    return "readable" === t && ({
                        env: {}
                    }).nextTick(B, this), r;
                }, j.prototype.removeAllListeners = function(t) {
                    var e = a.prototype.removeAllListeners.apply(this, arguments);
                    return "readable" !== t && void 0 !== t || ({
                        env: {}
                    }).nextTick(B, this), e;
                }, j.prototype.resume = function() {
                    var t = this._readableState;
                    return t.flowing || (i("resume"), t.flowing = !t.readableListening, function(t, e) {
                        e.resumeScheduled || (e.resumeScheduled = !0, ({
                            env: {}
                        }).nextTick(R, t, e));
                    }(this, t)), t.paused = !1, this;
                }, j.prototype.pause = function() {
                    return i("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (i("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
                }, j.prototype.wrap = function(t) {
                    var e = this, r = this._readableState, n = !1;
                    for(var o in t.on("end", function() {
                        if (i("wrapped end"), r.decoder && !r.ended) {
                            var t = r.decoder.end();
                            t && t.length && e.push(t);
                        }
                        e.push(null);
                    }), t.on("data", function(o) {
                        i("wrapped data"), r.decoder && (o = r.decoder.write(o)), r.objectMode && null == o || (r.objectMode || o && o.length) && (e.push(o) || (n = !0, t.pause()));
                    }), t)void 0 === this[o] && "function" == typeof t[o] && (this[o] = function(e) {
                        return function() {
                            return t[e].apply(t, arguments);
                        };
                    }(o));
                    for(var a = 0; a < S.length; a++)t.on(S[a], this.emit.bind(this, S[a]));
                    return this._read = function(e) {
                        i("wrapped _read", e), n && (n = !1, t.resume());
                    }, this;
                }, "function" == typeof Symbol && (j.prototype[Symbol.asyncIterator] = function() {
                    return void 0 === l && (l = r(8493)), l(this);
                }), Object.defineProperty(j.prototype, "readableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState.highWaterMark;
                    }
                }), Object.defineProperty(j.prototype, "readableBuffer", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState && this._readableState.buffer;
                    }
                }), Object.defineProperty(j.prototype, "readableFlowing", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState.flowing;
                    },
                    set: function(t) {
                        this._readableState && (this._readableState.flowing = t);
                    }
                }), j._fromList = D, Object.defineProperty(j.prototype, "readableLength", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState.length;
                    }
                }), "function" == typeof Symbol && (j.from = function(t, e) {
                    return void 0 === h && (h = r(9271)), h(j, t, e);
                });
            },
            8151: (t, e, r)=>{
                var n = r(5832).Buffer, i = r(7799), o = new (r(1257)), a = new i(24), s = new i(11), u = new i(10), c = new i(3), f = new i(7), l = r(1673), h = r(4276);
                function p(t, e) {
                    return e = e || "utf8", n.isBuffer(t) || (t = new n(t, e)), this._pub = new i(t), this;
                }
                function d(t, e) {
                    return e = e || "utf8", n.isBuffer(t) || (t = new n(t, e)), this._priv = new i(t), this;
                }
                t.exports = b;
                var y = {};
                function b(t, e, r) {
                    this.setGenerator(e), this.__prime = new i(t), this._prime = i.mont(this.__prime), this._primeLen = t.length, this._pub = void 0, this._priv = void 0, this._primeCode = void 0, r ? (this.setPublicKey = p, this.setPrivateKey = d) : this._primeCode = 8;
                }
                function m(t, e) {
                    var r = new n(t.toArray());
                    return e ? r.toString(e) : r;
                }
                Object.defineProperty(b.prototype, "verifyError", {
                    enumerable: !0,
                    get: function() {
                        return "number" != typeof this._primeCode && (this._primeCode = function(t, e) {
                            var r = e.toString("hex"), n = [
                                r,
                                t.toString(16)
                            ].join("_");
                            if (n in y) return y[n];
                            var i, h = 0;
                            if (t.isEven() || !l.simpleSieve || !l.fermatTest(t) || !o.test(t)) return h += 1, h += "02" === r || "05" === r ? 8 : 4, y[n] = h, h;
                            switch(o.test(t.shrn(1)) || (h += 2), r){
                                case "02":
                                    t.mod(a).cmp(s) && (h += 8);
                                    break;
                                case "05":
                                    (i = t.mod(u)).cmp(c) && i.cmp(f) && (h += 8);
                                    break;
                                default:
                                    h += 4;
                            }
                            return y[n] = h, h;
                        }(this.__prime, this.__gen)), this._primeCode;
                    }
                }), b.prototype.generateKeys = function() {
                    return this._priv || (this._priv = new i(h(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
                }, b.prototype.computeSecret = function(t) {
                    var e = (t = (t = new i(t)).toRed(this._prime)).redPow(this._priv).fromRed(), r = new n(e.toArray()), o = this.getPrime();
                    if (r.length < o.length) {
                        var a = new n(o.length - r.length);
                        a.fill(0), r = n.concat([
                            a,
                            r
                        ]);
                    }
                    return r;
                }, b.prototype.getPublicKey = function(t) {
                    return m(this._pub, t);
                }, b.prototype.getPrivateKey = function(t) {
                    return m(this._priv, t);
                }, b.prototype.getPrime = function(t) {
                    return m(this.__prime, t);
                }, b.prototype.getGenerator = function(t) {
                    return m(this._gen, t);
                }, b.prototype.setGenerator = function(t, e) {
                    return e = e || "utf8", n.isBuffer(t) || (t = new n(t, e)), this.__gen = t, this._gen = new i(t), this;
                };
            },
            8188: (t)=>{
                "use strict";
                t.exports = URIError;
            },
            8201: (t, e, r)=>{
                var n = r(2533), i = r(1471), o = r(1679), a = r(9732).Buffer, s = {
                    "des-ede3-cbc": i.CBC.instantiate(i.EDE),
                    "des-ede3": i.EDE,
                    "des-ede-cbc": i.CBC.instantiate(i.EDE),
                    "des-ede": i.EDE,
                    "des-cbc": i.CBC.instantiate(i.DES),
                    "des-ecb": i.DES
                };
                function u(t) {
                    n.call(this);
                    var e, r = t.mode.toLowerCase(), i = s[r];
                    e = t.decrypt ? "decrypt" : "encrypt";
                    var o = t.key;
                    a.isBuffer(o) || (o = a.from(o)), "des-ede" !== r && "des-ede-cbc" !== r || (o = a.concat([
                        o,
                        o.slice(0, 8)
                    ]));
                    var u = t.iv;
                    a.isBuffer(u) || (u = a.from(u)), this._des = i.create({
                        key: o,
                        iv: u,
                        type: e
                    });
                }
                s.des = s["des-cbc"], s.des3 = s["des-ede3-cbc"], t.exports = u, o(u, n), u.prototype._update = function(t) {
                    return a.from(this._des.update(t));
                }, u.prototype._final = function() {
                    return a.from(this._des.final());
                };
            },
            8213: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                function r(t) {
                    var e = "function" == typeof Map ? new Map : void 0;
                    return r = function(t) {
                        if (null === t || !function(t) {
                            try {
                                return -1 !== Function.toString.call(t).indexOf("[native code]");
                            } catch (e) {
                                return "function" == typeof t;
                            }
                        }(t)) return t;
                        if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
                        if (void 0 !== e) {
                            if (e.has(t)) return e.get(t);
                            e.set(t, r);
                        }
                        function r() {
                            return function(t, e, r) {
                                if (n()) return Reflect.construct.apply(null, arguments);
                                var o = [
                                    null
                                ];
                                o.push.apply(o, e);
                                var a = new (t.bind.apply(t, o));
                                return r && i(a, r.prototype), a;
                            }(t, arguments, o(this).constructor);
                        }
                        return r.prototype = Object.create(t.prototype, {
                            constructor: {
                                value: r,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), i(r, t);
                    }, r(t);
                }
                function n() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (n = function() {
                        return !!t;
                    })();
                }
                function i(t, e) {
                    return i = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, i(t, e);
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                var a = function(t) {
                    function r() {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, r), function(t, r, i) {
                            return r = o(r), function(t, r) {
                                if (r && ("object" == e(r) || "function" == typeof r)) return r;
                                if (void 0 !== r) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, n() ? Reflect.construct(r, i || [], o(t).constructor) : r.apply(t, i));
                        }(this, r, arguments);
                    }
                    var a;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && i(t, e);
                    }(r, t), a = r, Object.defineProperty(a, "prototype", {
                        writable: !1
                    }), a;
                }(r(Error));
                Object.defineProperty(a.prototype, "name", {
                    value: "MongooseError"
                }), t.exports = a;
            },
            8235: (t, e, r)=>{
                "use strict";
                var n = r(8213), i = r(6426), o = r(5098), a = r(7910);
                function s(t, e) {
                    if (this.$parentSchemaType = e && e.$parentSchemaType, !this.$parentSchemaType) throw new n("Cannot create DocumentArrayElement schematype without a parent");
                    delete e.$parentSchemaType, i.call(this, t, e, "DocumentArrayElement"), this.$isMongooseDocumentArrayElement = !0;
                }
                s.schemaName = "DocumentArrayElement", s.defaultOptions = {}, s.prototype = Object.create(i.prototype), s.prototype.constructor = s, s.prototype.cast = function() {
                    var t;
                    return (t = this.$parentSchemaType).cast.apply(t, arguments)[0];
                }, s.prototype.doValidate = function(t, e, r, n) {
                    var i = a(this.caster, t);
                    return !t || t instanceof i || (t = new i(t, r, null, null, n && null != n.index ? n.index : null)), o.prototype.doValidate.call(this, t, e, r, n);
                }, s.prototype.clone = function() {
                    this.options.$parentSchemaType = this.$parentSchemaType;
                    var t = i.prototype.clone.apply(this, arguments);
                    return delete this.options.$parentSchemaType, t.caster = this.caster, t.schema = this.schema, t;
                }, t.exports = s;
            },
            8250: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer, i = r(6365), o = /[0-9a-f]{8}-[0-9a-f]{4}-[0-9][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/i, a = i.Binary;
                function s(t) {
                    "string" != typeof t && (t = "");
                    var e, r = null != (e = t.replace(/[{}-]/g, "")) && n.from(e, "hex"), o = new i(r);
                    return o._subtype = 4, o;
                }
                t.exports = function(t) {
                    if (null == t) return t;
                    function e(t) {
                        var e = new i(t);
                        return e._subtype = 4, e;
                    }
                    if ("string" == typeof t) {
                        if (o.test(t)) return s(t);
                        throw new Error('"'.concat(t, '" is not a valid UUID string'));
                    }
                    if (n.isBuffer(t)) return e(t);
                    if (t instanceof a) return e(t.value(!0));
                    if (t.toString && t.toString !== Object.prototype.toString && o.test(t.toString())) return s(t.toString());
                    throw new Error('"'.concat(t, '" cannot be casted to a UUID'));
                }, t.exports.UUID_FORMAT = o;
            },
            8260: (t, e, r)=>{
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(1679), o = r(1620).Reporter, a = r(5832).Buffer;
                function s(t, e) {
                    o.call(this, e), a.isBuffer(t) ? (this.base = t, this.offset = 0, this.length = t.length) : this.error("Input not Buffer");
                }
                function u(t, e) {
                    if (Array.isArray(t)) this.length = 0, this.value = t.map(function(t) {
                        return t instanceof u || (t = new u(t, e)), this.length += t.length, t;
                    }, this);
                    else if ("number" == typeof t) {
                        if (!(0 <= t && t <= 255)) return e.error("non-byte EncoderBuffer value");
                        this.value = t, this.length = 1;
                    } else if ("string" == typeof t) this.value = t, this.length = a.byteLength(t);
                    else {
                        if (!a.isBuffer(t)) return e.error("Unsupported type: " + n(t));
                        this.value = t, this.length = t.length;
                    }
                }
                i(s, o), e.t = s, s.prototype.save = function() {
                    return {
                        offset: this.offset,
                        reporter: o.prototype.save.call(this)
                    };
                }, s.prototype.restore = function(t) {
                    var e = new s(this.base);
                    return e.offset = t.offset, e.length = this.offset, this.offset = t.offset, o.prototype.restore.call(this, t.reporter), e;
                }, s.prototype.isEmpty = function() {
                    return this.offset === this.length;
                }, s.prototype.readUInt8 = function(t) {
                    return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, !0) : this.error(t || "DecoderBuffer overrun");
                }, s.prototype.skip = function(t, e) {
                    if (!(this.offset + t <= this.length)) return this.error(e || "DecoderBuffer overrun");
                    var r = new s(this.base);
                    return r._reporterState = this._reporterState, r.offset = this.offset, r.length = this.offset + t, this.offset += t, r;
                }, s.prototype.raw = function(t) {
                    return this.base.slice(t ? t.offset : this.offset, this.length);
                }, e.d = u, u.prototype.join = function(t, e) {
                    return t || (t = new a(this.length)), e || (e = 0), 0 === this.length || (Array.isArray(this.value) ? this.value.forEach(function(r) {
                        r.join(t, e), e += r.length;
                    }) : ("number" == typeof this.value ? t[e] = this.value : "string" == typeof this.value ? t.write(this.value, e) : a.isBuffer(this.value) && this.value.copy(t, e), e += this.length)), t;
                };
            },
            8285: (t, e, r)=>{
                "use strict";
                var n = r(2400), i = r(2580), o = !1;
                t.exports = function() {
                    return o ? i : n;
                }, t.exports.setBrowser = function(t) {
                    o = t;
                };
            },
            8297: (t)=>{
                "use strict";
                function e(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = n(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var i = 0, o = function() {};
                            return {
                                s: o,
                                n: function() {
                                    return i >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[i++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: o
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a, s = !0, u = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return s = t.done, t;
                        },
                        e: function(t) {
                            u = !0, a = t;
                        },
                        f: function() {
                            try {
                                s || null == r.return || r.return();
                            } finally{
                                if (u) throw a;
                            }
                        }
                    };
                }
                function r(t) {
                    return r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, r(t);
                }
                function n(t, e) {
                    if (t) {
                        if ("string" == typeof t) return i(t, e);
                        var r = ({}).toString.call(t).slice(8, -1);
                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? i(t, e) : void 0;
                    }
                }
                function i(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function o(t, e, r) {
                    if (s()) return Reflect.construct.apply(null, arguments);
                    var n = [
                        null
                    ];
                    n.push.apply(n, e);
                    var i = new (t.bind.apply(t, n));
                    return r && a(i, r.prototype), i;
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                function s() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (s = function() {
                        return !!t;
                    })();
                }
                function u() {
                    this._pres = new Map, this._posts = new Map;
                }
                function c(t, e, r, n, i, o, a) {
                    return o.useErrorHandlers ? t.execPost(r, n, i, {
                        error: e
                    }, function(t) {
                        return "function" == typeof a && a(t);
                    }) : "function" == typeof a && a(e);
                }
                function f(t, e, r, n) {
                    var i;
                    try {
                        i = t.apply(e, r);
                    } catch (t) {
                        return n(t);
                    }
                    l(i) && i.then(function() {
                        return n();
                    }, function(t) {
                        return n(t);
                    });
                }
                function l(t) {
                    return "object" === r(t) && null !== t && "function" == typeof t.then;
                }
                function h(t) {
                    var e = !1, r = this;
                    return function() {
                        var n = arguments;
                        if (!e) return e = !0, p(function() {
                            return t.apply(r, n);
                        });
                    };
                }
                u.skipWrappedFunction = function() {
                    if (!(this instanceof u.skipWrappedFunction)) return o(u.skipWrappedFunction, Array.prototype.slice.call(arguments));
                    this.args = Array.prototype.slice.call(arguments);
                }, u.overwriteResult = function() {
                    if (!(this instanceof u.overwriteResult)) return o(u.overwriteResult, Array.prototype.slice.call(arguments));
                    this.args = Array.prototype.slice.call(arguments);
                }, u.prototype.execPre = function(t, e, r, n) {
                    3 === arguments.length && (n = r, r = []);
                    var i = this._pres.get(t) || [], o = i.length, a = i.numAsync || 0, s = 0, c = a, d = !1, y = r, b = null;
                    if (!o) return p(function() {
                        n(null);
                    });
                    function m() {
                        if (!(s >= o)) {
                            var t = i[s];
                            if (t.isAsync) {
                                var r = [
                                    h(v),
                                    h(function(t) {
                                        if (t) {
                                            if (d) return;
                                            if (!(t instanceof u.skipWrappedFunction)) return d = !0, n(t);
                                            b = t;
                                        }
                                        if (0 == --c && s >= o) return n(b);
                                    })
                                ];
                                f(t.fn, e, r, r[0]);
                            } else if (t.fn.length > 0) {
                                for(var a = [
                                    h(v)
                                ], g = arguments.length >= 2 ? arguments : [
                                    null
                                ].concat(y), _ = 1; _ < g.length; ++_)_ === g.length - 1 && "function" == typeof g[_] || a.push(g[_]);
                                f(t.fn, e, a, a[0]);
                            } else {
                                var w = null;
                                try {
                                    w = t.fn.call(e);
                                } catch (t) {
                                    if (null != t) return n(t);
                                }
                                if (l(w)) w.then(function() {
                                    return v();
                                }, function(t) {
                                    return v(t);
                                });
                                else {
                                    if (++s >= o) return c > 0 ? void 0 : p(function() {
                                        n(b);
                                    });
                                    m();
                                }
                            }
                        }
                    }
                    function v(t) {
                        if (t) {
                            if (d) return;
                            if (!(t instanceof u.skipWrappedFunction)) return d = !0, n(t);
                            b = t;
                        }
                        if (++s >= o) return c > 0 ? void 0 : n(b);
                        m.apply(e, arguments);
                    }
                    m.apply(null, [
                        null
                    ].concat(r));
                }, u.prototype.execPreSync = function(t, e, r) {
                    for(var n = this._pres.get(t) || [], i = n.length, o = 0; o < i; ++o)n[o].fn.apply(e, r || []);
                }, u.prototype.execPost = function(t, e, r, n, i) {
                    arguments.length < 5 && (i = n, n = null);
                    var o = this._posts.get(t) || [], a = o.length, s = 0, c = null;
                    if (n && n.error && (c = n.error), !a) return p(function() {
                        i.apply(null, [
                            c
                        ].concat(r));
                    });
                    !function t() {
                        for(var n = o[s].fn, p = 0, y = r.length, b = [], m = 0; m < y; ++m)p += r[m] && r[m]._kareemIgnore ? 0 : 1, r[m] && r[m]._kareemIgnore || b.push(r[m]);
                        if (c) {
                            if (d(o[s], p)) {
                                var v = h(function(e) {
                                    if (e) {
                                        if (e instanceof u.overwriteResult) return r = e.args, ++s >= a ? i.call(null, c) : t();
                                        c = e;
                                    }
                                    if (++s >= a) return i.call(null, c);
                                    t();
                                });
                                f(n, e, [
                                    c
                                ].concat(b).concat([
                                    v
                                ]), v);
                            } else {
                                if (++s >= a) return i.call(null, c);
                                t();
                            }
                        } else {
                            var g = h(function(e) {
                                return e ? e instanceof u.overwriteResult ? (r = e.args, ++s >= a ? i.apply(null, [
                                    null
                                ].concat(r)) : t()) : (c = e, t()) : ++s >= a ? i.apply(null, [
                                    null
                                ].concat(r)) : void t();
                            });
                            if (d(o[s], p)) return ++s >= a ? i.apply(null, [
                                null
                            ].concat(r)) : t();
                            if (n.length === p + 1) f(n, e, b.concat([
                                g
                            ]), g);
                            else {
                                var _, w;
                                try {
                                    w = n.apply(e, b);
                                } catch (t) {
                                    _ = t, c = t;
                                }
                                if (l(w)) return w.then(function(t) {
                                    g(t instanceof u.overwriteResult ? t : null);
                                }, function(t) {
                                    return g(t);
                                });
                                if (w instanceof u.overwriteResult && (r = w.args), ++s >= a) return i.apply(null, [
                                    _
                                ].concat(r));
                                t();
                            }
                        }
                    }();
                }, u.prototype.execPostSync = function(t, e, r) {
                    for(var n = this._posts.get(t) || [], i = n.length, o = 0; o < i; ++o){
                        var a = n[o].fn.apply(e, r || []);
                        a instanceof u.overwriteResult && (r = a.args);
                    }
                    return r;
                }, u.prototype.createWrapperSync = function(t, e) {
                    var r = this;
                    return function() {
                        r.execPreSync(t, this, arguments);
                        var n = e.apply(this, arguments);
                        return r.execPostSync(t, this, [
                            n
                        ])[0];
                    };
                }, u.prototype.wrap = function(t, e, r, o, a) {
                    var s = o.length > 0 ? o[o.length - 1] : null, f = Array.from(o);
                    "function" == typeof s && f.pop();
                    var h = this, p = (a = a || {}).checkForPromise;
                    this.execPre(t, r, o, function(o) {
                        if (o && !(o instanceof u.skipWrappedFunction)) {
                            for(var d = a.numCallbackParams || 0, y = a.contextParameter ? [
                                r
                            ] : [], b = y.length; b < d; ++b)y.push(null);
                            return c(h, o, t, r, y, a, s);
                        }
                        var m, v, g = e.length;
                        if (o instanceof u.skipWrappedFunction) return m = o.args[0], _.apply(void 0, [
                            null
                        ].concat(function(t) {
                            if (Array.isArray(t)) return i(t);
                        }(v = o.args) || function(t) {
                            if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t);
                        }(v) || n(v) || function() {
                            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                        }()));
                        try {
                            m = e.apply(r, f.concat(_));
                        } catch (t) {
                            return _(t);
                        }
                        if (p) {
                            if (l(m)) return m.then(function(t) {
                                return _(null, t);
                            }, function(t) {
                                return _(t);
                            });
                            if (g < f.length + 1) return _(null, m);
                        }
                        function _() {
                            var e = Array.from(arguments);
                            if (e.shift(), a.nullResultByDefault && 0 === e.length && e.push(null), arguments[0]) return c(h, arguments[0], t, r, e, a, s);
                            h.execPost(t, r, e, function() {
                                null !== s && (arguments[0] ? s(arguments[0]) : s.apply(r, arguments));
                            });
                        }
                    });
                }, u.prototype.filter = function(t) {
                    for(var e = this, r = this.clone(), n = Array.from(r._pres.keys()), i = function() {
                        var n = a[o], i = e._pres.get(n).map(function(t) {
                            return Object.assign({}, t, {
                                name: n
                            });
                        }).filter(t);
                        if (0 === i.length) return r._pres.delete(n), 1;
                        i.numAsync = i.filter(function(t) {
                            return t.isAsync;
                        }).length, r._pres.set(n, i);
                    }, o = 0, a = n; o < a.length; o++)i();
                    for(var s = Array.from(r._posts.keys()), u = function() {
                        var n = f[c], i = e._posts.get(n).map(function(t) {
                            return Object.assign({}, t, {
                                name: n
                            });
                        }).filter(t);
                        if (0 === i.length) return r._posts.delete(n), 1;
                        r._posts.set(n, i);
                    }, c = 0, f = s; c < f.length; c++)u();
                    return r;
                }, u.prototype.hasHooks = function(t) {
                    return this._pres.has(t) || this._posts.has(t);
                }, u.prototype.createWrapper = function(t, e, r, n) {
                    var i = this;
                    return this.hasHooks(t) ? function() {
                        var o = r || this;
                        i.wrap(t, e, o, Array.from(arguments), n);
                    } : function() {
                        var t = arguments, r = this;
                        p(function() {
                            return e.apply(r, t);
                        });
                    };
                }, u.prototype.pre = function(t, e, n, i, o) {
                    var a = {};
                    "object" === r(e) && null !== e ? e = (a = e).isAsync : "boolean" != typeof arguments[1] && (n = e, e = !1);
                    var s = this._pres.get(t) || [];
                    if (this._pres.set(t, s), e && (s.numAsync = s.numAsync || 0, ++s.numAsync), "function" != typeof n) throw new Error('pre() requires a function, got "' + r(n) + '"');
                    return o ? s.unshift(Object.assign({}, a, {
                        fn: n,
                        isAsync: e
                    })) : s.push(Object.assign({}, a, {
                        fn: n,
                        isAsync: e
                    })), this;
                }, u.prototype.post = function(t, e, n, i) {
                    var o = this._posts.get(t) || [];
                    if ("function" == typeof e && (i = !!n, n = e, e = {}), "function" != typeof n) throw new Error('post() requires a function, got "' + r(n) + '"');
                    return i ? o.unshift(Object.assign({}, e, {
                        fn: n
                    })) : o.push(Object.assign({}, e, {
                        fn: n
                    })), this._posts.set(t, o), this;
                }, u.prototype.clone = function() {
                    var t, r = new u, n = e(this._pres.keys());
                    try {
                        for(n.s(); !(t = n.n()).done;){
                            var i = t.value, o = this._pres.get(i).slice();
                            o.numAsync = this._pres.get(i).numAsync, r._pres.set(i, o);
                        }
                    } catch (t) {
                        n.e(t);
                    } finally{
                        n.f();
                    }
                    var a, s = e(this._posts.keys());
                    try {
                        for(s.s(); !(a = s.n()).done;){
                            var c = a.value;
                            r._posts.set(c, this._posts.get(c).slice());
                        }
                    } catch (t) {
                        s.e(t);
                    } finally{
                        s.f();
                    }
                    return r;
                }, u.prototype.merge = function(t, r) {
                    var n, i = (r = 1 === arguments.length || r) ? this.clone() : this, o = e(t._pres.keys());
                    try {
                        var a = function() {
                            var e = n.value, r = i._pres.get(e) || [], o = t._pres.get(e).filter(function(t) {
                                return -1 === r.map(function(t) {
                                    return t.fn;
                                }).indexOf(t.fn);
                            }), a = r.concat(o);
                            a.numAsync = r.numAsync || 0, a.numAsync += o.filter(function(t) {
                                return t.isAsync;
                            }).length, i._pres.set(e, a);
                        };
                        for(o.s(); !(n = o.n()).done;)a();
                    } catch (t) {
                        o.e(t);
                    } finally{
                        o.f();
                    }
                    var s, u = e(t._posts.keys());
                    try {
                        var c = function() {
                            var e = s.value, r = i._posts.get(e) || [], n = t._posts.get(e).filter(function(t) {
                                return -1 === r.indexOf(t);
                            });
                            i._posts.set(e, r.concat(n));
                        };
                        for(u.s(); !(s = u.n()).done;)c();
                    } catch (t) {
                        u.e(t);
                    } finally{
                        u.f();
                    }
                    return i;
                };
                var p = "object" === r({
                    env: {}
                }) && true && ({
                    env: {}
                }).nextTick || function(t) {
                    setTimeout(t, 0);
                };
                function d(t, e) {
                    return !!t.errorHandler || t.fn.length === e + 2;
                }
                t.exports = u;
            },
            8317: (t, e, r)=>{
                var n = r(5832), i = n.Buffer;
                function o(t, e) {
                    for(var r in t)e[r] = t[r];
                }
                function a(t, e, r) {
                    return i(t, e, r);
                }
                i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t.exports = n : (o(n, e), e.Buffer = a), o(i, a), a.from = function(t, e, r) {
                    if ("number" == typeof t) throw new TypeError("Argument must not be a number");
                    return i(t, e, r);
                }, a.alloc = function(t, e, r) {
                    if ("number" != typeof t) throw new TypeError("Argument must be a number");
                    var n = i(t);
                    return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n;
                }, a.allocUnsafe = function(t) {
                    if ("number" != typeof t) throw new TypeError("Argument must be a number");
                    return i(t);
                }, a.allocUnsafeSlow = function(t) {
                    if ("number" != typeof t) throw new TypeError("Argument must be a number");
                    return n.SlowBuffer(t);
                };
            },
            8330: (t, e, r)=>{
                var n = r(1679), i = r(5832).Buffer, o = r(3879);
                function a(t) {
                    o.call(this, t), this.enc = "pem";
                }
                n(a, o), t.exports = a, a.prototype.decode = function(t, e) {
                    for(var r = t.toString().split(/[\r\n]+/g), n = e.label.toUpperCase(), a = /^-----(BEGIN|END) ([^-]+)-----$/, s = -1, u = -1, c = 0; c < r.length; c++){
                        var f = r[c].match(a);
                        if (null !== f && f[2] === n) {
                            if (-1 !== s) {
                                if ("END" !== f[1]) break;
                                u = c;
                                break;
                            }
                            if ("BEGIN" !== f[1]) break;
                            s = c;
                        }
                    }
                    if (-1 === s || -1 === u) throw new Error("PEM section not found for: " + n);
                    var l = r.slice(s + 1, u).join("");
                    l.replace(/[^a-z0-9\+\/=]+/gi, "");
                    var h = new i(l, "base64");
                    return o.prototype.decode.call(this, h, e);
                };
            },
            8418: (t, e, r)=>{
                var n = r(1679), i = r(2655);
                function o(t) {
                    i.call(this, t), this.enc = "pem";
                }
                n(o, i), t.exports = o, o.prototype.encode = function(t, e) {
                    for(var r = i.prototype.encode.call(this, t).toString("base64"), n = [
                        "-----BEGIN " + e.label + "-----"
                    ], o = 0; o < r.length; o += 64)n.push(r.slice(o, o + 64));
                    return n.push("-----END " + e.label + "-----"), n.join("\n");
                };
            },
            8433: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(7799), o = r(1970), a = o.assert, s = o.cachedProperty, u = o.parseBytes;
                function c(t, e) {
                    this.eddsa = t, "object" !== n(e) && (e = u(e)), Array.isArray(e) && (a(e.length === 2 * t.encodingLength, "Signature has invalid size"), e = {
                        R: e.slice(0, t.encodingLength),
                        S: e.slice(t.encodingLength)
                    }), a(e.R && e.S, "Signature without R or S"), t.isPoint(e.R) && (this._R = e.R), e.S instanceof i && (this._S = e.S), this._Rencoded = Array.isArray(e.R) ? e.R : e.Rencoded, this._Sencoded = Array.isArray(e.S) ? e.S : e.Sencoded;
                }
                s(c, "S", function() {
                    return this.eddsa.decodeInt(this.Sencoded());
                }), s(c, "R", function() {
                    return this.eddsa.decodePoint(this.Rencoded());
                }), s(c, "Rencoded", function() {
                    return this.eddsa.encodePoint(this.R());
                }), s(c, "Sencoded", function() {
                    return this.eddsa.encodeInt(this.S());
                }), c.prototype.toBytes = function() {
                    return this.Rencoded().concat(this.Sencoded());
                }, c.prototype.toHex = function() {
                    return o.encode(this.toBytes(), "hex").toUpperCase();
                }, t.exports = c;
            },
            8435: (t)=>{
                "use strict";
                t.exports = Math.min;
            },
            8442: (t, e, r)=>{
                "use strict";
                var n = r(1898);
                t.exports = function(t) {
                    for(var e = 0, r = Object.values(n); e < r.length; e++)(0, r[e])(t, {
                        deduplicate: !0
                    });
                    t.plugins = Object.values(n).map(function(t) {
                        return {
                            fn: t,
                            opts: {
                                deduplicate: !0
                            }
                        };
                    }).concat(t.plugins);
                };
            },
            8493: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i;
                function o(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" !== n(t) || null === t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" !== n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" === n(e) ? e : String(e);
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var a = r(8500), s = Symbol("lastResolve"), u = Symbol("lastReject"), c = Symbol("error"), f = Symbol("ended"), l = Symbol("lastPromise"), h = Symbol("handlePromise"), p = Symbol("stream");
                function d(t, e) {
                    return {
                        value: t,
                        done: e
                    };
                }
                function y(t) {
                    var e = t[s];
                    if (null !== e) {
                        var r = t[p].read();
                        null !== r && (t[l] = null, t[s] = null, t[u] = null, e(d(r, !1)));
                    }
                }
                function b(t) {
                    ({
                        env: {}
                    }).nextTick(y, t);
                }
                var m = Object.getPrototypeOf(function() {}), v = Object.setPrototypeOf((o(i = {
                    get stream () {
                        return this[p];
                    },
                    next: function() {
                        var t = this, e = this[c];
                        if (null !== e) return Promise.reject(e);
                        if (this[f]) return Promise.resolve(d(void 0, !0));
                        if (this[p].destroyed) return new Promise(function(e, r) {
                            ({
                                env: {}
                            }).nextTick(function() {
                                t[c] ? r(t[c]) : e(d(void 0, !0));
                            });
                        });
                        var r, n = this[l];
                        if (n) r = new Promise(function(t, e) {
                            return function(r, n) {
                                t.then(function() {
                                    e[f] ? r(d(void 0, !0)) : e[h](r, n);
                                }, n);
                            };
                        }(n, this));
                        else {
                            var i = this[p].read();
                            if (null !== i) return Promise.resolve(d(i, !1));
                            r = new Promise(this[h]);
                        }
                        return this[l] = r, r;
                    }
                }, Symbol.asyncIterator, function() {
                    return this;
                }), o(i, "return", function() {
                    var t = this;
                    return new Promise(function(e, r) {
                        t[p].destroy(null, function(t) {
                            t ? r(t) : e(d(void 0, !0));
                        });
                    });
                }), i), m);
                t.exports = function(t) {
                    var e, r = Object.create(v, (o(e = {}, p, {
                        value: t,
                        writable: !0
                    }), o(e, s, {
                        value: null,
                        writable: !0
                    }), o(e, u, {
                        value: null,
                        writable: !0
                    }), o(e, c, {
                        value: null,
                        writable: !0
                    }), o(e, f, {
                        value: t._readableState.endEmitted,
                        writable: !0
                    }), o(e, h, {
                        value: function(t, e) {
                            var n = r[p].read();
                            n ? (r[l] = null, r[s] = null, r[u] = null, t(d(n, !1))) : (r[s] = t, r[u] = e);
                        },
                        writable: !0
                    }), e));
                    return r[l] = null, a(t, function(t) {
                        if (t && "ERR_STREAM_PREMATURE_CLOSE" !== t.code) {
                            var e = r[u];
                            return null !== e && (r[l] = null, r[s] = null, r[u] = null, e(t)), void (r[c] = t);
                        }
                        var n = r[s];
                        null !== n && (r[l] = null, r[s] = null, r[u] = null, n(d(void 0, !0))), r[f] = !0;
                    }), t.on("readable", b.bind(null, r)), r;
                };
            },
            8499: (t, e, r)=>{
                "use strict";
                var n = r(8953);
                t.exports = function(t) {
                    var e = null != this ? this.path : null;
                    return n(t, e);
                };
            },
            8500: (t, e, r)=>{
                "use strict";
                var n = r(198).F.ERR_STREAM_PREMATURE_CLOSE;
                function i() {}
                t.exports = function t(e, r, o) {
                    if ("function" == typeof r) return t(e, null, r);
                    r || (r = {}), o = function(t) {
                        var e = !1;
                        return function() {
                            if (!e) {
                                e = !0;
                                for(var r = arguments.length, n = new Array(r), i = 0; i < r; i++)n[i] = arguments[i];
                                t.apply(this, n);
                            }
                        };
                    }(o || i);
                    var a = r.readable || !1 !== r.readable && e.readable, s = r.writable || !1 !== r.writable && e.writable, u = function() {
                        e.writable || f();
                    }, c = e._writableState && e._writableState.finished, f = function() {
                        s = !1, c = !0, a || o.call(e);
                    }, l = e._readableState && e._readableState.endEmitted, h = function() {
                        a = !1, l = !0, s || o.call(e);
                    }, p = function(t) {
                        o.call(e, t);
                    }, d = function() {
                        var t;
                        return a && !l ? (e._readableState && e._readableState.ended || (t = new n), o.call(e, t)) : s && !c ? (e._writableState && e._writableState.ended || (t = new n), o.call(e, t)) : void 0;
                    }, y = function() {
                        e.req.on("finish", f);
                    };
                    return function(t) {
                        return t.setHeader && "function" == typeof t.abort;
                    }(e) ? (e.on("complete", f), e.on("abort", d), e.req ? y() : e.on("request", y)) : s && !e._writableState && (e.on("end", u), e.on("close", u)), e.on("end", h), e.on("finish", f), !1 !== r.error && e.on("error", p), e.on("close", d), function() {
                        e.removeListener("complete", f), e.removeListener("abort", d), e.removeListener("request", y), e.req && e.req.removeListener("finish", f), e.removeListener("end", u), e.removeListener("close", u), e.removeListener("finish", f), e.removeListener("end", h), e.removeListener("error", p), e.removeListener("close", d);
                    };
                };
            },
            8533: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                function i(t) {
                    return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, i(t);
                }
                function o() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (o = function() {
                        return !!t;
                    })();
                }
                function a(t) {
                    return a = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, a(t);
                }
                function s(t, e) {
                    return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, s(t, e);
                }
                r(7591).set(r(4026));
                var u = r(8285);
                u.setBrowser(!0), e.Error = r(3672), e.Schema = r(7058), e.Types = r(9600), e.VirtualType = r(622), e.SchemaType = r(6426), e.SchemaTypeOptions = r(8879), e.utils = r(8768), e.Document = u(), e.model = function(t, r) {
                    var n = function(t) {
                        function e(t, n) {
                            return function(t, e) {
                                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                            }(this, e), function(t, e, r) {
                                return e = a(e), function(t, e) {
                                    if (e && ("object" == i(e) || "function" == typeof e)) return e;
                                    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                    return function(t) {
                                        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                        return t;
                                    }(t);
                                }(t, o() ? Reflect.construct(e, r || [], a(t).constructor) : e.apply(t, r));
                            }(this, e, [
                                t,
                                r,
                                n
                            ]);
                        }
                        var n;
                        return function(t, e) {
                            if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                            t.prototype = Object.create(e && e.prototype, {
                                constructor: {
                                    value: t,
                                    writable: !0,
                                    configurable: !0
                                }
                            }), Object.defineProperty(t, "prototype", {
                                writable: !1
                            }), e && s(t, e);
                        }(e, t), n = e, Object.defineProperty(n, "prototype", {
                            writable: !1
                        }), n;
                    }(e.Document);
                    return n.modelName = t, n;
                }, "undefined" != typeof window && (window.mongoose = t.exports, window.Buffer = n);
            },
            8629: (t, e, r)=>{
                var n = {
                    ECB: r(9907),
                    CBC: r(5459),
                    CFB: r(4488),
                    CFB8: r(6322),
                    CFB1: r(4937),
                    OFB: r(4252),
                    CTR: r(2538),
                    GCM: r(2538)
                }, i = r(3219);
                for(var o in i)i[o].module = n[i[o].mode];
                t.exports = i;
            },
            8633: (t)=>{
                "use strict";
                t.exports = Math.pow;
            },
            8639: (t, e, r)=>{
                "use strict";
                var n = r(4758);
                function i(t, e) {
                    t.emit("error", e);
                }
                t.exports = {
                    destroy: function(t, e) {
                        var r = this, o = this._readableState && this._readableState.destroyed, a = this._writableState && this._writableState.destroyed;
                        return o || a ? (e ? e(t) : t && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, n.nextTick(i, this, t)) : n.nextTick(i, this, t)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(t || null, function(t) {
                            !e && t ? r._writableState ? r._writableState.errorEmitted || (r._writableState.errorEmitted = !0, n.nextTick(i, r, t)) : n.nextTick(i, r, t) : e && e(t);
                        }), this);
                    },
                    undestroy: function() {
                        this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
                    }
                };
            },
            8677: (t, e, r)=>{
                "use strict";
                var n = r(2696);
                t.exports = function(t, e) {
                    if (null == t) return null;
                    for(var r = 0, i = Object.keys(t); r < i.length; r++){
                        var o = t[i[r]];
                        if (o.schema && o.schema.discriminatorMapping && n(o.schema.discriminatorMapping.value, e)) return o;
                    }
                    return null;
                };
            },
            8699: (t, e, r)=>{
                e.pbkdf2 = r(2367), e.pbkdf2Sync = r(245);
            },
            8728: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function i(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? n(Object(r), !0).forEach(function(e) {
                            o(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function o(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != a(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != a(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == a(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function a(t) {
                    return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, a(t);
                }
                function s(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var u = r(6426), c = r(3672), f = r(9528), l = r(1244), h = r(4327), p = r(8768), d = r(3305), y = u.CastError;
                function b(t, e) {
                    this.enumValues = [], this.regExp = null, u.call(this, t, e, "String");
                }
                function m(t, e) {
                    return this.castForQuery(null, t, e);
                }
                function v(t) {
                    return null == t ? this._castNullish(t) : this.cast(t, this);
                }
                b.schemaName = "String", b.defaultOptions = {}, b.prototype = Object.create(u.prototype), b.prototype.constructor = b, Object.defineProperty(b.prototype, "OptionsConstructor", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !1,
                    value: f
                }), b._cast = l, b.cast = function(t) {
                    return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
                }, b._defaultCaster = function(t) {
                    if (null != t && "string" != typeof t) throw new Error;
                    return t;
                }, b.get = u.get, b.set = u.set, b.setters = [], b._checkRequired = function(t) {
                    return (t instanceof String || "string" == typeof t) && t.length;
                }, b.checkRequired = u.checkRequired, b.prototype.enum = function() {
                    if (this.enumValidator && (this.validators = this.validators.filter(function(t) {
                        return t.validator !== this.enumValidator;
                    }, this), this.enumValidator = !1), void 0 === arguments[0] || !1 === arguments[0]) return this;
                    var t, e;
                    p.isObject(arguments[0]) ? Array.isArray(arguments[0].values) ? (t = arguments[0].values, e = arguments[0].message) : (t = p.object.vals(arguments[0]), e = c.messages.String.enum) : (t = arguments, e = c.messages.String.enum);
                    var r, n = function(t, e) {
                        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (!r) {
                            if (Array.isArray(t) || (r = function(t, e) {
                                if (t) {
                                    if ("string" == typeof t) return s(t, e);
                                    var r = ({}).toString.call(t).slice(8, -1);
                                    return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? s(t, e) : void 0;
                                }
                            }(t)) || e && t && "number" == typeof t.length) {
                                r && (t = r);
                                var n = 0, i = function() {};
                                return {
                                    s: i,
                                    n: function() {
                                        return n >= t.length ? {
                                            done: !0
                                        } : {
                                            done: !1,
                                            value: t[n++]
                                        };
                                    },
                                    e: function(t) {
                                        throw t;
                                    },
                                    f: i
                                };
                            }
                            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                        }
                        var o, a = !0, u = !1;
                        return {
                            s: function() {
                                r = r.call(t);
                            },
                            n: function() {
                                var t = r.next();
                                return a = t.done, t;
                            },
                            e: function(t) {
                                u = !0, o = t;
                            },
                            f: function() {
                                try {
                                    a || null == r.return || r.return();
                                } finally{
                                    if (u) throw o;
                                }
                            }
                        };
                    }(t);
                    try {
                        for(n.s(); !(r = n.n()).done;){
                            var i = r.value;
                            void 0 !== i && this.enumValues.push(this.cast(i));
                        }
                    } catch (t) {
                        n.e(t);
                    } finally{
                        n.f();
                    }
                    var o = this.enumValues;
                    return this.enumValidator = function(t) {
                        return null == t || ~o.indexOf(t);
                    }, this.validators.push({
                        validator: this.enumValidator,
                        message: e,
                        type: "enum",
                        enumValues: o
                    }), this;
                }, b.prototype.lowercase = function(t) {
                    var e = this;
                    return arguments.length > 0 && !t ? this : this.set(function(t) {
                        return "string" != typeof t && (t = e.cast(t)), t ? t.toLowerCase() : t;
                    });
                }, b.prototype.uppercase = function(t) {
                    var e = this;
                    return arguments.length > 0 && !t ? this : this.set(function(t) {
                        return "string" != typeof t && (t = e.cast(t)), t ? t.toUpperCase() : t;
                    });
                }, b.prototype.trim = function(t) {
                    var e = this;
                    return arguments.length > 0 && !t ? this : this.set(function(t) {
                        return "string" != typeof t && (t = e.cast(t)), t ? t.trim() : t;
                    });
                }, b.prototype.minlength = function(t, e) {
                    if (this.minlengthValidator && (this.validators = this.validators.filter(function(t) {
                        return t.validator !== this.minlengthValidator;
                    }, this)), null != t) {
                        var r = e || c.messages.String.minlength;
                        r = r.replace(/{MINLENGTH}/, t), this.validators.push({
                            validator: this.minlengthValidator = function(e) {
                                return null === e || e.length >= t;
                            },
                            message: r,
                            type: "minlength",
                            minlength: t
                        });
                    }
                    return this;
                }, b.prototype.minLength = b.prototype.minlength, b.prototype.maxlength = function(t, e) {
                    if (this.maxlengthValidator && (this.validators = this.validators.filter(function(t) {
                        return t.validator !== this.maxlengthValidator;
                    }, this)), null != t) {
                        var r = e || c.messages.String.maxlength;
                        r = r.replace(/{MAXLENGTH}/, t), this.validators.push({
                            validator: this.maxlengthValidator = function(e) {
                                return null === e || e.length <= t;
                            },
                            message: r,
                            type: "maxlength",
                            maxlength: t
                        });
                    }
                    return this;
                }, b.prototype.maxLength = b.prototype.maxlength, b.prototype.match = function(t, e) {
                    var r = e || c.messages.String.match;
                    return this.validators.push({
                        validator: function(e) {
                            return !!t && (t.lastIndex = 0, null == e || "" === e || t.test(e));
                        },
                        message: r,
                        type: "regexp",
                        regexp: t
                    }), this;
                }, b.prototype.checkRequired = function(t, e) {
                    return "object" === a(t) && u._isRef(this, t, e, !0) ? null != t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : b.checkRequired())(t);
                }, b.prototype.cast = function(t, e, r, n, i) {
                    if ("string" != typeof t && u._isRef(this, t, e, r)) return this._castRef(t, e, r, i);
                    var o;
                    o = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : b.cast();
                    try {
                        return o(t);
                    } catch (e) {
                        throw new y("string", t, this.path, null, this);
                    }
                };
                var g = i(i({}, u.prototype.$conditionalHandlers), {}, {
                    $all: function(t, e) {
                        var r = this;
                        return Array.isArray(t) ? t.map(function(t) {
                            return r.castForQuery(null, t, e);
                        }) : [
                            this.castForQuery(null, t, e)
                        ];
                    },
                    $gt: m,
                    $gte: m,
                    $lt: m,
                    $lte: m,
                    $options: v,
                    $regex: function(t) {
                        return "[object RegExp]" === Object.prototype.toString.call(t) ? t : v.call(this, t);
                    },
                    $not: m
                });
                Object.defineProperty(b.prototype, "$conditionalHandlers", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !1,
                    value: Object.freeze(g)
                }), b.prototype.castForQuery = function(t, e, r) {
                    var n;
                    if (null != t) {
                        if (!(n = this.$conditionalHandlers[t])) throw new Error("Can't use " + t + " with String.");
                        return n.call(this, e, r);
                    }
                    if ("[object RegExp]" === Object.prototype.toString.call(e) || d(e, "BSONRegExp")) return e;
                    try {
                        return this.applySetters(e, r);
                    } catch (t) {
                        throw t instanceof y && t.path === this.path && null != this.$fullPath && (t.path = this.$fullPath), t;
                    }
                }, b.prototype.toJSONSchema = function(t) {
                    var e = this.options.required && "function" != typeof this.options.required;
                    return h("string", "string", null == t ? void 0 : t.useBsonType, e);
                }, t.exports = b;
            },
            8759: (t)=>{
                "use strict";
                t.exports = function(t) {
                    return t.replace(/\.\$(\[[^\]]*\])?(?=\.)/g, ".0").replace(/\.\$(\[[^\]]*\])?$/g, ".0");
                };
            },
            8768: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? i(Object(r), !0).forEach(function(e) {
                            a(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function a(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != f(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != f(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == f(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function s(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = u(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, i = function() {};
                            return {
                                s: i,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: i
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var o, a = !0, s = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return a = t.done, t;
                        },
                        e: function(t) {
                            s = !0, o = t;
                        },
                        f: function() {
                            try {
                                a || null == r.return || r.return();
                            } finally{
                                if (s) throw o;
                            }
                        }
                    };
                }
                function u(t, e) {
                    if (t) {
                        if ("string" == typeof t) return c(t, e);
                        var r = ({}).toString.call(t).slice(8, -1);
                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? c(t, e) : void 0;
                    }
                }
                function c(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                function f(t) {
                    return f = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, f(t);
                }
                var l, h = r(3633).UUID, p = r(354), d = r(5678), y = r(5549), b = r(6948), m = r(4450), v = r(2746), g = r(608), _ = r(1243), w = r(1347), S = r(3305), O = r(2789), j = r(9696), $ = r(2497), E = r(5268), A = r(9539), P = r(2793), x = r(7291).trustedSymbol;
                e.specialProperties = P, e.isMongooseArray = _.isMongooseArray, e.isMongooseDocumentArray = w.isMongooseDocumentArray, e.registerMongooseArray = _.registerMongooseArray, e.registerMongooseDocumentArray = w.registerMongooseDocumentArray;
                var k = /\s/, M = /\s+/;
                e.toCollectionName = function(t, e) {
                    if ("system.profile" === t) return t;
                    if ("system.indexes" === t) return t;
                    if ("function" == typeof e) {
                        if ("string" != typeof t) throw new TypeError("Collection name must be a string");
                        if (0 === t.length) throw new TypeError("Collection name cannot be empty");
                        return e(t);
                    }
                    return t;
                }, e.deepEqual = function t(r, i) {
                    if (r === i) return !0;
                    if ("object" !== f(r) || "object" !== f(i)) return r === i;
                    if (r instanceof Date && i instanceof Date) return r.getTime() === i.getTime();
                    if (S(r, "ObjectId") && S(i, "ObjectId") || S(r, "Decimal128") && S(i, "Decimal128")) return r.toString() === i.toString();
                    if (r instanceof RegExp && i instanceof RegExp) return r.source === i.source && r.ignoreCase === i.ignoreCase && r.multiline === i.multiline && r.global === i.global && r.dotAll === i.dotAll && r.unicode === i.unicode && r.sticky === i.sticky && r.hasIndices === i.hasIndices;
                    if (null == r || null == i) return !1;
                    if (r.prototype !== i.prototype) return !1;
                    if (r instanceof Map || i instanceof Map) return r instanceof Map && i instanceof Map && t(Array.from(r.keys()), Array.from(i.keys())) && t(Array.from(r.values()), Array.from(i.values()));
                    if (r instanceof Number && i instanceof Number) return r.valueOf() === i.valueOf();
                    if (n.isBuffer(r)) return e.buffer.areEqual(r, i);
                    if (Array.isArray(r) || Array.isArray(i)) {
                        if (!Array.isArray(r) || !Array.isArray(i)) return !1;
                        var o = r.length;
                        if (o !== i.length) return !1;
                        for(var a = 0; a < o; ++a)if (!t(r[a], i[a])) return !1;
                        return !0;
                    }
                    null != r.$__ ? r = r._doc : $(r) && (r = r.toObject()), null != i.$__ ? i = i._doc : $(i) && (i = i.toObject());
                    var s = Object.keys(r), u = Object.keys(i), c = s.length;
                    if (c !== u.length) return !1;
                    for(var l = c - 1; l >= 0; l--)if (s[l] !== u[l]) return !1;
                    for(var h = 0, p = s; h < p.length; h++){
                        var d = p[h];
                        if (!t(r[d], i[d])) return !1;
                    }
                    return !0;
                }, e.last = function(t) {
                    if (t.length > 0) return t[t.length - 1];
                }, e.promiseOrCallback = E, e.cloneArrays = function(t) {
                    return Array.isArray(t) ? t.map(function(t) {
                        return e.cloneArrays(t);
                    }) : t;
                }, e.omit = function(t, e) {
                    if (null == e) return Object.assign({}, t);
                    Array.isArray(e) || (e = [
                        e
                    ]);
                    var r, n = Object.assign({}, t), i = s(e);
                    try {
                        for(i.s(); !(r = i.n()).done;)delete n[r.value];
                    } catch (t) {
                        i.e(t);
                    } finally{
                        i.f();
                    }
                    return n;
                }, e.merge = function t(r, n, i, a) {
                    i = i || {};
                    var s, f, l = Object.keys(n), h = 0, p = l.length;
                    n[x] && (r[x] = n[x]), a = a || "";
                    for(var d = i.omitNested || {}; h < p;)if (s = l[h++], !(i.omit && i.omit[s] || d[a] || P.has(s))) {
                        if (null == r[s]) O(n[s]) ? r[s] = o({}, n[s]) : Array.isArray(n[s]) ? r[s] = function(t) {
                            if (Array.isArray(t)) return c(t);
                        }(f = n[s]) || function(t) {
                            if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t);
                        }(f) || u(f) || function() {
                            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                        }() : r[s] = n[s];
                        else if (e.isObject(n[s])) {
                            if (e.isObject(r[s]) || (r[s] = {}), null != n[s]) {
                                if (i.isDiscriminatorSchemaMerge && n[s].$isSingleNested && r[s].$isMongooseDocumentArray || n[s].$isMongooseDocumentArray && r[s].$isSingleNested) continue;
                                if (n[s].instanceOfSchema) {
                                    r[s].instanceOfSchema ? A(r[s], n[s].clone(), i.isDiscriminatorSchemaMerge) : r[s] = n[s].clone();
                                    continue;
                                }
                                if (S(n[s], "ObjectId")) {
                                    r[s] = new y(n[s]);
                                    continue;
                                }
                            }
                            t(r[s], n[s], i, a ? a + "." + s : s);
                        } else i.overwrite && (r[s] = n[s]);
                    }
                    return r;
                }, e.toObject = function t(n) {
                    var i;
                    if (l || (l = r(2400)), null == n) return n;
                    if (n instanceof l) return n.toObject();
                    if (Array.isArray(n)) {
                        i = [];
                        var o, a = s(n);
                        try {
                            for(a.s(); !(o = a.n()).done;){
                                var u = o.value;
                                i.push(t(u));
                            }
                        } catch (t) {
                            a.e(t);
                        } finally{
                            a.f();
                        }
                        return i;
                    }
                    if (e.isPOJO(n)) {
                        i = {}, n[x] && (i[x] = n[x]);
                        for(var c = 0, f = Object.keys(n); c < f.length; c++){
                            var h = f[c];
                            P.has(h) || (i[h] = t(n[h]));
                        }
                        return i;
                    }
                    return n;
                }, e.isObject = g, e.isPOJO = r(2789), e.isNonBuiltinObject = function(t) {
                    return !("object" !== f(t) || e.isNativeObject(t) || e.isMongooseType(t) || t instanceof h || null == t);
                }, e.isNativeObject = function(t) {
                    return Array.isArray(t) || t instanceof Date || t instanceof Boolean || t instanceof Number || t instanceof String;
                }, e.isEmptyObject = function(t) {
                    return null != t && "object" === f(t) && 0 === Object.keys(t).length;
                }, e.hasKey = function(t, r) {
                    for(var n = 0, i = Object.keys(t); n < i.length; n++){
                        var o = i[n];
                        if (o === r) return !0;
                        if (e.isPOJO(t[o]) && e.hasKey(t[o], r)) return !0;
                    }
                    return !1;
                }, e.tick = function(t) {
                    if ("function" == typeof t) return function() {
                        try {
                            t.apply(this, arguments);
                        } catch (t) {
                            v(function() {
                                throw t;
                            });
                        }
                    };
                }, e.isMongooseType = function(t) {
                    return S(t, "ObjectId") || S(t, "Decimal128") || t instanceof n;
                }, e.isMongooseObject = $, e.expires = function(t) {
                    t && "Object" === t.constructor.name && "expires" in t && (t.expireAfterSeconds = "string" != typeof t.expires ? t.expires : Math.round(p(t.expires) / 1e3), delete t.expires);
                }, e.populate = function(t, r, n, i, o, a, u, c) {
                    var l, h = null;
                    if (1 === arguments.length) {
                        if (t instanceof b) return t._docs = {}, t._childDocs = [], [
                            t
                        ];
                        if (Array.isArray(t)) {
                            var p = (l = [], t.forEach(function(t) {
                                k.test(t.path) ? t.path.split(M).forEach(function(e) {
                                    var r = Object.assign({}, t);
                                    r.path = e, l.push(r);
                                }) : l.push(t);
                            }), l);
                            return p.map(function(t) {
                                return e.populate(t)[0];
                            });
                        }
                        h = e.isObject(t) ? Object.assign({}, t) : {
                            path: t
                        };
                    } else h = "object" === f(n) ? {
                        path: t,
                        select: r,
                        match: n,
                        options: i
                    } : {
                        path: t,
                        select: r,
                        model: n,
                        match: i,
                        options: o,
                        populate: a,
                        justOne: u,
                        count: c
                    };
                    if (!("string" == typeof h.path || Array.isArray(h.path) && h.path.every(function(t) {
                        return "string" == typeof t;
                    }))) throw new TypeError("utils.populate: invalid path. Expected string or array of strings. Got typeof `" + f(t) + "`");
                    return function(t) {
                        if (Array.isArray(t.populate)) {
                            var r = [];
                            t.populate.forEach(function(t) {
                                if (k.test(t.path)) {
                                    var n = Object.assign({}, t);
                                    n.path.split(M).forEach(function(t) {
                                        n.path = t, r.push(e.populate(n)[0]);
                                    });
                                } else r.push(e.populate(t)[0]);
                            }), t.populate = e.populate(r);
                        } else null != t.populate && "object" === f(t.populate) && (t.populate = e.populate(t.populate));
                        var n = [], i = k.test(t.path) ? t.path.split(M) : Array.isArray(t.path) ? t.path : [
                            t.path
                        ];
                        null != t.options && (t.options = m(t.options));
                        var o, a = s(i);
                        try {
                            for(a.s(); !(o = a.n()).done;){
                                var u = o.value;
                                n.push(new b(Object.assign({}, t, {
                                    path: u
                                })));
                            }
                        } catch (t) {
                            a.e(t);
                        } finally{
                            a.f();
                        }
                        return n;
                    }(h);
                }, e.getValue = function(t, e, r) {
                    return d.get(t, e, B, r);
                };
                var T = Object.freeze({
                    getters: !1
                });
                function B(t, e) {
                    if ("$*" === e && t instanceof Map) return t;
                    var r = (null == t ? void 0 : t._doc) || t;
                    return null != r && r.isMongooseArrayProxy && (r = r.__array), r instanceof Map ? r.get(e, T) : r[e];
                }
                e.setValue = function(t, e, r, n, i) {
                    d.set(t, e, r, "_doc", n, i);
                }, e.object = {}, e.object.vals = function(t) {
                    for(var e = Object.keys(t), r = e.length, n = []; r--;)n.push(t[e[r]]);
                    return n;
                };
                var I = Object.prototype.hasOwnProperty;
                e.object.hasOwnProperty = function(t, e) {
                    return I.call(t, e);
                }, e.isNullOrUndefined = function(t) {
                    return null == t;
                }, e.array = {}, e.array.flatten = function t(e, r, n) {
                    return n || (n = []), e.forEach(function(e) {
                        Array.isArray(e) ? t(e, r, n) : r && !r(e) || n.push(e);
                    }), n;
                };
                var R = Object.prototype.hasOwnProperty;
                e.hasUserDefinedProperty = function(t, r) {
                    if (null == t) return !1;
                    if (Array.isArray(r)) {
                        var n, i = s(r);
                        try {
                            for(i.s(); !(n = i.n()).done;){
                                var o = n.value;
                                if (e.hasUserDefinedProperty(t, o)) return !0;
                            }
                        } catch (t) {
                            i.e(t);
                        } finally{
                            i.f();
                        }
                        return !1;
                    }
                    if (R.call(t, r)) return !0;
                    if ("object" === f(t) && r in t) {
                        var a = t[r];
                        return a !== Object.prototype[r] && a !== Array.prototype[r];
                    }
                    return !1;
                };
                var N = Math.pow(2, 32) - 1;
                e.isArrayIndex = function(t) {
                    return "number" == typeof t ? t >= 0 && t <= N : "string" == typeof t && !!/^\d+$/.test(t) && (t = +t) >= 0 && t <= N;
                }, e.array.unique = function(t) {
                    var e, r = new Set, n = new Set, i = [], o = s(t);
                    try {
                        for(o.s(); !(e = o.n()).done;){
                            var a = e.value;
                            if ("number" == typeof a || "string" == typeof a || null == a) {
                                if (r.has(a)) continue;
                                i.push(a), r.add(a);
                            } else if (S(a, "ObjectId")) {
                                if (n.has(a.toString())) continue;
                                i.push(a), n.add(a.toString());
                            } else i.push(a);
                        }
                    } catch (t) {
                        o.e(t);
                    } finally{
                        o.f();
                    }
                    return i;
                }, e.buffer = {}, e.buffer.areEqual = function(t, e) {
                    if (!n.isBuffer(t)) return !1;
                    if (!n.isBuffer(e)) return !1;
                    if (t.length !== e.length) return !1;
                    for(var r = 0, i = t.length; r < i; ++r)if (t[r] !== e[r]) return !1;
                    return !0;
                }, e.getFunctionName = j, e.decorate = function(t, e) {
                    for(var r in e)P.has(r) || (t[r] = e[r]);
                }, e.mergeClone = function(t, r) {
                    $(r) && (r = r.toObject({
                        transform: !1,
                        virtuals: !1,
                        depopulate: !0,
                        getters: !1,
                        flattenDecimals: !1
                    }));
                    for(var i, o = Object.keys(r), a = o.length, s = 0; s < a;)if (i = o[s++], !P.has(i)) {
                        if (void 0 === t[i]) t[i] = m(r[i], {
                            transform: !1,
                            virtuals: !1,
                            depopulate: !0,
                            getters: !1,
                            flattenDecimals: !1
                        });
                        else {
                            var u = r[i];
                            if (null == u || !u.valueOf || u instanceof Date || (u = u.valueOf()), e.isObject(u)) {
                                var c = u;
                                $(u) && !u.isMongooseBuffer && (c = c.toObject({
                                    transform: !1,
                                    virtuals: !1,
                                    depopulate: !0,
                                    getters: !1,
                                    flattenDecimals: !1
                                })), u.isMongooseBuffer && (c = n.from(c)), e.mergeClone(t[i], c);
                            } else t[i] = m(u, {
                                flattenDecimals: !1
                            });
                        }
                    }
                }, e.each = function(t, e) {
                    var r, n = s(t);
                    try {
                        for(n.s(); !(r = n.n()).done;)e(r.value);
                    } catch (t) {
                        n.e(t);
                    } finally{
                        n.f();
                    }
                }, e.renameObjKey = function(t, e, r) {
                    return Object.keys(t).reduce(function(n, i) {
                        return i === e ? n[r] = t[e] : n[i] = t[i], n;
                    }, {});
                }, e.getOption = function(t) {
                    var e, r = s(Array.prototype.slice.call(arguments, 1));
                    try {
                        for(r.s(); !(e = r.n()).done;){
                            var n = e.value;
                            if (null != n && null != n[t]) return n[t];
                        }
                    } catch (t) {
                        r.e(t);
                    } finally{
                        r.f();
                    }
                    return null;
                }, e.noop = function() {}, e.errorToPOJO = function(t) {
                    if (!(t instanceof Error)) throw new Error("`error` must be `instanceof Error`.");
                    var e, r = {}, n = s(Object.getOwnPropertyNames(t));
                    try {
                        for(n.s(); !(e = n.n()).done;){
                            var i = e.value;
                            r[i] = t[i];
                        }
                    } catch (t) {
                        n.e(t);
                    } finally{
                        n.f();
                    }
                    return r;
                }, e.warn = function(t) {
                    return ({
                        env: {}
                    }).emitWarning(t, {
                        code: "MONGOOSE"
                    });
                }, e.injectTimestampsOption = function(t, e) {
                    null != e && (t.timestamps = e);
                };
            },
            8784: (t, e, r)=>{
                "use strict";
                t.exports = f;
                var n = r(198).F, i = n.ERR_METHOD_NOT_IMPLEMENTED, o = n.ERR_MULTIPLE_CALLBACK, a = n.ERR_TRANSFORM_ALREADY_TRANSFORMING, s = n.ERR_TRANSFORM_WITH_LENGTH_0, u = r(4560);
                function c(t, e) {
                    var r = this._transformState;
                    r.transforming = !1;
                    var n = r.writecb;
                    if (null === n) return this.emit("error", new o);
                    r.writechunk = null, r.writecb = null, null != e && this.push(e), n(t);
                    var i = this._readableState;
                    i.reading = !1, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
                }
                function f(t) {
                    if (!(this instanceof f)) return new f(t);
                    u.call(this, t), this._transformState = {
                        afterTransform: c.bind(this),
                        needTransform: !1,
                        transforming: !1,
                        writecb: null,
                        writechunk: null,
                        writeencoding: null
                    }, this._readableState.needReadable = !0, this._readableState.sync = !1, t && ("function" == typeof t.transform && (this._transform = t.transform), "function" == typeof t.flush && (this._flush = t.flush)), this.on("prefinish", l);
                }
                function l() {
                    var t = this;
                    "function" != typeof this._flush || this._readableState.destroyed ? h(this, null, null) : this._flush(function(e, r) {
                        h(t, e, r);
                    });
                }
                function h(t, e, r) {
                    if (e) return t.emit("error", e);
                    if (null != r && t.push(r), t._writableState.length) throw new s;
                    if (t._transformState.transforming) throw new a;
                    return t.push(null);
                }
                r(1679)(f, u), f.prototype.push = function(t, e) {
                    return this._transformState.needTransform = !1, u.prototype.push.call(this, t, e);
                }, f.prototype._transform = function(t, e, r) {
                    r(new i("_transform()"));
                }, f.prototype._write = function(t, e, r) {
                    var n = this._transformState;
                    if (n.writecb = r, n.writechunk = t, n.writeencoding = e, !n.transforming) {
                        var i = this._readableState;
                        (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
                    }
                }, f.prototype._read = function(t) {
                    var e = this._transformState;
                    null === e.writechunk || e.transforming ? e.needTransform = !0 : (e.transforming = !0, this._transform(e.writechunk, e.writeencoding, e.afterTransform));
                }, f.prototype._destroy = function(t, e) {
                    u.prototype._destroy.call(this, t, function(t) {
                        e(t);
                    });
                };
            },
            8863: (t, e, r)=>{
                "use strict";
                var n = r(2354), i = r(2268), o = r(3123), a = r(5477);
                t.exports = function(t) {
                    if (t.length < 1 || "function" != typeof t[0]) throw new i("a function is required");
                    return a(n, o, t);
                };
            },
            8872: (t, e, r)=>{
                "use strict";
                e.po = r(4276), r(5833), r(2046);
                var n = r(4606), i = Object.keys(n), o = ([
                    "sha1",
                    "sha224",
                    "sha256",
                    "sha384",
                    "sha512",
                    "md5",
                    "rmd160"
                ].concat(i), r(8699));
                o.pbkdf2, o.pbkdf2Sync;
                var a = r(9652);
                a.Cipher, a.createCipher, a.Cipheriv, a.createCipheriv, a.Decipher, a.createDecipher, a.Decipheriv, a.createDecipheriv, a.getCiphers, a.listCiphers;
                var s = r(9803);
                s.DiffieHellmanGroup, s.createDiffieHellmanGroup, s.getDiffieHellman, s.createDiffieHellman, s.DiffieHellman;
                var u = r(7937);
                u.createSign, u.Sign, u.createVerify, u.Verify, r(1005);
                var c = r(2327);
                c.publicEncrypt, c.privateEncrypt, c.publicDecrypt, c.privateDecrypt;
                var f = r(7952);
                f.randomFill, f.randomFillSync;
            },
            8879: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, a(n.key), n);
                    }
                }
                function o(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), t;
                }
                function a(t) {
                    var e = function(t) {
                        if ("object" != n(t) || !t) return t;
                        var e = t[Symbol.toPrimitive];
                        if (void 0 !== e) {
                            var r = e.call(t, "string");
                            if ("object" != n(r)) return r;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return String(t);
                    }(t);
                    return "symbol" == n(e) ? e : e + "";
                }
                var s = r(4450), u = o(function t(e) {
                    if (function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, t), null == e) return this;
                    Object.assign(this, s(e));
                }), c = r(5761);
                Object.defineProperty(u.prototype, "type", c), Object.defineProperty(u.prototype, "validate", c), Object.defineProperty(u.prototype, "cast", c), Object.defineProperty(u.prototype, "required", c), Object.defineProperty(u.prototype, "default", c), Object.defineProperty(u.prototype, "ref", c), Object.defineProperty(u.prototype, "refPath", c), Object.defineProperty(u.prototype, "select", c), Object.defineProperty(u.prototype, "index", c), Object.defineProperty(u.prototype, "unique", c), Object.defineProperty(u.prototype, "immutable", c), Object.defineProperty(u.prototype, "sparse", c), Object.defineProperty(u.prototype, "text", c), Object.defineProperty(u.prototype, "transform", c), t.exports = u;
            },
            8890: (t, e, r)=>{
                var n = r(1679), i = r(1485), o = r(9732).Buffer, a = [
                    1116352408,
                    1899447441,
                    3049323471,
                    3921009573,
                    961987163,
                    1508970993,
                    2453635748,
                    2870763221,
                    3624381080,
                    310598401,
                    607225278,
                    1426881987,
                    1925078388,
                    2162078206,
                    2614888103,
                    3248222580,
                    3835390401,
                    4022224774,
                    264347078,
                    604807628,
                    770255983,
                    1249150122,
                    1555081692,
                    1996064986,
                    2554220882,
                    2821834349,
                    2952996808,
                    3210313671,
                    3336571891,
                    3584528711,
                    113926993,
                    338241895,
                    666307205,
                    773529912,
                    1294757372,
                    1396182291,
                    1695183700,
                    1986661051,
                    2177026350,
                    2456956037,
                    2730485921,
                    2820302411,
                    3259730800,
                    3345764771,
                    3516065817,
                    3600352804,
                    4094571909,
                    275423344,
                    430227734,
                    506948616,
                    659060556,
                    883997877,
                    958139571,
                    1322822218,
                    1537002063,
                    1747873779,
                    1955562222,
                    2024104815,
                    2227730452,
                    2361852424,
                    2428436474,
                    2756734187,
                    3204031479,
                    3329325298
                ], s = new Array(64);
                function u() {
                    this.init(), this._w = s, i.call(this, 64, 56);
                }
                function c(t, e, r) {
                    return r ^ t & (e ^ r);
                }
                function f(t, e, r) {
                    return t & e | r & (t | e);
                }
                function l(t) {
                    return (t >>> 2 | t << 30) ^ (t >>> 13 | t << 19) ^ (t >>> 22 | t << 10);
                }
                function h(t) {
                    return (t >>> 6 | t << 26) ^ (t >>> 11 | t << 21) ^ (t >>> 25 | t << 7);
                }
                function p(t) {
                    return (t >>> 7 | t << 25) ^ (t >>> 18 | t << 14) ^ t >>> 3;
                }
                n(u, i), u.prototype.init = function() {
                    return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
                }, u.prototype._update = function(t) {
                    for(var e, r = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, s = 0 | this._d, u = 0 | this._e, d = 0 | this._f, y = 0 | this._g, b = 0 | this._h, m = 0; m < 16; ++m)r[m] = t.readInt32BE(4 * m);
                    for(; m < 64; ++m)r[m] = 0 | (((e = r[m - 2]) >>> 17 | e << 15) ^ (e >>> 19 | e << 13) ^ e >>> 10) + r[m - 7] + p(r[m - 15]) + r[m - 16];
                    for(var v = 0; v < 64; ++v){
                        var g = b + h(u) + c(u, d, y) + a[v] + r[v] | 0, _ = l(n) + f(n, i, o) | 0;
                        b = y, y = d, d = u, u = s + g | 0, s = o, o = i, i = n, n = g + _ | 0;
                    }
                    this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = s + this._d | 0, this._e = u + this._e | 0, this._f = d + this._f | 0, this._g = y + this._g | 0, this._h = b + this._h | 0;
                }, u.prototype._hash = function() {
                    var t = o.allocUnsafe(32);
                    return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t.writeInt32BE(this._h, 28), t;
                }, t.exports = u;
            },
            8904: (t, e, r)=>{
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i;
                function o(t) {
                    this.rand = t;
                }
                if (t.exports = function(t) {
                    return i || (i = new o(null)), i.generate(t);
                }, t.exports.Rand = o, o.prototype.generate = function(t) {
                    return this._rand(t);
                }, o.prototype._rand = function(t) {
                    if (this.rand.getBytes) return this.rand.getBytes(t);
                    for(var e = new Uint8Array(t), r = 0; r < e.length; r++)e[r] = this.rand.getByte();
                    return e;
                }, "object" === ("undefined" == typeof self ? "undefined" : n(self))) self.crypto && self.crypto.getRandomValues ? o.prototype._rand = function(t) {
                    var e = new Uint8Array(t);
                    return self.crypto.getRandomValues(e), e;
                } : self.msCrypto && self.msCrypto.getRandomValues ? o.prototype._rand = function(t) {
                    var e = new Uint8Array(t);
                    return self.msCrypto.getRandomValues(e), e;
                } : "object" === ("undefined" == typeof window ? "undefined" : n(window)) && (o.prototype._rand = function() {
                    throw new Error("Not implemented yet");
                });
                else try {
                    var a = r(3776);
                    if ("function" != typeof a.randomBytes) throw new Error("Not supported");
                    o.prototype._rand = function(t) {
                        return a.randomBytes(t);
                    };
                } catch (t) {}
            },
            8920: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                function i(t) {
                    return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, i(t);
                }
                function o(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = a(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, i = function() {};
                            return {
                                s: i,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: i
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var o, s = !0, u = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return s = t.done, t;
                        },
                        e: function(t) {
                            u = !0, o = t;
                        },
                        f: function() {
                            try {
                                s || null == r.return || r.return();
                            } finally{
                                if (u) throw o;
                            }
                        }
                    };
                }
                function a(t, e) {
                    if (t) {
                        if ("string" == typeof t) return s(t, e);
                        var r = ({}).toString.call(t).slice(8, -1);
                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? s(t, e) : void 0;
                    }
                }
                function s(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var u = r(2400), c = r(6547), f = r(8213), l = r(4473), h = r(4450), p = r(3303)._, d = r(5678), y = r(8768), b = r(3305), m = r(7930).arrayAtomicsSymbol, v = r(7930).arrayParentSymbol, g = r(7930).arrayPathSymbol, _ = r(7930).arraySchemaSymbol, w = r(7930).populateModelSymbol, S = Symbol("mongoose#Array#sliced"), O = Array.prototype.push, j = {
                    $__getAtomics: function() {
                        var t = [], e = Object.keys(this[m] || {}), r = e.length, n = Object.assign({}, p, {
                            _isNested: !0
                        });
                        if (0 === r) return t[0] = [
                            "$set",
                            this.toObject(n)
                        ], t;
                        for(; r--;){
                            var i = e[r], o = this[m][i];
                            y.isMongooseObject(o) ? o = o.toObject(n) : Array.isArray(o) ? o = this.toObject.call(o, n) : null != o && Array.isArray(o.$each) ? o.$each = this.toObject.call(o.$each, n) : null != o && "function" == typeof o.valueOf && (o = o.valueOf()), "$addToSet" === i && (o = {
                                $each: o
                            }), t.push([
                                i,
                                o
                            ]);
                        }
                        return t;
                    },
                    $atomics: function() {
                        return this[m];
                    },
                    $parent: function() {
                        return this[v];
                    },
                    $path: function() {
                        return this[g];
                    },
                    $shift: function() {
                        this._registerAtomic("$pop", -1), this._markModified();
                        var t = this.__array;
                        if (!t._shifted) return t._shifted = !0, [].shift.call(t);
                    },
                    $pop: function() {
                        if (this._registerAtomic("$pop", 1), this._markModified(), !this._popped) return this._popped = !0, [].pop.call(this);
                    },
                    $schema: function() {
                        return this[_];
                    },
                    _cast: function(t) {
                        var e, r = !1, i = this[v];
                        if (i && (r = i.$populated(this[g], !0)), r && null != t) {
                            if (null == (e = r.options[w])) throw new f("No populated model found for path `" + this[g] + "`. This is likely a bug in Mongoose, please report an issue on github.com/Automattic/mongoose.");
                            return (n.isBuffer(t) || b(t, "ObjectId") || !y.isObject(t)) && (t = {
                                _id: t
                            }), t.schema && t.schema.discriminatorMapping && void 0 !== t.schema.discriminatorMapping.key || (t = new e(t)), this[_].caster.applySetters(t, i, !0);
                        }
                        return this[_].caster.applySetters(t, i, !1);
                    },
                    _mapCast: function(t, e) {
                        return this._cast(t, this.length + e);
                    },
                    _markModified: function(t) {
                        var e, r = this[v];
                        if (r) {
                            if (e = this[g], arguments.length && (e = e + "." + t), null != e && e.endsWith(".$")) return this;
                            r.markModified(e, 0 !== arguments.length ? t : r);
                        }
                        return this;
                    },
                    _registerAtomic: function(t, e) {
                        if (!this[S]) {
                            if ("$set" === t) return this[m] = {
                                $set: e
                            }, l(this[v], this[g]), this._markModified(), this;
                            var r, n = this[m];
                            if ("$pop" === t && !("$pop" in n)) {
                                var i = this;
                                this[v].once("save", function() {
                                    i._popped = i._shifted = null;
                                });
                            }
                            if (n.$set || Object.keys(n).length && !(t in n)) return this[m] = {
                                $set: this
                            }, this;
                            if ("$pullAll" === t || "$addToSet" === t) n[t] || (n[t] = []), n[t] = n[t].concat(e);
                            else if ("$pullDocs" === t) {
                                var u = n.$pull || (n.$pull = {});
                                e[0] instanceof c ? (r = u.$or || (u.$or = []), Array.prototype.push.apply(r, e.map(function(t) {
                                    return t.toObject({
                                        transform: function(e, r) {
                                            return null == t || null == t.$__ || Object.keys(t.$__.activePaths.getStatePaths("default")).forEach(function(t) {
                                                d.unset(t, r), $(r, t);
                                            }), r;
                                        },
                                        virtuals: !1
                                    });
                                }))) : (r = u._id || (u._id = {
                                    $in: []
                                })).$in = r.$in.concat(e);
                            } else if ("$push" === t) {
                                if (n.$push = n.$push || {
                                    $each: []
                                }, null != e && y.hasUserDefinedProperty(e, "$each")) n.$push = e;
                                else if (1 === e.length) n.$push.$each.push(e[0]);
                                else if (e.length < 1e4) {
                                    var f;
                                    (f = n.$push.$each).push.apply(f, function(t) {
                                        if (Array.isArray(t)) return s(t);
                                    }(_ = e) || function(t) {
                                        if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t);
                                    }(_) || a(_) || function() {
                                        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                    }());
                                } else {
                                    var h, p = o(e);
                                    try {
                                        for(p.s(); !(h = p.n()).done;){
                                            var b = h.value;
                                            n.$push.$each.push(b);
                                        }
                                    } catch (t) {
                                        p.e(t);
                                    } finally{
                                        p.f();
                                    }
                                }
                            } else n[t] = e;
                            return this;
                        }
                        var _;
                    },
                    addToSet: function() {
                        E(this, arguments), A(this, arguments);
                        var t = [].map.call(arguments, this._mapCast, this), e = [], r = "";
                        t[0] instanceof c ? r = "doc" : t[0] instanceof Date ? r = "date" : b(t[0], "ObjectId") && (r = "ObjectId");
                        var n = y.isMongooseArray(t) ? t.__array : t, i = y.isMongooseArray(this) ? this.__array : this;
                        return n.forEach(function(t) {
                            var n, o = +t;
                            switch(r){
                                case "doc":
                                    n = this.some(function(e) {
                                        return e.equals(t);
                                    });
                                    break;
                                case "date":
                                    n = this.some(function(t) {
                                        return +t === o;
                                    });
                                    break;
                                case "ObjectId":
                                    n = this.find(function(e) {
                                        return e.toString() === t.toString();
                                    });
                                    break;
                                default:
                                    n = ~this.indexOf(t);
                            }
                            n || (this._markModified(), i.push(t), this._registerAtomic("$addToSet", t), [].push.call(e, t));
                        }, this), e;
                    },
                    hasAtomics: function() {
                        return y.isPOJO(this[m]) ? Object.keys(this[m]).length : 0;
                    },
                    includes: function(t, e) {
                        return -1 !== this.indexOf(t, e);
                    },
                    indexOf: function(t, e) {
                        b(t, "ObjectId") && (t = t.toString()), e = null == e ? 0 : e;
                        for(var r = this.length, n = e; n < r; ++n)if (t == this[n]) return n;
                        return -1;
                    },
                    inspect: function() {
                        return JSON.stringify(this);
                    },
                    nonAtomicPush: function() {
                        var t = [].map.call(arguments, this._mapCast, this);
                        this._markModified();
                        var e = [].push.apply(this, t);
                        return this._registerAtomic("$set", this), e;
                    },
                    pop: function() {
                        this._markModified();
                        var t = [].pop.call(this);
                        return this._registerAtomic("$set", this), t;
                    },
                    pull: function() {
                        var t = this, e = [].map.call(arguments, function(e, r) {
                            return t._cast(e, r, {
                                defaults: !1
                            });
                        }, this), r = this[v].get(this[g]);
                        y.isMongooseArray(r) && (r = r.__array);
                        var n, i = r.length;
                        for(this._markModified(); i--;)(n = r[i]) instanceof u ? e.some(function(t) {
                            return n.equals(t);
                        }) && r.splice(i, 1) : ~this.indexOf.call(e, n) && r.splice(i, 1);
                        return e[0] instanceof c ? this._registerAtomic("$pullDocs", e.map(function(t) {
                            var e = t.$__getValue("_id");
                            return void 0 === e || t.$isDefault("_id") ? t : e;
                        })) : this._registerAtomic("$pullAll", e), l(this[v], this[g]) > 0 && this._registerAtomic("$set", this), this;
                    },
                    push: function() {
                        var t, e = arguments, r = e, n = null != e[0] && y.hasUserDefinedProperty(e[0], "$each"), i = y.isMongooseArray(this) ? this.__array : this;
                        if (n && (r = e[0], e = e[0].$each), null == this[_]) return O.apply(this, e);
                        E(this, e), A(this, e), e = [].map.call(e, this._mapCast, this);
                        var o = this[m];
                        return this._markModified(), n ? (r.$each = e, 0 !== (o.$push && o.$push.$each && o.$push.$each.length || 0) && o.$push.$position != r.$position ? (null != r.$position ? ([].splice.apply(i, [
                            r.$position,
                            0
                        ].concat(e)), t = i.length) : t = [].push.apply(i, e), this._registerAtomic("$set", this)) : null != r.$position ? ([].splice.apply(i, [
                            r.$position,
                            0
                        ].concat(e)), t = this.length) : t = [].push.apply(i, e)) : (r = e, t = O.apply(i, e)), this._registerAtomic("$push", r), t;
                    },
                    remove: function() {
                        return this.pull.apply(this, arguments);
                    },
                    set: function(t, e, r) {
                        var n = this.__array;
                        if (r) return n[t] = e, this;
                        var i = j._cast.call(this, e, t);
                        return j._markModified.call(this, t), n[t] = i, this;
                    },
                    shift: function() {
                        var t = y.isMongooseArray(this) ? this.__array : this;
                        this._markModified();
                        var e = [].shift.call(t);
                        return this._registerAtomic("$set", this), e;
                    },
                    sort: function() {
                        var t = y.isMongooseArray(this) ? this.__array : this, e = [].sort.apply(t, arguments);
                        return this._registerAtomic("$set", this), e;
                    },
                    splice: function() {
                        var t, e = y.isMongooseArray(this) ? this.__array : this;
                        if (this._markModified(), E(this, Array.prototype.slice.call(arguments, 2)), arguments.length) {
                            var r;
                            if (null == this[_]) r = arguments;
                            else {
                                r = [];
                                for(var n = 0; n < arguments.length; ++n)r[n] = n < 2 ? arguments[n] : this._cast(arguments[n], arguments[0] + (n - 2));
                            }
                            t = [].splice.apply(e, r), this._registerAtomic("$set", this);
                        }
                        return t;
                    },
                    toBSON: function() {
                        return this.toObject(p);
                    },
                    toObject: function(t) {
                        var e = y.isMongooseArray(this) ? this.__array : this;
                        return t && t.depopulate ? ((t = h(t))._isNested = !0, [].concat(e).map(function(e) {
                            return e instanceof u ? e.toObject(t) : e;
                        })) : [].concat(e);
                    },
                    $toObject: function() {
                        return this.constructor.prototype.toObject.apply(this, arguments);
                    },
                    unshift: function() {
                        var t;
                        E(this, arguments), t = null == this[_] ? arguments : [].map.call(arguments, this._cast, this);
                        var e = y.isMongooseArray(this) ? this.__array : this;
                        return this._markModified(), [].unshift.apply(e, t), this._registerAtomic("$set", this), this.length;
                    }
                };
                function $(t, e, r) {
                    if ("string" == typeof e) {
                        if (-1 === e.indexOf(".")) return;
                        e = d.stringToParts(e);
                    }
                    (r = r || 0) >= e.length || null != t && "object" === i(t) && ($(t[e[0]], e, r + 1), null != t[e[0]] && "object" === i(t[e[0]]) && 0 === Object.keys(t[e[0]]).length && delete t[e[0]]);
                }
                function E(t, e) {
                    var r, n, a, s = null == t ? null : t[_] && t[_].caster && t[_].caster.options && t[_].caster.options.ref || null;
                    0 === t.length && 0 !== e.length && function(t, e) {
                        if (!e) return !1;
                        var r, n = o(t);
                        try {
                            for(n.s(); !(r = n.n()).done;){
                                var i = r.value;
                                if (null == i) return !1;
                                var a = i.constructor;
                                if (!(i instanceof u) || a.modelName !== e && a.baseModelName !== e) return !1;
                            }
                        } catch (t) {
                            n.e(t);
                        } finally{
                            n.f();
                        }
                        return !0;
                    }(e, s) && t[v].$populated(t[g], [], (r = {}, n = w, a = e[0].constructor, (n = function(t) {
                        var e = function(t) {
                            if ("object" != i(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != i(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == i(e) ? e : e + "";
                    }(n)) in r ? Object.defineProperty(r, n, {
                        value: a,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : r[n] = a, r));
                }
                function A(t, e) {
                    var r = null == t ? null : t[_] && t[_].caster && t[_].caster.options && t[_].caster.options.ref || null, a = t[v], s = t[g];
                    if (r && a.populated(s)) {
                        var u, c = o(e);
                        try {
                            for(c.s(); !(u = c.n()).done;){
                                var f = u.value;
                                if (null != f && ("object" !== i(f) || f instanceof String || f instanceof Number || f instanceof n || y.isMongooseType(f))) {
                                    a.depopulate(s);
                                    break;
                                }
                            }
                        } catch (t) {
                            c.e(t);
                        } finally{
                            c.f();
                        }
                    }
                }
                for(var P = function() {
                    var t = k[x];
                    if (null == Array.prototype[t]) return 1;
                    j[t] = function() {
                        var e = y.isMongooseArray(this) ? this.__array : this, r = [].concat(e);
                        return r[t].apply(r, arguments);
                    };
                }, x = 0, k = [
                    "filter",
                    "flat",
                    "flatMap",
                    "map",
                    "slice"
                ]; x < k.length; x++)P();
                t.exports = j;
            },
            8953: (t, e, r)=>{
                "use strict";
                var n = r(3609);
                t.exports = function(e, r) {
                    if (t.exports.convertToTrue.has(e)) return !0;
                    if (t.exports.convertToFalse.has(e)) return !1;
                    if (null == e) return e;
                    throw new n("boolean", e, r);
                }, t.exports.convertToTrue = new Set([
                    !0,
                    "true",
                    1,
                    "1",
                    "yes"
                ]), t.exports.convertToFalse = new Set([
                    !1,
                    "false",
                    0,
                    "0",
                    "no"
                ]);
            },
            8964: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i, o = r(8863), a = r(1464);
                try {
                    i = [].__proto__ === Array.prototype;
                } catch (t) {
                    if (!t || "object" !== n(t) || !("code" in t) || "ERR_PROTO_ACCESS" !== t.code) throw t;
                }
                var s = !!i && a && a(Object.prototype, "__proto__"), u = Object, c = u.getPrototypeOf;
                t.exports = s && "function" == typeof s.get ? o([
                    s.get
                ]) : "function" == typeof c && function(t) {
                    return c(null == t ? t : u(t));
                };
            },
            8995: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e(t, r, a) {
                        var s;
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), (s = function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            r = r || "Field `" + t + "` is not in schema and strict mode is set to throw."
                        ])).isImmutableError = !!a, s.path = t, s;
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8213));
                Object.defineProperty(s.prototype, "name", {
                    value: "StrictModeError"
                }), t.exports = s;
            },
            9003: (t)=>{
                t.exports = function(t) {
                    for(var e, r = t.length; r--;){
                        if (255 !== (e = t.readUInt8(r))) {
                            e++, t.writeUInt8(e, r);
                            break;
                        }
                        t.writeUInt8(0, r);
                    }
                };
            },
            9064: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(3609), o = r(8953), a = r(1244);
                t.exports = function(t, e) {
                    if (null == t || "object" !== n(t)) throw new i("$text", t, e);
                    return null != t.$search && (t.$search = a(t.$search, e + ".$search")), null != t.$language && (t.$language = a(t.$language, e + ".$language")), null != t.$caseSensitive && (t.$caseSensitive = o(t.$caseSensitive, e + ".$castSensitive")), null != t.$diacriticSensitive && (t.$diacriticSensitive = o(t.$diacriticSensitive, e + ".$diacriticSensitive")), t;
                };
            },
            9068: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e, r) {
                    return e in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                function o(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                function a(t, e) {
                    return !e || "object" !== h(e) && "function" != typeof e ? s(t) : e;
                }
                function s(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                }
                function u(t) {
                    var e = "function" == typeof Map ? new Map : void 0;
                    return u = function(t) {
                        if (null === t || (r = t, -1 === Function.toString.call(r).indexOf("[native code]"))) return t;
                        var r;
                        if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
                        if (void 0 !== e) {
                            if (e.has(t)) return e.get(t);
                            e.set(t, n);
                        }
                        function n() {
                            return c(t, arguments, l(this).constructor);
                        }
                        return n.prototype = Object.create(t.prototype, {
                            constructor: {
                                value: n,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), f(n, t);
                    }, u(t);
                }
                function c(t, e, r) {
                    return c = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                        if (Reflect.construct.sham) return !1;
                        if ("function" == typeof Proxy) return !0;
                        try {
                            return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                        } catch (t) {
                            return !1;
                        }
                    }() ? Reflect.construct : function(t, e, r) {
                        var n = [
                            null
                        ];
                        n.push.apply(n, e);
                        var i = new (Function.bind.apply(t, n));
                        return r && f(i, r.prototype), i;
                    }, c.apply(null, arguments);
                }
                function f(t, e) {
                    return f = Object.setPrototypeOf || function(t, e) {
                        return t.__proto__ = e, t;
                    }, f(t, e);
                }
                function l(t) {
                    return l = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, l(t);
                }
                function h(t) {
                    return h = "function" == typeof Symbol && "symbol" === n(Symbol.iterator) ? function(t) {
                        return n(t);
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : n(t);
                    }, h(t);
                }
                var p = r(7352).inspect, d = r(3743).codes.ERR_INVALID_ARG_TYPE;
                function y(t, e, r) {
                    return (void 0 === r || r > t.length) && (r = t.length), t.substring(r - e.length, r) === e;
                }
                var b = "", m = "", v = "", g = "", _ = {
                    deepStrictEqual: "Expected values to be strictly deep-equal:",
                    strictEqual: "Expected values to be strictly equal:",
                    strictEqualObject: 'Expected "actual" to be reference-equal to "expected":',
                    deepEqual: "Expected values to be loosely deep-equal:",
                    equal: "Expected values to be loosely equal:",
                    notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:',
                    notStrictEqual: 'Expected "actual" to be strictly unequal to:',
                    notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":',
                    notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:',
                    notEqual: 'Expected "actual" to be loosely unequal to:',
                    notIdentical: "Values identical but not reference-equal:"
                };
                function w(t) {
                    var e = Object.keys(t), r = Object.create(Object.getPrototypeOf(t));
                    return e.forEach(function(e) {
                        r[e] = t[e];
                    }), Object.defineProperty(r, "message", {
                        value: t.message
                    }), r;
                }
                function S(t) {
                    return p(t, {
                        compact: !1,
                        customInspect: !1,
                        depth: 1e3,
                        maxArrayLength: 1 / 0,
                        showHidden: !1,
                        breakLength: 1 / 0,
                        showProxy: !1,
                        sorted: !0,
                        getters: !0
                    });
                }
                var O = function(t) {
                    function e(t) {
                        var r;
                        if (function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), "object" !== h(t) || null === t) throw new d("options", "Object", t);
                        var n = t.message, i = t.operator, o = t.stackStartFn, u = t.actual, c = t.expected, f = Error.stackTraceLimit;
                        if (Error.stackTraceLimit = 0, null != n) r = a(this, l(e).call(this, String(n)));
                        else if (({
                            env: {}
                        }).stderr && ({
                            env: {}
                        }).stderr.isTTY && (({
                            env: {}
                        }).stderr && ({
                            env: {}
                        }).stderr.getColorDepth && 1 !== ({
                            env: {}
                        }).stderr.getColorDepth() ? (b = "[34m", m = "[32m", g = "[39m", v = "[31m") : (b = "", m = "", g = "", v = "")), "object" === h(u) && null !== u && "object" === h(c) && null !== c && "stack" in u && u instanceof Error && "stack" in c && c instanceof Error && (u = w(u), c = w(c)), "deepStrictEqual" === i || "strictEqual" === i) r = a(this, l(e).call(this, function(t, e, r) {
                            var n = "", i = "", o = 0, a = "", s = !1, u = S(t), c = u.split("\n"), f = S(e).split("\n"), l = 0, p = "";
                            if ("strictEqual" === r && "object" === h(t) && "object" === h(e) && null !== t && null !== e && (r = "strictEqualObject"), 1 === c.length && 1 === f.length && c[0] !== f[0]) {
                                var d = c[0].length + f[0].length;
                                if (d <= 10) {
                                    if (!("object" === h(t) && null !== t || "object" === h(e) && null !== e || 0 === t && 0 === e)) return "".concat(_[r], "\n\n") + "".concat(c[0], " !== ").concat(f[0], "\n");
                                } else if ("strictEqualObject" !== r && d < (({
                                    env: {}
                                }).stderr && ({
                                    env: {}
                                }).stderr.isTTY ? ({
                                    env: {}
                                }).stderr.columns : 80)) {
                                    for(; c[0][l] === f[0][l];)l++;
                                    l > 2 && (p = "\n  ".concat(function(t, e) {
                                        if (e = Math.floor(e), 0 == t.length || 0 == e) return "";
                                        var r = t.length * e;
                                        for(e = Math.floor(Math.log(e) / Math.log(2)); e;)t += t, e--;
                                        return t + t.substring(0, r - t.length);
                                    }(" ", l), "^"), l = 0);
                                }
                            }
                            for(var w = c[c.length - 1], O = f[f.length - 1]; w === O && (l++ < 2 ? a = "\n  ".concat(w).concat(a) : n = w, c.pop(), f.pop(), 0 !== c.length && 0 !== f.length);)w = c[c.length - 1], O = f[f.length - 1];
                            var j = Math.max(c.length, f.length);
                            if (0 === j) {
                                var $ = u.split("\n");
                                if ($.length > 30) for($[26] = "".concat(b, "...").concat(g); $.length > 27;)$.pop();
                                return "".concat(_.notIdentical, "\n\n").concat($.join("\n"), "\n");
                            }
                            l > 3 && (a = "\n".concat(b, "...").concat(g).concat(a), s = !0), "" !== n && (a = "\n  ".concat(n).concat(a), n = "");
                            var E = 0, A = _[r] + "\n".concat(m, "+ actual").concat(g, " ").concat(v, "- expected").concat(g), P = " ".concat(b, "...").concat(g, " Lines skipped");
                            for(l = 0; l < j; l++){
                                var x = l - o;
                                if (c.length < l + 1) x > 1 && l > 2 && (x > 4 ? (i += "\n".concat(b, "...").concat(g), s = !0) : x > 3 && (i += "\n  ".concat(f[l - 2]), E++), i += "\n  ".concat(f[l - 1]), E++), o = l, n += "\n".concat(v, "-").concat(g, " ").concat(f[l]), E++;
                                else if (f.length < l + 1) x > 1 && l > 2 && (x > 4 ? (i += "\n".concat(b, "...").concat(g), s = !0) : x > 3 && (i += "\n  ".concat(c[l - 2]), E++), i += "\n  ".concat(c[l - 1]), E++), o = l, i += "\n".concat(m, "+").concat(g, " ").concat(c[l]), E++;
                                else {
                                    var k = f[l], M = c[l], T = M !== k && (!y(M, ",") || M.slice(0, -1) !== k);
                                    T && y(k, ",") && k.slice(0, -1) === M && (T = !1, M += ","), T ? (x > 1 && l > 2 && (x > 4 ? (i += "\n".concat(b, "...").concat(g), s = !0) : x > 3 && (i += "\n  ".concat(c[l - 2]), E++), i += "\n  ".concat(c[l - 1]), E++), o = l, i += "\n".concat(m, "+").concat(g, " ").concat(M), n += "\n".concat(v, "-").concat(g, " ").concat(k), E += 2) : (i += n, n = "", 1 !== x && 0 !== l || (i += "\n  ".concat(M), E++));
                                }
                                if (E > 20 && l < j - 2) return "".concat(A).concat(P, "\n").concat(i, "\n").concat(b, "...").concat(g).concat(n, "\n") + "".concat(b, "...").concat(g);
                            }
                            return "".concat(A).concat(s ? P : "", "\n").concat(i).concat(n).concat(a).concat(p);
                        }(u, c, i)));
                        else if ("notDeepStrictEqual" === i || "notStrictEqual" === i) {
                            var p = _[i], O = S(u).split("\n");
                            if ("notStrictEqual" === i && "object" === h(u) && null !== u && (p = _.notStrictEqualObject), O.length > 30) for(O[26] = "".concat(b, "...").concat(g); O.length > 27;)O.pop();
                            r = 1 === O.length ? a(this, l(e).call(this, "".concat(p, " ").concat(O[0]))) : a(this, l(e).call(this, "".concat(p, "\n\n").concat(O.join("\n"), "\n")));
                        } else {
                            var j = S(u), $ = "", E = _[i];
                            "notDeepEqual" === i || "notEqual" === i ? (j = "".concat(_[i], "\n\n").concat(j)).length > 1024 && (j = "".concat(j.slice(0, 1021), "...")) : ($ = "".concat(S(c)), j.length > 512 && (j = "".concat(j.slice(0, 509), "...")), $.length > 512 && ($ = "".concat($.slice(0, 509), "...")), "deepEqual" === i || "equal" === i ? j = "".concat(E, "\n\n").concat(j, "\n\nshould equal\n\n") : $ = " ".concat(i, " ").concat($)), r = a(this, l(e).call(this, "".concat(j).concat($)));
                        }
                        return Error.stackTraceLimit = f, r.generatedMessage = !n, Object.defineProperty(s(r), "name", {
                            value: "AssertionError [ERR_ASSERTION]",
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }), r.code = "ERR_ASSERTION", r.actual = u, r.expected = c, r.operator = i, Error.captureStackTrace && Error.captureStackTrace(s(r), o), r.stack, r.name = "AssertionError", a(r);
                    }
                    var r, n;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && f(t, e);
                    }(e, t), r = e, n = [
                        {
                            key: "toString",
                            value: function() {
                                return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
                            }
                        },
                        {
                            key: p.custom,
                            value: function(t, e) {
                                return p(this, function(t) {
                                    for(var e = 1; e < arguments.length; e++){
                                        var r = null != arguments[e] ? arguments[e] : {}, n = Object.keys(r);
                                        "function" == typeof Object.getOwnPropertySymbols && (n = n.concat(Object.getOwnPropertySymbols(r).filter(function(t) {
                                            return Object.getOwnPropertyDescriptor(r, t).enumerable;
                                        }))), n.forEach(function(e) {
                                            i(t, e, r[e]);
                                        });
                                    }
                                    return t;
                                }({}, e, {
                                    customInspect: !1,
                                    depth: 0
                                }));
                            }
                        }
                    ], n && o(r.prototype, n), e;
                }(u(Error));
                t.exports = O;
            },
            9122: (t, e, r)=>{
                "use strict";
                var n = r(3900), i = r(988), o = r(8863), a = r(5804);
                t.exports = function(t) {
                    var e = o(arguments), r = t.length - (arguments.length - 1);
                    return n(e, 1 + (r > 0 ? r : 0), !0);
                }, i ? i(t.exports, "apply", {
                    value: a
                }) : t.exports.apply = a;
            },
            9123: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable;
                        })), r.push.apply(r, n);
                    }
                    return r;
                }
                function o(t) {
                    for(var e = 1; e < arguments.length; e++){
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? i(Object(r), !0).forEach(function(e) {
                            a(t, e, r[e]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                        });
                    }
                    return t;
                }
                function a(t, e, r) {
                    return (e = function(t) {
                        var e = function(t) {
                            if ("object" != n(t) || !t) return t;
                            var e = t[Symbol.toPrimitive];
                            if (void 0 !== e) {
                                var r = e.call(t, "string");
                                if ("object" != n(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.");
                            }
                            return String(t);
                        }(t);
                        return "symbol" == n(e) ? e : e + "";
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t;
                }
                var s, u, c = r(3609), f = r(8235), l = r(3550).EventEmitter, h = r(7760), p = r(4561), d = r(6426), y = r(7982), b = r(4327), m = r(1469), v = r(3694), g = r(3216), _ = r(5110), w = r(8768), S = r(7910), O = r(5537), j = r(7930).arrayAtomicsSymbol, $ = r(7930).arrayPathSymbol, E = r(7930).documentArrayParent;
                function A(t, e, r, n) {
                    if (e.options && e.options.timeseries) throw new O(t, "timeseries");
                    var i = A.defaultOptions && A.defaultOptions._id;
                    null != i && ((n = n || {})._id = i), null != n && null != n._id ? e = v(e, n) : null != r && null != r._id && (e = v(e, r));
                    var o = P(e, r);
                    o.prototype.$basePath = t, h.call(this, t, o, r), this.schema = e, this.schemaOptions = n || {}, this.$isMongooseDocumentArray = !0, this.Constructor = o, o.base = e.base;
                    var a = this.defaultValue;
                    "defaultValue" in this && null == a || this.default(function() {
                        var t = a.call(this);
                        return null == t || Array.isArray(t) || (t = [
                            t
                        ]), t;
                    }), this.$embeddedSchemaType = new f(t + ".$", {
                        required: this && this.schemaOptions && this.schemaOptions.required || !1,
                        $parentSchemaType: this
                    }), this.$embeddedSchemaType.caster = this.Constructor, this.$embeddedSchemaType.schema = this.schema;
                }
                function P(t, e, n) {
                    function i() {
                        u.apply(this, arguments), null != this.__parentArray && null != this.__parentArray.getArrayParent() && this.$session(this.__parentArray.getArrayParent().$session());
                    }
                    u || (u = r(6547)), t._preCompile();
                    var o = null != n ? n.prototype : u.prototype;
                    for(var a in i.prototype = Object.create(o), i.prototype.$__setSchema(t), i.schema = t, i.prototype.constructor = i, i.$isArraySubdocument = !0, i.events = new l, i.base = t.base, t.methods)i.prototype[a] = t.methods[a];
                    for(var s in t.statics)i[s] = t.statics[s];
                    for(var c in l.prototype)i[c] = l.prototype[c];
                    return i.options = e, i;
                }
                A.schemaName = "DocumentArray", A.options = {
                    castNonArrays: !0
                }, A.prototype = Object.create(h.prototype), A.prototype.constructor = A, A.prototype.OptionsConstructor = p, A.prototype.$conditionalHandlers = o({}, h.prototype.$conditionalHandlers), A.prototype.discriminator = function(t, e, r) {
                    var n;
                    "function" == typeof t && (t = w.getFunctionName(t)), r = r || {};
                    var i = w.isPOJO(r) ? r.value : r, o = "boolean" != typeof r.clone || r.clone;
                    e.instanceOfSchema && o && (e = e.clone());
                    var a = P(e = m(this.casterConstructor, t, e, i, null, null, null === (n = r) || void 0 === n ? void 0 : n.overwriteExisting), null, this.casterConstructor);
                    a.baseCasterConstructor = this.casterConstructor;
                    try {
                        Object.defineProperty(a, "name", {
                            value: t
                        });
                    } catch (t) {}
                    return this.casterConstructor.discriminators[t] = a, this.casterConstructor.discriminators[t];
                }, A.prototype.doValidate = function(t, e, n, i) {
                    s || (s = r(4878));
                    var o = this;
                    try {
                        d.prototype.doValidate.call(this, t, function(r) {
                            if (r) return e(r);
                            var a, c = t && t.length;
                            if (!c) return e();
                            if (i && i.updateValidator) return e();
                            function f(t) {
                                null != t && (a = t), --c || e(a);
                            }
                            w.isMongooseDocumentArray(t) || (t = new s(t, o.path, n));
                            for(var l = 0, h = c; l < h; ++l){
                                var p = t[l];
                                if (null != p) {
                                    if (!(p instanceof u)) {
                                        var d = S(o.casterConstructor, t[l]);
                                        p = t[l] = new d(p, t, void 0, void 0, l);
                                    }
                                    null == i || !i.validateModifiedOnly || p.$isModified() ? p.$__validate(null, i, f) : --c || e(a);
                                } else --c || e(a);
                            }
                        }, n);
                    } catch (t) {
                        return e(t);
                    }
                }, A.prototype.doValidateSync = function(t, e, r) {
                    var n = d.prototype.doValidateSync.call(this, t, e);
                    if (null != n) return n;
                    var i = t && t.length, o = null;
                    if (i) {
                        for(var a = 0, s = i; a < s; ++a){
                            var c = t[a];
                            if (c) {
                                if (!(c instanceof u)) {
                                    var f = S(this.casterConstructor, t[a]);
                                    c = t[a] = new f(c, t, void 0, void 0, a);
                                }
                                if (null == r || !r.validateModifiedOnly || c.$isModified()) {
                                    var l = c.validateSync(r);
                                    l && null == o && (o = l);
                                }
                            }
                        }
                        return o;
                    }
                }, A.prototype.getDefault = function(t, e, n) {
                    var i = "function" == typeof this.defaultValue ? this.defaultValue.call(t) : this.defaultValue;
                    if (null == i) return i;
                    if (n && n.skipCast) return i;
                    s || (s = r(4878)), Array.isArray(i) || (i = [
                        i
                    ]), i = new s(i, this.path, t);
                    for(var o = 0; o < i.length; ++o){
                        var a = new (S(this.casterConstructor, i[o]))({}, i, void 0, void 0, o);
                        a.$init(i[o]), a.isNew = !0, Object.assign(a.$__.activePaths.default, a.$__.activePaths.init), a.$__.activePaths.init = {}, i[o] = a;
                    }
                    return i;
                };
                var x = Object.freeze({
                    transform: !1,
                    virtuals: !1
                }), k = Object.freeze({
                    skipId: !1,
                    willInit: !0
                });
                function M(t, e, r) {
                    if (r && e) {
                        for(var n, i, o, a = t.path + ".", s = Object.keys(e), u = s.length, c = {}; u--;)if ((i = s[u]).startsWith(a)) {
                            if ("$" === (o = i.substring(a.length))) continue;
                            o.startsWith("$.") && (o = o.substring(2)), n || (n = !0), c[o] = e[i];
                        }
                        return n && c || void 0;
                    }
                }
                A.prototype.cast = function(t, e, n, i, o) {
                    if (s || (s = r(4878)), null != t && null != t[$] && t === i) return t;
                    var a, f, l = (o = o || {}).path || this.path;
                    if (!Array.isArray(t)) {
                        if (!n && !A.options.castNonArrays) throw new c("DocumentArray", t, this.path, null, this);
                        return e && n && e.markModified(l), this.cast([
                            t
                        ], e, n, i, o);
                    }
                    o.skipDocumentArrayCast && !w.isMongooseDocumentArray(t) || (t = new s(t, l, e, this)), null != i && (t[j] = i[j] || {}), null != o.arrayPathIndex && (t[$] = l + "." + o.arrayPathIndex);
                    for(var h = w.isMongooseDocumentArray(t) ? t.__array : t, p = h.length, d = 0; d < p; ++d)if (h[d]) {
                        var y = S(this.casterConstructor, h[d]), b = g(h[d], !0);
                        if (h[d] !== b && (h[d] = b), h[d] instanceof u) {
                            if (h[d][E] !== e) {
                                if (n) {
                                    var m = new y(null, t, k, a, d);
                                    h[d] = m.$init(h[d]);
                                } else {
                                    var v = new y(h[d], t, void 0, void 0, d);
                                    h[d] = v;
                                }
                            }
                            null == h[d].__index && h[d].$setIndex(d);
                        } else if (null != h[d]) {
                            if (n) e ? a || (a = M(this, e.$__.selected, n)) : a = !0, f = new y(null, t, k, a, d), h[d] = f.$init(h[d]);
                            else if (i && "function" == typeof i.id && (f = i.id(h[d]._id)), i && f && w.deepEqual(f.toObject(x), h[d])) f.set(h[d]), h[d] = f;
                            else try {
                                f = new y(h[d], t, void 0, void 0, d), h[d] = f;
                            } catch (e) {
                                throw new c("embedded", h[d], t[$], e, this);
                            }
                        }
                    }
                    return t;
                }, A.prototype.clone = function() {
                    var t = Object.assign({}, this.options), e = new this.constructor(this.path, this.schema, t, this.schemaOptions);
                    return e.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e.requiredValidator = this.requiredValidator), e.Constructor.discriminators = Object.assign({}, this.Constructor.discriminators), e._appliedDiscriminators = this._appliedDiscriminators, e;
                }, A.prototype.applyGetters = function(t, e) {
                    return d.prototype.applyGetters.call(this, t, e);
                }, A.defaultOptions = {}, A.set = d.set, A.setters = [], A.get = d.get, A.prototype.$conditionalHandlers.$elemMatch = function(t, e) {
                    for(var r, n = Object.keys(t), i = n.length, o = 0; o < i; ++o){
                        var a = n[o], s = t[a];
                        _(a) && null != s && (t[a] = this.castForQuery(a, s, e));
                    }
                    var u = this && this.casterConstructor && this.casterConstructor.schema && this.casterConstructor.schema.options && this.casterConstructor.schema.options.discriminatorKey, c = this && this.casterConstructor && this.casterConstructor.schema && this.casterConstructor.schema.discriminators || {};
                    if (null != u && null != t[u] && null != c[t[u]]) return y(c[t[u]], t, null, this && this.$$context);
                    var f = null !== (r = this.casterConstructor.schema) && void 0 !== r ? r : e.schema;
                    return y(f, t, null, this && this.$$context);
                }, A.prototype.toJSONSchema = function(t) {
                    var e = b("object", "object", null == t ? void 0 : t.useBsonType, !1), r = this.options.required && "function" != typeof this.options.required;
                    return o(o({}, b("array", "array", null == t ? void 0 : t.useBsonType, r)), {}, {
                        items: o(o({}, e), this.schema.toJSONSchema(t))
                    });
                }, t.exports = A;
            },
            9125: (t, e, r)=>{
                "use strict";
                t.exports = o;
                var n = r(1191), i = Object.create(r(7919));
                function o(t) {
                    if (!(this instanceof o)) return new o(t);
                    n.call(this, t);
                }
                i.inherits = r(1679), i.inherits(o, n), o.prototype._transform = function(t, e, r) {
                    r(null, t);
                };
            },
            9147: (t, e, r)=>{
                "use strict";
                var n = r(4758);
                function i(t) {
                    var e = this;
                    this.next = null, this.entry = null, this.finish = function() {
                        !function(t, e) {
                            var r = t.entry;
                            for(t.entry = null; r;){
                                var n = r.callback;
                                e.pendingcb--, n(undefined), r = r.next;
                            }
                            e.corkedRequestsFree.next = t;
                        }(e, t);
                    };
                }
                t.exports = b;
                var o, a = !({
                    env: {}
                }).browser && [
                    "v0.10",
                    "v0.9."
                ].indexOf(({
                    env: {}
                }).version.slice(0, 5)) > -1 ? setImmediate : n.nextTick;
                b.WritableState = y;
                var s = Object.create(r(7919));
                s.inherits = r(1679);
                var u, c = {
                    deprecate: r(3340)
                }, f = r(5864), l = r(8317).Buffer, h = (void 0 !== r.g ? r.g : "undefined" != typeof window ? window : "undefined" != typeof self ? self : {}).Uint8Array || function() {}, p = r(8639);
                function d() {}
                function y(t, e) {
                    o = o || r(1313), t = t || {};
                    var s = e instanceof o;
                    this.objectMode = !!t.objectMode, s && (this.objectMode = this.objectMode || !!t.writableObjectMode);
                    var u = t.highWaterMark, c = t.writableHighWaterMark, f = this.objectMode ? 16 : 16384;
                    this.highWaterMark = u || 0 === u ? u : s && (c || 0 === c) ? c : f, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
                    var l = !1 === t.decodeStrings;
                    this.decodeStrings = !l, this.defaultEncoding = t.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(t) {
                        !function(t, e) {
                            var r = t._writableState, i = r.sync, o = r.writecb;
                            if (function(t) {
                                t.writing = !1, t.writecb = null, t.length -= t.writelen, t.writelen = 0;
                            }(r), e) !function(t, e, r, i, o) {
                                --e.pendingcb, r ? (n.nextTick(o, i), n.nextTick(S, t, e), t._writableState.errorEmitted = !0, t.emit("error", i)) : (o(i), t._writableState.errorEmitted = !0, t.emit("error", i), S(t, e));
                            }(t, r, i, e, o);
                            else {
                                var s = _(r);
                                s || r.corked || r.bufferProcessing || !r.bufferedRequest || g(t, r), i ? a(v, t, r, s, o) : v(t, r, s, o);
                            }
                        }(e, t);
                    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.bufferedRequestCount = 0, this.corkedRequestsFree = new i(this);
                }
                function b(t) {
                    if (o = o || r(1313), !(u.call(b, this) || this instanceof o)) return new b(t);
                    this._writableState = new y(t, this), this.writable = !0, t && ("function" == typeof t.write && (this._write = t.write), "function" == typeof t.writev && (this._writev = t.writev), "function" == typeof t.destroy && (this._destroy = t.destroy), "function" == typeof t.final && (this._final = t.final)), f.call(this);
                }
                function m(t, e, r, n, i, o, a) {
                    e.writelen = n, e.writecb = a, e.writing = !0, e.sync = !0, r ? t._writev(i, e.onwrite) : t._write(i, o, e.onwrite), e.sync = !1;
                }
                function v(t, e, r, n) {
                    r || function(t, e) {
                        0 === e.length && e.needDrain && (e.needDrain = !1, t.emit("drain"));
                    }(t, e), e.pendingcb--, n(), S(t, e);
                }
                function g(t, e) {
                    e.bufferProcessing = !0;
                    var r = e.bufferedRequest;
                    if (t._writev && r && r.next) {
                        var n = e.bufferedRequestCount, o = new Array(n), a = e.corkedRequestsFree;
                        a.entry = r;
                        for(var s = 0, u = !0; r;)o[s] = r, r.isBuf || (u = !1), r = r.next, s += 1;
                        o.allBuffers = u, m(t, e, !0, e.length, o, "", a.finish), e.pendingcb++, e.lastBufferedRequest = null, a.next ? (e.corkedRequestsFree = a.next, a.next = null) : e.corkedRequestsFree = new i(e), e.bufferedRequestCount = 0;
                    } else {
                        for(; r;){
                            var c = r.chunk, f = r.encoding, l = r.callback;
                            if (m(t, e, !1, e.objectMode ? 1 : c.length, c, f, l), r = r.next, e.bufferedRequestCount--, e.writing) break;
                        }
                        null === r && (e.lastBufferedRequest = null);
                    }
                    e.bufferedRequest = r, e.bufferProcessing = !1;
                }
                function _(t) {
                    return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing;
                }
                function w(t, e) {
                    t._final(function(r) {
                        e.pendingcb--, r && t.emit("error", r), e.prefinished = !0, t.emit("prefinish"), S(t, e);
                    });
                }
                function S(t, e) {
                    var r = _(e);
                    return r && (function(t, e) {
                        e.prefinished || e.finalCalled || ("function" == typeof t._final ? (e.pendingcb++, e.finalCalled = !0, n.nextTick(w, t, e)) : (e.prefinished = !0, t.emit("prefinish")));
                    }(t, e), 0 === e.pendingcb && (e.finished = !0, t.emit("finish"))), r;
                }
                s.inherits(b, f), y.prototype.getBuffer = function() {
                    for(var t = this.bufferedRequest, e = []; t;)e.push(t), t = t.next;
                    return e;
                }, function() {
                    try {
                        Object.defineProperty(y.prototype, "buffer", {
                            get: c.deprecate(function() {
                                return this.getBuffer();
                            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                        });
                    } catch (t) {}
                }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (u = Function.prototype[Symbol.hasInstance], Object.defineProperty(b, Symbol.hasInstance, {
                    value: function(t) {
                        return !!u.call(this, t) || this === b && t && t._writableState instanceof y;
                    }
                })) : u = function(t) {
                    return t instanceof this;
                }, b.prototype.pipe = function() {
                    this.emit("error", new Error("Cannot pipe, not readable"));
                }, b.prototype.write = function(t, e, r) {
                    var i, o = this._writableState, a = !1, s = !o.objectMode && (i = t, l.isBuffer(i) || i instanceof h);
                    return s && !l.isBuffer(t) && (t = function(t) {
                        return l.from(t);
                    }(t)), "function" == typeof e && (r = e, e = null), s ? e = "buffer" : e || (e = o.defaultEncoding), "function" != typeof r && (r = d), o.ended ? function(t, e) {
                        var r = new Error("write after end");
                        t.emit("error", r), n.nextTick(e, r);
                    }(this, r) : (s || function(t, e, r, i) {
                        var o = !0, a = !1;
                        return null === r ? a = new TypeError("May not write null values to stream") : "string" == typeof r || void 0 === r || e.objectMode || (a = new TypeError("Invalid non-string/buffer chunk")), a && (t.emit("error", a), n.nextTick(i, a), o = !1), o;
                    }(this, o, t, r)) && (o.pendingcb++, a = function(t, e, r, n, i, o) {
                        if (!r) {
                            var a = function(t, e, r) {
                                return t.objectMode || !1 === t.decodeStrings || "string" != typeof e || (e = l.from(e, r)), e;
                            }(e, n, i);
                            n !== a && (r = !0, i = "buffer", n = a);
                        }
                        var s = e.objectMode ? 1 : n.length;
                        e.length += s;
                        var u = e.length < e.highWaterMark;
                        if (u || (e.needDrain = !0), e.writing || e.corked) {
                            var c = e.lastBufferedRequest;
                            e.lastBufferedRequest = {
                                chunk: n,
                                encoding: i,
                                isBuf: r,
                                callback: o,
                                next: null
                            }, c ? c.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest, e.bufferedRequestCount += 1;
                        } else m(t, e, !1, s, n, i, o);
                        return u;
                    }(this, o, s, t, e, r)), a;
                }, b.prototype.cork = function() {
                    this._writableState.corked++;
                }, b.prototype.uncork = function() {
                    var t = this._writableState;
                    t.corked && (t.corked--, t.writing || t.corked || t.bufferProcessing || !t.bufferedRequest || g(this, t));
                }, b.prototype.setDefaultEncoding = function(t) {
                    if ("string" == typeof t && (t = t.toLowerCase()), !([
                        "hex",
                        "utf8",
                        "utf-8",
                        "ascii",
                        "binary",
                        "base64",
                        "ucs2",
                        "ucs-2",
                        "utf16le",
                        "utf-16le",
                        "raw"
                    ].indexOf((t + "").toLowerCase()) > -1)) throw new TypeError("Unknown encoding: " + t);
                    return this._writableState.defaultEncoding = t, this;
                }, Object.defineProperty(b.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.highWaterMark;
                    }
                }), b.prototype._write = function(t, e, r) {
                    r(new Error("_write() is not implemented"));
                }, b.prototype._writev = null, b.prototype.end = function(t, e, r) {
                    var i = this._writableState;
                    "function" == typeof t ? (r = t, t = null, e = null) : "function" == typeof e && (r = e, e = null), null != t && this.write(t, e), i.corked && (i.corked = 1, this.uncork()), i.ending || function(t, e, r) {
                        e.ending = !0, S(t, e), r && (e.finished ? n.nextTick(r) : t.once("finish", r)), e.ended = !0, t.writable = !1;
                    }(this, i, r);
                }, Object.defineProperty(b.prototype, "destroyed", {
                    get: function() {
                        return void 0 !== this._writableState && this._writableState.destroyed;
                    },
                    set: function(t) {
                        this._writableState && (this._writableState.destroyed = t);
                    }
                }), b.prototype.destroy = p.destroy, b.prototype._undestroy = p.undestroy, b.prototype._destroy = function(t, e) {
                    this.end(), e(t);
                };
            },
            9166: (t, e, r)=>{
                "use strict";
                function n(t, e) {
                    var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (!r) {
                        if (Array.isArray(t) || (r = function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return i(t, e);
                                var r = ({}).toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? i(t, e) : void 0;
                            }
                        }(t)) || e && t && "number" == typeof t.length) {
                            r && (t = r);
                            var n = 0, o = function() {};
                            return {
                                s: o,
                                n: function() {
                                    return n >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[n++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: o
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var a, s = !0, u = !1;
                    return {
                        s: function() {
                            r = r.call(t);
                        },
                        n: function() {
                            var t = r.next();
                            return s = t.done, t;
                        },
                        e: function(t) {
                            u = !0, a = t;
                        },
                        f: function() {
                            try {
                                s || null == r.return || r.return();
                            } finally{
                                if (u) throw a;
                            }
                        }
                    };
                }
                function i(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                var o = r(8759), a = r(3696);
                function s(t, e, r) {
                    if (null != e) {
                        var i = Object.keys(e).some(function(t) {
                            return "$" === t[0];
                        });
                        if (i) {
                            if (e.$push && v(e.$push), e.$addToSet && v(e.$addToSet), null != e.$set) for(var o = 0, c = Object.keys(e.$set); o < c.length; o++){
                                var f = c[o];
                                u(r, f, e.$set, t);
                            }
                            if (null != e.$setOnInsert) for(var l = 0, h = Object.keys(e.$setOnInsert); l < h.length; l++){
                                var p = h[l];
                                u(r, p, e.$setOnInsert, t);
                            }
                        }
                        var d, y = Object.keys(e).filter(function(t) {
                            return "$" !== t[0];
                        }), b = n(y);
                        try {
                            for(b.s(); !(d = b.n()).done;){
                                var m = d.value;
                                u(r, m, e, t);
                            }
                        } catch (t) {
                            b.e(t);
                        } finally{
                            b.f();
                        }
                    }
                    function v(e) {
                        for(var n = function() {
                            var n = o[i], u = r.path(n.replace(/\.\$\./i, ".").replace(/.\$$/, ""));
                            if (e[n] && u && u.$isMongooseDocumentArray && u.schema.options.timestamps) {
                                var c = u.schema.options.timestamps, f = a(c, "createdAt"), l = a(c, "updatedAt");
                                e[n].$each ? e[n].$each.forEach(function(e) {
                                    null != l && (e[l] = t), null != f && (e[f] = t), s(t, e, u.schema);
                                }) : (null != l && (e[n][l] = t), null != f && (e[n][f] = t), s(t, e[n], u.schema));
                            }
                        }, i = 0, o = Object.keys(e); i < o.length; i++)n();
                    }
                }
                function u(t, e, r, i) {
                    var u = o(e), c = t.path(u);
                    if (c) {
                        for(var f = [], l = u.split("."), h = l.length - 1; h > 0; --h){
                            var p = t.path(l.slice(0, h).join("."));
                            null != p && (p.$isMongooseDocumentArray || p.$isSingleNested) && f.push({
                                parentPath: e.split(".").slice(0, h).join("."),
                                parentSchemaType: p
                            });
                        }
                        if (Array.isArray(r[e]) && c.$isMongooseDocumentArray) !function(t, e, r) {
                            var n = e.schema.options.timestamps, i = t.length;
                            if (n) for(var o = a(n, "createdAt"), u = a(n, "updatedAt"), c = 0; c < i; ++c)null != u && (t[c][u] = r), null != o && (t[c][o] = r), s(r, t[c], e.schema);
                            else for(var f = 0; f < i; ++f)s(r, t[f], e.schema);
                        }(r[e], c, i);
                        else if (r[e] && c.$isSingleNested) !function(t, e, r) {
                            var n = e.schema.options.timestamps;
                            if (n) {
                                var i = a(n, "createdAt"), o = a(n, "updatedAt");
                                null != o && (t[o] = r), null != i && (t[i] = r), s(r, t, e.schema);
                            } else s(r, t, e.schema);
                        }(r[e], c, i);
                        else if (f.length > 0) {
                            var d, y = n(f);
                            try {
                                for(y.s(); !(d = y.n()).done;){
                                    var b = d.value, m = b.parentPath, v = b.parentSchemaType, g = v.schema.options.timestamps, _ = a(g, "updatedAt");
                                    if (g && null != _) {
                                        if (v.$isSingleNested) r[m + "." + _] = i;
                                        else if (v.$isMongooseDocumentArray) {
                                            var w = e.substring(m.length + 1);
                                            if (/^\d+$/.test(w)) {
                                                r[m + "." + w][_] = i;
                                                continue;
                                            }
                                            var S = w.indexOf(".");
                                            r[m + "." + (w = -1 !== S ? w.substring(0, S) : w) + "." + _] = i;
                                        }
                                    }
                                }
                            } catch (t) {
                                y.e(t);
                            } finally{
                                y.f();
                            }
                        } else if (null != c.schema && c.schema != t && r[e]) {
                            var O = c.schema.options.timestamps, j = a(O, "createdAt"), $ = a(O, "updatedAt");
                            if (!O) return;
                            null != $ && (r[e][$] = i), null != j && (r[e][j] = i);
                        }
                    }
                }
                t.exports = s;
            },
            9176: (t, e, r)=>{
                var n = e;
                n.der = r(2655), n.pem = r(8418);
            },
            9183: (t)=>{
                "use strict";
                t.exports = function(t) {
                    return "function" == typeof t && t.constructor && "AsyncFunction" === t.constructor.name;
                };
            },
            9206: (t)=>{
                "use strict";
                t.exports = EvalError;
            },
            9217: (t)=>{
                var e = Math.pow(2, 30) - 1;
                t.exports = function(t, r) {
                    if ("number" != typeof t) throw new TypeError("Iterations not a number");
                    if (t < 0) throw new TypeError("Bad iterations");
                    if ("number" != typeof r) throw new TypeError("Key length not a number");
                    if (r < 0 || r > e || r != r) throw new TypeError("Bad key length");
                };
            },
            9247: (t, e, r)=>{
                "use strict";
                var n = r(2481), i = r(2273);
                t.exports = function() {
                    var t = n();
                    return i(Object, {
                        is: t
                    }, {
                        is: function() {
                            return Object.is !== t;
                        }
                    }), t;
                };
            },
            9271: (t)=>{
                t.exports = function() {
                    throw new Error("Readable.from is not available in the browser");
                };
            },
            9313: (t, e, r)=>{
                "use strict";
                var n = r(4685), i = r(3528);
                function o(t, e, r) {
                    if (!(this instanceof o)) return new o(t, e, r);
                    this.Hash = t, this.blockSize = t.blockSize / 8, this.outSize = t.outSize / 8, this.inner = null, this.outer = null, this._init(n.toArray(e, r));
                }
                t.exports = o, o.prototype._init = function(t) {
                    t.length > this.blockSize && (t = (new this.Hash).update(t).digest()), i(t.length <= this.blockSize);
                    for(var e = t.length; e < this.blockSize; e++)t.push(0);
                    for(e = 0; e < t.length; e++)t[e] ^= 54;
                    for(this.inner = (new this.Hash).update(t), e = 0; e < t.length; e++)t[e] ^= 106;
                    this.outer = (new this.Hash).update(t);
                }, o.prototype.update = function(t, e) {
                    return this.inner.update(t, e), this;
                }, o.prototype.digest = function(t) {
                    return this.outer.update(this.inner.digest()), this.outer.digest(t);
                };
            },
            9344: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i, o = r(3071), a = r(953)(), s = r(5994), u = r(1464);
                if (a) {
                    var c = o("RegExp.prototype.exec"), f = {}, l = function() {
                        throw f;
                    }, h = {
                        toString: l,
                        valueOf: l
                    };
                    "symbol" === n(Symbol.toPrimitive) && (h[Symbol.toPrimitive] = l), i = function(t) {
                        if (!t || "object" !== n(t)) return !1;
                        var e = u(t, "lastIndex");
                        if (!e || !s(e, "value")) return !1;
                        try {
                            c(t, h);
                        } catch (t) {
                            return t === f;
                        }
                    };
                } else {
                    var p = o("Object.prototype.toString");
                    i = function(t) {
                        return !(!t || "object" !== n(t) && "function" != typeof t) && "[object RegExp]" === p(t);
                    };
                }
                t.exports = i;
            },
            9363: (t, e, r)=>{
                var n = r(9732).Buffer, i = n.alloc(16, 0);
                function o(t) {
                    var e = n.allocUnsafe(16);
                    return e.writeUInt32BE(t[0] >>> 0, 0), e.writeUInt32BE(t[1] >>> 0, 4), e.writeUInt32BE(t[2] >>> 0, 8), e.writeUInt32BE(t[3] >>> 0, 12), e;
                }
                function a(t) {
                    this.h = t, this.state = n.alloc(16, 0), this.cache = n.allocUnsafe(0);
                }
                a.prototype.ghash = function(t) {
                    for(var e = -1; ++e < t.length;)this.state[e] ^= t[e];
                    this._multiply();
                }, a.prototype._multiply = function() {
                    for(var t, e, r, n = [
                        (t = this.h).readUInt32BE(0),
                        t.readUInt32BE(4),
                        t.readUInt32BE(8),
                        t.readUInt32BE(12)
                    ], i = [
                        0,
                        0,
                        0,
                        0
                    ], a = -1; ++a < 128;){
                        for(!!(this.state[~~(a / 8)] & 1 << 7 - a % 8) && (i[0] ^= n[0], i[1] ^= n[1], i[2] ^= n[2], i[3] ^= n[3]), r = !!(1 & n[3]), e = 3; e > 0; e--)n[e] = n[e] >>> 1 | (1 & n[e - 1]) << 31;
                        n[0] = n[0] >>> 1, r && (n[0] = n[0] ^ -520093696);
                    }
                    this.state = o(i);
                }, a.prototype.update = function(t) {
                    var e;
                    for(this.cache = n.concat([
                        this.cache,
                        t
                    ]); this.cache.length >= 16;)e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(e);
                }, a.prototype.final = function(t, e) {
                    return this.cache.length && this.ghash(n.concat([
                        this.cache,
                        i
                    ], 16)), this.ghash(o([
                        0,
                        t,
                        0,
                        e
                    ])), this.state;
                }, t.exports = a;
            },
            9380: (t, e, r)=>{
                "use strict";
                function n() {
                    n = function() {
                        return e;
                    };
                    var t, e = {}, r = Object.prototype, i = r.hasOwnProperty, a = Object.defineProperty || function(t, e, r) {
                        t[e] = r.value;
                    }, s = "function" == typeof Symbol ? Symbol : {}, u = s.iterator || "@@iterator", c = s.asyncIterator || "@@asyncIterator", f = s.toStringTag || "@@toStringTag";
                    function l(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e];
                    }
                    try {
                        l({}, "");
                    } catch (t) {
                        l = function(t, e, r) {
                            return t[e] = r;
                        };
                    }
                    function h(t, e, r, n) {
                        var i = e && e.prototype instanceof g ? e : g, o = Object.create(i.prototype), s = new T(n || []);
                        return a(o, "_invoke", {
                            value: P(t, r, s)
                        }), o;
                    }
                    function p(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            };
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            };
                        }
                    }
                    e.wrap = h;
                    var d = "suspendedStart", y = "suspendedYield", b = "executing", m = "completed", v = {};
                    function g() {}
                    function _() {}
                    function w() {}
                    var S = {};
                    l(S, u, function() {
                        return this;
                    });
                    var O = Object.getPrototypeOf, j = O && O(O(B([])));
                    j && j !== r && i.call(j, u) && (S = j);
                    var $ = w.prototype = g.prototype = Object.create(S);
                    function E(t) {
                        [
                            "next",
                            "throw",
                            "return"
                        ].forEach(function(e) {
                            l(t, e, function(t) {
                                return this._invoke(e, t);
                            });
                        });
                    }
                    function A(t, e) {
                        function r(n, a, s, u) {
                            var c = p(t[n], t, a);
                            if ("throw" !== c.type) {
                                var f = c.arg, l = f.value;
                                return l && "object" == o(l) && i.call(l, "__await") ? e.resolve(l.__await).then(function(t) {
                                    r("next", t, s, u);
                                }, function(t) {
                                    r("throw", t, s, u);
                                }) : e.resolve(l).then(function(t) {
                                    f.value = t, s(f);
                                }, function(t) {
                                    return r("throw", t, s, u);
                                });
                            }
                            u(c.arg);
                        }
                        var n;
                        a(this, "_invoke", {
                            value: function(t, i) {
                                function o() {
                                    return new e(function(e, n) {
                                        r(t, i, e, n);
                                    });
                                }
                                return n = n ? n.then(o, o) : o();
                            }
                        });
                    }
                    function P(e, r, n) {
                        var i = d;
                        return function(o, a) {
                            if (i === b) throw Error("Generator is already running");
                            if (i === m) {
                                if ("throw" === o) throw a;
                                return {
                                    value: t,
                                    done: !0
                                };
                            }
                            for(n.method = o, n.arg = a;;){
                                var s = n.delegate;
                                if (s) {
                                    var u = x(s, n);
                                    if (u) {
                                        if (u === v) continue;
                                        return u;
                                    }
                                }
                                if ("next" === n.method) n.sent = n._sent = n.arg;
                                else if ("throw" === n.method) {
                                    if (i === d) throw i = m, n.arg;
                                    n.dispatchException(n.arg);
                                } else "return" === n.method && n.abrupt("return", n.arg);
                                i = b;
                                var c = p(e, r, n);
                                if ("normal" === c.type) {
                                    if (i = n.done ? m : y, c.arg === v) continue;
                                    return {
                                        value: c.arg,
                                        done: n.done
                                    };
                                }
                                "throw" === c.type && (i = m, n.method = "throw", n.arg = c.arg);
                            }
                        };
                    }
                    function x(e, r) {
                        var n = r.method, i = e.iterator[n];
                        if (i === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, x(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), v;
                        var o = p(i, e.iterator, r.arg);
                        if ("throw" === o.type) return r.method = "throw", r.arg = o.arg, r.delegate = null, v;
                        var a = o.arg;
                        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, v) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, v);
                    }
                    function k(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
                    }
                    function M(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e;
                    }
                    function T(t) {
                        this.tryEntries = [
                            {
                                tryLoc: "root"
                            }
                        ], t.forEach(k, this), this.reset(!0);
                    }
                    function B(e) {
                        if (e || "" === e) {
                            var r = e[u];
                            if (r) return r.call(e);
                            if ("function" == typeof e.next) return e;
                            if (!isNaN(e.length)) {
                                var n = -1, a = function r() {
                                    for(; ++n < e.length;)if (i.call(e, n)) return r.value = e[n], r.done = !1, r;
                                    return r.value = t, r.done = !0, r;
                                };
                                return a.next = a;
                            }
                        }
                        throw new TypeError(o(e) + " is not iterable");
                    }
                    return _.prototype = w, a($, "constructor", {
                        value: w,
                        configurable: !0
                    }), a(w, "constructor", {
                        value: _,
                        configurable: !0
                    }), _.displayName = l(w, f, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === _ || "GeneratorFunction" === (e.displayName || e.name));
                    }, e.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, w) : (t.__proto__ = w, l(t, f, "GeneratorFunction")), t.prototype = Object.create($), t;
                    }, e.awrap = function(t) {
                        return {
                            __await: t
                        };
                    }, E(A.prototype), l(A.prototype, c, function() {
                        return this;
                    }), e.AsyncIterator = A, e.async = function(t, r, n, i, o) {
                        void 0 === o && (o = Promise);
                        var a = new A(h(t, r, n, i), o);
                        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
                            return t.done ? t.value : a.next();
                        });
                    }, E($), l($, f, "Generator"), l($, u, function() {
                        return this;
                    }), l($, "toString", function() {
                        return "[object Generator]";
                    }), e.keys = function(t) {
                        var e = Object(t), r = [];
                        for(var n in e)r.push(n);
                        return r.reverse(), function t() {
                            for(; r.length;){
                                var n = r.pop();
                                if (n in e) return t.value = n, t.done = !1, t;
                            }
                            return t.done = !0, t;
                        };
                    }, e.values = B, T.prototype = {
                        constructor: T,
                        reset: function(e) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(M), !e) for(var r in this)"t" === r.charAt(0) && i.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval;
                        },
                        dispatchException: function(e) {
                            if (this.done) throw e;
                            var r = this;
                            function n(n, i) {
                                return s.type = "throw", s.arg = e, r.next = n, i && (r.method = "next", r.arg = t), !!i;
                            }
                            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                                var a = this.tryEntries[o], s = a.completion;
                                if ("root" === a.tryLoc) return n("end");
                                if (a.tryLoc <= this.prev) {
                                    var u = i.call(a, "catchLoc"), c = i.call(a, "finallyLoc");
                                    if (u && c) {
                                        if (this.prev < a.catchLoc) return n(a.catchLoc, !0);
                                        if (this.prev < a.finallyLoc) return n(a.finallyLoc);
                                    } else if (u) {
                                        if (this.prev < a.catchLoc) return n(a.catchLoc, !0);
                                    } else {
                                        if (!c) throw Error("try statement without catch or finally");
                                        if (this.prev < a.finallyLoc) return n(a.finallyLoc);
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                                var n = this.tryEntries[r];
                                if (n.tryLoc <= this.prev && i.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                                    var o = n;
                                    break;
                                }
                            }
                            o && ("break" === t || "continue" === t) && o.tryLoc <= e && e <= o.finallyLoc && (o = null);
                            var a = o ? o.completion : {};
                            return a.type = t, a.arg = e, o ? (this.method = "next", this.next = o.finallyLoc, v) : this.complete(a);
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), v;
                        },
                        finish: function(t) {
                            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), M(r), v;
                            }
                        },
                        catch: function(t) {
                            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var i = n.arg;
                                        M(r);
                                    }
                                    return i;
                                }
                            }
                            throw Error("illegal catch attempt");
                        },
                        delegateYield: function(e, r, n) {
                            return this.delegate = {
                                iterator: B(e),
                                resultName: r,
                                nextLoc: n
                            }, "next" === this.method && (this.arg = t), v;
                        }
                    }, e;
                }
                function i(t, e, r, n, i, o, a) {
                    try {
                        var s = t[o](a), u = s.value;
                    } catch (t) {
                        return void r(t);
                    }
                    s.done ? e(u) : Promise.resolve(u).then(n, i);
                }
                function o(t) {
                    return o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, o(t);
                }
                var a = r(2400), s = r(2746), u = r(3303)._, c = r(7352), f = r(8768);
                function l(t, e, r, n, i) {
                    if ("object" === o(n) && null != n && null == i && (i = n, n = void 0), null != r) {
                        var s = {
                            isNew: r.isNew
                        };
                        "defaults" in r.$__ && (s.defaults = r.$__.defaults), i = Object.assign(s, i);
                    }
                    null != i && null != i.path && (this.$basePath = i.path), a.call(this, t, e, n, i), delete this.$__.priorDoc;
                }
                t.exports = l, l.prototype = Object.create(a.prototype), Object.defineProperty(l.prototype, "$isSubdocument", {
                    configurable: !1,
                    writable: !1,
                    value: !0
                }), Object.defineProperty(l.prototype, "$isSingleNested", {
                    configurable: !1,
                    writable: !1,
                    value: !0
                }), l.prototype.toBSON = function() {
                    return this.toObject(u);
                }, l.prototype.save = function() {
                    var t, e = (t = n().mark(function t(e) {
                        var r = this;
                        return n().wrap(function(t) {
                            for(;;)switch(t.prev = t.next){
                                case 0:
                                    return (e = e || {}).suppressWarning || f.warn("mongoose: calling `save()` on a subdoc does **not** save the document to MongoDB, it only runs save middleware. Use `subdoc.save({ suppressWarning: true })` to hide this warning if you're sure this behavior is right for your app."), t.abrupt("return", new Promise(function(t, e) {
                                        r.$__save(function(n) {
                                            if (null != n) return e(n);
                                            t(r);
                                        });
                                    }));
                                case 3:
                                case "end":
                                    return t.stop();
                            }
                        }, t);
                    }), function() {
                        var e = this, r = arguments;
                        return new Promise(function(n, o) {
                            var a = t.apply(e, r);
                            function s(t) {
                                i(a, n, o, s, u, "next", t);
                            }
                            function u(t) {
                                i(a, n, o, s, u, "throw", t);
                            }
                            s(void 0);
                        });
                    });
                    return function(t) {
                        return e.apply(this, arguments);
                    };
                }(), l.prototype.$__fullPath = function(t) {
                    return this.$__.fullPath || this.ownerDocument(), t ? this.$__.fullPath + "." + t : this.$__.fullPath;
                }, l.prototype.$__pathRelativeToParent = function(t) {
                    return null == t ? this.$basePath : [
                        this.$basePath,
                        t
                    ].join(".");
                }, l.prototype.$__save = function(t) {
                    var e = this;
                    return s(function() {
                        return t(null, e);
                    });
                }, l.prototype.$isValid = function(t) {
                    var e = this.$parent(), r = this.$__pathRelativeToParent(t);
                    return null != e && null != r ? e.$isValid(r) : a.prototype.$isValid.call(this, t);
                }, l.prototype.markModified = function(t) {
                    a.prototype.markModified.call(this, t);
                    var e = this.$parent(), r = this.$__pathRelativeToParent(t);
                    if (null != e && null != r) {
                        var n = this.$__pathRelativeToParent().replace(/\.$/, "");
                        e.isDirectModified(n) || this.isNew || this.$__parent.markModified(r, this);
                    }
                }, l.prototype.isModified = function(t, e, r) {
                    var n = this, i = this.$parent();
                    return null != i ? (Array.isArray(t) || "string" == typeof t ? t = (t = Array.isArray(t) ? t : t.split(" ")).map(function(t) {
                        return n.$__pathRelativeToParent(t);
                    }).filter(function(t) {
                        return null != t;
                    }) : t || (t = this.$__pathRelativeToParent()), i.$isModified(t, e, r)) : a.prototype.isModified.call(this, t, e, r);
                }, l.prototype.$markValid = function(t) {
                    a.prototype.$markValid.call(this, t);
                    var e = this.$parent(), r = this.$__pathRelativeToParent(t);
                    null != e && null != r && e.$markValid(r);
                }, l.prototype.invalidate = function(t, e, r) {
                    a.prototype.invalidate.call(this, t, e, r);
                    var n = this.$parent(), i = this.$__pathRelativeToParent(t);
                    if (null != n && null != i) n.invalidate(i, e, r);
                    else if ("cast" === e.kind || "CastError" === e.name || null == i) throw e;
                    return this.ownerDocument().$__.validationError;
                }, l.prototype.$ignore = function(t) {
                    a.prototype.$ignore.call(this, t);
                    var e = this.$parent(), r = this.$__pathRelativeToParent(t);
                    null != e && null != r && e.$ignore(r);
                }, l.prototype.ownerDocument = function() {
                    if (this.$__.ownerDocument) return this.$__.ownerDocument;
                    for(var t = this, e = [], r = new Set([
                        t
                    ]); "function" == typeof t.$__pathRelativeToParent;){
                        e.unshift(t.$__pathRelativeToParent(void 0, !0));
                        var n = t.$parent();
                        if (null == n) break;
                        if (t = n, r.has(t)) throw new Error("Infinite subdocument loop: subdoc with _id " + t._id + " is a parent of itself");
                        r.add(t);
                    }
                    return this.$__.fullPath = e.join("."), this.$__.ownerDocument = t, this.$__.ownerDocument;
                }, l.prototype.$__fullPathWithIndexes = function() {
                    for(var t = this, e = [], r = new Set([
                        t
                    ]); "function" == typeof t.$__pathRelativeToParent;){
                        e.unshift(t.$__pathRelativeToParent(void 0, !1));
                        var n = t.$parent();
                        if (null == n) break;
                        if (t = n, r.has(t)) throw new Error("Infinite subdocument loop: subdoc with _id " + t._id + " is a parent of itself");
                        r.add(t);
                    }
                    return e.join(".");
                }, l.prototype.parent = function() {
                    return this.$__parent;
                }, l.prototype.$parent = l.prototype.parent, l.prototype.$__deleteOne = function(t) {
                    if (null != t) return t(null, this);
                }, l.prototype.$__removeFromParent = function() {
                    this.$__parent.set(this.$basePath, null);
                }, l.prototype.deleteOne = function(t, e) {
                    if ("function" == typeof t && (e = t, t = null), function(t) {
                        var e = t.ownerDocument();
                        function r() {
                            e.$removeListener("save", r), e.$removeListener("deleteOne", r), t.emit("deleteOne", t), t.constructor.emit("deleteOne", t);
                        }
                        e.$on("save", r), e.$on("deleteOne", r);
                    }(this), !t || !t.noop) {
                        this.$__removeFromParent();
                        var r = this.ownerDocument();
                        r.$__.removedSubdocs = r.$__.removedSubdocs || [], r.$__.removedSubdocs.push(this);
                    }
                    return this.$__deleteOne(e);
                }, l.prototype.populate = function() {
                    throw new Error('Mongoose does not support calling populate() on nested docs. Instead of `doc.nested.populate("path")`, use `doc.populate("nested.path")`');
                }, l.prototype.inspect = function() {
                    return this.toObject();
                }, c.inspect.custom && (l.prototype[c.inspect.custom] = l.prototype.inspect);
            },
            9460: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer, i = r(3609);
                function o(t, e) {
                    var r = Number(e);
                    if (isNaN(r)) throw new i("number", e, t);
                    return r;
                }
                t.exports = function(t) {
                    var e = this;
                    return Array.isArray(t) ? t.map(function(t) {
                        return o(e.path, t);
                    }) : n.isBuffer(t) ? t : o(e.path, t);
                };
            },
            9471: (t)=>{
                "use strict";
                t.exports = Math.abs;
            },
            9473: (t, e)=>{
                "use strict";
                e.readUInt32BE = function(t, e) {
                    return (t[0 + e] << 24 | t[1 + e] << 16 | t[2 + e] << 8 | t[3 + e]) >>> 0;
                }, e.writeUInt32BE = function(t, e, r) {
                    t[0 + r] = e >>> 24, t[1 + r] = e >>> 16 & 255, t[2 + r] = e >>> 8 & 255, t[3 + r] = 255 & e;
                }, e.ip = function(t, e, r, n) {
                    for(var i = 0, o = 0, a = 6; a >= 0; a -= 2){
                        for(var s = 0; s <= 24; s += 8)i <<= 1, i |= e >>> s + a & 1;
                        for(s = 0; s <= 24; s += 8)i <<= 1, i |= t >>> s + a & 1;
                    }
                    for(a = 6; a >= 0; a -= 2){
                        for(s = 1; s <= 25; s += 8)o <<= 1, o |= e >>> s + a & 1;
                        for(s = 1; s <= 25; s += 8)o <<= 1, o |= t >>> s + a & 1;
                    }
                    r[n + 0] = i >>> 0, r[n + 1] = o >>> 0;
                }, e.rip = function(t, e, r, n) {
                    for(var i = 0, o = 0, a = 0; a < 4; a++)for(var s = 24; s >= 0; s -= 8)i <<= 1, i |= e >>> s + a & 1, i <<= 1, i |= t >>> s + a & 1;
                    for(a = 4; a < 8; a++)for(s = 24; s >= 0; s -= 8)o <<= 1, o |= e >>> s + a & 1, o <<= 1, o |= t >>> s + a & 1;
                    r[n + 0] = i >>> 0, r[n + 1] = o >>> 0;
                }, e.pc1 = function(t, e, r, n) {
                    for(var i = 0, o = 0, a = 7; a >= 5; a--){
                        for(var s = 0; s <= 24; s += 8)i <<= 1, i |= e >> s + a & 1;
                        for(s = 0; s <= 24; s += 8)i <<= 1, i |= t >> s + a & 1;
                    }
                    for(s = 0; s <= 24; s += 8)i <<= 1, i |= e >> s + a & 1;
                    for(a = 1; a <= 3; a++){
                        for(s = 0; s <= 24; s += 8)o <<= 1, o |= e >> s + a & 1;
                        for(s = 0; s <= 24; s += 8)o <<= 1, o |= t >> s + a & 1;
                    }
                    for(s = 0; s <= 24; s += 8)o <<= 1, o |= t >> s + a & 1;
                    r[n + 0] = i >>> 0, r[n + 1] = o >>> 0;
                }, e.r28shl = function(t, e) {
                    return t << e & 268435455 | t >>> 28 - e;
                };
                var r = [
                    14,
                    11,
                    17,
                    4,
                    27,
                    23,
                    25,
                    0,
                    13,
                    22,
                    7,
                    18,
                    5,
                    9,
                    16,
                    24,
                    2,
                    20,
                    12,
                    21,
                    1,
                    8,
                    15,
                    26,
                    15,
                    4,
                    25,
                    19,
                    9,
                    1,
                    26,
                    16,
                    5,
                    11,
                    23,
                    8,
                    12,
                    7,
                    17,
                    0,
                    22,
                    3,
                    10,
                    14,
                    6,
                    20,
                    27,
                    24
                ];
                e.pc2 = function(t, e, n, i) {
                    for(var o = 0, a = 0, s = r.length >>> 1, u = 0; u < s; u++)o <<= 1, o |= t >>> r[u] & 1;
                    for(u = s; u < r.length; u++)a <<= 1, a |= e >>> r[u] & 1;
                    n[i + 0] = o >>> 0, n[i + 1] = a >>> 0;
                }, e.expand = function(t, e, r) {
                    var n = 0, i = 0;
                    n = (1 & t) << 5 | t >>> 27;
                    for(var o = 23; o >= 15; o -= 4)n <<= 6, n |= t >>> o & 63;
                    for(o = 11; o >= 3; o -= 4)i |= t >>> o & 63, i <<= 6;
                    i |= (31 & t) << 1 | t >>> 31, e[r + 0] = n >>> 0, e[r + 1] = i >>> 0;
                };
                var n = [
                    14,
                    0,
                    4,
                    15,
                    13,
                    7,
                    1,
                    4,
                    2,
                    14,
                    15,
                    2,
                    11,
                    13,
                    8,
                    1,
                    3,
                    10,
                    10,
                    6,
                    6,
                    12,
                    12,
                    11,
                    5,
                    9,
                    9,
                    5,
                    0,
                    3,
                    7,
                    8,
                    4,
                    15,
                    1,
                    12,
                    14,
                    8,
                    8,
                    2,
                    13,
                    4,
                    6,
                    9,
                    2,
                    1,
                    11,
                    7,
                    15,
                    5,
                    12,
                    11,
                    9,
                    3,
                    7,
                    14,
                    3,
                    10,
                    10,
                    0,
                    5,
                    6,
                    0,
                    13,
                    15,
                    3,
                    1,
                    13,
                    8,
                    4,
                    14,
                    7,
                    6,
                    15,
                    11,
                    2,
                    3,
                    8,
                    4,
                    14,
                    9,
                    12,
                    7,
                    0,
                    2,
                    1,
                    13,
                    10,
                    12,
                    6,
                    0,
                    9,
                    5,
                    11,
                    10,
                    5,
                    0,
                    13,
                    14,
                    8,
                    7,
                    10,
                    11,
                    1,
                    10,
                    3,
                    4,
                    15,
                    13,
                    4,
                    1,
                    2,
                    5,
                    11,
                    8,
                    6,
                    12,
                    7,
                    6,
                    12,
                    9,
                    0,
                    3,
                    5,
                    2,
                    14,
                    15,
                    9,
                    10,
                    13,
                    0,
                    7,
                    9,
                    0,
                    14,
                    9,
                    6,
                    3,
                    3,
                    4,
                    15,
                    6,
                    5,
                    10,
                    1,
                    2,
                    13,
                    8,
                    12,
                    5,
                    7,
                    14,
                    11,
                    12,
                    4,
                    11,
                    2,
                    15,
                    8,
                    1,
                    13,
                    1,
                    6,
                    10,
                    4,
                    13,
                    9,
                    0,
                    8,
                    6,
                    15,
                    9,
                    3,
                    8,
                    0,
                    7,
                    11,
                    4,
                    1,
                    15,
                    2,
                    14,
                    12,
                    3,
                    5,
                    11,
                    10,
                    5,
                    14,
                    2,
                    7,
                    12,
                    7,
                    13,
                    13,
                    8,
                    14,
                    11,
                    3,
                    5,
                    0,
                    6,
                    6,
                    15,
                    9,
                    0,
                    10,
                    3,
                    1,
                    4,
                    2,
                    7,
                    8,
                    2,
                    5,
                    12,
                    11,
                    1,
                    12,
                    10,
                    4,
                    14,
                    15,
                    9,
                    10,
                    3,
                    6,
                    15,
                    9,
                    0,
                    0,
                    6,
                    12,
                    10,
                    11,
                    1,
                    7,
                    13,
                    13,
                    8,
                    15,
                    9,
                    1,
                    4,
                    3,
                    5,
                    14,
                    11,
                    5,
                    12,
                    2,
                    7,
                    8,
                    2,
                    4,
                    14,
                    2,
                    14,
                    12,
                    11,
                    4,
                    2,
                    1,
                    12,
                    7,
                    4,
                    10,
                    7,
                    11,
                    13,
                    6,
                    1,
                    8,
                    5,
                    5,
                    0,
                    3,
                    15,
                    15,
                    10,
                    13,
                    3,
                    0,
                    9,
                    14,
                    8,
                    9,
                    6,
                    4,
                    11,
                    2,
                    8,
                    1,
                    12,
                    11,
                    7,
                    10,
                    1,
                    13,
                    14,
                    7,
                    2,
                    8,
                    13,
                    15,
                    6,
                    9,
                    15,
                    12,
                    0,
                    5,
                    9,
                    6,
                    10,
                    3,
                    4,
                    0,
                    5,
                    14,
                    3,
                    12,
                    10,
                    1,
                    15,
                    10,
                    4,
                    15,
                    2,
                    9,
                    7,
                    2,
                    12,
                    6,
                    9,
                    8,
                    5,
                    0,
                    6,
                    13,
                    1,
                    3,
                    13,
                    4,
                    14,
                    14,
                    0,
                    7,
                    11,
                    5,
                    3,
                    11,
                    8,
                    9,
                    4,
                    14,
                    3,
                    15,
                    2,
                    5,
                    12,
                    2,
                    9,
                    8,
                    5,
                    12,
                    15,
                    3,
                    10,
                    7,
                    11,
                    0,
                    14,
                    4,
                    1,
                    10,
                    7,
                    1,
                    6,
                    13,
                    0,
                    11,
                    8,
                    6,
                    13,
                    4,
                    13,
                    11,
                    0,
                    2,
                    11,
                    14,
                    7,
                    15,
                    4,
                    0,
                    9,
                    8,
                    1,
                    13,
                    10,
                    3,
                    14,
                    12,
                    3,
                    9,
                    5,
                    7,
                    12,
                    5,
                    2,
                    10,
                    15,
                    6,
                    8,
                    1,
                    6,
                    1,
                    6,
                    4,
                    11,
                    11,
                    13,
                    13,
                    8,
                    12,
                    1,
                    3,
                    4,
                    7,
                    10,
                    14,
                    7,
                    10,
                    9,
                    15,
                    5,
                    6,
                    0,
                    8,
                    15,
                    0,
                    14,
                    5,
                    2,
                    9,
                    3,
                    2,
                    12,
                    13,
                    1,
                    2,
                    15,
                    8,
                    13,
                    4,
                    8,
                    6,
                    10,
                    15,
                    3,
                    11,
                    7,
                    1,
                    4,
                    10,
                    12,
                    9,
                    5,
                    3,
                    6,
                    14,
                    11,
                    5,
                    0,
                    0,
                    14,
                    12,
                    9,
                    7,
                    2,
                    7,
                    2,
                    11,
                    1,
                    4,
                    14,
                    1,
                    7,
                    9,
                    4,
                    12,
                    10,
                    14,
                    8,
                    2,
                    13,
                    0,
                    15,
                    6,
                    12,
                    10,
                    9,
                    13,
                    0,
                    15,
                    3,
                    3,
                    5,
                    5,
                    6,
                    8,
                    11
                ];
                e.substitute = function(t, e) {
                    for(var r = 0, i = 0; i < 4; i++)r <<= 4, r |= n[64 * i + (t >>> 18 - 6 * i & 63)];
                    for(i = 0; i < 4; i++)r <<= 4, r |= n[256 + 64 * i + (e >>> 18 - 6 * i & 63)];
                    return r >>> 0;
                };
                var i = [
                    16,
                    25,
                    12,
                    11,
                    3,
                    20,
                    4,
                    15,
                    31,
                    17,
                    9,
                    6,
                    27,
                    14,
                    1,
                    22,
                    30,
                    24,
                    8,
                    18,
                    0,
                    5,
                    29,
                    23,
                    13,
                    19,
                    2,
                    26,
                    10,
                    21,
                    28,
                    7
                ];
                e.permute = function(t) {
                    for(var e = 0, r = 0; r < i.length; r++)e <<= 1, e |= t >>> i[r] & 1;
                    return e >>> 0;
                }, e.padSplit = function(t, e, r) {
                    for(var n = t.toString(2); n.length < e;)n = "0" + n;
                    for(var i = [], o = 0; o < e; o += r)i.push(n.slice(o, o + r));
                    return i.join(" ");
                };
            },
            9528: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (i = function() {
                        return !!t;
                    })();
                }
                function o(t) {
                    return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, o(t);
                }
                function a(t, e) {
                    return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, a(t, e);
                }
                var s = function(t) {
                    function e() {
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e), function(t, e, r) {
                            return e = o(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, i() ? Reflect.construct(e, r || [], o(t).constructor) : e.apply(t, r));
                        }(this, e, arguments);
                    }
                    var r;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && a(t, e);
                    }(e, t), r = e, Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(r(8879)), u = r(5761);
                Object.defineProperty(s.prototype, "enum", u), Object.defineProperty(s.prototype, "match", u), Object.defineProperty(s.prototype, "lowercase", u), Object.defineProperty(s.prototype, "trim", u), Object.defineProperty(s.prototype, "uppercase", u), Object.defineProperty(s.prototype, "minLength", u), Object.defineProperty(s.prototype, "minlength", u), Object.defineProperty(s.prototype, "maxLength", u), Object.defineProperty(s.prototype, "maxlength", u), Object.defineProperty(s.prototype, "populate", u), t.exports = s;
            },
            9538: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                function i(t, e) {
                    for(var r = 0; r < e.length; r++){
                        var n = e[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, o(n.key), n);
                    }
                }
                function o(t) {
                    var e = function(t) {
                        if ("object" != n(t) || !t) return t;
                        var e = t[Symbol.toPrimitive];
                        if (void 0 !== e) {
                            var r = e.call(t, "string");
                            if ("object" != n(r)) return r;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return String(t);
                    }(t);
                    return "symbol" == n(e) ? e : e + "";
                }
                function a() {
                    try {
                        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch (t) {}
                    return (a = function() {
                        return !!t;
                    })();
                }
                function s(t) {
                    return s = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                        return t.__proto__ || Object.getPrototypeOf(t);
                    }, s(t);
                }
                function u(t, e) {
                    return u = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                        return t.__proto__ = e, t;
                    }, u(t, e);
                }
                var c = r(8213), f = function(t) {
                    function e(t, r) {
                        var i;
                        !function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                        }(this, e);
                        var o = t.message;
                        o || (o = c.messages.general.default);
                        var u = l(o, t, r);
                        return i = function(t, e, r) {
                            return e = s(e), function(t, e) {
                                if (e && ("object" == n(e) || "function" == typeof e)) return e;
                                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                                return function(t) {
                                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return t;
                                }(t);
                            }(t, a() ? Reflect.construct(e, r || [], s(t).constructor) : e.apply(t, r));
                        }(this, e, [
                            u
                        ]), t = Object.assign({}, t, {
                            message: u
                        }), i.properties = t, i.kind = t.type, i.path = t.path, i.value = t.value, i.reason = t.reason, i;
                    }
                    var r, o;
                    return function(t, e) {
                        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(t, "prototype", {
                            writable: !1
                        }), e && u(t, e);
                    }(e, t), r = e, o = [
                        {
                            key: "toString",
                            value: function() {
                                return this.message;
                            }
                        },
                        {
                            key: "toJSON",
                            value: function() {
                                return Object.assign({
                                    name: this.name,
                                    message: this.message
                                }, this);
                            }
                        }
                    ], i(r.prototype, o), Object.defineProperty(r, "prototype", {
                        writable: !1
                    }), r;
                }(c);
                function l(t, e, r) {
                    if ("function" == typeof t) return t(e, r);
                    for(var n = 0, i = Object.keys(e); n < i.length; n++){
                        var o = i[n];
                        "message" !== o && (t = t.replace("{" + o.toUpperCase() + "}", e[o]));
                    }
                    return t;
                }
                Object.defineProperty(f.prototype, "name", {
                    value: "ValidatorError"
                }), Object.defineProperty(f.prototype, "properties", {
                    enumerable: !1,
                    writable: !0,
                    value: null
                }), f.prototype.formatMessage = l, t.exports = f;
            },
            9539: (t)=>{
                "use strict";
                function e(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for(var r = 0, n = Array(e); r < e; r++)n[r] = t[r];
                    return n;
                }
                t.exports = function(t, r, n) {
                    for(var i = {}, o = 0, a = Object.keys(r.tree); o < a.length; o++){
                        var s = a[o];
                        n && (t.paths[s] || t.nested[s] || t.singleNestedPaths[s]) || (i[s] = r.tree[s]);
                    }
                    t.options._isMerging = !0, t.add(i, null), delete t.options._isMerging, t.callQueue = t.callQueue.concat(r.callQueue), t.method(r.methods), t.static(r.statics);
                    for(var u = 0, c = Object.entries(r._userProvidedOptions); u < c.length; u++){
                        var f = (p = c[u], d = 2, function(t) {
                            if (Array.isArray(t)) return t;
                        }(p) || function(t, e) {
                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (null != r) {
                                var n, i, o, a, s = [], u = !0, c = !1;
                                try {
                                    if (o = (r = r.call(t)).next, 0 === e) {
                                        if (Object(r) !== r) return;
                                        u = !1;
                                    } else for(; !(u = (n = o.call(r)).done) && (s.push(n.value), s.length !== e); u = !0);
                                } catch (t) {
                                    c = !0, i = t;
                                } finally{
                                    try {
                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return;
                                    } finally{
                                        if (c) throw i;
                                    }
                                }
                                return s;
                            }
                        }(p, d) || function(t, r) {
                            if (t) {
                                if ("string" == typeof t) return e(t, r);
                                var n = ({}).toString.call(t).slice(8, -1);
                                return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? e(t, r) : void 0;
                            }
                        }(p, d) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                        }()), l = f[0], h = f[1];
                        l in t._userProvidedOptions || t.set(l, h);
                    }
                    var p, d;
                    for(var y in r.query)t.query[y] = r.query[y];
                    for(var b in r.virtuals)t.virtuals[b] = r.virtuals[b].clone();
                    t._indexes = t._indexes.concat(r._indexes || []), t.s.hooks.merge(r.s.hooks, !1);
                };
            },
            9553: (t, e, r)=>{
                "use strict";
                var n = r(5832).Buffer;
                function i(t) {
                    return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, i(t);
                }
                var o = r(9639), a = r(2402);
                t.exports = function(t) {
                    return null == t ? t : "object" === i(t) && "string" == typeof t.$numberDecimal ? o.fromString(t.$numberDecimal) : t instanceof o ? t : "string" == typeof t ? o.fromString(t) : "function" == typeof n && n.isBuffer(t) || "function" == typeof Uint8Array && t instanceof Uint8Array ? new o(t) : "number" == typeof t ? o.fromString(String(t)) : "function" == typeof t.valueOf && "string" == typeof t.valueOf() ? o.fromString(t.valueOf()) : void a.ok(!1);
                };
            },
            9600: (t, e, r)=>{
                "use strict";
                e.Array = r(7557), e.Buffer = r(6365), e.Document = e.Embedded = r(6547), e.DocumentArray = r(4878), e.Double = r(2822), e.Decimal128 = r(9639), e.ObjectId = r(5549), e.Map = r(2081), e.Subdocument = r(9380), e.UUID = r(1344);
            },
            9604: (t, e, r)=>{
                "use strict";
                var n = r(5558).p, i = r(5558).G;
                function o(t, e) {
                    switch(t.$geometry.type){
                        case "Polygon":
                        case "LineString":
                        case "Point":
                            n(t.$geometry.coordinates, e);
                    }
                    return a(e, t), t;
                }
                function a(t, e) {
                    e.$maxDistance && (e.$maxDistance = i.call(t, e.$maxDistance)), e.$minDistance && (e.$minDistance = i.call(t, e.$minDistance));
                }
                e.cast$geoIntersects = function(t) {
                    if (t.$geometry) return o(t, this), t;
                }, e.cast$near = function(t) {
                    var e = r(7760);
                    if (Array.isArray(t)) return n(t, this), t;
                    if (a(this, t), t && t.$geometry) return o(t, this);
                    if (!Array.isArray(t)) throw new TypeError("$near must be either an array or an object with a $geometry property");
                    return e.prototype.castForQuery.call(this, null, t);
                }, e.cast$within = function(t) {
                    var e = this;
                    if (a(this, t), t.$box || t.$polygon) {
                        var r = t.$box ? "$box" : "$polygon";
                        t[r].forEach(function(t) {
                            if (!Array.isArray(t)) throw new TypeError("Invalid $within $box argument. Expected an array, received " + t);
                            t.forEach(function(r, n) {
                                t[n] = i.call(e, r);
                            });
                        });
                    } else if (t.$center || t.$centerSphere) {
                        var n = t.$center ? "$center" : "$centerSphere";
                        t[n].forEach(function(r, o) {
                            Array.isArray(r) ? r.forEach(function(t, n) {
                                r[n] = i.call(e, t);
                            }) : t[n][o] = i.call(e, r);
                        });
                    } else t.$geometry && o(t, this);
                    return t;
                };
            },
            9639: (t, e, r)=>{
                "use strict";
                t.exports = r(3633).Decimal128;
            },
            9652: (t, e, r)=>{
                var n = r(8201), i = r(2098), o = r(8629), a = r(3849), s = r(1685);
                function u(t, e, r) {
                    if (t = t.toLowerCase(), o[t]) return i.createCipheriv(t, e, r);
                    if (a[t]) return new n({
                        key: e,
                        iv: r,
                        mode: t
                    });
                    throw new TypeError("invalid suite type");
                }
                function c(t, e, r) {
                    if (t = t.toLowerCase(), o[t]) return i.createDecipheriv(t, e, r);
                    if (a[t]) return new n({
                        key: e,
                        iv: r,
                        mode: t,
                        decrypt: !0
                    });
                    throw new TypeError("invalid suite type");
                }
                e.createCipher = e.Cipher = function(t, e) {
                    var r, n;
                    if (t = t.toLowerCase(), o[t]) r = o[t].key, n = o[t].iv;
                    else {
                        if (!a[t]) throw new TypeError("invalid suite type");
                        r = 8 * a[t].key, n = a[t].iv;
                    }
                    var i = s(e, !1, r, n);
                    return u(t, i.key, i.iv);
                }, e.createCipheriv = e.Cipheriv = u, e.createDecipher = e.Decipher = function(t, e) {
                    var r, n;
                    if (t = t.toLowerCase(), o[t]) r = o[t].key, n = o[t].iv;
                    else {
                        if (!a[t]) throw new TypeError("invalid suite type");
                        r = 8 * a[t].key, n = a[t].iv;
                    }
                    var i = s(e, !1, r, n);
                    return c(t, i.key, i.iv);
                }, e.createDecipheriv = e.Decipheriv = c, e.listCiphers = e.getCiphers = function() {
                    return Object.keys(a).concat(i.getCiphers());
                };
            },
            9681: (t, e, r)=>{
                "use strict";
                var n = r(198).F.ERR_INVALID_OPT_VALUE;
                t.exports = {
                    getHighWaterMark: function(t, e, r, i) {
                        var o = function(t, e, r) {
                            return null != t.highWaterMark ? t.highWaterMark : e ? t[r] : null;
                        }(e, i, r);
                        if (null != o) {
                            if (!isFinite(o) || Math.floor(o) !== o || o < 0) throw new n(i ? r : "highWaterMark", o);
                            return Math.floor(o);
                        }
                        return t.objectMode ? 16 : 16384;
                    }
                };
            },
            9696: (t)=>{
                "use strict";
                var e = /^function\s*([^\s(]+)/;
                t.exports = function(t) {
                    return t.name || (t.toString().trim().match(e) || [])[1];
                };
            },
            9723: (t, e, r)=>{
                "use strict";
                var n = r(1970), i = r(7799), o = r(1679), a = r(3334), s = n.assert;
                function u(t) {
                    this.twisted = 1 != (0 | t.a), this.mOneA = this.twisted && -1 == (0 | t.a), this.extended = this.mOneA, a.call(this, "edwards", t), this.a = new i(t.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new i(t.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new i(t.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), s(!this.twisted || 0 === this.c.fromRed().cmpn(1)), this.oneC = 1 == (0 | t.c);
                }
                function c(t, e, r, n, o) {
                    a.BasePoint.call(this, t, "projective"), null === e && null === r && null === n ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = !0) : (this.x = new i(e, 16), this.y = new i(r, 16), this.z = n ? new i(n, 16) : this.curve.one, this.t = o && new i(o, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
                }
                o(u, a), t.exports = u, u.prototype._mulA = function(t) {
                    return this.mOneA ? t.redNeg() : this.a.redMul(t);
                }, u.prototype._mulC = function(t) {
                    return this.oneC ? t : this.c.redMul(t);
                }, u.prototype.jpoint = function(t, e, r, n) {
                    return this.point(t, e, r, n);
                }, u.prototype.pointFromX = function(t, e) {
                    (t = new i(t, 16)).red || (t = t.toRed(this.red));
                    var r = t.redSqr(), n = this.c2.redSub(this.a.redMul(r)), o = this.one.redSub(this.c2.redMul(this.d).redMul(r)), a = n.redMul(o.redInvm()), s = a.redSqrt();
                    if (0 !== s.redSqr().redSub(a).cmp(this.zero)) throw new Error("invalid point");
                    var u = s.fromRed().isOdd();
                    return (e && !u || !e && u) && (s = s.redNeg()), this.point(t, s);
                }, u.prototype.pointFromY = function(t, e) {
                    (t = new i(t, 16)).red || (t = t.toRed(this.red));
                    var r = t.redSqr(), n = r.redSub(this.c2), o = r.redMul(this.d).redMul(this.c2).redSub(this.a), a = n.redMul(o.redInvm());
                    if (0 === a.cmp(this.zero)) {
                        if (e) throw new Error("invalid point");
                        return this.point(this.zero, t);
                    }
                    var s = a.redSqrt();
                    if (0 !== s.redSqr().redSub(a).cmp(this.zero)) throw new Error("invalid point");
                    return s.fromRed().isOdd() !== e && (s = s.redNeg()), this.point(s, t);
                }, u.prototype.validate = function(t) {
                    if (t.isInfinity()) return !0;
                    t.normalize();
                    var e = t.x.redSqr(), r = t.y.redSqr(), n = e.redMul(this.a).redAdd(r), i = this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(r)));
                    return 0 === n.cmp(i);
                }, o(c, a.BasePoint), u.prototype.pointFromJSON = function(t) {
                    return c.fromJSON(this, t);
                }, u.prototype.point = function(t, e, r, n) {
                    return new c(this, t, e, r, n);
                }, c.fromJSON = function(t, e) {
                    return new c(t, e[0], e[1], e[2]);
                }, c.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
                }, c.prototype.isInfinity = function() {
                    return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || this.zOne && 0 === this.y.cmp(this.curve.c));
                }, c.prototype._extDbl = function() {
                    var t = this.x.redSqr(), e = this.y.redSqr(), r = this.z.redSqr();
                    r = r.redIAdd(r);
                    var n = this.curve._mulA(t), i = this.x.redAdd(this.y).redSqr().redISub(t).redISub(e), o = n.redAdd(e), a = o.redSub(r), s = n.redSub(e), u = i.redMul(a), c = o.redMul(s), f = i.redMul(s), l = a.redMul(o);
                    return this.curve.point(u, c, l, f);
                }, c.prototype._projDbl = function() {
                    var t, e, r, n, i, o, a = this.x.redAdd(this.y).redSqr(), s = this.x.redSqr(), u = this.y.redSqr();
                    if (this.curve.twisted) {
                        var c = (n = this.curve._mulA(s)).redAdd(u);
                        this.zOne ? (t = a.redSub(s).redSub(u).redMul(c.redSub(this.curve.two)), e = c.redMul(n.redSub(u)), r = c.redSqr().redSub(c).redSub(c)) : (i = this.z.redSqr(), o = c.redSub(i).redISub(i), t = a.redSub(s).redISub(u).redMul(o), e = c.redMul(n.redSub(u)), r = c.redMul(o));
                    } else n = s.redAdd(u), i = this.curve._mulC(this.z).redSqr(), o = n.redSub(i).redSub(i), t = this.curve._mulC(a.redISub(n)).redMul(o), e = this.curve._mulC(n).redMul(s.redISub(u)), r = n.redMul(o);
                    return this.curve.point(t, e, r);
                }, c.prototype.dbl = function() {
                    return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
                }, c.prototype._extAdd = function(t) {
                    var e = this.y.redSub(this.x).redMul(t.y.redSub(t.x)), r = this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)), n = this.t.redMul(this.curve.dd).redMul(t.t), i = this.z.redMul(t.z.redAdd(t.z)), o = r.redSub(e), a = i.redSub(n), s = i.redAdd(n), u = r.redAdd(e), c = o.redMul(a), f = s.redMul(u), l = o.redMul(u), h = a.redMul(s);
                    return this.curve.point(c, f, h, l);
                }, c.prototype._projAdd = function(t) {
                    var e, r, n = this.z.redMul(t.z), i = n.redSqr(), o = this.x.redMul(t.x), a = this.y.redMul(t.y), s = this.curve.d.redMul(o).redMul(a), u = i.redSub(s), c = i.redAdd(s), f = this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(o).redISub(a), l = n.redMul(u).redMul(f);
                    return this.curve.twisted ? (e = n.redMul(c).redMul(a.redSub(this.curve._mulA(o))), r = u.redMul(c)) : (e = n.redMul(c).redMul(a.redSub(o)), r = this.curve._mulC(u).redMul(c)), this.curve.point(l, e, r);
                }, c.prototype.add = function(t) {
                    return this.isInfinity() ? t : t.isInfinity() ? this : this.curve.extended ? this._extAdd(t) : this._projAdd(t);
                }, c.prototype.mul = function(t) {
                    return this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve._wnafMul(this, t);
                }, c.prototype.mulAdd = function(t, e, r) {
                    return this.curve._wnafMulAdd(1, [
                        this,
                        e
                    ], [
                        t,
                        r
                    ], 2, !1);
                }, c.prototype.jmulAdd = function(t, e, r) {
                    return this.curve._wnafMulAdd(1, [
                        this,
                        e
                    ], [
                        t,
                        r
                    ], 2, !0);
                }, c.prototype.normalize = function() {
                    if (this.zOne) return this;
                    var t = this.z.redInvm();
                    return this.x = this.x.redMul(t), this.y = this.y.redMul(t), this.t && (this.t = this.t.redMul(t)), this.z = this.curve.one, this.zOne = !0, this;
                }, c.prototype.neg = function() {
                    return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
                }, c.prototype.getX = function() {
                    return this.normalize(), this.x.fromRed();
                }, c.prototype.getY = function() {
                    return this.normalize(), this.y.fromRed();
                }, c.prototype.eq = function(t) {
                    return this === t || 0 === this.getX().cmp(t.getX()) && 0 === this.getY().cmp(t.getY());
                }, c.prototype.eqXToP = function(t) {
                    var e = t.toRed(this.curve.red).redMul(this.z);
                    if (0 === this.x.cmp(e)) return !0;
                    for(var r = t.clone(), n = this.curve.redN.redMul(this.z);;){
                        if (r.iadd(this.curve.n), r.cmp(this.curve.p) >= 0) return !1;
                        if (e.redIAdd(n), 0 === this.x.cmp(e)) return !0;
                    }
                }, c.prototype.toP = c.prototype.normalize, c.prototype.mixedAdd = c.prototype.add;
            },
            9732: (t, e, r)=>{
                var n = r(5832), i = n.Buffer;
                function o(t, e) {
                    for(var r in t)e[r] = t[r];
                }
                function a(t, e, r) {
                    return i(t, e, r);
                }
                i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t.exports = n : (o(n, e), e.Buffer = a), a.prototype = Object.create(i.prototype), o(i, a), a.from = function(t, e, r) {
                    if ("number" == typeof t) throw new TypeError("Argument must not be a number");
                    return i(t, e, r);
                }, a.alloc = function(t, e, r) {
                    if ("number" != typeof t) throw new TypeError("Argument must be a number");
                    var n = i(t);
                    return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n;
                }, a.allocUnsafe = function(t) {
                    if ("number" != typeof t) throw new TypeError("Argument must be a number");
                    return i(t);
                }, a.allocUnsafeSlow = function(t) {
                    if ("number" != typeof t) throw new TypeError("Argument must be a number");
                    return n.SlowBuffer(t);
                };
            },
            9803: (t, e, r)=>{
                var n = r(5832).Buffer, i = r(1673), o = r(3241), a = r(8151), s = {
                    binary: !0,
                    hex: !0,
                    base64: !0
                };
                e.DiffieHellmanGroup = e.createDiffieHellmanGroup = e.getDiffieHellman = function(t) {
                    var e = new n(o[t].prime, "hex"), r = new n(o[t].gen, "hex");
                    return new a(e, r);
                }, e.createDiffieHellman = e.DiffieHellman = function t(e, r, o, u) {
                    return n.isBuffer(r) || void 0 === s[r] ? t(e, "binary", r, o) : (r = r || "binary", u = u || "binary", o = o || new n([
                        2
                    ]), n.isBuffer(o) || (o = new n(o, u)), "number" == typeof e ? new a(i(e, o), o, !0) : (n.isBuffer(e) || (e = new n(e, r)), new a(e, o, !0)));
                };
            },
            9809: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                var r, n, i = Function.prototype.toString, o = "object" === ("undefined" == typeof Reflect ? "undefined" : e(Reflect)) && null !== Reflect && Reflect.apply;
                if ("function" == typeof o && "function" == typeof Object.defineProperty) try {
                    r = Object.defineProperty({}, "length", {
                        get: function() {
                            throw n;
                        }
                    }), n = {}, o(function() {
                        throw 42;
                    }, null, r);
                } catch (t) {
                    t !== n && (o = null);
                }
                else o = null;
                var a = /^\s*class\b/, s = function(t) {
                    try {
                        var e = i.call(t);
                        return a.test(e);
                    } catch (t) {
                        return !1;
                    }
                }, u = function(t) {
                    try {
                        return !s(t) && (i.call(t), !0);
                    } catch (t) {
                        return !1;
                    }
                }, c = Object.prototype.toString, f = "function" == typeof Symbol && !!Symbol.toStringTag, l = !(0 in [
                    , 
                ]), h = function() {
                    return !1;
                };
                if ("object" === ("undefined" == typeof document ? "undefined" : e(document))) {
                    var p = document.all;
                    c.call(p) === c.call(document.all) && (h = function(t) {
                        if ((l || !t) && (void 0 === t || "object" === e(t))) try {
                            var r = c.call(t);
                            return ("[object HTMLAllCollection]" === r || "[object HTML document.all class]" === r || "[object HTMLCollection]" === r || "[object Object]" === r) && null == t("");
                        } catch (t) {}
                        return !1;
                    });
                }
                t.exports = o ? function(t) {
                    if (h(t)) return !0;
                    if (!t) return !1;
                    if ("function" != typeof t && "object" !== e(t)) return !1;
                    try {
                        o(t, null, r);
                    } catch (t) {
                        if (t !== n) return !1;
                    }
                    return !s(t) && u(t);
                } : function(t) {
                    if (h(t)) return !0;
                    if (!t) return !1;
                    if ("function" != typeof t && "object" !== e(t)) return !1;
                    if (f) return u(t);
                    if (s(t)) return !1;
                    var r = c.call(t);
                    return !("[object Function]" !== r && "[object GeneratorFunction]" !== r && !/^\[object HTML/.test(r)) && u(t);
                };
            },
            9834: (t, e, r)=>{
                "use strict";
                function n(t) {
                    return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, n(t);
                }
                var i = r(3777), o = r(3426), a = r(9122), s = r(3071), u = r(1464), c = r(209), f = s("Object.prototype.toString"), l = r(953)(), h = "undefined" == typeof globalThis ? r.g : globalThis, p = o(), d = s("String.prototype.slice"), y = s("Array.prototype.indexOf", !0) || function(t, e) {
                    for(var r = 0; r < t.length; r += 1)if (t[r] === e) return r;
                    return -1;
                }, b = {
                    __proto__: null
                };
                i(p, l && u && c ? function(t) {
                    var e = new h[t];
                    if (Symbol.toStringTag in e && c) {
                        var r = c(e), n = u(r, Symbol.toStringTag);
                        if (!n && r) {
                            var i = c(r);
                            n = u(i, Symbol.toStringTag);
                        }
                        b["$" + t] = a(n.get);
                    }
                } : function(t) {
                    var e = new h[t], r = e.slice || e.set;
                    r && (b["$" + t] = a(r));
                }), t.exports = function(t) {
                    if (!t || "object" !== n(t)) return !1;
                    if (!l) {
                        var e = d(f(t), 8, -1);
                        return y(p, e) > -1 ? e : "Object" === e && function(t) {
                            var e = !1;
                            return i(b, function(r, n) {
                                if (!e) try {
                                    r(t), e = d(n, 1);
                                } catch (t) {}
                            }), e;
                        }(t);
                    }
                    return u ? function(t) {
                        var e = !1;
                        return i(b, function(r, n) {
                            if (!e) try {
                                "$" + r(t) === n && (e = d(n, 1));
                            } catch (t) {}
                        }), e;
                    }(t) : null;
                };
            },
            9838: ()=>{},
            9848: (t)=>{
                "use strict";
                function e(t) {
                    return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t;
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                    }, e(t);
                }
                t.exports = function(t) {
                    t.pre("save", !1, function(t, r) {
                        var n = this, i = this;
                        if (this.$isSubdocument) return t();
                        if (r && "object" === e(r) && "validateBeforeSave" in r ? r.validateBeforeSave : this.$__schema.options.validateBeforeSave) {
                            var o = r && "object" === e(r) && "validateModifiedOnly" in r ? {
                                validateModifiedOnly: r.validateModifiedOnly
                            } : null;
                            this.$validate(o).then(function() {
                                n.$op = "save", t();
                            }, function(e) {
                                i.$__schema.s.hooks.execPost("save:error", i, [
                                    i
                                ], {
                                    error: e
                                }, function(e) {
                                    i.$op = "save", t(e);
                                });
                            });
                        } else t();
                    }, null, !0);
                };
            },
            9870: (t)=>{
                "use strict";
                t.exports = Error;
            },
            9907: (t, e)=>{
                e.encrypt = function(t, e) {
                    return t._cipher.encryptBlock(e);
                }, e.decrypt = function(t, e) {
                    return t._cipher.decryptBlock(e);
                };
            },
            9939: (t)=>{
                "use strict";
                t.exports = RangeError;
            }
        }, e = {};
        function r(n) {
            var i = e[n];
            if (void 0 !== i) return i.exports;
            var o = e[n] = {
                id: n,
                loaded: !1,
                exports: {}
            };
            return t[n].call(o.exports, o, o.exports, r), o.loaded = !0, o.exports;
        }
        return r.g = function() {
            if ("object" == typeof globalThis) return globalThis;
            try {
                return this || new Function("return this")();
            } catch (t) {
                if ("object" == typeof window) return window;
            }
        }(), r.nmd = (t)=>(t.paths = [], t.children || (t.children = []), t), r(4829);
    })());

},{}],"9I1ve":[function(require,module,exports,__globalThis) {
// src/redux/store.js
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _toolkit = require("@reduxjs/toolkit");
var _authSlice = require("./authSlice");
var _authSliceDefault = parcelHelpers.interopDefault(_authSlice);
const store = (0, _toolkit.configureStore)({
    reducer: {
        auth: (0, _authSliceDefault.default)
    }
});
exports.default = store;

},{"@reduxjs/toolkit":"fKS5f","./authSlice":"9kBex","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fUJBo":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$804e = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$804e.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$804e.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouter = require("react-router");
var _reactCookie = require("react-cookie");
var _reactToastify = require("react-toastify");
var _reactToastifyCss = require("react-toastify/dist/ReactToastify.css");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _s = $RefreshSig$();
const AddCar = ()=>{
    _s();
    const [cookies] = (0, _reactCookie.useCookies)([
        'accessToken'
    ]);
    const [error, setError] = (0, _react.useState)('');
    const [files, setFiles] = (0, _react.useState)([]);
    const navigate = (0, _reactRouter.useNavigate)();
    const [formData, setFormData] = (0, _react.useState)({
        make: '',
        model: '',
        year: '',
        licensePlate: '',
        description: '',
        features: '',
        pricePerDay: '',
        address: '',
        city: '',
        state: '',
        zipCode: '',
        startDate: '',
        startTime: '',
        endDate: '',
        endTime: '',
        policyNumber: '',
        provider: '',
        coverageType: '',
        expiryDate: ''
    });
    const [loading, setLoading] = (0, _react.useState)(false);
    const handleChange = (e)=>{
        setFormData({
            ...formData,
            [e.target.name]: e.target.value
        });
    };
    const handleSubmit = async (e)=>{
        console.log(cookies.accessToken);
        e.preventDefault();
        setLoading(true);
        try {
            const data = new FormData();
            console.log(data);
            const location = {
                type: 'Point',
                coordinates: [
                    0,
                    0
                ],
                address: formData.address,
                city: formData.city,
                state: formData.state,
                zipCode: formData.zipCode
            };
            const availability = {
                startDate: formData.startDate,
                endDate: formData.endDate
            };
            const insurance = {
                policyNumber: formData.policyNumber,
                provider: formData.provider,
                coverageType: formData.coverageType,
                expiryDate: formData.expiryDate,
                verified: false
            };
            const fieldsToSend = {
                ...formData,
                features: formData.features.split(',').map((f)=>f.trim()),
                location,
                availability,
                insurance
            };
            data.append('make', formData.make);
            data.append('model', formData.model);
            data.append('year', formData.year);
            data.append('licensePlate', formData.licensePlate);
            data.append('description', formData.description);
            data.append('pricePerDay', formData.pricePerDay);
            // Features as array
            data.append('features', JSON.stringify(formData.features.split(',').map((f)=>f.trim())));
            // Append nested objects as JSON strings
            data.append('location', JSON.stringify({
                type: 'Point',
                coordinates: [
                    0,
                    0
                ],
                address: formData.address,
                city: formData.city,
                state: formData.state,
                zipCode: formData.zipCode
            }));
            data.append('availability', JSON.stringify([
                {
                    startDate: formData.startDate,
                    startTime: formData.startTime,
                    endDate: formData.endDate,
                    endTime: formData.endTime
                }
            ]));
            data.append('insurance', JSON.stringify({
                policyNumber: formData.policyNumber,
                provider: formData.provider,
                coverageType: formData.coverageType,
                expiryDate: formData.expiryDate,
                verified: false
            }));
            // Owner ID
            const userId = JSON.parse(localStorage.getItem('user'));
            data.append('owner', userId._id);
            // Files
            files.forEach((file)=>{
                data.append('images', file);
            });
            const response = await (0, _axiosDefault.default).post('http://localhost:5000/car/addCar', data, {
                headers: {
                    'Content-Type': 'multipart/form-data',
                    'Accept': 'application/json',
                    'Authorization': `Bearer ${cookies.accessToken}`
                },
                withCredentials: true
            });
            if (response.status === 200) {
                (0, _reactToastify.toast).success('Car added successfully!');
                setFormData({
                    make: '',
                    model: '',
                    year: '',
                    licensePlate: '',
                    description: '',
                    features: '',
                    pricePerDay: '',
                    address: '',
                    city: '',
                    state: '',
                    zipCode: '',
                    startDate: '',
                    startTime: '',
                    endDate: '',
                    endTime: '',
                    policyNumber: '',
                    provider: '',
                    coverageType: '',
                    expiryDate: ''
                });
                navigate('/');
            } else {
                setError('Failed to add car. Please try again.');
                (0, _reactToastify.toast).error('Failed to add car. Please try again.');
            }
            console.log(response.data);
        } catch (error) {
            setError(JSON.stringify(error.response.data));
            console.log(error.response.data);
            (0, _reactToastify.toast).error('Failed to add car. Please try again.');
        } finally{
            setLoading(false);
        }
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-xl my-4 border border-gray-200",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h2", {
                    className: "text-3xl font-semibold mb-6 text-center",
                    children: "Add New Car"
                }, void 0, false, {
                    fileName: "src/components/Car/AddCar.js",
                    lineNumber: 181,
                    columnNumber: 7
                }, undefined),
                error && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                    className: "text-red-500 mb-4 text-center",
                    children: error
                }, void 0, false, {
                    fileName: "src/components/Car/AddCar.js",
                    lineNumber: 182,
                    columnNumber: 17
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("form", {
                    onSubmit: handleSubmit,
                    className: "space-y-6",
                    encType: "multipart/form-data",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "grid grid-cols-1 md:grid-cols-3 gap-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Make"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 187,
                                            columnNumber: 13
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            name: "make",
                                            value: formData.make,
                                            onChange: handleChange,
                                            required: true,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 188,
                                            columnNumber: 13
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 186,
                                    columnNumber: 11
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Model"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 198,
                                            columnNumber: 13
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            name: "model",
                                            value: formData.model,
                                            onChange: handleChange,
                                            required: true,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 199,
                                            columnNumber: 13
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 197,
                                    columnNumber: 11
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Year"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 209,
                                            columnNumber: 13
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "number",
                                            name: "year",
                                            value: formData.year,
                                            onChange: handleChange,
                                            required: true,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 210,
                                            columnNumber: 13
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 208,
                                    columnNumber: 11
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/components/Car/AddCar.js",
                            lineNumber: 185,
                            columnNumber: 9
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "grid grid-cols-1 md:grid-cols-3 gap-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "License Plate"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 224,
                                            columnNumber: 13
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            name: "licensePlate",
                                            value: formData.licensePlate,
                                            onChange: handleChange,
                                            required: true,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 225,
                                            columnNumber: 13
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 223,
                                    columnNumber: 11
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Price Per Day ($)"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 235,
                                            columnNumber: 13
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "number",
                                            name: "pricePerDay",
                                            value: formData.pricePerDay,
                                            onChange: handleChange,
                                            required: true,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 236,
                                            columnNumber: 13
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 234,
                                    columnNumber: 11
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Features (comma separated)"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 246,
                                            columnNumber: 13
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            name: "features",
                                            value: formData.features,
                                            onChange: handleChange,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 247,
                                            columnNumber: 13
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 245,
                                    columnNumber: 11
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/components/Car/AddCar.js",
                            lineNumber: 222,
                            columnNumber: 9
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                    className: "block mb-1 font-medium",
                                    children: "Description"
                                }, void 0, false, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 259,
                                    columnNumber: 11
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("textarea", {
                                    name: "description",
                                    rows: "3",
                                    value: formData.description,
                                    onChange: handleChange,
                                    required: true,
                                    className: "w-full border px-3 py-2 rounded"
                                }, void 0, false, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 260,
                                    columnNumber: 11
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/components/Car/AddCar.js",
                            lineNumber: 258,
                            columnNumber: 9
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "grid grid-cols-1 md:grid-cols-2 gap-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Street Address"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 273,
                                            columnNumber: 13
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            name: "address",
                                            value: formData.address,
                                            onChange: handleChange,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 274,
                                            columnNumber: 13
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 272,
                                    columnNumber: 11
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "City"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 283,
                                            columnNumber: 13
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            name: "city",
                                            value: formData.city,
                                            onChange: handleChange,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 284,
                                            columnNumber: 13
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 282,
                                    columnNumber: 11
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "State"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 293,
                                            columnNumber: 13
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            name: "state",
                                            value: formData.state,
                                            onChange: handleChange,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 294,
                                            columnNumber: 13
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 292,
                                    columnNumber: 11
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Zip Code"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 303,
                                            columnNumber: 13
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            name: "zipCode",
                                            value: formData.zipCode,
                                            onChange: handleChange,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 304,
                                            columnNumber: 13
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 302,
                                    columnNumber: 11
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/components/Car/AddCar.js",
                            lineNumber: 271,
                            columnNumber: 9
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "grid grid-cols-1 md:grid-cols-2 gap-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Available From"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 316,
                                            columnNumber: 11
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "date",
                                            name: "startDate",
                                            value: formData.startDate,
                                            onChange: handleChange,
                                            required: true,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 317,
                                            columnNumber: 11
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "time",
                                            name: "startTime",
                                            value: formData.startTime,
                                            onChange: handleChange,
                                            required: true,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 326,
                                            columnNumber: 11
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 315,
                                    columnNumber: 9
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Available Until"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 336,
                                            columnNumber: 13
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "date",
                                            name: "endDate",
                                            value: formData.endDate,
                                            onChange: handleChange,
                                            required: true,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 337,
                                            columnNumber: 13
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "time",
                                            name: "endTime",
                                            value: formData.endTime,
                                            onChange: handleChange,
                                            required: true,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 345,
                                            columnNumber: 13
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 335,
                                    columnNumber: 11
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/components/Car/AddCar.js",
                            lineNumber: 314,
                            columnNumber: 7
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "grid grid-cols-1 md:grid-cols-2 gap-4 mt-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Insurance Policy Number"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 359,
                                            columnNumber: 11
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            name: "policyNumber",
                                            value: formData.policyNumber,
                                            onChange: handleChange,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 360,
                                            columnNumber: 11
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 358,
                                    columnNumber: 9
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Insurance Provider"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 369,
                                            columnNumber: 11
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            name: "provider",
                                            value: formData.provider,
                                            onChange: handleChange,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 370,
                                            columnNumber: 11
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 368,
                                    columnNumber: 9
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Coverage Type"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 379,
                                            columnNumber: 11
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            name: "coverageType",
                                            value: formData.coverageType,
                                            onChange: handleChange,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 380,
                                            columnNumber: 11
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 378,
                                    columnNumber: 9
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "block mb-1 font-medium",
                                            children: "Expiry Date"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 389,
                                            columnNumber: 11
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "date",
                                            name: "expiryDate",
                                            value: formData.expiryDate,
                                            onChange: handleChange,
                                            className: "w-full border px-3 py-2 rounded"
                                        }, void 0, false, {
                                            fileName: "src/components/Car/AddCar.js",
                                            lineNumber: 390,
                                            columnNumber: 11
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 388,
                                    columnNumber: 9
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/components/Car/AddCar.js",
                            lineNumber: 357,
                            columnNumber: 7
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                    className: "block mb-1 font-medium",
                                    children: "Upload Photos"
                                }, void 0, false, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 402,
                                    columnNumber: 11
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                    type: "file",
                                    multiple: true,
                                    accept: "image/*",
                                    onChange: (e)=>setFiles(Array.from(e.target.files)),
                                    className: "w-full border px-3 py-2 rounded"
                                }, void 0, false, {
                                    fileName: "src/components/Car/AddCar.js",
                                    lineNumber: 403,
                                    columnNumber: 11
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/components/Car/AddCar.js",
                            lineNumber: 401,
                            columnNumber: 9
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "text-center",
                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                type: "submit",
                                disabled: loading,
                                className: "bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded",
                                children: loading ? 'Adding...' : 'Add Car'
                            }, void 0, false, {
                                fileName: "src/components/Car/AddCar.js",
                                lineNumber: 414,
                                columnNumber: 11
                            }, undefined)
                        }, void 0, false, {
                            fileName: "src/components/Car/AddCar.js",
                            lineNumber: 413,
                            columnNumber: 9
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/components/Car/AddCar.js",
                    lineNumber: 183,
                    columnNumber: 7
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/components/Car/AddCar.js",
            lineNumber: 180,
            columnNumber: 5
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/Car/AddCar.js",
        lineNumber: 178,
        columnNumber: 5
    }, undefined);
};
_s(AddCar, "RgLke1eQXurWNGk6+FTaMp5ruaw=", false, function() {
    return [
        (0, _reactCookie.useCookies),
        (0, _reactRouter.useNavigate)
    ];
});
_c = AddCar;
exports.default = AddCar;
var _c;
$RefreshReg$(_c, "AddCar");

  $parcel$ReactRefreshHelpers$804e.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-router":"2jawN","react-cookie":"59JzK","react-toastify":"xSqu1","react-toastify/dist/ReactToastify.css":"gJP2Y","axios":"kooH4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"gJP2Y":[function() {},{}],"5kXS5":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$6296 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$6296.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$6296.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactRouter = require("react-router");
var _reactCookie = require("react-cookie");
var _reactResponsiveCarousel = require("react-responsive-carousel");
var _carouselMinCss = require("react-responsive-carousel/lib/styles/carousel.min.css");
var _s = $RefreshSig$();
const CarDetails = ()=>{
    _s();
    const { id } = (0, _reactRouter.useParams)(); // Assuming you are using react-router for routing
    const [carDetails, setCarDetails] = (0, _reactDefault.default).useState(null);
    const [cookies] = (0, _reactCookie.useCookies)([
        'accessToken'
    ]);
    const [modalImage, setModalImage] = (0, _react.useState)(null);
    (0, _react.useEffect)(()=>{
        // Fetch car details based on the car ID from the URL or state
        // Use axios to make a GET request to your API endpoint
        // Example: axios.get(`http://localhost:5000/car/${carId}`)
        // Handle the response and set the car details in state
        // Don't forget to handle errors
        // and loading states as well
        // Example: setLoading(false) after fetching data
        const fetchCarDetails = async ()=>{
            try {
                const response = await (0, _axiosDefault.default).get(`http://localhost:5000/car/getCar/${id}`, {
                    headers: {
                        'Authorization': `Bearer ${cookies.accessToken}`
                    },
                    withCredentials: true
                });
                if (response.status !== 200) throw new Error('Failed to fetch car details');
                else {
                    console.log(response.data);
                    setCarDetails(response.data);
                }
            // setCarDetails(response.data);
            } catch (error) {
                console.error("Error fetching car details:", error);
            }
        };
        fetchCarDetails();
    }, []);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "max-w-4xl mx-auto p-6 space-y-6",
        children: carDetails ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "space-y-4",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h1", {
                    className: "text-3xl font-bold",
                    children: [
                        carDetails.make,
                        " ",
                        carDetails.model,
                        " (",
                        carDetails.year,
                        ")"
                    ]
                }, void 0, true, {
                    fileName: "src/components/Car/CarDetails.js",
                    lineNumber: 51,
                    columnNumber: 15
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "max-w-4xl mx-auto",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "w-1/2",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactResponsiveCarousel.Carousel), {
                            showThumbs: false,
                            infiniteLoop: true,
                            autoPlay: true,
                            showStatus: false,
                            dynamicHeight: false,
                            emulateTouch: true,
                            className: "rounded-md",
                            children: carDetails.images?.map((img, idx)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "h-[400px]",
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        src: img,
                                        alt: `Car ${idx + 1}`,
                                        className: "object-fill w-full h-full rounded-md cursor-pointer",
                                        onClick: ()=>setModalImage(img)
                                    }, void 0, false, {
                                        fileName: "src/components/Car/CarDetails.js",
                                        lineNumber: 66,
                                        columnNumber: 21
                                    }, undefined)
                                }, idx, false, {
                                    fileName: "src/components/Car/CarDetails.js",
                                    lineNumber: 65,
                                    columnNumber: 21
                                }, undefined))
                        }, void 0, false, {
                            fileName: "src/components/Car/CarDetails.js",
                            lineNumber: 55,
                            columnNumber: 17
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/components/Car/CarDetails.js",
                        lineNumber: 54,
                        columnNumber: 13
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/components/Car/CarDetails.js",
                    lineNumber: 53,
                    columnNumber: 14
                }, undefined),
                modalImage && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50",
                    onClick: ()=>setModalImage(null),
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                        src: modalImage,
                        alt: "Full View",
                        className: "max-h-[90vh] max-w-[90vw] rounded-md shadow-lg"
                    }, void 0, false, {
                        fileName: "src/components/Car/CarDetails.js",
                        lineNumber: 86,
                        columnNumber: 15
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/components/Car/CarDetails.js",
                    lineNumber: 82,
                    columnNumber: 13
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                            children: "License Plate:"
                        }, void 0, false, {
                            fileName: "src/components/Car/CarDetails.js",
                            lineNumber: 91,
                            columnNumber: 18
                        }, undefined),
                        " ",
                        carDetails.licensePlate
                    ]
                }, void 0, true, {
                    fileName: "src/components/Car/CarDetails.js",
                    lineNumber: 91,
                    columnNumber: 15
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                            children: "Description:"
                        }, void 0, false, {
                            fileName: "src/components/Car/CarDetails.js",
                            lineNumber: 92,
                            columnNumber: 18
                        }, undefined),
                        " ",
                        carDetails.description
                    ]
                }, void 0, true, {
                    fileName: "src/components/Car/CarDetails.js",
                    lineNumber: 92,
                    columnNumber: 15
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                            children: "Price per Day:"
                        }, void 0, false, {
                            fileName: "src/components/Car/CarDetails.js",
                            lineNumber: 93,
                            columnNumber: 18
                        }, undefined),
                        " $",
                        carDetails.pricePerDay
                    ]
                }, void 0, true, {
                    fileName: "src/components/Car/CarDetails.js",
                    lineNumber: 93,
                    columnNumber: 15
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                            children: "Location:"
                        }, void 0, false, {
                            fileName: "src/components/Car/CarDetails.js",
                            lineNumber: 96,
                            columnNumber: 18
                        }, undefined),
                        " ",
                        carDetails.location.address,
                        ", ",
                        carDetails.location.city,
                        ", ",
                        carDetails.location.state,
                        ", ",
                        carDetails.location.zipCode
                    ]
                }, void 0, true, {
                    fileName: "src/components/Car/CarDetails.js",
                    lineNumber: 96,
                    columnNumber: 15
                }, undefined),
                carDetails.insurance && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                            children: "Insurance:"
                        }, void 0, false, {
                            fileName: "src/components/Car/CarDetails.js",
                            lineNumber: 101,
                            columnNumber: 19
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("ul", {
                            className: "list-disc ml-6",
                            children: Object.entries(carDetails.insurance).map(([key, value])=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                                            children: [
                                                key,
                                                ":"
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/components/Car/CarDetails.js",
                                            lineNumber: 104,
                                            columnNumber: 37
                                        }, undefined),
                                        " ",
                                        value.toString()
                                    ]
                                }, key, true, {
                                    fileName: "src/components/Car/CarDetails.js",
                                    lineNumber: 104,
                                    columnNumber: 23
                                }, undefined))
                        }, void 0, false, {
                            fileName: "src/components/Car/CarDetails.js",
                            lineNumber: 102,
                            columnNumber: 19
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/components/Car/CarDetails.js",
                    lineNumber: 100,
                    columnNumber: 17
                }, undefined),
                carDetails.availability?.length > 0 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                            children: "Availability:"
                        }, void 0, false, {
                            fileName: "src/components/Car/CarDetails.js",
                            lineNumber: 113,
                            columnNumber: 19
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("ul", {
                            className: "list-disc ml-6",
                            children: carDetails.availability.map((slot, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                    children: [
                                        "From ",
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                                            children: new Date(slot.startDate).toLocaleDateString()
                                        }, void 0, false, {
                                            fileName: "src/components/Car/CarDetails.js",
                                            lineNumber: 117,
                                            columnNumber: 30
                                        }, undefined),
                                        " at ",
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                                            children: slot.startTime
                                        }, void 0, false, {
                                            fileName: "src/components/Car/CarDetails.js",
                                            lineNumber: 117,
                                            columnNumber: 98
                                        }, undefined),
                                        " to ",
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                                            children: new Date(slot.endDate).toLocaleDateString()
                                        }, void 0, false, {
                                            fileName: "src/components/Car/CarDetails.js",
                                            lineNumber: 117,
                                            columnNumber: 135
                                        }, undefined),
                                        " at ",
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                                            children: slot.endTime
                                        }, void 0, false, {
                                            fileName: "src/components/Car/CarDetails.js",
                                            lineNumber: 117,
                                            columnNumber: 201
                                        }, undefined)
                                    ]
                                }, index, true, {
                                    fileName: "src/components/Car/CarDetails.js",
                                    lineNumber: 116,
                                    columnNumber: 23
                                }, undefined))
                        }, void 0, false, {
                            fileName: "src/components/Car/CarDetails.js",
                            lineNumber: 114,
                            columnNumber: 19
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/components/Car/CarDetails.js",
                    lineNumber: 112,
                    columnNumber: 17
                }, undefined),
                carDetails.reviews?.length > 0 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                            children: "Reviews:"
                        }, void 0, false, {
                            fileName: "src/components/Car/CarDetails.js",
                            lineNumber: 127,
                            columnNumber: 19
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("ul", {
                            className: "list-disc ml-6",
                            children: carDetails.reviews.map((review, idx)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                    children: [
                                        '"',
                                        review.comment,
                                        '" \u2014 ',
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("em", {
                                            children: [
                                                review.rating,
                                                "\u2605"
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/components/Car/CarDetails.js",
                                            lineNumber: 131,
                                            columnNumber: 46
                                        }, undefined)
                                    ]
                                }, idx, true, {
                                    fileName: "src/components/Car/CarDetails.js",
                                    lineNumber: 130,
                                    columnNumber: 23
                                }, undefined))
                        }, void 0, false, {
                            fileName: "src/components/Car/CarDetails.js",
                            lineNumber: 128,
                            columnNumber: 19
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/components/Car/CarDetails.js",
                    lineNumber: 126,
                    columnNumber: 17
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                    onClick: ()=>alert('Booking flow goes here'),
                    className: "mt-6 bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded",
                    children: "Book This Car"
                }, void 0, false, {
                    fileName: "src/components/Car/CarDetails.js",
                    lineNumber: 139,
                    columnNumber: 15
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/components/Car/CarDetails.js",
            lineNumber: 49,
            columnNumber: 13
        }, undefined) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "text-center text-lg",
            children: "Loading car details..."
        }, void 0, false, {
            fileName: "src/components/Car/CarDetails.js",
            lineNumber: 147,
            columnNumber: 13
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/Car/CarDetails.js",
        lineNumber: 47,
        columnNumber: 9
    }, undefined);
};
_s(CarDetails, "ZGiX1FQtFUIobYS/mCEUket2cTs=", false, function() {
    return [
        (0, _reactRouter.useParams),
        (0, _reactCookie.useCookies)
    ];
});
_c = CarDetails;
exports.default = CarDetails;
var _c;
$RefreshReg$(_c, "CarDetails");

  $parcel$ReactRefreshHelpers$6296.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","axios":"kooH4","react-router":"2jawN","react-cookie":"59JzK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi","react-responsive-carousel":"dgSZY","react-responsive-carousel/lib/styles/carousel.min.css":"2QDrW"}],"dgSZY":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Carousel", {
    enumerable: true,
    get: function get() {
        return _Carousel.default;
    }
});
Object.defineProperty(exports, "CarouselProps", {
    enumerable: true,
    get: function get() {
        return _types.CarouselProps;
    }
});
Object.defineProperty(exports, "Thumbs", {
    enumerable: true,
    get: function get() {
        return _Thumbs.default;
    }
});
var _Carousel = _interopRequireDefault(require("c33098d82c8ce142"));
var _types = require("bd9f417a95000df2");
var _Thumbs = _interopRequireDefault(require("937256a94cd477ae"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

},{"c33098d82c8ce142":"5bjjf","bd9f417a95000df2":"lwc1Y","937256a94cd477ae":"13Qyr"}],"5bjjf":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("e2611443e8028246"));
var _reactEasySwipe = _interopRequireDefault(require("c9f393140c21d47c"));
var _cssClasses = _interopRequireDefault(require("bfde4611b5f50ef5"));
var _Thumbs = _interopRequireDefault(require("b5b4d5c8066c3b98"));
var _document = _interopRequireDefault(require("3cc2caaea439419b"));
var _window = _interopRequireDefault(require("6b21b5fb06ba11ba"));
var _utils = require("f8d1320c11caaf95");
var _animations = require("25ba500bca28f86f");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
    };
    return cache;
}
function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) return obj;
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") _typeof = function _typeof(obj) {
        return typeof obj;
    };
    else _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    return _typeof(obj);
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
    };
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
var Carousel = /*#__PURE__*/ function(_React$Component) {
    _inherits(Carousel, _React$Component);
    var _super = _createSuper(Carousel);
    // @ts-ignore
    function Carousel(props) {
        var _this;
        _classCallCheck(this, Carousel);
        _this = _super.call(this, props);
        _defineProperty(_assertThisInitialized(_this), "thumbsRef", void 0);
        _defineProperty(_assertThisInitialized(_this), "carouselWrapperRef", void 0);
        _defineProperty(_assertThisInitialized(_this), "listRef", void 0);
        _defineProperty(_assertThisInitialized(_this), "itemsRef", void 0);
        _defineProperty(_assertThisInitialized(_this), "timer", void 0);
        _defineProperty(_assertThisInitialized(_this), "animationHandler", void 0);
        _defineProperty(_assertThisInitialized(_this), "setThumbsRef", function(node) {
            _this.thumbsRef = node;
        });
        _defineProperty(_assertThisInitialized(_this), "setCarouselWrapperRef", function(node) {
            _this.carouselWrapperRef = node;
        });
        _defineProperty(_assertThisInitialized(_this), "setListRef", function(node) {
            _this.listRef = node;
        });
        _defineProperty(_assertThisInitialized(_this), "setItemsRef", function(node, index) {
            if (!_this.itemsRef) _this.itemsRef = [];
            _this.itemsRef[index] = node;
        });
        _defineProperty(_assertThisInitialized(_this), "autoPlay", function() {
            if (_react.Children.count(_this.props.children) <= 1) return;
            _this.clearAutoPlay();
            if (!_this.props.autoPlay) return;
            _this.timer = setTimeout(function() {
                _this.increment();
            }, _this.props.interval);
        });
        _defineProperty(_assertThisInitialized(_this), "clearAutoPlay", function() {
            if (_this.timer) clearTimeout(_this.timer);
        });
        _defineProperty(_assertThisInitialized(_this), "resetAutoPlay", function() {
            _this.clearAutoPlay();
            _this.autoPlay();
        });
        _defineProperty(_assertThisInitialized(_this), "stopOnHover", function() {
            _this.setState({
                isMouseEntered: true
            }, _this.clearAutoPlay);
        });
        _defineProperty(_assertThisInitialized(_this), "startOnLeave", function() {
            _this.setState({
                isMouseEntered: false
            }, _this.autoPlay);
        });
        _defineProperty(_assertThisInitialized(_this), "isFocusWithinTheCarousel", function() {
            if (!_this.carouselWrapperRef) return false;
            if ((0, _document.default)().activeElement === _this.carouselWrapperRef || _this.carouselWrapperRef.contains((0, _document.default)().activeElement)) return true;
            return false;
        });
        _defineProperty(_assertThisInitialized(_this), "navigateWithKeyboard", function(e) {
            if (!_this.isFocusWithinTheCarousel()) return;
            var axis = _this.props.axis;
            var isHorizontal = axis === 'horizontal';
            var keyNames = {
                ArrowUp: 38,
                ArrowRight: 39,
                ArrowDown: 40,
                ArrowLeft: 37
            };
            var nextKey = isHorizontal ? keyNames.ArrowRight : keyNames.ArrowDown;
            var prevKey = isHorizontal ? keyNames.ArrowLeft : keyNames.ArrowUp;
            if (nextKey === e.keyCode) _this.increment();
            else if (prevKey === e.keyCode) _this.decrement();
        });
        _defineProperty(_assertThisInitialized(_this), "updateSizes", function() {
            if (!_this.state.initialized || !_this.itemsRef || _this.itemsRef.length === 0) return;
            var isHorizontal = _this.props.axis === 'horizontal';
            var firstItem = _this.itemsRef[0];
            if (!firstItem) return;
            var itemSize = isHorizontal ? firstItem.clientWidth : firstItem.clientHeight;
            _this.setState({
                itemSize: itemSize
            });
            if (_this.thumbsRef) _this.thumbsRef.updateSizes();
        });
        _defineProperty(_assertThisInitialized(_this), "setMountState", function() {
            _this.setState({
                hasMount: true
            });
            _this.updateSizes();
        });
        _defineProperty(_assertThisInitialized(_this), "handleClickItem", function(index, item) {
            if (_react.Children.count(_this.props.children) === 0) return;
            if (_this.state.cancelClick) {
                _this.setState({
                    cancelClick: false
                });
                return;
            }
            _this.props.onClickItem(index, item);
            if (index !== _this.state.selectedItem) _this.setState({
                selectedItem: index
            });
        });
        _defineProperty(_assertThisInitialized(_this), "handleOnChange", function(index, item) {
            if (_react.Children.count(_this.props.children) <= 1) return;
            _this.props.onChange(index, item);
        });
        _defineProperty(_assertThisInitialized(_this), "handleClickThumb", function(index, item) {
            _this.props.onClickThumb(index, item);
            _this.moveTo(index);
        });
        _defineProperty(_assertThisInitialized(_this), "onSwipeStart", function(event) {
            _this.setState({
                swiping: true
            });
            _this.props.onSwipeStart(event);
        });
        _defineProperty(_assertThisInitialized(_this), "onSwipeEnd", function(event) {
            _this.setState({
                swiping: false,
                cancelClick: false,
                swipeMovementStarted: false
            });
            _this.props.onSwipeEnd(event);
            _this.clearAutoPlay();
            if (_this.state.autoPlay) _this.autoPlay();
        });
        _defineProperty(_assertThisInitialized(_this), "onSwipeMove", function(delta, event) {
            _this.props.onSwipeMove(event);
            var animationHandlerResponse = _this.props.swipeAnimationHandler(delta, _this.props, _this.state, _this.setState.bind(_assertThisInitialized(_this)));
            _this.setState(_objectSpread({}, animationHandlerResponse)); // If we have not moved, we should have an empty object returned
            // Return false to allow scrolling when not swiping
            return !!Object.keys(animationHandlerResponse).length;
        });
        _defineProperty(_assertThisInitialized(_this), "decrement", function() {
            var positions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
            _this.moveTo(_this.state.selectedItem - (typeof positions === 'number' ? positions : 1));
        });
        _defineProperty(_assertThisInitialized(_this), "increment", function() {
            var positions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
            _this.moveTo(_this.state.selectedItem + (typeof positions === 'number' ? positions : 1));
        });
        _defineProperty(_assertThisInitialized(_this), "moveTo", function(position) {
            if (typeof position !== 'number') return;
            var lastPosition = _react.Children.count(_this.props.children) - 1;
            if (position < 0) position = _this.props.infiniteLoop ? lastPosition : 0;
            if (position > lastPosition) position = _this.props.infiniteLoop ? 0 : lastPosition;
            _this.selectItem({
                // if it's not a slider, we don't need to set position here
                selectedItem: position
            }); // don't reset auto play when stop on hover is enabled, doing so will trigger a call to auto play more than once
            // and will result in the interval function not being cleared correctly.
            if (_this.state.autoPlay && _this.state.isMouseEntered === false) _this.resetAutoPlay();
        });
        _defineProperty(_assertThisInitialized(_this), "onClickNext", function() {
            _this.increment(1);
        });
        _defineProperty(_assertThisInitialized(_this), "onClickPrev", function() {
            _this.decrement(1);
        });
        _defineProperty(_assertThisInitialized(_this), "onSwipeForward", function() {
            _this.increment(1);
            if (_this.props.emulateTouch) _this.setState({
                cancelClick: true
            });
        });
        _defineProperty(_assertThisInitialized(_this), "onSwipeBackwards", function() {
            _this.decrement(1);
            if (_this.props.emulateTouch) _this.setState({
                cancelClick: true
            });
        });
        _defineProperty(_assertThisInitialized(_this), "changeItem", function(newIndex) {
            return function(e) {
                if (!(0, _utils.isKeyboardEvent)(e) || e.key === 'Enter') _this.moveTo(newIndex);
            };
        });
        _defineProperty(_assertThisInitialized(_this), "selectItem", function(state) {
            // Merge in the new state while updating updating previous item
            _this.setState(_objectSpread({
                previousItem: _this.state.selectedItem
            }, state), function() {
                // Run animation handler and update styles based on it
                _this.setState(_this.animationHandler(_this.props, _this.state));
            });
            _this.handleOnChange(state.selectedItem, _react.Children.toArray(_this.props.children)[state.selectedItem]);
        });
        _defineProperty(_assertThisInitialized(_this), "getInitialImage", function() {
            var selectedItem = _this.props.selectedItem;
            var item = _this.itemsRef && _this.itemsRef[selectedItem];
            var images = item && item.getElementsByTagName('img') || [];
            return images[0];
        });
        _defineProperty(_assertThisInitialized(_this), "getVariableItemHeight", function(position) {
            var item = _this.itemsRef && _this.itemsRef[position];
            if (_this.state.hasMount && item && item.children.length) {
                var slideImages = item.children[0].getElementsByTagName('img') || [];
                if (slideImages.length > 0) {
                    var image = slideImages[0];
                    if (!image.complete) {
                        // if the image is still loading, the size won't be available so we trigger a new render after it's done
                        var onImageLoad = function onImageLoad() {
                            _this.forceUpdate();
                            image.removeEventListener('load', onImageLoad);
                        };
                        image.addEventListener('load', onImageLoad);
                    }
                } // try to get img first, if img not there find first display tag
                var displayItem = slideImages[0] || item.children[0];
                var height = displayItem.clientHeight;
                return height > 0 ? height : null;
            }
            return null;
        });
        var initState = {
            initialized: false,
            previousItem: props.selectedItem,
            selectedItem: props.selectedItem,
            hasMount: false,
            isMouseEntered: false,
            autoPlay: props.autoPlay,
            swiping: false,
            swipeMovementStarted: false,
            cancelClick: false,
            itemSize: 1,
            itemListStyle: {},
            slideStyle: {},
            selectedStyle: {},
            prevStyle: {}
        };
        _this.animationHandler = typeof props.animationHandler === 'function' && props.animationHandler || props.animationHandler === 'fade' && _animations.fadeAnimationHandler || _animations.slideAnimationHandler;
        _this.state = _objectSpread(_objectSpread({}, initState), _this.animationHandler(props, initState));
        return _this;
    }
    _createClass(Carousel, [
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                if (!this.props.children) return;
                this.setupCarousel();
            }
        },
        {
            key: "componentDidUpdate",
            value: function componentDidUpdate(prevProps, prevState) {
                if (!prevProps.children && this.props.children && !this.state.initialized) this.setupCarousel();
                if (!prevProps.autoFocus && this.props.autoFocus) this.forceFocus();
                if (prevState.swiping && !this.state.swiping) // We stopped swiping, ensure we are heading to the new/current slide and not stuck
                this.setState(_objectSpread({}, this.props.stopSwipingHandler(this.props, this.state)));
                if (prevProps.selectedItem !== this.props.selectedItem || prevProps.centerMode !== this.props.centerMode) {
                    this.updateSizes();
                    this.moveTo(this.props.selectedItem);
                }
                if (prevProps.autoPlay !== this.props.autoPlay) {
                    if (this.props.autoPlay) this.setupAutoPlay();
                    else this.destroyAutoPlay();
                    this.setState({
                        autoPlay: this.props.autoPlay
                    });
                }
            }
        },
        {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.destroyCarousel();
            }
        },
        {
            key: "setupCarousel",
            value: function setupCarousel() {
                var _this2 = this;
                this.bindEvents();
                if (this.state.autoPlay && _react.Children.count(this.props.children) > 1) this.setupAutoPlay();
                if (this.props.autoFocus) this.forceFocus();
                this.setState({
                    initialized: true
                }, function() {
                    var initialImage = _this2.getInitialImage();
                    if (initialImage && !initialImage.complete) // if it's a carousel of images, we set the mount state after the first image is loaded
                    initialImage.addEventListener('load', _this2.setMountState);
                    else _this2.setMountState();
                });
            }
        },
        {
            key: "destroyCarousel",
            value: function destroyCarousel() {
                if (this.state.initialized) {
                    this.unbindEvents();
                    this.destroyAutoPlay();
                }
            }
        },
        {
            key: "setupAutoPlay",
            value: function setupAutoPlay() {
                this.autoPlay();
                var carouselWrapper = this.carouselWrapperRef;
                if (this.props.stopOnHover && carouselWrapper) {
                    carouselWrapper.addEventListener('mouseenter', this.stopOnHover);
                    carouselWrapper.addEventListener('mouseleave', this.startOnLeave);
                }
            }
        },
        {
            key: "destroyAutoPlay",
            value: function destroyAutoPlay() {
                this.clearAutoPlay();
                var carouselWrapper = this.carouselWrapperRef;
                if (this.props.stopOnHover && carouselWrapper) {
                    carouselWrapper.removeEventListener('mouseenter', this.stopOnHover);
                    carouselWrapper.removeEventListener('mouseleave', this.startOnLeave);
                }
            }
        },
        {
            key: "bindEvents",
            value: function bindEvents() {
                // as the widths are calculated, we need to resize
                // the carousel when the window is resized
                (0, _window.default)().addEventListener('resize', this.updateSizes); // issue #2 - image loading smaller
                (0, _window.default)().addEventListener('DOMContentLoaded', this.updateSizes);
                if (this.props.useKeyboardArrows) (0, _document.default)().addEventListener('keydown', this.navigateWithKeyboard);
            }
        },
        {
            key: "unbindEvents",
            value: function unbindEvents() {
                // removing listeners
                (0, _window.default)().removeEventListener('resize', this.updateSizes);
                (0, _window.default)().removeEventListener('DOMContentLoaded', this.updateSizes);
                var initialImage = this.getInitialImage();
                if (initialImage) initialImage.removeEventListener('load', this.setMountState);
                if (this.props.useKeyboardArrows) (0, _document.default)().removeEventListener('keydown', this.navigateWithKeyboard);
            }
        },
        {
            key: "forceFocus",
            value: function forceFocus() {
                var _this$carouselWrapper;
                (_this$carouselWrapper = this.carouselWrapperRef) === null || _this$carouselWrapper === void 0 || _this$carouselWrapper.focus();
            }
        },
        {
            key: "renderItems",
            value: function renderItems(isClone) {
                var _this3 = this;
                if (!this.props.children) return [];
                return _react.Children.map(this.props.children, function(item, index) {
                    var isSelected = index === _this3.state.selectedItem;
                    var isPrevious = index === _this3.state.previousItem;
                    var style = isSelected && _this3.state.selectedStyle || isPrevious && _this3.state.prevStyle || _this3.state.slideStyle || {};
                    if (_this3.props.centerMode && _this3.props.axis === 'horizontal') style = _objectSpread(_objectSpread({}, style), {}, {
                        minWidth: _this3.props.centerSlidePercentage + '%'
                    });
                    if (_this3.state.swiping && _this3.state.swipeMovementStarted) style = _objectSpread(_objectSpread({}, style), {}, {
                        pointerEvents: 'none'
                    });
                    var slideProps = {
                        ref: function ref(e) {
                            return _this3.setItemsRef(e, index);
                        },
                        key: 'itemKey' + index + (isClone ? 'clone' : ''),
                        className: _cssClasses.default.ITEM(true, index === _this3.state.selectedItem, index === _this3.state.previousItem),
                        onClick: _this3.handleClickItem.bind(_this3, index, item),
                        style: style
                    };
                    return /*#__PURE__*/ _react.default.createElement("li", slideProps, _this3.props.renderItem(item, {
                        isSelected: index === _this3.state.selectedItem,
                        isPrevious: index === _this3.state.previousItem
                    }));
                });
            }
        },
        {
            key: "renderControls",
            value: function renderControls() {
                var _this4 = this;
                var _this$props = this.props, showIndicators = _this$props.showIndicators, labels = _this$props.labels, renderIndicator = _this$props.renderIndicator, children = _this$props.children;
                if (!showIndicators) return null;
                return /*#__PURE__*/ _react.default.createElement("ul", {
                    className: "control-dots"
                }, _react.Children.map(children, function(_, index) {
                    return renderIndicator && renderIndicator(_this4.changeItem(index), index === _this4.state.selectedItem, index, labels.item);
                }));
            }
        },
        {
            key: "renderStatus",
            value: function renderStatus() {
                if (!this.props.showStatus) return null;
                return /*#__PURE__*/ _react.default.createElement("p", {
                    className: "carousel-status"
                }, this.props.statusFormatter(this.state.selectedItem + 1, _react.Children.count(this.props.children)));
            }
        },
        {
            key: "renderThumbs",
            value: function renderThumbs() {
                if (!this.props.showThumbs || !this.props.children || _react.Children.count(this.props.children) === 0) return null;
                return /*#__PURE__*/ _react.default.createElement(_Thumbs.default, {
                    ref: this.setThumbsRef,
                    onSelectItem: this.handleClickThumb,
                    selectedItem: this.state.selectedItem,
                    transitionTime: this.props.transitionTime,
                    thumbWidth: this.props.thumbWidth,
                    labels: this.props.labels,
                    emulateTouch: this.props.emulateTouch
                }, this.props.renderThumbs(this.props.children));
            }
        },
        {
            key: "render",
            value: function render() {
                var _this5 = this;
                if (!this.props.children || _react.Children.count(this.props.children) === 0) return null;
                var isSwipeable = this.props.swipeable && _react.Children.count(this.props.children) > 1;
                var isHorizontal = this.props.axis === 'horizontal';
                var canShowArrows = this.props.showArrows && _react.Children.count(this.props.children) > 1; // show left arrow?
                var hasPrev = canShowArrows && (this.state.selectedItem > 0 || this.props.infiniteLoop) || false; // show right arrow
                var hasNext = canShowArrows && (this.state.selectedItem < _react.Children.count(this.props.children) - 1 || this.props.infiniteLoop) || false;
                var itemsClone = this.renderItems(true);
                var firstClone = itemsClone.shift();
                var lastClone = itemsClone.pop();
                var swiperProps = {
                    className: _cssClasses.default.SLIDER(true, this.state.swiping),
                    onSwipeMove: this.onSwipeMove,
                    onSwipeStart: this.onSwipeStart,
                    onSwipeEnd: this.onSwipeEnd,
                    style: this.state.itemListStyle,
                    tolerance: this.props.swipeScrollTolerance
                };
                var containerStyles = {};
                if (isHorizontal) {
                    swiperProps.onSwipeLeft = this.onSwipeForward;
                    swiperProps.onSwipeRight = this.onSwipeBackwards;
                    if (this.props.dynamicHeight) {
                        var itemHeight = this.getVariableItemHeight(this.state.selectedItem); // swiperProps.style.height = itemHeight || 'auto';
                        containerStyles.height = itemHeight || 'auto';
                    }
                } else {
                    swiperProps.onSwipeUp = this.props.verticalSwipe === 'natural' ? this.onSwipeBackwards : this.onSwipeForward;
                    swiperProps.onSwipeDown = this.props.verticalSwipe === 'natural' ? this.onSwipeForward : this.onSwipeBackwards;
                    swiperProps.style = _objectSpread(_objectSpread({}, swiperProps.style), {}, {
                        height: this.state.itemSize
                    });
                    containerStyles.height = this.state.itemSize;
                }
                return /*#__PURE__*/ _react.default.createElement("div", {
                    "aria-label": this.props.ariaLabel,
                    className: _cssClasses.default.ROOT(this.props.className),
                    ref: this.setCarouselWrapperRef,
                    tabIndex: this.props.useKeyboardArrows ? 0 : undefined
                }, /*#__PURE__*/ _react.default.createElement("div", {
                    className: _cssClasses.default.CAROUSEL(true),
                    style: {
                        width: this.props.width
                    }
                }, this.renderControls(), this.props.renderArrowPrev(this.onClickPrev, hasPrev, this.props.labels.leftArrow), /*#__PURE__*/ _react.default.createElement("div", {
                    className: _cssClasses.default.WRAPPER(true, this.props.axis),
                    style: containerStyles
                }, isSwipeable ? /*#__PURE__*/ _react.default.createElement(_reactEasySwipe.default, _extends({
                    tagName: "ul",
                    innerRef: this.setListRef
                }, swiperProps, {
                    allowMouseEvents: this.props.emulateTouch
                }), this.props.infiniteLoop && lastClone, this.renderItems(), this.props.infiniteLoop && firstClone) : /*#__PURE__*/ _react.default.createElement("ul", {
                    className: _cssClasses.default.SLIDER(true, this.state.swiping),
                    ref: function ref(node) {
                        return _this5.setListRef(node);
                    },
                    style: this.state.itemListStyle || {}
                }, this.props.infiniteLoop && lastClone, this.renderItems(), this.props.infiniteLoop && firstClone)), this.props.renderArrowNext(this.onClickNext, hasNext, this.props.labels.rightArrow), this.renderStatus()), this.renderThumbs());
            }
        }
    ]);
    return Carousel;
}(_react.default.Component);
exports.default = Carousel;
_defineProperty(Carousel, "displayName", 'Carousel');
_defineProperty(Carousel, "defaultProps", {
    ariaLabel: undefined,
    axis: 'horizontal',
    centerSlidePercentage: 80,
    interval: 3000,
    labels: {
        leftArrow: 'previous slide / item',
        rightArrow: 'next slide / item',
        item: 'slide item'
    },
    onClickItem: _utils.noop,
    onClickThumb: _utils.noop,
    onChange: _utils.noop,
    onSwipeStart: function onSwipeStart() {},
    onSwipeEnd: function onSwipeEnd() {},
    onSwipeMove: function onSwipeMove() {
        return false;
    },
    preventMovementUntilSwipeScrollTolerance: false,
    renderArrowPrev: function renderArrowPrev(onClickHandler, hasPrev, label) {
        return /*#__PURE__*/ _react.default.createElement("button", {
            type: "button",
            "aria-label": label,
            className: _cssClasses.default.ARROW_PREV(!hasPrev),
            onClick: onClickHandler
        });
    },
    renderArrowNext: function renderArrowNext(onClickHandler, hasNext, label) {
        return /*#__PURE__*/ _react.default.createElement("button", {
            type: "button",
            "aria-label": label,
            className: _cssClasses.default.ARROW_NEXT(!hasNext),
            onClick: onClickHandler
        });
    },
    renderIndicator: function renderIndicator(onClickHandler, isSelected, index, label) {
        return /*#__PURE__*/ _react.default.createElement("li", {
            className: _cssClasses.default.DOT(isSelected),
            onClick: onClickHandler,
            onKeyDown: onClickHandler,
            value: index,
            key: index,
            role: "button",
            tabIndex: 0,
            "aria-label": "".concat(label, " ").concat(index + 1)
        });
    },
    renderItem: function renderItem(item) {
        return item;
    },
    renderThumbs: function renderThumbs(children) {
        var images = _react.Children.map(children, function(item) {
            var img = item; // if the item is not an image, try to find the first image in the item's children.
            if (item.type !== 'img') img = _react.Children.toArray(item.props.children).find(function(children) {
                return children.type === 'img';
            });
            if (!img) return undefined;
            return img;
        });
        if (images.filter(function(image) {
            return image;
        }).length === 0) {
            console.warn("No images found! Can't build the thumb list without images. If you don't need thumbs, set showThumbs={false} in the Carousel. Note that it's not possible to get images rendered inside custom components. More info at https://github.com/leandrowd/react-responsive-carousel/blob/master/TROUBLESHOOTING.md");
            return [];
        }
        return images;
    },
    statusFormatter: _utils.defaultStatusFormatter,
    selectedItem: 0,
    showArrows: true,
    showIndicators: true,
    showStatus: true,
    showThumbs: true,
    stopOnHover: true,
    swipeScrollTolerance: 5,
    swipeable: true,
    transitionTime: 350,
    verticalSwipe: 'standard',
    width: '100%',
    animationHandler: 'slide',
    swipeAnimationHandler: _animations.slideSwipeAnimationHandler,
    stopSwipingHandler: _animations.slideStopSwipingHandler
});

},{"e2611443e8028246":"jMk1U","c9f393140c21d47c":"3l1Ex","bfde4611b5f50ef5":"hfnmI","b5b4d5c8066c3b98":"13Qyr","3cc2caaea439419b":"8nAVc","6b21b5fb06ba11ba":"cJRTn","f8d1320c11caaf95":"hdLcY","25ba500bca28f86f":"9Kkqx"}],"3l1Ex":[function(require,module,exports,__globalThis) {
(function(global, factory) {
    if (typeof define === "function" && define.amd) define([
        'exports',
        './react-swipe'
    ], factory);
    else {
        var mod;
        factory(exports, require("dbf559a38a8c3be0"));
    }
})(this, function(exports1, _reactSwipe) {
    'use strict';
    Object.defineProperty(exports1, "__esModule", {
        value: true
    });
    var _reactSwipe2 = _interopRequireDefault(_reactSwipe);
    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }
    exports1.default = _reactSwipe2.default;
});

},{"dbf559a38a8c3be0":"b2UHD"}],"b2UHD":[function(require,module,exports,__globalThis) {
(function(global, factory) {
    if (typeof define === "function" && define.amd) define([
        'exports',
        'react',
        'prop-types'
    ], factory);
    else {
        var mod;
        factory(exports, require("f4303922a055a6cd"), require("a45b0606b32d2698"));
    }
})(this, function(exports1, _react, _propTypes) {
    'use strict';
    Object.defineProperty(exports1, "__esModule", {
        value: true
    });
    exports1.setHasSupportToCaptureOption = setHasSupportToCaptureOption;
    var _react2 = _interopRequireDefault(_react);
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }
    var _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    function _objectWithoutProperties(obj, keys) {
        var target = {};
        for(var i in obj){
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
        }
        return target;
    }
    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    var _createClass = function() {
        function defineProperties(target, props) {
            for(var i = 0; i < props.length; i++){
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }();
    function _possibleConstructorReturn(self, call) {
        if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var supportsCaptureOption = false;
    function setHasSupportToCaptureOption(hasSupport) {
        supportsCaptureOption = hasSupport;
    }
    try {
        addEventListener('test', null, Object.defineProperty({}, 'capture', {
            get: function get() {
                setHasSupportToCaptureOption(true);
            }
        }));
    } catch (e) {} // eslint-disable-line no-empty
    function getSafeEventHandlerOpts() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
            capture: true
        };
        return supportsCaptureOption ? options : options.capture;
    }
    /**
   * [getPosition returns a position element that works for mouse or touch events]
   * @param  {[Event]} event [the received event]
   * @return {[Object]}      [x and y coords]
   */ function getPosition(event) {
        if ('touches' in event) {
            var _event$touches$ = event.touches[0], pageX = _event$touches$.pageX, pageY = _event$touches$.pageY;
            return {
                x: pageX,
                y: pageY
            };
        }
        var screenX = event.screenX, screenY = event.screenY;
        return {
            x: screenX,
            y: screenY
        };
    }
    var ReactSwipe = function(_Component) {
        _inherits(ReactSwipe, _Component);
        function ReactSwipe() {
            var _ref;
            _classCallCheck(this, ReactSwipe);
            for(var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
            var _this = _possibleConstructorReturn(this, (_ref = ReactSwipe.__proto__ || Object.getPrototypeOf(ReactSwipe)).call.apply(_ref, [
                this
            ].concat(args)));
            _this._handleSwipeStart = _this._handleSwipeStart.bind(_this);
            _this._handleSwipeMove = _this._handleSwipeMove.bind(_this);
            _this._handleSwipeEnd = _this._handleSwipeEnd.bind(_this);
            _this._onMouseDown = _this._onMouseDown.bind(_this);
            _this._onMouseMove = _this._onMouseMove.bind(_this);
            _this._onMouseUp = _this._onMouseUp.bind(_this);
            _this._setSwiperRef = _this._setSwiperRef.bind(_this);
            return _this;
        }
        _createClass(ReactSwipe, [
            {
                key: 'componentDidMount',
                value: function componentDidMount() {
                    if (this.swiper) this.swiper.addEventListener('touchmove', this._handleSwipeMove, getSafeEventHandlerOpts({
                        capture: true,
                        passive: false
                    }));
                }
            },
            {
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                    if (this.swiper) this.swiper.removeEventListener('touchmove', this._handleSwipeMove, getSafeEventHandlerOpts({
                        capture: true,
                        passive: false
                    }));
                }
            },
            {
                key: '_onMouseDown',
                value: function _onMouseDown(event) {
                    if (!this.props.allowMouseEvents) return;
                    this.mouseDown = true;
                    document.addEventListener('mouseup', this._onMouseUp);
                    document.addEventListener('mousemove', this._onMouseMove);
                    this._handleSwipeStart(event);
                }
            },
            {
                key: '_onMouseMove',
                value: function _onMouseMove(event) {
                    if (!this.mouseDown) return;
                    this._handleSwipeMove(event);
                }
            },
            {
                key: '_onMouseUp',
                value: function _onMouseUp(event) {
                    this.mouseDown = false;
                    document.removeEventListener('mouseup', this._onMouseUp);
                    document.removeEventListener('mousemove', this._onMouseMove);
                    this._handleSwipeEnd(event);
                }
            },
            {
                key: '_handleSwipeStart',
                value: function _handleSwipeStart(event) {
                    var _getPosition = getPosition(event), x = _getPosition.x, y = _getPosition.y;
                    this.moveStart = {
                        x: x,
                        y: y
                    };
                    this.props.onSwipeStart(event);
                }
            },
            {
                key: '_handleSwipeMove',
                value: function _handleSwipeMove(event) {
                    if (!this.moveStart) return;
                    var _getPosition2 = getPosition(event), x = _getPosition2.x, y = _getPosition2.y;
                    var deltaX = x - this.moveStart.x;
                    var deltaY = y - this.moveStart.y;
                    this.moving = true;
                    // handling the responsability of cancelling the scroll to
                    // the component handling the event
                    var shouldPreventDefault = this.props.onSwipeMove({
                        x: deltaX,
                        y: deltaY
                    }, event);
                    if (shouldPreventDefault && event.cancelable) event.preventDefault();
                    this.movePosition = {
                        deltaX: deltaX,
                        deltaY: deltaY
                    };
                }
            },
            {
                key: '_handleSwipeEnd',
                value: function _handleSwipeEnd(event) {
                    this.props.onSwipeEnd(event);
                    var tolerance = this.props.tolerance;
                    if (this.moving && this.movePosition) {
                        if (this.movePosition.deltaX < -tolerance) this.props.onSwipeLeft(1, event);
                        else if (this.movePosition.deltaX > tolerance) this.props.onSwipeRight(1, event);
                        if (this.movePosition.deltaY < -tolerance) this.props.onSwipeUp(1, event);
                        else if (this.movePosition.deltaY > tolerance) this.props.onSwipeDown(1, event);
                    }
                    this.moveStart = null;
                    this.moving = false;
                    this.movePosition = null;
                }
            },
            {
                key: '_setSwiperRef',
                value: function _setSwiperRef(node) {
                    this.swiper = node;
                    this.props.innerRef(node);
                }
            },
            {
                key: 'render',
                value: function render() {
                    var _props = this.props, tagName = _props.tagName, className = _props.className, style = _props.style, children = _props.children, allowMouseEvents = _props.allowMouseEvents, onSwipeUp = _props.onSwipeUp, onSwipeDown = _props.onSwipeDown, onSwipeLeft = _props.onSwipeLeft, onSwipeRight = _props.onSwipeRight, onSwipeStart = _props.onSwipeStart, onSwipeMove = _props.onSwipeMove, onSwipeEnd = _props.onSwipeEnd, innerRef = _props.innerRef, tolerance = _props.tolerance, props = _objectWithoutProperties(_props, [
                        'tagName',
                        'className',
                        'style',
                        'children',
                        'allowMouseEvents',
                        'onSwipeUp',
                        'onSwipeDown',
                        'onSwipeLeft',
                        'onSwipeRight',
                        'onSwipeStart',
                        'onSwipeMove',
                        'onSwipeEnd',
                        'innerRef',
                        'tolerance'
                    ]);
                    return _react2.default.createElement(this.props.tagName, _extends({
                        ref: this._setSwiperRef,
                        onMouseDown: this._onMouseDown,
                        onTouchStart: this._handleSwipeStart,
                        onTouchEnd: this._handleSwipeEnd,
                        className: className,
                        style: style
                    }, props), children);
                }
            }
        ]);
        return ReactSwipe;
    }(_react.Component);
    ReactSwipe.displayName = 'ReactSwipe';
    ReactSwipe.propTypes = {
        tagName: _propTypes2.default.string,
        className: _propTypes2.default.string,
        style: _propTypes2.default.object,
        children: _propTypes2.default.node,
        allowMouseEvents: _propTypes2.default.bool,
        onSwipeUp: _propTypes2.default.func,
        onSwipeDown: _propTypes2.default.func,
        onSwipeLeft: _propTypes2.default.func,
        onSwipeRight: _propTypes2.default.func,
        onSwipeStart: _propTypes2.default.func,
        onSwipeMove: _propTypes2.default.func,
        onSwipeEnd: _propTypes2.default.func,
        innerRef: _propTypes2.default.func,
        tolerance: _propTypes2.default.number.isRequired
    };
    ReactSwipe.defaultProps = {
        tagName: 'div',
        allowMouseEvents: false,
        onSwipeUp: function onSwipeUp() {},
        onSwipeDown: function onSwipeDown() {},
        onSwipeLeft: function onSwipeLeft() {},
        onSwipeRight: function onSwipeRight() {},
        onSwipeStart: function onSwipeStart() {},
        onSwipeMove: function onSwipeMove() {},
        onSwipeEnd: function onSwipeEnd() {},
        innerRef: function innerRef() {},
        tolerance: 0
    };
    exports1.default = ReactSwipe;
});

},{"f4303922a055a6cd":"jMk1U","a45b0606b32d2698":"GNqOQ"}],"GNqOQ":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ReactIs = require("96e34ae03f5a2631");
// By explicitly using `prop-types` you are opting into new development behavior.
// http://fb.me/prop-types-in-prod
var throwOnDirectAccess = true;
module.exports = require("cb216452e2171041")(ReactIs.isElement, throwOnDirectAccess);

},{"96e34ae03f5a2631":"59S9B","cb216452e2171041":"32b0h"}],"59S9B":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("2255125a8e8b1051");

},{"2255125a8e8b1051":"dFjTC"}],"dFjTC":[function(require,module,exports,__globalThis) {
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
    function isValidElementType(type) {
        return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
    }
    function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_ASYNC_MODE_TYPE:
                        case REACT_CONCURRENT_MODE_TYPE:
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    } // AsyncMode is deprecated along with isAsyncMode
    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }
    function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"32b0h":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactIs = require("c437388b089702c3");
var assign = require("c067a60101d8520c");
var ReactPropTypesSecret = require("74a0f89a70b9f3c2");
var has = require("18441b11647bc78");
var checkPropTypes = require("bec3f6ff89f0b072");
var printWarning = function() {};
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
function emptyFunctionThatReturnsNull() {
    return null;
}
module.exports = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
    /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */ function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') return iteratorFn;
    }
    /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */ var ANONYMOUS = '<<anonymous>>';
    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bigint: createPrimitiveTypeChecker('bigint'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
    };
    /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */ /*eslint-disable no-self-compare*/ function is(x, y) {
        // SameValue algorithm
        if (x === y) // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
        else // Step 6.a: NaN == NaN
        return x !== x && y !== y;
    }
    /*eslint-enable no-self-compare*/ /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */ function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === 'object' ? data : {};
        this.stack = '';
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
        var manualPropTypeCallCache = {};
        var manualPropTypeWarningCount = 0;
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                    // New behavior only for users of `prop-types` package
                    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                    err.name = 'Invariant Violation';
                    throw err;
                } else if (typeof console !== 'undefined') {
                    // Old behavior for people using React.PropTypes
                    var cacheKey = componentName + ':' + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                        printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
                        manualPropTypeCallCache[cacheKey] = true;
                        manualPropTypeWarningCount++;
                    }
                }
            }
            if (props[propName] == null) {
                if (isRequired) {
                    if (props[propName] === null) return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
                    return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
                }
                return null;
            } else return validate(props, propName, componentName, location, propFullName);
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
                    expectedType: expectedType
                });
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
            }
            for(var i = 0; i < propValue.length; i++){
                var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
            {
                if (arguments.length > 1) printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
                else printWarning('Invalid argument supplied to oneOf, expected an array.');
            }
            return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for(var i = 0; i < expectedValues.length; i++){
                if (is(propValue, expectedValues[i])) return null;
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === 'symbol') return String(value);
                return value;
            });
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
            for(var key in propValue)if (has(propValue, key)) {
                var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
            printWarning('Invalid argument supplied to oneOfType, expected an instance of array.');
            return emptyFunctionThatReturnsNull;
        }
        for(var i = 0; i < arrayOfTypeCheckers.length; i++){
            var checker = arrayOfTypeCheckers[i];
            if (typeof checker !== 'function') {
                printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
                return emptyFunctionThatReturnsNull;
            }
        }
        function validate(props, propName, componentName, location, propFullName) {
            var expectedTypes = [];
            for(var i = 0; i < arrayOfTypeCheckers.length; i++){
                var checker = arrayOfTypeCheckers[i];
                var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                if (checkerResult == null) return null;
                if (checkerResult.data && has(checkerResult.data, 'expectedType')) expectedTypes.push(checkerResult.data.expectedType);
            }
            var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
    }
    function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            for(var key in shapeTypes){
                var checker = shapeTypes[key];
                if (typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            // We need to check all keys in case some are required but missing from props.
            var allKeys = assign({}, props[propName], shapeTypes);
            for(var key in allKeys){
                var checker = shapeTypes[key];
                if (has(shapeTypes, key) && typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                if (!checker) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
        switch(typeof propValue){
            case 'number':
            case 'string':
            case 'undefined':
                return true;
            case 'boolean':
                return !propValue;
            case 'object':
                if (Array.isArray(propValue)) return propValue.every(isNode);
                if (propValue === null || isValidElement(propValue)) return true;
                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) while(!(step = iterator.next()).done){
                        if (!isNode(step.value)) return false;
                    }
                    else // Iterator will provide entry [k,v] tuples rather than values.
                    while(!(step = iterator.next()).done){
                        var entry = step.value;
                        if (entry) {
                            if (!isNode(entry[1])) return false;
                        }
                    }
                } else return false;
                return true;
            default:
                return false;
        }
    }
    function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === 'symbol') return true;
        // falsy value can't be a Symbol
        if (!propValue) return false;
        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue['@@toStringTag'] === 'Symbol') return true;
        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === 'function' && propValue instanceof Symbol) return true;
        return false;
    }
    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) return 'array';
        if (propValue instanceof RegExp) // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return 'object';
        if (isSymbol(propType, propValue)) return 'symbol';
        return propType;
    }
    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) return '' + propValue;
        var propType = getPropType(propValue);
        if (propType === 'object') {
            if (propValue instanceof Date) return 'date';
            else if (propValue instanceof RegExp) return 'regexp';
        }
        return propType;
    }
    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch(type){
            case 'array':
            case 'object':
                return 'an ' + type;
            case 'boolean':
            case 'date':
            case 'regexp':
                return 'a ' + type;
            default:
                return type;
        }
    }
    // Returns class name of the object, if any.
    function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) return ANONYMOUS;
        return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

},{"c437388b089702c3":"59S9B","c067a60101d8520c":"grVLZ","74a0f89a70b9f3c2":"ggXkd","18441b11647bc78":"cnEYJ","bec3f6ff89f0b072":"gaN1l"}],"grVLZ":[function(require,module,exports,__globalThis) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/ 'use strict';
/* eslint-disable no-unused-vars */ var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
    if (val === null || val === undefined) throw new TypeError('Object.assign cannot be called with null or undefined');
    return Object(val);
}
function shouldUseNative() {
    try {
        if (!Object.assign) return false;
        // Detect buggy property enumeration order in older V8 versions.
        // https://bugs.chromium.org/p/v8/issues/detail?id=4118
        var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
        test1[5] = 'de';
        if (Object.getOwnPropertyNames(test1)[0] === '5') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test2 = {};
        for(var i = 0; i < 10; i++)test2['_' + String.fromCharCode(i)] = i;
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
        });
        if (order2.join('') !== '0123456789') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test3 = {};
        'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
            test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') return false;
        return true;
    } catch (err) {
        // We don't expect any of the above to throw, but better to be safe.
        return false;
    }
}
module.exports = shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = toObject(target);
    var symbols;
    for(var s = 1; s < arguments.length; s++){
        from = Object(arguments[s]);
        for(var key in from)if (hasOwnProperty.call(from, key)) to[key] = from[key];
        if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for(var i = 0; i < symbols.length; i++)if (propIsEnumerable.call(from, symbols[i])) to[symbols[i]] = from[symbols[i]];
        }
    }
    return to;
};

},{}],"ggXkd":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

},{}],"cnEYJ":[function(require,module,exports,__globalThis) {
module.exports = Function.call.bind(Object.prototype.hasOwnProperty);

},{}],"gaN1l":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var printWarning = function() {};
var ReactPropTypesSecret = require("24ba1e58d167a82c");
var loggedTypeFailures = {};
var has = require("898bc82f39d83f7c");
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                err.name = 'Invariant Violation';
                throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
            error = ex;
        }
        if (error && !(error instanceof Error)) printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : '';
            printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
    }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */ checkPropTypes.resetWarningCache = function() {
    loggedTypeFailures = {};
};
module.exports = checkPropTypes;

},{"24ba1e58d167a82c":"ggXkd","898bc82f39d83f7c":"cnEYJ"}],"hfnmI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _classnames = _interopRequireDefault(require("99104ff522e78b01"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
var _default = {
    ROOT: function ROOT(customClassName) {
        return (0, _classnames.default)(_defineProperty({
            'carousel-root': true
        }, customClassName || '', !!customClassName));
    },
    CAROUSEL: function CAROUSEL(isSlider) {
        return (0, _classnames.default)({
            carousel: true,
            'carousel-slider': isSlider
        });
    },
    WRAPPER: function WRAPPER(isSlider, axis) {
        return (0, _classnames.default)({
            'thumbs-wrapper': !isSlider,
            'slider-wrapper': isSlider,
            'axis-horizontal': axis === 'horizontal',
            'axis-vertical': axis !== 'horizontal'
        });
    },
    SLIDER: function SLIDER(isSlider, isSwiping) {
        return (0, _classnames.default)({
            thumbs: !isSlider,
            slider: isSlider,
            animated: !isSwiping
        });
    },
    ITEM: function ITEM(isSlider, selected, previous) {
        return (0, _classnames.default)({
            thumb: !isSlider,
            slide: isSlider,
            selected: selected,
            previous: previous
        });
    },
    ARROW_PREV: function ARROW_PREV(disabled) {
        return (0, _classnames.default)({
            'control-arrow control-prev': true,
            'control-disabled': disabled
        });
    },
    ARROW_NEXT: function ARROW_NEXT(disabled) {
        return (0, _classnames.default)({
            'control-arrow control-next': true,
            'control-disabled': disabled
        });
    },
    DOT: function DOT(selected) {
        return (0, _classnames.default)({
            dot: true,
            selected: selected
        });
    }
};
exports.default = _default;

},{"99104ff522e78b01":"Egwmr"}],"Egwmr":[function(require,module,exports,__globalThis) {
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ /* global define */ (function() {
    'use strict';
    var hasOwn = {}.hasOwnProperty;
    function classNames() {
        var classes = '';
        for(var i = 0; i < arguments.length; i++){
            var arg = arguments[i];
            if (arg) classes = appendClass(classes, parseValue(arg));
        }
        return classes;
    }
    function parseValue(arg) {
        if (typeof arg === 'string' || typeof arg === 'number') return arg;
        if (typeof arg !== 'object') return '';
        if (Array.isArray(arg)) return classNames.apply(null, arg);
        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) return arg.toString();
        var classes = '';
        for(var key in arg)if (hasOwn.call(arg, key) && arg[key]) classes = appendClass(classes, key);
        return classes;
    }
    function appendClass(value, newClass) {
        if (!newClass) return value;
        if (value) return value + ' ' + newClass;
        return value + newClass;
    }
    if (0, module.exports) {
        classNames.default = classNames;
        module.exports = classNames;
    } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) // register as 'classnames', consistent with npm package name
    define('classnames', [], function() {
        return classNames;
    });
    else window.classNames = classNames;
})();

},{}],"13Qyr":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("7e3cfefc7c6a52b8"));
var _cssClasses = _interopRequireDefault(require("a081a5244f3d429f"));
var _dimensions = require("3d0246f53d8a58de");
var _CSSTranslate = _interopRequireDefault(require("bcc1f3e4f087dd65"));
var _reactEasySwipe = _interopRequireDefault(require("8ab658bbe4f746a0"));
var _window = _interopRequireDefault(require("70286c4d89adeedc"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
    };
    return cache;
}
function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) return obj;
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") _typeof = function _typeof(obj) {
        return typeof obj;
    };
    else _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    return _typeof(obj);
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
    };
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
var isKeyboardEvent = function isKeyboardEvent(e) {
    return e.hasOwnProperty('key');
};
var Thumbs = /*#__PURE__*/ function(_Component) {
    _inherits(Thumbs, _Component);
    var _super = _createSuper(Thumbs);
    function Thumbs(_props) {
        var _this;
        _classCallCheck(this, Thumbs);
        _this = _super.call(this, _props);
        _defineProperty(_assertThisInitialized(_this), "itemsWrapperRef", void 0);
        _defineProperty(_assertThisInitialized(_this), "itemsListRef", void 0);
        _defineProperty(_assertThisInitialized(_this), "thumbsRef", void 0);
        _defineProperty(_assertThisInitialized(_this), "setItemsWrapperRef", function(node) {
            _this.itemsWrapperRef = node;
        });
        _defineProperty(_assertThisInitialized(_this), "setItemsListRef", function(node) {
            _this.itemsListRef = node;
        });
        _defineProperty(_assertThisInitialized(_this), "setThumbsRef", function(node, index) {
            if (!_this.thumbsRef) _this.thumbsRef = [];
            _this.thumbsRef[index] = node;
        });
        _defineProperty(_assertThisInitialized(_this), "updateSizes", function() {
            if (!_this.props.children || !_this.itemsWrapperRef || !_this.thumbsRef) return;
            var total = _react.Children.count(_this.props.children);
            var wrapperSize = _this.itemsWrapperRef.clientWidth;
            var itemSize = _this.props.thumbWidth ? _this.props.thumbWidth : (0, _dimensions.outerWidth)(_this.thumbsRef[0]);
            var visibleItems = Math.floor(wrapperSize / itemSize);
            var showArrows = visibleItems < total;
            var lastPosition = showArrows ? total - visibleItems : 0;
            _this.setState(function(_state, props) {
                return {
                    itemSize: itemSize,
                    visibleItems: visibleItems,
                    firstItem: showArrows ? _this.getFirstItem(props.selectedItem) : 0,
                    lastPosition: lastPosition,
                    showArrows: showArrows
                };
            });
        });
        _defineProperty(_assertThisInitialized(_this), "handleClickItem", function(index, item, e) {
            if (!isKeyboardEvent(e) || e.key === 'Enter') {
                var handler = _this.props.onSelectItem;
                if (typeof handler === 'function') handler(index, item);
            }
        });
        _defineProperty(_assertThisInitialized(_this), "onSwipeStart", function() {
            _this.setState({
                swiping: true
            });
        });
        _defineProperty(_assertThisInitialized(_this), "onSwipeEnd", function() {
            _this.setState({
                swiping: false
            });
        });
        _defineProperty(_assertThisInitialized(_this), "onSwipeMove", function(delta) {
            var deltaX = delta.x;
            if (!_this.state.itemSize || !_this.itemsWrapperRef || !_this.state.visibleItems) return false;
            var leftBoundary = 0;
            var childrenLength = _react.Children.count(_this.props.children);
            var currentPosition = -(_this.state.firstItem * 100) / _this.state.visibleItems;
            var lastLeftItem = Math.max(childrenLength - _this.state.visibleItems, 0);
            var lastLeftBoundary = -lastLeftItem * 100 / _this.state.visibleItems; // prevent user from swiping left out of boundaries
            if (currentPosition === leftBoundary && deltaX > 0) deltaX = 0;
             // prevent user from swiping right out of boundaries
            if (currentPosition === lastLeftBoundary && deltaX < 0) deltaX = 0;
            var wrapperSize = _this.itemsWrapperRef.clientWidth;
            var position = currentPosition + 100 / (wrapperSize / deltaX); // if 3d isn't available we will use left to move
            if (_this.itemsListRef) [
                'WebkitTransform',
                'MozTransform',
                'MsTransform',
                'OTransform',
                'transform',
                'msTransform'
            ].forEach(function(prop) {
                _this.itemsListRef.style[prop] = (0, _CSSTranslate.default)(position, '%', _this.props.axis);
            });
            return true;
        });
        _defineProperty(_assertThisInitialized(_this), "slideRight", function(positions) {
            _this.moveTo(_this.state.firstItem - (typeof positions === 'number' ? positions : 1));
        });
        _defineProperty(_assertThisInitialized(_this), "slideLeft", function(positions) {
            _this.moveTo(_this.state.firstItem + (typeof positions === 'number' ? positions : 1));
        });
        _defineProperty(_assertThisInitialized(_this), "moveTo", function(position) {
            // position can't be lower than 0
            position = position < 0 ? 0 : position; // position can't be higher than last postion
            position = position >= _this.state.lastPosition ? _this.state.lastPosition : position;
            _this.setState({
                firstItem: position
            });
        });
        _this.state = {
            selectedItem: _props.selectedItem,
            swiping: false,
            showArrows: false,
            firstItem: 0,
            visibleItems: 0,
            lastPosition: 0
        };
        return _this;
    }
    _createClass(Thumbs, [
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                this.setupThumbs();
            }
        },
        {
            key: "componentDidUpdate",
            value: function componentDidUpdate(prevProps) {
                if (this.props.selectedItem !== this.state.selectedItem) this.setState({
                    selectedItem: this.props.selectedItem,
                    firstItem: this.getFirstItem(this.props.selectedItem)
                });
                if (this.props.children === prevProps.children) return;
                 // This will capture any size changes for arrow adjustments etc.
                // usually in the same render cycle so we don't see any flickers
                this.updateSizes();
            }
        },
        {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.destroyThumbs();
            }
        },
        {
            key: "setupThumbs",
            value: function setupThumbs() {
                // as the widths are calculated, we need to resize
                // the carousel when the window is resized
                (0, _window.default)().addEventListener('resize', this.updateSizes); // issue #2 - image loading smaller
                (0, _window.default)().addEventListener('DOMContentLoaded', this.updateSizes); // when the component is rendered we need to calculate
                // the container size to adjust the responsive behaviour
                this.updateSizes();
            }
        },
        {
            key: "destroyThumbs",
            value: function destroyThumbs() {
                // removing listeners
                (0, _window.default)().removeEventListener('resize', this.updateSizes);
                (0, _window.default)().removeEventListener('DOMContentLoaded', this.updateSizes);
            }
        },
        {
            key: "getFirstItem",
            value: function getFirstItem(selectedItem) {
                var firstItem = selectedItem;
                if (selectedItem >= this.state.lastPosition) firstItem = this.state.lastPosition;
                if (selectedItem < this.state.firstItem + this.state.visibleItems) firstItem = this.state.firstItem;
                if (selectedItem < this.state.firstItem) firstItem = selectedItem;
                return firstItem;
            }
        },
        {
            key: "renderItems",
            value: function renderItems() {
                var _this2 = this;
                return this.props.children.map(function(img, index) {
                    var itemClass = _cssClasses.default.ITEM(false, index === _this2.state.selectedItem);
                    var thumbProps = {
                        key: index,
                        ref: function ref(e) {
                            return _this2.setThumbsRef(e, index);
                        },
                        className: itemClass,
                        onClick: _this2.handleClickItem.bind(_this2, index, _this2.props.children[index]),
                        onKeyDown: _this2.handleClickItem.bind(_this2, index, _this2.props.children[index]),
                        'aria-label': "".concat(_this2.props.labels.item, " ").concat(index + 1),
                        style: {
                            width: _this2.props.thumbWidth
                        }
                    };
                    return /*#__PURE__*/ _react.default.createElement("li", _extends({}, thumbProps, {
                        role: "button",
                        tabIndex: 0
                    }), img);
                });
            }
        },
        {
            key: "render",
            value: function render() {
                var _this3 = this;
                if (!this.props.children) return null;
                var isSwipeable = _react.Children.count(this.props.children) > 1; // show left arrow?
                var hasPrev = this.state.showArrows && this.state.firstItem > 0; // show right arrow
                var hasNext = this.state.showArrows && this.state.firstItem < this.state.lastPosition; // obj to hold the transformations and styles
                var itemListStyles = {};
                var currentPosition = -this.state.firstItem * (this.state.itemSize || 0);
                var transformProp = (0, _CSSTranslate.default)(currentPosition, 'px', this.props.axis);
                var transitionTime = this.props.transitionTime + 'ms';
                itemListStyles = {
                    WebkitTransform: transformProp,
                    MozTransform: transformProp,
                    MsTransform: transformProp,
                    OTransform: transformProp,
                    transform: transformProp,
                    msTransform: transformProp,
                    WebkitTransitionDuration: transitionTime,
                    MozTransitionDuration: transitionTime,
                    MsTransitionDuration: transitionTime,
                    OTransitionDuration: transitionTime,
                    transitionDuration: transitionTime,
                    msTransitionDuration: transitionTime
                };
                return /*#__PURE__*/ _react.default.createElement("div", {
                    className: _cssClasses.default.CAROUSEL(false)
                }, /*#__PURE__*/ _react.default.createElement("div", {
                    className: _cssClasses.default.WRAPPER(false),
                    ref: this.setItemsWrapperRef
                }, /*#__PURE__*/ _react.default.createElement("button", {
                    type: "button",
                    className: _cssClasses.default.ARROW_PREV(!hasPrev),
                    onClick: function onClick() {
                        return _this3.slideRight();
                    },
                    "aria-label": this.props.labels.leftArrow
                }), isSwipeable ? /*#__PURE__*/ _react.default.createElement(_reactEasySwipe.default, {
                    tagName: "ul",
                    className: _cssClasses.default.SLIDER(false, this.state.swiping),
                    onSwipeLeft: this.slideLeft,
                    onSwipeRight: this.slideRight,
                    onSwipeMove: this.onSwipeMove,
                    onSwipeStart: this.onSwipeStart,
                    onSwipeEnd: this.onSwipeEnd,
                    style: itemListStyles,
                    innerRef: this.setItemsListRef,
                    allowMouseEvents: this.props.emulateTouch
                }, this.renderItems()) : /*#__PURE__*/ _react.default.createElement("ul", {
                    className: _cssClasses.default.SLIDER(false, this.state.swiping),
                    ref: function ref(node) {
                        return _this3.setItemsListRef(node);
                    },
                    style: itemListStyles
                }, this.renderItems()), /*#__PURE__*/ _react.default.createElement("button", {
                    type: "button",
                    className: _cssClasses.default.ARROW_NEXT(!hasNext),
                    onClick: function onClick() {
                        return _this3.slideLeft();
                    },
                    "aria-label": this.props.labels.rightArrow
                })));
            }
        }
    ]);
    return Thumbs;
}(_react.Component);
exports.default = Thumbs;
_defineProperty(Thumbs, "displayName", 'Thumbs');
_defineProperty(Thumbs, "defaultProps", {
    axis: 'horizontal',
    labels: {
        leftArrow: 'previous slide / item',
        rightArrow: 'next slide / item',
        item: 'slide item'
    },
    selectedItem: 0,
    thumbWidth: 80,
    transitionTime: 350
});

},{"7e3cfefc7c6a52b8":"jMk1U","a081a5244f3d429f":"hfnmI","3d0246f53d8a58de":"jkHFZ","bcc1f3e4f087dd65":"d9NJZ","8ab658bbe4f746a0":"3l1Ex","70286c4d89adeedc":"cJRTn"}],"jkHFZ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.outerWidth = void 0;
var outerWidth = function outerWidth(el) {
    var width = el.offsetWidth;
    var style = getComputedStyle(el);
    width += parseInt(style.marginLeft) + parseInt(style.marginRight);
    return width;
};
exports.outerWidth = outerWidth;

},{}],"d9NJZ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _default = function _default(position, metric, axis) {
    var positionPercent = position === 0 ? position : position + metric;
    var positionCss = axis === 'horizontal' ? [
        positionPercent,
        0,
        0
    ] : [
        0,
        positionPercent,
        0
    ];
    var transitionProp = 'translate3d';
    var translatedPosition = '(' + positionCss.join(',') + ')';
    return transitionProp + translatedPosition;
};
exports.default = _default;

},{}],"cJRTn":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _default = function _default() {
    return window;
};
exports.default = _default;

},{}],"8nAVc":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _default = function _default() {
    return document;
};
exports.default = _default;

},{}],"hdLcY":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.setPosition = exports.getPosition = exports.isKeyboardEvent = exports.defaultStatusFormatter = exports.noop = void 0;
var _react = require("109f003d9499b423");
var _CSSTranslate = _interopRequireDefault(require("c4fa6f5ef2ee411f"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var noop = function noop() {};
exports.noop = noop;
var defaultStatusFormatter = function defaultStatusFormatter(current, total) {
    return "".concat(current, " of ").concat(total);
};
exports.defaultStatusFormatter = defaultStatusFormatter;
var isKeyboardEvent = function isKeyboardEvent(e) {
    return e ? e.hasOwnProperty('key') : false;
};
/**
 * Gets the list 'position' relative to a current index
 * @param index
 */ exports.isKeyboardEvent = isKeyboardEvent;
var getPosition = function getPosition(index, props) {
    if (props.infiniteLoop) // index has to be added by 1 because of the first cloned slide
    ++index;
    if (index === 0) return 0;
    var childrenLength = _react.Children.count(props.children);
    if (props.centerMode && props.axis === 'horizontal') {
        var currentPosition = -index * props.centerSlidePercentage;
        var lastPosition = childrenLength - 1;
        if (index && (index !== lastPosition || props.infiniteLoop)) currentPosition += (100 - props.centerSlidePercentage) / 2;
        else if (index === lastPosition) currentPosition += 100 - props.centerSlidePercentage;
        return currentPosition;
    }
    return -index * 100;
};
/**
 * Sets the 'position' transform for sliding animations
 * @param position
 * @param forceReflow
 */ exports.getPosition = getPosition;
var setPosition = function setPosition(position, axis) {
    var style = {};
    [
        'WebkitTransform',
        'MozTransform',
        'MsTransform',
        'OTransform',
        'transform',
        'msTransform'
    ].forEach(function(prop) {
        // @ts-ignore
        style[prop] = (0, _CSSTranslate.default)(position, '%', axis);
    });
    return style;
};
exports.setPosition = setPosition;

},{"109f003d9499b423":"jMk1U","c4fa6f5ef2ee411f":"d9NJZ"}],"9Kkqx":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.fadeAnimationHandler = exports.slideStopSwipingHandler = exports.slideSwipeAnimationHandler = exports.slideAnimationHandler = void 0;
var _react = require("304221a9115d231d");
var _CSSTranslate = _interopRequireDefault(require("90ee154d1d153634"));
var _utils = require("ba9602e6f910f7f4");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
/**
 * Main animation handler for the default 'sliding' style animation
 * @param props
 * @param state
 */ var slideAnimationHandler = function slideAnimationHandler(props, state) {
    var returnStyles = {};
    var selectedItem = state.selectedItem;
    var previousItem = selectedItem;
    var lastPosition = _react.Children.count(props.children) - 1;
    var needClonedSlide = props.infiniteLoop && (selectedItem < 0 || selectedItem > lastPosition); // Handle list position if it needs a clone
    if (needClonedSlide) {
        if (previousItem < 0) {
            if (props.centerMode && props.centerSlidePercentage && props.axis === 'horizontal') returnStyles.itemListStyle = (0, _utils.setPosition)(-(lastPosition + 2) * props.centerSlidePercentage - (100 - props.centerSlidePercentage) / 2, props.axis);
            else returnStyles.itemListStyle = (0, _utils.setPosition)(-(lastPosition + 2) * 100, props.axis);
        } else if (previousItem > lastPosition) returnStyles.itemListStyle = (0, _utils.setPosition)(0, props.axis);
        return returnStyles;
    }
    var currentPosition = (0, _utils.getPosition)(selectedItem, props); // if 3d is available, let's take advantage of the performance of transform
    var transformProp = (0, _CSSTranslate.default)(currentPosition, '%', props.axis);
    var transitionTime = props.transitionTime + 'ms';
    returnStyles.itemListStyle = {
        WebkitTransform: transformProp,
        msTransform: transformProp,
        OTransform: transformProp,
        transform: transformProp
    };
    if (!state.swiping) returnStyles.itemListStyle = _objectSpread(_objectSpread({}, returnStyles.itemListStyle), {}, {
        WebkitTransitionDuration: transitionTime,
        MozTransitionDuration: transitionTime,
        OTransitionDuration: transitionTime,
        transitionDuration: transitionTime,
        msTransitionDuration: transitionTime
    });
    return returnStyles;
};
/**
 * Swiping animation handler for the default 'sliding' style animation
 * @param delta
 * @param props
 * @param state
 * @param setState
 */ exports.slideAnimationHandler = slideAnimationHandler;
var slideSwipeAnimationHandler = function slideSwipeAnimationHandler(delta, props, state, setState) {
    var returnStyles = {};
    var isHorizontal = props.axis === 'horizontal';
    var childrenLength = _react.Children.count(props.children);
    var initialBoundry = 0;
    var currentPosition = (0, _utils.getPosition)(state.selectedItem, props);
    var finalBoundry = props.infiniteLoop ? (0, _utils.getPosition)(childrenLength - 1, props) - 100 : (0, _utils.getPosition)(childrenLength - 1, props);
    var axisDelta = isHorizontal ? delta.x : delta.y;
    var handledDelta = axisDelta; // prevent user from swiping left out of boundaries
    if (currentPosition === initialBoundry && axisDelta > 0) handledDelta = 0;
     // prevent user from swiping right out of boundaries
    if (currentPosition === finalBoundry && axisDelta < 0) handledDelta = 0;
    var position = currentPosition + 100 / (state.itemSize / handledDelta);
    var hasMoved = Math.abs(axisDelta) > props.swipeScrollTolerance;
    if (props.infiniteLoop && hasMoved) {
        // When allowing infinite loop, if we slide left from position 0 we reveal the cloned last slide that appears before it
        // if we slide even further we need to jump to other side so it can continue - and vice versa for the last slide
        if (state.selectedItem === 0 && position > -100) position -= childrenLength * 100;
        else if (state.selectedItem === childrenLength - 1 && position < -childrenLength * 100) position += childrenLength * 100;
    }
    if (!props.preventMovementUntilSwipeScrollTolerance || hasMoved || state.swipeMovementStarted) {
        if (!state.swipeMovementStarted) setState({
            swipeMovementStarted: true
        });
        returnStyles.itemListStyle = (0, _utils.setPosition)(position, props.axis);
    } //allows scroll if the swipe was within the tolerance
    if (hasMoved && !state.cancelClick) setState({
        cancelClick: true
    });
    return returnStyles;
};
/**
 * Default 'sliding' style animination handler for when a swipe action stops.
 * @param props
 * @param state
 */ exports.slideSwipeAnimationHandler = slideSwipeAnimationHandler;
var slideStopSwipingHandler = function slideStopSwipingHandler(props, state) {
    var currentPosition = (0, _utils.getPosition)(state.selectedItem, props);
    var itemListStyle = (0, _utils.setPosition)(currentPosition, props.axis);
    return {
        itemListStyle: itemListStyle
    };
};
/**
 * Main animation handler for the default 'fade' style animation
 * @param props
 * @param state
 */ exports.slideStopSwipingHandler = slideStopSwipingHandler;
var fadeAnimationHandler = function fadeAnimationHandler(props, state) {
    var transitionTime = props.transitionTime + 'ms';
    var transitionTimingFunction = 'ease-in-out';
    var slideStyle = {
        position: 'absolute',
        display: 'block',
        zIndex: -2,
        minHeight: '100%',
        opacity: 0,
        top: 0,
        right: 0,
        left: 0,
        bottom: 0,
        transitionTimingFunction: transitionTimingFunction,
        msTransitionTimingFunction: transitionTimingFunction,
        MozTransitionTimingFunction: transitionTimingFunction,
        WebkitTransitionTimingFunction: transitionTimingFunction,
        OTransitionTimingFunction: transitionTimingFunction
    };
    if (!state.swiping) slideStyle = _objectSpread(_objectSpread({}, slideStyle), {}, {
        WebkitTransitionDuration: transitionTime,
        MozTransitionDuration: transitionTime,
        OTransitionDuration: transitionTime,
        transitionDuration: transitionTime,
        msTransitionDuration: transitionTime
    });
    return {
        slideStyle: slideStyle,
        selectedStyle: _objectSpread(_objectSpread({}, slideStyle), {}, {
            opacity: 1,
            position: 'relative'
        }),
        prevStyle: _objectSpread({}, slideStyle)
    };
};
exports.fadeAnimationHandler = fadeAnimationHandler;

},{"304221a9115d231d":"jMk1U","90ee154d1d153634":"d9NJZ","ba9602e6f910f7f4":"hdLcY"}],"lwc1Y":[function(require,module,exports,__globalThis) {
"use strict";

},{}],"2QDrW":[function() {},{}]},["hmd57","ebz6s"], "ebz6s", "parcelRequire8661", null, null, "http://localhost:1234")

//# sourceMappingURL=ManyMiles-Frontend.a6ba14b6.js.map
